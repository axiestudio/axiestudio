version: '3.8'

services:
  axiestudio:
    image: axiestudio/swedish:latest
    ports:
      - "7860:7860"
    environment:
      # Security - Change these in production!
      - AXIESTUDIO_SECRET_KEY=${AXIESTUDIO_SECRET_KEY:-change-this-secret-key-in-production}
      
      # Database Configuration
      - DATABASE_URL=${DATABASE_URL:-postgresql://axiestudio:axiestudio_password@postgres:5432/axiestudio}
      
      # Server Configuration
      - AXIESTUDIO_HOST=0.0.0.0
      - AXIESTUDIO_PORT=7860
      - AXIESTUDIO_LOG_LEVEL=${AXIESTUDIO_LOG_LEVEL:-INFO}
      
      # Authentication
      - AXIESTUDIO_AUTO_LOGIN=${AXIESTUDIO_AUTO_LOGIN:-false}
      
      # Optional: Additional configuration
      - AXIESTUDIO_WORKERS=${AXIESTUDIO_WORKERS:-1}
      - AXIESTUDIO_TIMEOUT=${AXIESTUDIO_TIMEOUT:-300}
      
    volumes:
      - axiestudio_data:/app/data
      - axiestudio_logs:/app/logs
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7860/health_check"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - axiestudio_network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-axiestudio}
      - POSTGRES_USER=${POSTGRES_USER:-axiestudio}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-axiestudio_password}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-axiestudio} -d ${POSTGRES_DB:-axiestudio}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - axiestudio_network

  # Optional: Redis for caching and session storage
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 30s
    networks:
      - axiestudio_network
    profiles:
      - redis

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - axiestudio
    restart: unless-stopped
    networks:
      - axiestudio_network
    profiles:
      - nginx

volumes:
  axiestudio_data:
    driver: local
  axiestudio_logs:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  axiestudio_network:
    driver: bridge
