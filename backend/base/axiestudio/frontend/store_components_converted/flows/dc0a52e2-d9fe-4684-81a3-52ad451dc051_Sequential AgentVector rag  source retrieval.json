{
  "id": "dc0a52e2-d9fe-4684-81a3-52ad451dc051",
  "name": "Sequential Agent(Vector rag , source retrieval)",
  "description": "This Agent runs tasks in a predefined sequence. It answer the user's questions by performing the vector search and is able to retrieve the source links along with the output message (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "FLOW",
  "is_component": false,
  "author": {
    "username": "SahilSapte",
    "first_name": "Sahil",
    "last_name": "Sapte",
    "id": "694f46e0-3805-4a2c-9852-cd3f52377859",
    "full_name": "Sahil Sapte"
  },
  "store_url": "https://www.langflow.store/store/component/dc0a52e2-d9fe-4684-81a3-52ad451dc051",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-09-10T21:16:57.797Z",
    "updated": "2024-09-10T21:16:57.874Z",
    "downloaded": "2025-08-19T17:50:06.688Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "1.0.17",
    "private": false,
    "status": "Public"
  },
  "data": {
    "nodes": [
      {
        "data": {
          "description": "Represents a group of agents, defining how they should collaborate and the tasks they should perform.",
          "display_name": "Sequential Crew",
          "id": "SequentialCrewComponent-0rViC",
          "node": {
            "base_classes": [
              "Message"
            ],
            "beta": false,
            "conditional_paths": [],
            "custom_fields": {},
            "description": "Represents a group of agents with tasks that are executed sequentially.",
            "display_name": "Sequential Crew",
            "documentation": "https://docs.crewai.com/how-to/LLM-Connections/",
            "edited": false,
            "field_order": [
              "verbose",
              "memory",
              "use_cache",
              "max_rpm",
              "share_crew",
              "function_calling_llm",
              "tasks"
            ],
            "frozen": false,
            "icon": "CrewAI",
            "lf_version": "1.0.17",
            "output_types": [],
            "outputs": [
              {
                "cache": true,
                "display_name": "Output",
                "method": "build_output",
                "name": "output",
                "selected": "Message",
                "types": [
                  "Message"
                ],
                "value": "__UNDEFINED__"
              }
            ],
            "pinned": false,
            "template": {
              "_type": "Component",
              "code": {
                "advanced": true,
                "dynamic": true,
                "fileTypes": [],
                "file_path": "",
                "info": "",
                "list": false,
                "load_from_db": false,
                "multiline": true,
                "name": "code",
                "password": false,
                "placeholder": "",
                "required": true,
                "show": true,
                "title_case": false,
                "type": "code",
                "value": "from crewai import Agent, Crew, Process, Task  # type: ignore\n\nfrom axiestudio.base.agents.crewai.crew import BaseCrewComponent\nfrom axiestudio.io import HandleInput\nfrom axiestudio.schema.message import Message\n\n\nclass SequentialCrewComponent(BaseCrewComponent):\n    display_name: str = \"Sequential Crew\"\n    description: str = \"Represents a group of agents with tasks that are executed sequentially.\"\n    documentation: str = \"https://docs.crewai.com/how-to/Sequential/\"\n    icon = \"CrewAI\"\n\n    inputs = BaseCrewComponent._base_inputs + [\n        HandleInput(name=\"tasks\", display_name=\"Tasks\", input_types=[\"SequentialTask\"], is_list=True),\n    ]\n\n    def get_tasks_and_agents(self) -> tuple[list[Task], list[Agent]]:\n        return self.tasks, [task.agent for task in self.tasks]\n\n    def build_crew(self) -> Message:\n        tasks, agents = self.get_tasks_and_agents()\n        crew = Crew(\n            agents=agents,\n            tasks=tasks,\n            process=Process.sequential,\n            verbose=self.verbose,\n            memory=self.memory,\n            cache=self.use_cache,\n            max_rpm=self.max_rpm,\n            share_crew=self.share_crew,\n            function_calling_llm=self.function_calling_llm,\n            step_callback=self.get_step_callback(),\n            task_callback=self.get_task_callback(),\n        )\n        return crew\n"
              },
              "function_calling_llm": {
                "advanced": true,
                "display_name": "Function Calling LLM",
                "dynamic": false,
                "info": "Turns the ReAct CrewAI agent into a function-calling agent",
                "input_types": [
                  "LanguageModel"
                ],
                "list": false,
                "name": "function_calling_llm",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_metadata": true,
                "type": "other",
                "value": ""
              },
              "max_rpm": {
                "advanced": true,
                "display_name": "Max RPM",
                "dynamic": false,
                "info": "",
                "list": false,
                "name": "max_rpm",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_metadata": true,
                "type": "int",
                "value": 100
              },
              "memory": {
                "advanced": true,
                "display_name": "Memory",
                "dynamic": false,
                "info": "",
                "list": false,
                "name": "memory",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_metadata": true,
                "type": "bool",
                "value": false
              },
              "share_crew": {
                "advanced": true,
                "display_name": "Share Crew",
                "dynamic": false,
                "info": "",
                "list": false,
                "name": "share_crew",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_metadata": true,
                "type": "bool",
                "value": false
              },
              "tasks": {
                "advanced": false,
                "display_name": "Tasks",
                "dynamic": false,
                "info": "",
                "input_types": [
                  "SequentialTask"
                ],
                "list": true,
                "name": "tasks",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_metadata": true,
                "type": "other",
                "value": ""
              },
              "use_cache": {
                "advanced": true,
                "display_name": "Cache",
                "dynamic": false,
                "info": "",
                "list": false,
                "name": "use_cache",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_metadata": true,
                "type": "bool",
                "value": true
              },
              "verbose": {
                "advanced": true,
                "display_name": "Verbose",
                "dynamic": false,
                "info": "",
                "list": false,
                "name": "verbose",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_metadata": true,
                "type": "int",
                "value": 0
              }
            }
          },
          "type": "SequentialCrewComponent"
        },
        "dragging": false,
        "height": 282,
        "id": "SequentialCrewComponent-0rViC",
        "position": {
          "x": 820.5237933887977,
          "y": 85.68255703918686
        },
        "positionAbsolute": {
          "x": 820.5237933887977,
          "y": 85.68255703918686
        },
        "selected": false,
        "type": "genericNode",
        "width": 384
      },
      {
        "data": {
          "description": "Display a chat message in the Playground.",
          "display_name": "Chat Output",
          "id": "ChatOutput-mTwlz",
          "node": {
            "base_classes": [
              "Message"
            ],
            "beta": false,
            "conditional_paths": [],
            "custom_fields": {},
            "description": "Display a chat message in the Playground.",
            "display_name": "Chat Output",
            "documentation": "",
            "edited": false,
            "field_order": [
              "input_value",
              "should_store_message",
              "sender",
              "sender_name",
              "session_id",
              "data_template"
            ],
            "frozen": false,
            "icon": "ChatOutput",
            "lf_version": "1.0.17",
            "output_types": [],
            "outputs": [
              {
                "cache": true,
                "display_name": "Message",
                "method": "message_response",
                "name": "message",
                "selected": "Message",
                "types": [
                  "Message"
                ],
                "value": "__UNDEFINED__"
              }
            ],
            "pinned": false,
            "template": {
              "_type": "Component",
              "code": {
                "advanced": true,
                "dynamic": true,
                "fileTypes": [],
                "file_path": "",
                "info": "",
                "list": false,
                "load_from_db": false,
                "multiline": true,
                "name": "code",
                "password": false,
                "placeholder": "",
                "required": true,
                "show": true,
                "title_case": false,
                "type": "code",
                "value": "from axiestudio.base.io.chat import ChatComponent\nfrom axiestudio.inputs import BoolInput\nfrom axiestudio.io import DropdownInput, MessageTextInput, Output\nfrom axiestudio.memory import store_message\nfrom axiestudio.schema.message import Message\nfrom axiestudio.utils.constants import MESSAGE_SENDER_NAME_AI, MESSAGE_SENDER_USER, MESSAGE_SENDER_AI\n\n\nclass ChatOutput(ChatComponent):\n    display_name = \"Chat Output\"\n    description = \"Display a chat message in the Playground.\"\n    icon = \"ChatOutput\"\n    name = \"ChatOutput\"\n\n    inputs = [\n        MessageTextInput(\n            name=\"input_value\",\n            display_name=\"Text\",\n            info=\"Message to be passed as output.\",\n        ),\n        BoolInput(\n            name=\"should_store_message\",\n            display_name=\"Store Messages\",\n            info=\"Store the message in the history.\",\n            value=True,\n            advanced=True,\n        ),\n        DropdownInput(\n            name=\"sender\",\n            display_name=\"Sender Type\",\n            options=[MESSAGE_SENDER_AI, MESSAGE_SENDER_USER],\n            value=MESSAGE_SENDER_AI,\n            advanced=True,\n            info=\"Type of sender.\",\n        ),\n        MessageTextInput(\n            name=\"sender_name\",\n            display_name=\"Sender Name\",\n            info=\"Name of the sender.\",\n            value=MESSAGE_SENDER_NAME_AI,\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\"session_id\",\n            display_name=\"Session ID\",\n            info=\"The session ID of the chat. If empty, the current session ID parameter will be used.\",\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\"data_template\",\n            display_name=\"Data Template\",\n            value=\"{text}\",\n            advanced=True,\n            info=\"Template to convert Data to Text. If left empty, it will be dynamically set to the Data's text key.\",\n        ),\n    ]\n    outputs = [\n        Output(display_name=\"Message\", name=\"message\", method=\"message_response\"),\n    ]\n\n    def message_response(self) -> Message:\n        message = Message(\n            text=self.input_value,\n            sender=self.sender,\n            sender_name=self.sender_name,\n            session_id=self.session_id,\n        )\n        if (\n            self.session_id\n            and isinstance(message, Message)\n            and isinstance(message.text, str)\n            and self.should_store_message\n        ):\n            store_message(\n                message,\n                flow_id=self.graph.flow_id,\n            )\n            self.message.value = message\n\n        self.status = message\n        return message\n"
              },
              "data_template": {
                "advanced": true,
                "display_name": "Data Template",
                "dynamic": false,
                "info": "Template to convert Data to Text. If left empty, it will be dynamically set to the Data's text key.",
                "input_types": [
                  "Message"
                ],
                "list": false,
                "load_from_db": false,
                "name": "data_template",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_input": true,
                "trace_as_metadata": true,
                "type": "str",
                "value": "{text}"
              },
              "input_value": {
                "advanced": false,
                "display_name": "Text",
                "dynamic": false,
                "info": "Message to be passed as output.",
                "input_types": [
                  "Message"
                ],
                "list": false,
                "load_from_db": false,
                "name": "input_value",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_input": true,
                "trace_as_metadata": true,
                "type": "str",
                "value": ""
              },
              "sender": {
                "advanced": true,
                "display_name": "Sender Type",
                "dynamic": false,
                "info": "Type of sender.",
                "name": "sender",
                "options": [
                  "Machine",
                  "User"
                ],
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_metadata": true,
                "type": "str",
                "value": "Machine"
              },
              "sender_name": {
                "advanced": true,
                "display_name": "Sender Name",
                "dynamic": false,
                "info": "Name of the sender.",
                "input_types": [
                  "Message"
                ],
                "list": false,
                "load_from_db": false,
                "name": "sender_name",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_input": true,
                "trace_as_metadata": true,
                "type": "str",
                "value": "AI"
              },
              "session_id": {
                "advanced": true,
                "display_name": "Session ID",
                "dynamic": false,
                "info": "The session ID of the chat. If empty, the current session ID parameter will be used.",
                "input_types": [
                  "Message"
                ],
                "list": false,
                "load_from_db": false,
                "name": "session_id",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_input": true,
                "trace_as_metadata": true,
                "type": "str",
                "value": ""
              },
              "should_store_message": {
                "advanced": true,
                "display_name": "Store Messages",
                "dynamic": false,
                "info": "Store the message in the history.",
                "list": false,
                "name": "should_store_message",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_metadata": true,
                "type": "bool",
                "value": true
              }
            }
          },
          "type": "ChatOutput"
        },
        "dragging": false,
        "height": 296,
        "id": "ChatOutput-mTwlz",
        "position": {
          "x": 1396.0853935307105,
          "y": 139.5035852115936
        },
        "selected": false,
        "type": "genericNode",
        "width": 384,
        "positionAbsolute": {
          "x": 1396.0853935307105,
          "y": 139.5035852115936
        }
      },
      {
        "data": {
          "description": "Create a prompt template with dynamic variables.",
          "display_name": "Prompt",
          "id": "Prompt-3iPjH",
          "node": {
            "template": {
              "_type": "Component",
              "code": {
                "advanced": true,
                "dynamic": true,
                "fileTypes": [],
                "file_path": "",
                "info": "",
                "list": false,
                "load_from_db": false,
                "multiline": true,
                "name": "code",
                "password": false,
                "placeholder": "",
                "required": true,
                "show": true,
                "title_case": false,
                "type": "code",
                "value": "from axiestudio.base.prompts.api_utils import process_prompt_template\nfrom axiestudio.custom import Component\nfrom axiestudio.inputs.inputs import DefaultPromptField\nfrom axiestudio.io import Output, PromptInput\nfrom axiestudio.schema.message import Message\nfrom axiestudio.template.utils import update_template_values\n\n\nclass PromptComponent(Component):\n    display_name: str = \"Prompt\"\n    description: str = \"Create a prompt template with dynamic variables.\"\n    icon = \"prompts\"\n    trace_type = \"prompt\"\n    name = \"Prompt\"\n\n    inputs = [\n        PromptInput(name=\"template\", display_name=\"Template\"),\n    ]\n\n    outputs = [\n        Output(display_name=\"Prompt Message\", name=\"prompt\", method=\"build_prompt\"),\n    ]\n\n    async def build_prompt(\n        self,\n    ) -> Message:\n        prompt = await Message.from_template_and_variables(**self._attributes)\n        self.status = prompt.text\n        return prompt\n\n    def _update_template(self, frontend_node: dict):\n        prompt_template = frontend_node[\"template\"][\"template\"][\"value\"]\n        custom_fields = frontend_node[\"custom_fields\"]\n        frontend_node_template = frontend_node[\"template\"]\n        _ = process_prompt_template(\n            template=prompt_template,\n            name=\"template\",\n            custom_fields=custom_fields,\n            frontend_node_template=frontend_node_template,\n        )\n        return frontend_node\n\n    def post_code_processing(self, new_frontend_node: dict, current_frontend_node: dict):\n        \"\"\"\n        This function is called after the code validation is done.\n        \"\"\"\n        frontend_node = super().post_code_processing(new_frontend_node, current_frontend_node)\n        template = frontend_node[\"template\"][\"template\"][\"value\"]\n        # Kept it duplicated for backwards compatibility\n        _ = process_prompt_template(\n            template=template,\n            name=\"template\",\n            custom_fields=frontend_node[\"custom_fields\"],\n            frontend_node_template=frontend_node[\"template\"],\n        )\n        # Now that template is updated, we need to grab any values that were set in the current_frontend_node\n        # and update the frontend_node with those values\n        update_template_values(new_template=frontend_node, previous_template=current_frontend_node[\"template\"])\n        return frontend_node\n\n    def _get_fallback_input(self, **kwargs):\n        return DefaultPromptField(**kwargs)\n"
              },
              "template": {
                "advanced": false,
                "display_name": "Template",
                "dynamic": false,
                "info": "",
                "list": false,
                "load_from_db": false,
                "name": "template",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_input": true,
                "type": "prompt",
                "value": "The user is a data analyst or business analyst answer the questions ask by him on the basis of the data in the context variable only and attach the source links with the output using the links in the source (check the data is taken from which link and attach that link to the output ) variable only\n\ncontext: \n{context}\n\nsource:\n{source}\n\nuser message:\n{user_msg}\n\n\n"
              },
              "context": {
                "field_type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "context",
                "display_name": "context",
                "advanced": false,
                "input_types": [
                  "Message",
                  "Text"
                ],
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "type": "str"
              },
              "source": {
                "field_type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "source",
                "display_name": "source",
                "advanced": false,
                "input_types": [
                  "Message",
                  "Text"
                ],
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "type": "str"
              },
              "user_msg": {
                "field_type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "user_msg",
                "display_name": "user_msg",
                "advanced": false,
                "input_types": [
                  "Message",
                  "Text"
                ],
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "type": "str"
              }
            },
            "description": "Create a prompt template with dynamic variables.",
            "icon": "prompts",
            "is_input": null,
            "is_output": null,
            "is_composition": null,
            "base_classes": [
              "Message"
            ],
            "name": "",
            "display_name": "Prompt",
            "documentation": "",
            "custom_fields": {
              "template": [
                "context",
                "source",
                "user_msg"
              ]
            },
            "output_types": [],
            "full_path": null,
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "prompt",
                "hidden": null,
                "display_name": "Prompt Message",
                "method": "build_prompt",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "template"
            ],
            "beta": false,
            "error": null,
            "edited": false,
            "lf_version": "1.0.17"
          },
          "type": "Prompt"
        },
        "dragging": false,
        "height": 582,
        "id": "Prompt-3iPjH",
        "position": {
          "x": -1137.319170578746,
          "y": 747.7078391713424
        },
        "positionAbsolute": {
          "x": -1137.319170578746,
          "y": 747.7078391713424
        },
        "selected": true,
        "type": "genericNode",
        "width": 384
      },
      {
        "data": {
          "description": "Create a prompt template with dynamic variables.",
          "display_name": "Prompt",
          "id": "Prompt-sO6Gs",
          "node": {
            "template": {
              "_type": "Component",
              "code": {
                "advanced": true,
                "dynamic": true,
                "fileTypes": [],
                "file_path": "",
                "info": "",
                "list": false,
                "load_from_db": false,
                "multiline": true,
                "name": "code",
                "password": false,
                "placeholder": "",
                "required": true,
                "show": true,
                "title_case": false,
                "type": "code",
                "value": "from axiestudio.base.prompts.api_utils import process_prompt_template\nfrom axiestudio.custom import Component\nfrom axiestudio.inputs.inputs import DefaultPromptField\nfrom axiestudio.io import Output, PromptInput\nfrom axiestudio.schema.message import Message\nfrom axiestudio.template.utils import update_template_values\n\n\nclass PromptComponent(Component):\n    display_name: str = \"Prompt\"\n    description: str = \"Create a prompt template with dynamic variables.\"\n    icon = \"prompts\"\n    trace_type = \"prompt\"\n    name = \"Prompt\"\n\n    inputs = [\n        PromptInput(name=\"template\", display_name=\"Template\"),\n    ]\n\n    outputs = [\n        Output(display_name=\"Prompt Message\", name=\"prompt\", method=\"build_prompt\"),\n    ]\n\n    async def build_prompt(\n        self,\n    ) -> Message:\n        prompt = await Message.from_template_and_variables(**self._attributes)\n        self.status = prompt.text\n        return prompt\n\n    def _update_template(self, frontend_node: dict):\n        prompt_template = frontend_node[\"template\"][\"template\"][\"value\"]\n        custom_fields = frontend_node[\"custom_fields\"]\n        frontend_node_template = frontend_node[\"template\"]\n        _ = process_prompt_template(\n            template=prompt_template,\n            name=\"template\",\n            custom_fields=custom_fields,\n            frontend_node_template=frontend_node_template,\n        )\n        return frontend_node\n\n    def post_code_processing(self, new_frontend_node: dict, current_frontend_node: dict):\n        \"\"\"\n        This function is called after the code validation is done.\n        \"\"\"\n        frontend_node = super().post_code_processing(new_frontend_node, current_frontend_node)\n        template = frontend_node[\"template\"][\"template\"][\"value\"]\n        # Kept it duplicated for backwards compatibility\n        _ = process_prompt_template(\n            template=template,\n            name=\"template\",\n            custom_fields=frontend_node[\"custom_fields\"],\n            frontend_node_template=frontend_node[\"template\"],\n        )\n        # Now that template is updated, we need to grab any values that were set in the current_frontend_node\n        # and update the frontend_node with those values\n        update_template_values(new_template=frontend_node, previous_template=current_frontend_node[\"template\"])\n        return frontend_node\n\n    def _get_fallback_input(self, **kwargs):\n        return DefaultPromptField(**kwargs)\n"
              },
              "template": {
                "advanced": false,
                "display_name": "Template",
                "dynamic": false,
                "info": "",
                "list": false,
                "load_from_db": false,
                "name": "template",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_input": true,
                "type": "prompt",
                "value": "Revise this document check the data is taken from which link in the source variables and attach that link to the output\n\nsource:\n{source}\n\nuser_message:\n{message}\n"
              },
              "source": {
                "field_type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "source",
                "display_name": "source",
                "advanced": false,
                "input_types": [
                  "Message",
                  "Text"
                ],
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "type": "str"
              },
              "message": {
                "field_type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "message",
                "display_name": "message",
                "advanced": false,
                "input_types": [
                  "Message",
                  "Text"
                ],
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "type": "str"
              }
            },
            "description": "Create a prompt template with dynamic variables.",
            "icon": "prompts",
            "is_input": null,
            "is_output": null,
            "is_composition": null,
            "base_classes": [
              "Message"
            ],
            "name": "",
            "display_name": "Prompt",
            "documentation": "",
            "custom_fields": {
              "template": [
                "source",
                "message"
              ]
            },
            "output_types": [],
            "full_path": null,
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "prompt",
                "hidden": null,
                "display_name": "Prompt Message",
                "method": "build_prompt",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "template"
            ],
            "beta": false,
            "error": null,
            "edited": false,
            "lf_version": "1.0.17"
          },
          "type": "Prompt"
        },
        "dragging": false,
        "height": 495,
        "id": "Prompt-sO6Gs",
        "position": {
          "x": -369.56336473301,
          "y": 790.2887357303061
        },
        "positionAbsolute": {
          "x": -369.56336473301,
          "y": 790.2887357303061
        },
        "selected": false,
        "type": "genericNode",
        "width": 384
      },
      {
        "data": {
          "id": "SequentialTaskAgentComponent-M340K",
          "node": {
            "base_classes": [
              "SequentialTask"
            ],
            "beta": false,
            "conditional_paths": [],
            "custom_fields": {},
            "description": "Creates a CrewAI Task and its associated Agent.",
            "display_name": "Sequential Task Agent",
            "documentation": "https://docs.crewai.com/how-to/LLM-Connections/",
            "edited": false,
            "field_order": [
              "role",
              "goal",
              "backstory",
              "tools",
              "llm",
              "memory",
              "verbose",
              "allow_delegation",
              "allow_code_execution",
              "agent_kwargs",
              "task_description",
              "expected_output",
              "async_execution",
              "previous_task"
            ],
            "frozen": false,
            "icon": "CrewAI",
            "lf_version": "1.0.17",
            "output_types": [],
            "outputs": [
              {
                "cache": true,
                "display_name": "Sequential Task",
                "method": "build_agent_and_task",
                "name": "task_output",
                "selected": "SequentialTask",
                "types": [
                  "SequentialTask"
                ],
                "value": "__UNDEFINED__"
              }
            ],
            "pinned": false,
            "template": {
              "_type": "Component",
              "agent_kwargs": {
                "_input_type": "DictInput",
                "advanced": true,
                "display_name": "Agent kwargs",
                "dynamic": false,
                "info": "Additional kwargs for the agent.",
                "list": true,
                "name": "agent_kwargs",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_input": true,
                "type": "dict",
                "value": {}
              },
              "allow_code_execution": {
                "_input_type": "BoolInput",
                "advanced": true,
                "display_name": "Allow Code Execution",
                "dynamic": false,
                "info": "Whether the agent is allowed to execute code.",
                "list": false,
                "name": "allow_code_execution",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_metadata": true,
                "type": "bool",
                "value": false
              },
              "allow_delegation": {
                "_input_type": "BoolInput",
                "advanced": true,
                "display_name": "Allow Delegation",
                "dynamic": false,
                "info": "Whether the agent is allowed to delegate tasks to other agents.",
                "list": false,
                "name": "allow_delegation",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_metadata": true,
                "type": "bool",
                "value": false
              },
              "async_execution": {
                "_input_type": "BoolInput",
                "advanced": true,
                "display_name": "Async Execution",
                "dynamic": false,
                "info": "Boolean flag indicating asynchronous task execution.",
                "list": false,
                "name": "async_execution",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_metadata": true,
                "type": "bool",
                "value": false
              },
              "backstory": {
                "_input_type": "MultilineInput",
                "advanced": false,
                "display_name": "Backstory",
                "dynamic": false,
                "info": "The backstory of the agent.",
                "input_types": [
                  "Message"
                ],
                "list": false,
                "load_from_db": false,
                "multiline": true,
                "name": "backstory",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_input": true,
                "trace_as_metadata": true,
                "type": "str",
                "value": "You are professional researcher who creates the answer for user's(business analyst) queries "
              },
              "code": {
                "advanced": true,
                "dynamic": true,
                "fileTypes": [],
                "file_path": "",
                "info": "",
                "list": false,
                "load_from_db": false,
                "multiline": true,
                "name": "code",
                "password": false,
                "placeholder": "",
                "required": true,
                "show": true,
                "title_case": false,
                "type": "code",
                "value": "from crewai import Agent, Task\n\nfrom axiestudio.base.agents.crewai.tasks import SequentialTask\nfrom axiestudio.custom import Component\nfrom axiestudio.io import BoolInput, DictInput, HandleInput, MultilineInput, Output\n\n\nclass SequentialTaskAgentComponent(Component):\n    display_name = \"Sequential Task Agent\"\n    description = \"Creates a CrewAI Task and its associated Agent.\"\n    documentation = \"https://docs.crewai.com/how-to/LLM-Connections/\"\n    icon = \"CrewAI\"\n\n    inputs = [\n        # Agent inputs\n        MultilineInput(name=\"role\", display_name=\"Role\", info=\"The role of the agent.\"),\n        MultilineInput(name=\"goal\", display_name=\"Goal\", info=\"The objective of the agent.\"),\n        MultilineInput(\n            name=\"backstory\",\n            display_name=\"Backstory\",\n            info=\"The backstory of the agent.\",\n        ),\n        HandleInput(\n            name=\"tools\",\n            display_name=\"Tools\",\n            input_types=[\"Tool\"],\n            is_list=True,\n            info=\"Tools at agent's disposal\",\n            value=[],\n        ),\n        HandleInput(\n            name=\"llm\",\n            display_name=\"Language Model\",\n            info=\"Language model that will run the agent.\",\n            input_types=[\"LanguageModel\"],\n        ),\n        BoolInput(\n            name=\"memory\",\n            display_name=\"Memory\",\n            info=\"Whether the agent should have memory or not\",\n            advanced=True,\n            value=True,\n        ),\n        BoolInput(\n            name=\"verbose\",\n            display_name=\"Verbose\",\n            advanced=True,\n            value=True,\n        ),\n        BoolInput(\n            name=\"allow_delegation\",\n            display_name=\"Allow Delegation\",\n            info=\"Whether the agent is allowed to delegate tasks to other agents.\",\n            value=False,\n            advanced=True,\n        ),\n        BoolInput(\n            name=\"allow_code_execution\",\n            display_name=\"Allow Code Execution\",\n            info=\"Whether the agent is allowed to execute code.\",\n            value=False,\n            advanced=True,\n        ),\n        DictInput(\n            name=\"agent_kwargs\",\n            display_name=\"Agent kwargs\",\n            info=\"Additional kwargs for the agent.\",\n            is_list=True,\n            advanced=True,\n        ),\n        # Task inputs\n        MultilineInput(\n            name=\"task_description\",\n            display_name=\"Task Description\",\n            info=\"Descriptive text detailing task's purpose and execution.\",\n        ),\n        MultilineInput(\n            name=\"expected_output\",\n            display_name=\"Expected Task Output\",\n            info=\"Clear definition of expected task outcome.\",\n        ),\n        BoolInput(\n            name=\"async_execution\",\n            display_name=\"Async Execution\",\n            value=False,\n            advanced=True,\n            info=\"Boolean flag indicating asynchronous task execution.\",\n        ),\n        # Chaining input\n        HandleInput(\n            name=\"previous_task\",\n            display_name=\"Previous Task\",\n            input_types=[\"SequentialTask\"],\n            info=\"The previous task in the sequence (for chaining).\",\n            required=False,\n        ),\n    ]\n\n    outputs = [\n        Output(\n            display_name=\"Sequential Task\",\n            name=\"task_output\",\n            method=\"build_agent_and_task\",\n        ),\n    ]\n\n    def build_agent_and_task(self) -> list[SequentialTask]:\n        # Build the agent\n        agent_kwargs = self.agent_kwargs or {}\n        agent = Agent(\n            role=self.role,\n            goal=self.goal,\n            backstory=self.backstory,\n            llm=self.llm,\n            verbose=self.verbose,\n            memory=self.memory,\n            tools=self.tools if self.tools else [],\n            allow_delegation=self.allow_delegation,\n            allow_code_execution=self.allow_code_execution,\n            **agent_kwargs,\n        )\n\n        # Build the task\n        task = Task(\n            description=self.task_description,\n            expected_output=self.expected_output,\n            agent=agent,\n            async_execution=self.async_execution,\n        )\n\n        # If there's a previous task, create a list of tasks\n        if self.previous_task:\n            if isinstance(self.previous_task, list):\n                tasks = self.previous_task + [task]\n            else:\n                tasks = [self.previous_task, task]\n        else:\n            tasks = [task]\n\n        self.status = f\"Agent: {repr(agent)}\\nTask: {repr(task)}\"\n        return tasks\n"
              },
              "expected_output": {
                "_input_type": "MultilineInput",
                "advanced": false,
                "display_name": "Expected Task Output",
                "dynamic": false,
                "info": "Clear definition of expected task outcome.",
                "input_types": [
                  "Message"
                ],
                "list": false,
                "load_from_db": false,
                "multiline": true,
                "name": "expected_output",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_input": true,
                "trace_as_metadata": true,
                "type": "str",
                "value": "A text paragraph fulfilling the users question along with the source link attached to it through the data is taken "
              },
              "goal": {
                "_input_type": "MultilineInput",
                "advanced": false,
                "display_name": "Goal",
                "dynamic": false,
                "info": "The objective of the agent.",
                "input_types": [
                  "Message"
                ],
                "list": false,
                "load_from_db": false,
                "multiline": true,
                "name": "goal",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_input": true,
                "trace_as_metadata": true,
                "type": "str",
                "value": "On the basis of the data provided in the task description generate the appropriate answer"
              },
              "llm": {
                "_input_type": "HandleInput",
                "advanced": false,
                "display_name": "Language Model",
                "dynamic": false,
                "info": "Language model that will run the agent.",
                "input_types": [
                  "LanguageModel"
                ],
                "list": false,
                "name": "llm",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_metadata": true,
                "type": "other",
                "value": ""
              },
              "memory": {
                "_input_type": "BoolInput",
                "advanced": true,
                "display_name": "Memory",
                "dynamic": false,
                "info": "Whether the agent should have memory or not",
                "list": false,
                "name": "memory",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_metadata": true,
                "type": "bool",
                "value": true
              },
              "previous_task": {
                "_input_type": "HandleInput",
                "advanced": false,
                "display_name": "Previous Task",
                "dynamic": false,
                "info": "The previous task in the sequence (for chaining).",
                "input_types": [
                  "SequentialTask"
                ],
                "list": false,
                "name": "previous_task",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_metadata": true,
                "type": "other",
                "value": ""
              },
              "role": {
                "_input_type": "MultilineInput",
                "advanced": false,
                "display_name": "Role",
                "dynamic": false,
                "info": "The role of the agent.",
                "input_types": [
                  "Message"
                ],
                "list": false,
                "load_from_db": false,
                "multiline": true,
                "name": "role",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_input": true,
                "trace_as_metadata": true,
                "type": "str",
                "value": "Researcher"
              },
              "task_description": {
                "_input_type": "MultilineInput",
                "advanced": false,
                "display_name": "Task Description",
                "dynamic": false,
                "info": "Descriptive text detailing task's purpose and execution.",
                "input_types": [
                  "Message"
                ],
                "list": false,
                "load_from_db": false,
                "multiline": true,
                "name": "task_description",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_input": true,
                "trace_as_metadata": true,
                "type": "str",
                "value": ""
              },
              "tools": {
                "_input_type": "HandleInput",
                "advanced": false,
                "display_name": "Tools",
                "dynamic": false,
                "info": "Tools at agent's disposal",
                "input_types": [
                  "Tool"
                ],
                "list": true,
                "name": "tools",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_metadata": true,
                "type": "other",
                "value": []
              },
              "verbose": {
                "_input_type": "BoolInput",
                "advanced": true,
                "display_name": "Verbose",
                "dynamic": false,
                "info": "",
                "list": false,
                "name": "verbose",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_metadata": true,
                "type": "bool",
                "value": true
              }
            }
          },
          "type": "SequentialTaskAgentComponent"
        },
        "dragging": false,
        "height": 778,
        "id": "SequentialTaskAgentComponent-M340K",
        "position": {
          "x": -742.6676461208307,
          "y": -336.7987303380612
        },
        "positionAbsolute": {
          "x": -742.6676461208307,
          "y": -336.7987303380612
        },
        "selected": false,
        "type": "genericNode",
        "width": 384
      },
      {
        "data": {
          "id": "SequentialTaskAgentComponent-xs4Oo",
          "node": {
            "base_classes": [
              "SequentialTask"
            ],
            "beta": false,
            "conditional_paths": [],
            "custom_fields": {},
            "description": "Creates a CrewAI Task and its associated Agent.",
            "display_name": "Sequential Task Agent",
            "documentation": "https://docs.crewai.com/how-to/LLM-Connections/",
            "edited": false,
            "field_order": [
              "role",
              "goal",
              "backstory",
              "tools",
              "llm",
              "memory",
              "verbose",
              "allow_delegation",
              "allow_code_execution",
              "agent_kwargs",
              "task_description",
              "expected_output",
              "async_execution",
              "previous_task"
            ],
            "frozen": false,
            "icon": "CrewAI",
            "lf_version": "1.0.17",
            "output_types": [],
            "outputs": [
              {
                "cache": true,
                "display_name": "Sequential Task",
                "method": "build_agent_and_task",
                "name": "task_output",
                "selected": "SequentialTask",
                "types": [
                  "SequentialTask"
                ],
                "value": "__UNDEFINED__"
              }
            ],
            "pinned": false,
            "template": {
              "_type": "Component",
              "agent_kwargs": {
                "_input_type": "DictInput",
                "advanced": true,
                "display_name": "Agent kwargs",
                "dynamic": false,
                "info": "Additional kwargs for the agent.",
                "list": true,
                "name": "agent_kwargs",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_input": true,
                "type": "dict",
                "value": {}
              },
              "allow_code_execution": {
                "_input_type": "BoolInput",
                "advanced": true,
                "display_name": "Allow Code Execution",
                "dynamic": false,
                "info": "Whether the agent is allowed to execute code.",
                "list": false,
                "name": "allow_code_execution",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_metadata": true,
                "type": "bool",
                "value": false
              },
              "allow_delegation": {
                "_input_type": "BoolInput",
                "advanced": true,
                "display_name": "Allow Delegation",
                "dynamic": false,
                "info": "Whether the agent is allowed to delegate tasks to other agents.",
                "list": false,
                "name": "allow_delegation",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_metadata": true,
                "type": "bool",
                "value": false
              },
              "async_execution": {
                "_input_type": "BoolInput",
                "advanced": true,
                "display_name": "Async Execution",
                "dynamic": false,
                "info": "Boolean flag indicating asynchronous task execution.",
                "list": false,
                "name": "async_execution",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_metadata": true,
                "type": "bool",
                "value": false
              },
              "backstory": {
                "_input_type": "MultilineInput",
                "advanced": false,
                "display_name": "Backstory",
                "dynamic": false,
                "info": "The backstory of the agent.",
                "input_types": [
                  "Message"
                ],
                "list": false,
                "load_from_db": false,
                "multiline": true,
                "name": "backstory",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_input": true,
                "trace_as_metadata": true,
                "type": "str",
                "value": "You are an editor who checks for the validity of the data by crosschecking it with the source links "
              },
              "code": {
                "advanced": true,
                "dynamic": true,
                "fileTypes": [],
                "file_path": "",
                "info": "",
                "list": false,
                "load_from_db": false,
                "multiline": true,
                "name": "code",
                "password": false,
                "placeholder": "",
                "required": true,
                "show": true,
                "title_case": false,
                "type": "code",
                "value": "from crewai import Agent, Task\n\nfrom axiestudio.base.agents.crewai.tasks import SequentialTask\nfrom axiestudio.custom import Component\nfrom axiestudio.io import BoolInput, DictInput, HandleInput, MultilineInput, Output\n\n\nclass SequentialTaskAgentComponent(Component):\n    display_name = \"Sequential Task Agent\"\n    description = \"Creates a CrewAI Task and its associated Agent.\"\n    documentation = \"https://docs.crewai.com/how-to/LLM-Connections/\"\n    icon = \"CrewAI\"\n\n    inputs = [\n        # Agent inputs\n        MultilineInput(name=\"role\", display_name=\"Role\", info=\"The role of the agent.\"),\n        MultilineInput(name=\"goal\", display_name=\"Goal\", info=\"The objective of the agent.\"),\n        MultilineInput(\n            name=\"backstory\",\n            display_name=\"Backstory\",\n            info=\"The backstory of the agent.\",\n        ),\n        HandleInput(\n            name=\"tools\",\n            display_name=\"Tools\",\n            input_types=[\"Tool\"],\n            is_list=True,\n            info=\"Tools at agent's disposal\",\n            value=[],\n        ),\n        HandleInput(\n            name=\"llm\",\n            display_name=\"Language Model\",\n            info=\"Language model that will run the agent.\",\n            input_types=[\"LanguageModel\"],\n        ),\n        BoolInput(\n            name=\"memory\",\n            display_name=\"Memory\",\n            info=\"Whether the agent should have memory or not\",\n            advanced=True,\n            value=True,\n        ),\n        BoolInput(\n            name=\"verbose\",\n            display_name=\"Verbose\",\n            advanced=True,\n            value=True,\n        ),\n        BoolInput(\n            name=\"allow_delegation\",\n            display_name=\"Allow Delegation\",\n            info=\"Whether the agent is allowed to delegate tasks to other agents.\",\n            value=False,\n            advanced=True,\n        ),\n        BoolInput(\n            name=\"allow_code_execution\",\n            display_name=\"Allow Code Execution\",\n            info=\"Whether the agent is allowed to execute code.\",\n            value=False,\n            advanced=True,\n        ),\n        DictInput(\n            name=\"agent_kwargs\",\n            display_name=\"Agent kwargs\",\n            info=\"Additional kwargs for the agent.\",\n            is_list=True,\n            advanced=True,\n        ),\n        # Task inputs\n        MultilineInput(\n            name=\"task_description\",\n            display_name=\"Task Description\",\n            info=\"Descriptive text detailing task's purpose and execution.\",\n        ),\n        MultilineInput(\n            name=\"expected_output\",\n            display_name=\"Expected Task Output\",\n            info=\"Clear definition of expected task outcome.\",\n        ),\n        BoolInput(\n            name=\"async_execution\",\n            display_name=\"Async Execution\",\n            value=False,\n            advanced=True,\n            info=\"Boolean flag indicating asynchronous task execution.\",\n        ),\n        # Chaining input\n        HandleInput(\n            name=\"previous_task\",\n            display_name=\"Previous Task\",\n            input_types=[\"SequentialTask\"],\n            info=\"The previous task in the sequence (for chaining).\",\n            required=False,\n        ),\n    ]\n\n    outputs = [\n        Output(\n            display_name=\"Sequential Task\",\n            name=\"task_output\",\n            method=\"build_agent_and_task\",\n        ),\n    ]\n\n    def build_agent_and_task(self) -> list[SequentialTask]:\n        # Build the agent\n        agent_kwargs = self.agent_kwargs or {}\n        agent = Agent(\n            role=self.role,\n            goal=self.goal,\n            backstory=self.backstory,\n            llm=self.llm,\n            verbose=self.verbose,\n            memory=self.memory,\n            tools=self.tools if self.tools else [],\n            allow_delegation=self.allow_delegation,\n            allow_code_execution=self.allow_code_execution,\n            **agent_kwargs,\n        )\n\n        # Build the task\n        task = Task(\n            description=self.task_description,\n            expected_output=self.expected_output,\n            agent=agent,\n            async_execution=self.async_execution,\n        )\n\n        # If there's a previous task, create a list of tasks\n        if self.previous_task:\n            if isinstance(self.previous_task, list):\n                tasks = self.previous_task + [task]\n            else:\n                tasks = [self.previous_task, task]\n        else:\n            tasks = [task]\n\n        self.status = f\"Agent: {repr(agent)}\\nTask: {repr(task)}\"\n        return tasks\n"
              },
              "expected_output": {
                "_input_type": "MultilineInput",
                "advanced": false,
                "display_name": "Expected Task Output",
                "dynamic": false,
                "info": "Clear definition of expected task outcome.",
                "input_types": [
                  "Message"
                ],
                "list": false,
                "load_from_db": false,
                "multiline": true,
                "name": "expected_output",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_input": true,
                "trace_as_metadata": true,
                "type": "str",
                "value": "Small paragraphs answer containing the source link attached to it ."
              },
              "goal": {
                "_input_type": "MultilineInput",
                "advanced": false,
                "display_name": "Goal",
                "dynamic": false,
                "info": "The objective of the agent.",
                "input_types": [
                  "Message"
                ],
                "list": false,
                "load_from_db": false,
                "multiline": true,
                "name": "goal",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_input": true,
                "trace_as_metadata": true,
                "type": "str",
                "value": "On the basis of the data provided in the task description generate the appropriate answer and don't forget to attached the source link to the output message"
              },
              "llm": {
                "_input_type": "HandleInput",
                "advanced": false,
                "display_name": "Language Model",
                "dynamic": false,
                "info": "Language model that will run the agent.",
                "input_types": [
                  "LanguageModel"
                ],
                "list": false,
                "name": "llm",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_metadata": true,
                "type": "other",
                "value": ""
              },
              "memory": {
                "_input_type": "BoolInput",
                "advanced": true,
                "display_name": "Memory",
                "dynamic": false,
                "info": "Whether the agent should have memory or not",
                "list": false,
                "name": "memory",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_metadata": true,
                "type": "bool",
                "value": true
              },
              "previous_task": {
                "_input_type": "HandleInput",
                "advanced": false,
                "display_name": "Previous Task",
                "dynamic": false,
                "info": "The previous task in the sequence (for chaining).",
                "input_types": [
                  "SequentialTask"
                ],
                "list": false,
                "name": "previous_task",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_metadata": true,
                "type": "other",
                "value": ""
              },
              "role": {
                "_input_type": "MultilineInput",
                "advanced": false,
                "display_name": "Role",
                "dynamic": false,
                "info": "The role of the agent.",
                "input_types": [
                  "Message"
                ],
                "list": false,
                "load_from_db": false,
                "multiline": true,
                "name": "role",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_input": true,
                "trace_as_metadata": true,
                "type": "str",
                "value": "Editor"
              },
              "task_description": {
                "_input_type": "MultilineInput",
                "advanced": false,
                "display_name": "Task Description",
                "dynamic": false,
                "info": "Descriptive text detailing task's purpose and execution.",
                "input_types": [
                  "Message"
                ],
                "list": false,
                "load_from_db": false,
                "multiline": true,
                "name": "task_description",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_input": true,
                "trace_as_metadata": true,
                "type": "str",
                "value": ""
              },
              "tools": {
                "_input_type": "HandleInput",
                "advanced": false,
                "display_name": "Tools",
                "dynamic": false,
                "info": "Tools at agent's disposal",
                "input_types": [
                  "Tool"
                ],
                "list": true,
                "name": "tools",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_metadata": true,
                "type": "other",
                "value": []
              },
              "verbose": {
                "_input_type": "BoolInput",
                "advanced": true,
                "display_name": "Verbose",
                "dynamic": false,
                "info": "",
                "list": false,
                "name": "verbose",
                "placeholder": "",
                "required": false,
                "show": true,
                "title_case": false,
                "trace_as_metadata": true,
                "type": "bool",
                "value": true
              }
            }
          },
          "type": "SequentialTaskAgentComponent"
        },
        "dragging": false,
        "height": 778,
        "id": "SequentialTaskAgentComponent-xs4Oo",
        "position": {
          "x": 62.10105154443647,
          "y": -336.82282969954827
        },
        "positionAbsolute": {
          "x": 62.10105154443647,
          "y": -336.82282969954827
        },
        "selected": false,
        "type": "genericNode",
        "width": 384
      },
      {
        "id": "CohereModel-BcREe",
        "type": "genericNode",
        "position": {
          "x": -2008.120261172667,
          "y": -391.8477196329559
        },
        "data": {
          "type": "CohereModel",
          "node": {
            "template": {
              "_type": "Component",
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from langchain_cohere import ChatCohere\nfrom pydantic.v1 import SecretStr\n\nfrom axiestudio.base.models.model import LCModelComponent\nfrom axiestudio.field_typing import LanguageModel\nfrom axiestudio.io import FloatInput, SecretStrInput\n\n\nclass CohereComponent(LCModelComponent):\n    display_name = \"Cohere\"\n    description = \"Generate text using Cohere LLMs.\"\n    documentation = \"https://python.langchain.com/docs/modules/model_io/models/llms/integrations/cohere\"\n    icon = \"Cohere\"\n    name = \"CohereModel\"\n\n    inputs = LCModelComponent._base_inputs + [\n        SecretStrInput(\n            name=\"cohere_api_key\",\n            display_name=\"Cohere API Key\",\n            info=\"The Cohere API Key to use for the Cohere model.\",\n            advanced=False,\n            value=\"COHERE_API_KEY\",\n        ),\n        FloatInput(name=\"temperature\", display_name=\"Temperature\", value=0.75),\n    ]\n\n    def build_model(self) -> LanguageModel:  # type: ignore[type-var]\n        cohere_api_key = self.cohere_api_key\n        temperature = self.temperature\n\n        if cohere_api_key:\n            api_key = SecretStr(cohere_api_key)\n        else:\n            api_key = None\n\n        output = ChatCohere(\n            temperature=temperature or 0.75,\n            cohere_api_key=api_key,\n        )\n\n        return output  # type: ignore\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "cohere_api_key": {
                "load_from_db": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "cohere_api_key",
                "value": "",
                "display_name": "Cohere API Key",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "The Cohere API Key to use for the Cohere model.",
                "title_case": false,
                "password": true,
                "type": "str",
                "_input_type": "SecretStrInput"
              },
              "input_value": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "input_value",
                "value": {
                  "text_key": "text",
                  "data": {
                    "template": "The user is a data analyst or business analyst answer the questions ask by him on the basis of the data in the context only and give the retriever documents or the links by using the retriever\n\ncontext: \n{context}\n\nretriever:\n{retriever}\n\nhistory:\n{history}\n\nuser message:\n{user_msg}\n\n",
                    "variables": {
                      "user_msg": {
                        "text_key": "text",
                        "data": {
                          "text": "give me the link from where the data is extracted",
                          "sender": "User",
                          "sender_name": "User",
                          "session_id": "8622e87d-3671-436f-9ff4-bf38a55e9c93",
                          "files": [],
                          "timestamp": "2024-09-04 19:12:03",
                          "flow_id": "8622e87d-3671-436f-9ff4-bf38a55e9c93"
                        },
                        "default_value": "",
                        "text": "give me the link from where the data is extracted",
                        "sender": "User",
                        "sender_name": "User",
                        "files": [],
                        "session_id": "8622e87d-3671-436f-9ff4-bf38a55e9c93",
                        "timestamp": "2024-09-04 19:12:03",
                        "flow_id": "8622e87d-3671-436f-9ff4-bf38a55e9c93"
                      },
                      "history": {
                        "text_key": "text",
                        "data": {
                          "text": "User: what is CFCS2R\nAI: CFCS2R stands for the Center for Cyber Security Studies & Research. It is an organization that focuses on cybersecurity education and research. The user's post mentions their internship with CFCS2R, where they led a cybersecurity awareness campaign at a local education center. The campaign aimed to educate students about various cyber threats, digital identity protection, and safe social media practices.\nUser: give me the retrieval link for the information\nAI: Here are the retrieval links for the information provided in the context:\n\n- **Project Badri and Road Map:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\n- **Bihar's Historical Significance:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\n- **Internship with CFCS2R:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\nThese links provide access to the original sources of information mentioned in the context.\nUser: give me the link from where the data is extracted",
                          "files": [],
                          "timestamp": "2024-09-04 19:12:03",
                          "flow_id": "8622e87d-3671-436f-9ff4-bf38a55e9c93"
                        },
                        "default_value": "",
                        "text": "User: what is CFCS2R\nAI: CFCS2R stands for the Center for Cyber Security Studies & Research. It is an organization that focuses on cybersecurity education and research. The user's post mentions their internship with CFCS2R, where they led a cybersecurity awareness campaign at a local education center. The campaign aimed to educate students about various cyber threats, digital identity protection, and safe social media practices.\nUser: give me the retrieval link for the information\nAI: Here are the retrieval links for the information provided in the context:\n\n- **Project Badri and Road Map:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\n- **Bihar's Historical Significance:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\n- **Internship with CFCS2R:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\nThese links provide access to the original sources of information mentioned in the context.\nUser: give me the link from where the data is extracted",
                        "files": [],
                        "session_id": "",
                        "timestamp": "2024-09-04 19:12:03",
                        "flow_id": "8622e87d-3671-436f-9ff4-bf38a55e9c93"
                      },
                      "context": {
                        "text_key": "text",
                        "data": {
                          "text": "1mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🚀 Dark Web Scraping Project 🚀\nJust set up a dark web scraping environment as a home lab project using ARM macOS, Kali Linux, and ARM Ubuntu Server. This project leverages the Tor network for anonymity and various scraping tools to collect data. It's a fantastic way to gain practical experience in safely and anonymously accessing the dark web. Rather than diving into step-by-step details, the key takeaway is the importance of understanding secure, anonymous scraping practices. If you're looking to enhance your cybersecurity skills, a home lab project like this is a great place to start! 💻🔐\nHeres the link: https://lnkd.in/ef3kPQhq\n#Cybersecurity #HomeLab #DarkWeb #TorNetwork #LearningByDoing #PracticalSkills #CybersecuritySkills #remotework #remote #workfromhome \n \n\n\n\n\n\n\n              Dark Web Scraper\n🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n\n\n🟢 Dark Web Monitoring for Blue Team Operations\n📌 Katana The Dork Scanner https://lnkd.in/dmhuKJUh\n📌 Onion Search https://lnkd.in/ddgvcbyR\n📌 Darkdump2 for Deep Web Search https://lnkd.in/d6tTDFRE\n📌��Tor Bot for Dark Web Crawling https://lnkd.in/dQQT5DTP\n\n\n🟢 List of Dark Web Search Engine\n📌 The Hidden Wiki https://lnkd.in/dQW3NYuK\n📌 Torch https://lnkd.in/dQW3NYuK\n📌 DuckDuckGo https://lnkd.in/dQW3NYuK\n📌 Archive Today https://lnkd.in/dQW3NYuK\n📌 The Intercept https://lnkd.in/dQW3NYuK\n\nFull credit goes to Rajneesh G. for creating 100 percent of content.\n\nDisclaimer: Permission granted to share this content from creator\n\n#cybersecurity #infosecurity #leadershipbyexample\n#darkweb\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n\n                    479\n              \n\n\n \n\n \n\n\n\n\n\n        \n                34 Comments\n            \n      \n \n\n\n\n\n\n      Like\nKEY ACCOUNT MANAGER. \nCEH . CST . Try Hack Me Top 3% .\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      9mo\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🎓 Day 12/100 of #100DaysOfLearning\n\nDeep Web vs Dark Web\n\nDistinguishing the deep web from the dark web is crucial. While the deep web includes content not indexed by search engines (like private emails), the dark web demands encryption for higher security.\n\nDeep Web: Password-protected sites, paywalled content, and non-indexed material comprise 96-99% of the internet, used for daily logins and sensitive transactions.\n\nDark Web: A small portion requiring anonymity through encrypted browsers and VPNs. Accessing it isn't accidental; intent is key.\n2mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n😱💥[Dark Web & Anonymity Home-Lab]💥👇 How to \"Access the Dark Web Safely\", tools to stay \"Anonymous, Dark Web Monitoring for Blue Team Operations\" and much more.\n\n👇👇👇👇👇\n.\n.🟢 System Setup\n📌 Download Tor Browser https://lnkd.in/dGswmqdj\n📌 Kali Linux https://lnkd.in/d-8E2tuw\n\n\n🟢 Accessing Dark Web Safely\n📌 Install and Setup OpenVPN https://lnkd.in/dNwwgXhk\n📌 Best Practices for Tor Browser https://lnkd.in/dr5A8Qkr\n\n\n🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n1mo\n  \n \n \n\n \n\nIt's Quiz time ,\n\nQuiz -4 \nThis hardware forensics device is used in which operation\n\nMainly this is one of the activity done by our Cyber Investigation Interns 2024\n------------------------------------------------------------\nCOMMENT BELOW THE RIGHT ANSWERS 👇\n\n#cyberrakshak #cyberrakshakinternship #cybercrime #साइबररक्षक #internship #digitalforensics #policework #cyberlaws #CRI2024 #cybersecurity #investigation\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n                    7\n              \n\n\n \n\n \n\n\n\n\n\n        \n                1 Comment\n            \n      \n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              CYBER1 Solutions - South Africa\nDark Web Scraper\n            \n\n                medium.com\n            \n\n \n\n\n\n\n\n\n\n                    1\n              \n\n\n \n\n \n\n\n\n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Rakshan Joel Alphonse\n            \n \n\n                Penetration Testing Enthusiast | Exploring Cybersecurity Challenges | Second-Year CSE Student at Sathyabama University\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      3w\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🌐 **Day 19 of 100 Days of picoCTF Challenge: Web Exploitation Mastery with cURL** 🌐\n🚀  My Final Project report : Keylogger, Password Generator, and Text Encryption Tool in Python! 🚀\nMonth 1 Week4 Final Projects Report \nAs I conclude my journey at Cyberdosti with a fruitful internship in Cybersecurity and Ethical Hacking, I'm excited to share the final project report that encapsulates months of learning, coding, and exploring the depths of cybersecurity tools. This project has been a transformative experience, and I'm eager to share the details with my network.\n🌟 Project Highlights 🌟\n🔍 Keylogger:\nPurpose: Developed for ethical and security research, this tool records key presses to monitor unauthorized access or potential security breaches.\nFeatures:\nLogs key presses efficiently and securely.\nStores data in a protected file to ensure confidentiality.\nProvides insight into keystroke patterns for analysis.\n🔐 Password Generator:\nPurpose: Aimed at enhancing password security, this tool generates strong, random passwords.\nFeatures:\nComment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Chaudhary Pawan Sohlot\n            \n \n\n                Cyber Crime Investigator & Trainer\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      1mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\nThis hardware forensics device is used in which operation \n \n\n\n\n\n \n\n\n\n              Cyber Rakshak Org.\n            \n \n\n                548 followers\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      1mo\n  \n \n \n\n \n\nIt's Quiz time ,\nI'm happy to share with you some valuable quiz for knowledge enhancement in Cyber Investigation & Digital Forensics \n\nKindly share your feedback for better insights:) \n\nJai Hind 🇮🇳 \nChaudhary Pawan Sohlot\n#cyberrakshak #cyberrakshakinternship #cybercrime #साइबररक्षक #internship #digitalforensics #policework #cyberlaws #CRI2024 #cybersecurity #investigation\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n                    15\n              \n\n\n \n\n \n\n\n\n\n\n        \n                13 Comments\n            \n      \n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Aditya Pratap\n            \n \n\n                Entrepreneur | Web/App Developer | OSINT AND RESEARCH\nProvides insight into keystroke patterns for analysis.\n🔐 Password Generator:\nPurpose: Aimed at enhancing password security, this tool generates strong, random passwords.\nFeatures:\nCustomizable parameters for password length and character types.\nEnsures the creation of secure passwords resistant to common attack methods.\nUser-friendly interface that simplifies the password creation process.\n🔒 Text Encryption Tool:\nPurpose: Implements encryption to protect sensitive textual information using the Caesar cipher.\nFeatures:\nProvides both encryption and decryption functionalities.\nAllows users to set a custom shift value for tailored encryption.\nIntegrates a graphical user interface for ease of use.\n💻 Technologies and Skills:\nProgramming Language: Python\nLibraries Used: Tkinter for GUI, Pynput for key logging, Pyfiglet for ASCII art, and Termcolor for colored text.\nSkills Developed:\nAdvanced Python programming.\nPractical understanding of encryption techniques.",
                          "files": [],
                          "timestamp": "2024-09-04 19:12:04",
                          "flow_id": "8622e87d-3671-436f-9ff4-bf38a55e9c93"
                        },
                        "default_value": "",
                        "text": "1mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🚀 Dark Web Scraping Project 🚀\nJust set up a dark web scraping environment as a home lab project using ARM macOS, Kali Linux, and ARM Ubuntu Server. This project leverages the Tor network for anonymity and various scraping tools to collect data. It's a fantastic way to gain practical experience in safely and anonymously accessing the dark web. Rather than diving into step-by-step details, the key takeaway is the importance of understanding secure, anonymous scraping practices. If you're looking to enhance your cybersecurity skills, a home lab project like this is a great place to start! 💻🔐\nHeres the link: https://lnkd.in/ef3kPQhq\n#Cybersecurity #HomeLab #DarkWeb #TorNetwork #LearningByDoing #PracticalSkills #CybersecuritySkills #remotework #remote #workfromhome \n \n\n\n\n\n\n\n              Dark Web Scraper\n🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n\n\n🟢 Dark Web Monitoring for Blue Team Operations\n📌 Katana The Dork Scanner https://lnkd.in/dmhuKJUh\n📌 Onion Search https://lnkd.in/ddgvcbyR\n📌 Darkdump2 for Deep Web Search https://lnkd.in/d6tTDFRE\n📌 Tor Bot for Dark Web Crawling https://lnkd.in/dQQT5DTP\n\n\n🟢 List of Dark Web Search Engine\n📌 The Hidden Wiki https://lnkd.in/dQW3NYuK\n📌 Torch https://lnkd.in/dQW3NYuK\n📌 DuckDuckGo https://lnkd.in/dQW3NYuK\n📌 Archive Today https://lnkd.in/dQW3NYuK\n📌 The Intercept https://lnkd.in/dQW3NYuK\n\nFull credit goes to Rajneesh G. for creating 100 percent of content.\n\nDisclaimer: Permission granted to share this content from creator\n\n#cybersecurity #infosecurity #leadershipbyexample\n#darkweb\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n\n                    479\n              \n\n\n \n\n \n\n\n\n\n\n        \n                34 Comments\n            \n      \n \n\n\n\n\n\n      Like\nKEY ACCOUNT MANAGER. \nCEH . CST . Try Hack Me Top 3% .\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      9mo\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🎓 Day 12/100 of #100DaysOfLearning\n\nDeep Web vs Dark Web\n\nDistinguishing the deep web from the dark web is crucial. While the deep web includes content not indexed by search engines (like private emails), the dark web demands encryption for higher security.\n\nDeep Web: Password-protected sites, paywalled content, and non-indexed material comprise 96-99% of the internet, used for daily logins and sensitive transactions.\n\nDark Web: A small portion requiring anonymity through encrypted browsers and VPNs. Accessing it isn't accidental; intent is key.\n2mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n😱💥[Dark Web & Anonymity Home-Lab]💥👇 How to \"Access the Dark Web Safely\", tools to stay \"Anonymous, Dark Web Monitoring for Blue Team Operations\" and much more.\n\n👇👇👇👇👇\n.\n.🟢 System Setup\n📌 Download Tor Browser https://lnkd.in/dGswmqdj\n📌 Kali Linux https://lnkd.in/d-8E2tuw\n\n\n🟢 Accessing Dark Web Safely\n📌 Install and Setup OpenVPN https://lnkd.in/dNwwgXhk\n📌 Best Practices for Tor Browser https://lnkd.in/dr5A8Qkr\n\n\n🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n1mo\n  \n \n \n\n \n\nIt's Quiz time ,\n\nQuiz -4 \nThis hardware forensics device is used in which operation\n\nMainly this is one of the activity done by our Cyber Investigation Interns 2024\n------------------------------------------------------------\nCOMMENT BELOW THE RIGHT ANSWERS 👇\n\n#cyberrakshak #cyberrakshakinternship #cybercrime #साइबररक्षक #internship #digitalforensics #policework #cyberlaws #CRI2024 #cybersecurity #investigation\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n                    7\n              \n\n\n \n\n \n\n\n\n\n\n        \n                1 Comment\n            \n      \n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              CYBER1 Solutions - South Africa\nDark Web Scraper\n            \n\n                medium.com\n            \n\n \n\n\n\n\n\n\n\n                    1\n              \n\n\n \n\n \n\n\n\n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Rakshan Joel Alphonse\n            \n \n\n                Penetration Testing Enthusiast | Exploring Cybersecurity Challenges | Second-Year CSE Student at Sathyabama University\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      3w\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🌐 **Day 19 of 100 Days of picoCTF Challenge: Web Exploitation Mastery with cURL** 🌐\n🚀  My Final Project report : Keylogger, Password Generator, and Text Encryption Tool in Python! 🚀\nMonth 1 Week4 Final Projects Report \nAs I conclude my journey at Cyberdosti with a fruitful internship in Cybersecurity and Ethical Hacking, I'm excited to share the final project report that encapsulates months of learning, coding, and exploring the depths of cybersecurity tools. This project has been a transformative experience, and I'm eager to share the details with my network.\n🌟 Project Highlights 🌟\n🔍 Keylogger:\nPurpose: Developed for ethical and security research, this tool records key presses to monitor unauthorized access or potential security breaches.\nFeatures:\nLogs key presses efficiently and securely.\nStores data in a protected file to ensure confidentiality.\nProvides insight into keystroke patterns for analysis.\n🔐 Password Generator:\nPurpose: Aimed at enhancing password security, this tool generates strong, random passwords.\nFeatures:\nComment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Chaudhary Pawan Sohlot\n            \n \n\n                Cyber Crime Investigator & Trainer\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      1mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\nThis hardware forensics device is used in which operation \n \n\n\n\n\n \n\n\n\n              Cyber Rakshak Org.\n            \n \n\n                548 followers\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      1mo\n  \n \n \n\n \n\nIt's Quiz time ,\nI'm happy to share with you some valuable quiz for knowledge enhancement in Cyber Investigation & Digital Forensics \n\nKindly share your feedback for better insights:) \n\nJai Hind 🇮🇳 \nChaudhary Pawan Sohlot\n#cyberrakshak #cyberrakshakinternship #cybercrime #साइबररक्षक #internship #digitalforensics #policework #cyberlaws #CRI2024 #cybersecurity #investigation\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n                    15\n              \n\n\n \n\n \n\n\n\n\n\n        \n                13 Comments\n            \n      \n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Aditya Pratap\n            \n \n\n                Entrepreneur | Web/App Developer | OSINT AND RESEARCH\nProvides insight into keystroke patterns for analysis.\n🔐 Password Generator:\nPurpose: Aimed at enhancing password security, this tool generates strong, random passwords.\nFeatures:\nCustomizable parameters for password length and character types.\nEnsures the creation of secure passwords resistant to common attack methods.\nUser-friendly interface that simplifies the password creation process.\n🔒 Text Encryption Tool:\nPurpose: Implements encryption to protect sensitive textual information using the Caesar cipher.\nFeatures:\nProvides both encryption and decryption functionalities.\nAllows users to set a custom shift value for tailored encryption.\nIntegrates a graphical user interface for ease of use.\n💻 Technologies and Skills:\nProgramming Language: Python\nLibraries Used: Tkinter for GUI, Pynput for key logging, Pyfiglet for ASCII art, and Termcolor for colored text.\nSkills Developed:\nAdvanced Python programming.\nPractical understanding of encryption techniques.",
                        "files": [],
                        "session_id": "",
                        "timestamp": "2024-09-04 19:12:04",
                        "flow_id": "8622e87d-3671-436f-9ff4-bf38a55e9c93"
                      },
                      "retriever": {
                        "text_key": "text",
                        "data": {
                          "text": "https://www.linkedin.com/feed/update/urn:li:activity:72110034292031078401mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🚀 Dark Web Scraping Project 🚀\nJust set up a dark web scraping environment as a home lab project using ARM macOS, Kali Linux, and ARM Ubuntu Server. This project leverages the Tor network for anonymity and various scraping tools to collect data. It's a fantastic way to gain practical experience in safely and anonymously accessing the dark web. Rather than diving into step-by-step details, the key takeaway is the importance of understanding secure, anonymous scraping practices. If you're looking to enhance your cybersecurity skills, a home lab project like this is a great place to start! 💻🔐\nHeres the link: https://lnkd.in/ef3kPQhq\n#Cybersecurity #HomeLab #DarkWeb #TorNetwork #LearningByDoing #PracticalSkills #CybersecuritySkills #remotework #remote #workfromhome \n \n\n\n\n\n\n\n              Dark Web Scraper\nhttps://www.linkedin.com/feed/update/urn:li:activity:7211003429203107840🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n\n\n🟢 Dark Web Monitoring for Blue Team Operations\n📌 Katana The Dork Scanner https://lnkd.in/dmhuKJUh\n📌 Onion Search https://lnkd.in/ddgvcbyR\n📌 Darkdump2 for Deep Web Search https://lnkd.in/d6tTDFRE\n📌 Tor Bot for Dark Web Crawling https://lnkd.in/dQQT5DTP\n\n\n🟢 List of Dark Web Search Engine\n📌 The Hidden Wiki https://lnkd.in/dQW3NYuK\n📌 Torch https://lnkd.in/dQW3NYuK\n📌 DuckDuckGo https://lnkd.in/dQW3NYuK\n📌 Archive Today https://lnkd.in/dQW3NYuK\n📌 The Intercept https://lnkd.in/dQW3NYuK\n\nFull credit goes to Rajneesh G. for creating 100 percent of content.\n\nDisclaimer: Permission granted to share this content from creator\n\n#cybersecurity #infosecurity #leadershipbyexample\n#darkweb\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n\n                    479\n              \n\n\n \n\n \n\n\n\n\n\n        \n                34 Comments\n            \n      \n \n\n\n\n\n\n      Like\nhttps://www.linkedin.com/feed/update/urn:li:activity:7211003429203107840KEY ACCOUNT MANAGER. \nCEH . CST . Try Hack Me Top 3% .\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      9mo\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🎓 Day 12/100 of #100DaysOfLearning\n\nDeep Web vs Dark Web\n\nDistinguishing the deep web from the dark web is crucial. While the deep web includes content not indexed by search engines (like private emails), the dark web demands encryption for higher security.\n\nDeep Web: Password-protected sites, paywalled content, and non-indexed material comprise 96-99% of the internet, used for daily logins and sensitive transactions.\n\nDark Web: A small portion requiring anonymity through encrypted browsers and VPNs. Accessing it isn't accidental; intent is key.",
                          "files": [],
                          "timestamp": "2024-09-04 19:12:07",
                          "flow_id": "8622e87d-3671-436f-9ff4-bf38a55e9c93"
                        },
                        "default_value": "",
                        "text": "https://www.linkedin.com/feed/update/urn:li:activity:72110034292031078401mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🚀 Dark Web Scraping Project 🚀\nJust set up a dark web scraping environment as a home lab project using ARM macOS, Kali Linux, and ARM Ubuntu Server. This project leverages the Tor network for anonymity and various scraping tools to collect data. It's a fantastic way to gain practical experience in safely and anonymously accessing the dark web. Rather than diving into step-by-step details, the key takeaway is the importance of understanding secure, anonymous scraping practices. If you're looking to enhance your cybersecurity skills, a home lab project like this is a great place to start! 💻🔐\nHeres the link: https://lnkd.in/ef3kPQhq\n#Cybersecurity #HomeLab #DarkWeb #TorNetwork #LearningByDoing #PracticalSkills #CybersecuritySkills #remotework #remote #workfromhome \n \n\n\n\n\n\n\n              Dark Web Scraper\nhttps://www.linkedin.com/feed/update/urn:li:activity:7211003429203107840🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n\n\n🟢 Dark Web Monitoring for Blue Team Operations\n📌 Katana The Dork Scanner https://lnkd.in/dmhuKJUh\n📌 Onion Search https://lnkd.in/ddgvcbyR\n📌 Darkdump2 for Deep Web Search https://lnkd.in/d6tTDFRE\n📌 Tor Bot for Dark Web Crawling https://lnkd.in/dQQT5DTP\n\n\n🟢 List of Dark Web Search Engine\n📌 The Hidden Wiki https://lnkd.in/dQW3NYuK\n📌 Torch https://lnkd.in/dQW3NYuK\n📌 DuckDuckGo https://lnkd.in/dQW3NYuK\n📌 Archive Today https://lnkd.in/dQW3NYuK\n📌 The Intercept https://lnkd.in/dQW3NYuK\n\nFull credit goes to Rajneesh G. for creating 100 percent of content.\n\nDisclaimer: Permission granted to share this content from creator\n\n#cybersecurity #infosecurity #leadershipbyexample\n#darkweb\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n\n                    479\n              \n\n\n \n\n \n\n\n\n\n\n        \n                34 Comments\n            \n      \n \n\n\n\n\n\n      Like\nhttps://www.linkedin.com/feed/update/urn:li:activity:7211003429203107840KEY ACCOUNT MANAGER. \nCEH . CST . Try Hack Me Top 3% .\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      9mo\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🎓 Day 12/100 of #100DaysOfLearning\n\nDeep Web vs Dark Web\n\nDistinguishing the deep web from the dark web is crucial. While the deep web includes content not indexed by search engines (like private emails), the dark web demands encryption for higher security.\n\nDeep Web: Password-protected sites, paywalled content, and non-indexed material comprise 96-99% of the internet, used for daily logins and sensitive transactions.\n\nDark Web: A small portion requiring anonymity through encrypted browsers and VPNs. Accessing it isn't accidental; intent is key.",
                        "files": [],
                        "session_id": "",
                        "timestamp": "2024-09-04 19:12:07",
                        "flow_id": "8622e87d-3671-436f-9ff4-bf38a55e9c93"
                      }
                    },
                    "files": [],
                    "timestamp": "2024-09-04 19:12:07",
                    "text": "The user is a data analyst or business analyst answer the questions ask by him on the basis of the data in the context only and give the retriever documents or the links by using the retriever\n\ncontext: \n1mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🚀 Dark Web Scraping Project 🚀\nJust set up a dark web scraping environment as a home lab project using ARM macOS, Kali Linux, and ARM Ubuntu Server. This project leverages the Tor network for anonymity and various scraping tools to collect data. It's a fantastic way to gain practical experience in safely and anonymously accessing the dark web. Rather than diving into step-by-step details, the key takeaway is the importance of understanding secure, anonymous scraping practices. If you're looking to enhance your cybersecurity skills, a home lab project like this is a great place to start! 💻🔐\nHeres the link: https://lnkd.in/ef3kPQhq\n#Cybersecurity #HomeLab #DarkWeb #TorNetwork #LearningByDoing #PracticalSkills #CybersecuritySkills #remotework #remote #workfromhome \n \n\n\n\n\n\n\n              Dark Web Scraper\n🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n\n\n🟢 Dark Web Monitoring for Blue Team Operations\n📌 Katana The Dork Scanner https://lnkd.in/dmhuKJUh\n📌 Onion Search https://lnkd.in/ddgvcbyR\n📌 Darkdump2 for Deep Web Search https://lnkd.in/d6tTDFRE\n📌 Tor Bot for Dark Web Crawling https://lnkd.in/dQQT5DTP\n\n\n🟢 List of Dark Web Search Engine\n📌 The Hidden Wiki https://lnkd.in/dQW3NYuK\n📌 Torch https://lnkd.in/dQW3NYuK\n📌 DuckDuckGo https://lnkd.in/dQW3NYuK\n📌 Archive Today https://lnkd.in/dQW3NYuK\n📌 The Intercept https://lnkd.in/dQW3NYuK\n\nFull credit goes to Rajneesh G. for creating 100 percent of content.\n\nDisclaimer: Permission granted to share this content from creator\n\n#cybersecurity #infosecurity #leadershipbyexample\n#darkweb\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n\n                    479\n              \n\n\n \n\n \n\n\n\n\n\n        \n                34 Comments\n            \n      \n \n\n\n\n\n\n      Like\nKEY ACCOUNT MANAGER. \nCEH . CST . Try Hack Me Top 3% .\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      9mo\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🎓 Day 12/100 of #100DaysOfLearning\n\nDeep Web vs Dark Web\n\nDistinguishing the deep web from the dark web is crucial. While the deep web includes content not indexed by search engines (like private emails), the dark web demands encryption for higher security.\n\nDeep Web: Password-protected sites, paywalled content, and non-indexed material comprise 96-99% of the internet, used for daily logins and sensitive transactions.\n\nDark Web: A small portion requiring anonymity through encrypted browsers and VPNs. Accessing it isn't accidental; intent is key.\n2mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n😱💥[Dark Web & Anonymity Home-Lab]💥👇 How to \"Access the Dark Web Safely\", tools to stay \"Anonymous, Dark Web Monitoring for Blue Team Operations\" and much more.\n\n👇👇👇👇👇\n.\n.🟢 System Setup\n📌 Download Tor Browser https://lnkd.in/dGswmqdj\n📌 Kali Linux https://lnkd.in/d-8E2tuw\n\n\n🟢 Accessing Dark Web Safely\n📌 Install and Setup OpenVPN https://lnkd.in/dNwwgXhk\n📌 Best Practices for Tor Browser https://lnkd.in/dr5A8Qkr\n\n\n🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n1mo\n  \n \n \n\n \n\nIt's Quiz time ,\n\nQuiz -4 \nThis hardware forensics device is used in which operation\n\nMainly this is one of the activity done by our Cyber Investigation Interns 2024\n------------------------------------------------------------\nCOMMENT BELOW THE RIGHT ANSWERS 👇\n\n#cyberrakshak #cyberrakshakinternship #cybercrime #साइबररक्षक #internship #digitalforensics #policework #cyberlaws #CRI2024 #cybersecurity #investigation\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n                    7\n              \n\n\n \n\n \n\n\n\n\n\n        \n                1 Comment\n            \n      \n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              CYBER1 Solutions - South Africa\nDark Web Scraper\n            \n\n                medium.com\n            \n\n \n\n\n\n\n\n\n\n                    1\n              \n\n\n \n\n \n\n\n\n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Rakshan Joel Alphonse\n            \n \n\n                Penetration Testing Enthusiast | Exploring Cybersecurity Challenges | Second-Year CSE Student at Sathyabama University\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      3w\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🌐 **Day 19 of 100 Days of picoCTF Challenge: Web Exploitation Mastery with cURL** 🌐\n🚀  My Final Project report : Keylogger, Password Generator, and Text Encryption Tool in Python! 🚀\nMonth 1 Week4 Final Projects Report \nAs I conclude my journey at Cyberdosti with a fruitful internship in Cybersecurity and Ethical Hacking, I'm excited to share the final project report that encapsulates months of learning, coding, and exploring the depths of cybersecurity tools. This project has been a transformative experience, and I'm eager to share the details with my network.\n🌟 Project Highlights 🌟\n🔍 Keylogger:\nPurpose: Developed for ethical and security research, this tool records key presses to monitor unauthorized access or potential security breaches.\nFeatures:\nLogs key presses efficiently and securely.\nStores data in a protected file to ensure confidentiality.\nProvides insight into keystroke patterns for analysis.\n🔐 Password Generator:\nPurpose: Aimed at enhancing password security, this tool generates strong, random passwords.\nFeatures:\nComment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Chaudhary Pawan Sohlot\n            \n \n\n                Cyber Crime Investigator & Trainer\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      1mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\nThis hardware forensics device is used in which operation \n \n\n\n\n\n \n\n\n\n              Cyber Rakshak Org.\n            \n \n\n                548 followers\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      1mo\n  \n \n \n\n \n\nIt's Quiz time ,\nI'm happy to share with you some valuable quiz for knowledge enhancement in Cyber Investigation & Digital Forensics \n\nKindly share your feedback for better insights:) \n\nJai Hind 🇮🇳 \nChaudhary Pawan Sohlot\n#cyberrakshak #cyberrakshakinternship #cybercrime #साइबररक्षक #internship #digitalforensics #policework #cyberlaws #CRI2024 #cybersecurity #investigation\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n                    15\n              \n\n\n \n\n \n\n\n\n\n\n        \n                13 Comments\n            \n      \n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Aditya Pratap\n            \n \n\n                Entrepreneur | Web/App Developer | OSINT AND RESEARCH\nProvides insight into keystroke patterns for analysis.\n🔐 Password Generator:\nPurpose: Aimed at enhancing password security, this tool generates strong, random passwords.\nFeatures:\nCustomizable parameters for password length and character types.\nEnsures the creation of secure passwords resistant to common attack methods.\nUser-friendly interface that simplifies the password creation process.\n🔒 Text Encryption Tool:\nPurpose: Implements encryption to protect sensitive textual information using the Caesar cipher.\nFeatures:\nProvides both encryption and decryption functionalities.\nAllows users to set a custom shift value for tailored encryption.\nIntegrates a graphical user interface for ease of use.\n💻 Technologies and Skills:\nProgramming Language: Python\nLibraries Used: Tkinter for GUI, Pynput for key logging, Pyfiglet for ASCII art, and Termcolor for colored text.\nSkills Developed:\nAdvanced Python programming.\nPractical understanding of encryption techniques.\n\nretriever:\nhttps://www.linkedin.com/feed/update/urn:li:activity:72110034292031078401mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🚀 Dark Web Scraping Project 🚀\nJust set up a dark web scraping environment as a home lab project using ARM macOS, Kali Linux, and ARM Ubuntu Server. This project leverages the Tor network for anonymity and various scraping tools to collect data. It's a fantastic way to gain practical experience in safely and anonymously accessing the dark web. Rather than diving into step-by-step details, the key takeaway is the importance of understanding secure, anonymous scraping practices. If you're looking to enhance your cybersecurity skills, a home lab project like this is a great place to start! 💻🔐\nHeres the link: https://lnkd.in/ef3kPQhq\n#Cybersecurity #HomeLab #DarkWeb #TorNetwork #LearningByDoing #PracticalSkills #CybersecuritySkills #remotework #remote #workfromhome \n \n\n\n\n\n\n\n              Dark Web Scraper\nhttps://www.linkedin.com/feed/update/urn:li:activity:7211003429203107840🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n\n\n🟢 Dark Web Monitoring for Blue Team Operations\n📌 Katana The Dork Scanner https://lnkd.in/dmhuKJUh\n📌 Onion Search https://lnkd.in/ddgvcbyR\n📌 Darkdump2 for Deep Web Search https://lnkd.in/d6tTDFRE\n📌 Tor Bot for Dark Web Crawling https://lnkd.in/dQQT5DTP\n\n\n🟢 List of Dark Web Search Engine\n📌 The Hidden Wiki https://lnkd.in/dQW3NYuK\n📌 Torch https://lnkd.in/dQW3NYuK\n📌 DuckDuckGo https://lnkd.in/dQW3NYuK\n📌 Archive Today https://lnkd.in/dQW3NYuK\n📌 The Intercept https://lnkd.in/dQW3NYuK\n\nFull credit goes to Rajneesh G. for creating 100 percent of content.\n\nDisclaimer: Permission granted to share this content from creator\n\n#cybersecurity #infosecurity #leadershipbyexample\n#darkweb\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n\n                    479\n              \n\n\n \n\n \n\n\n\n\n\n        \n                34 Comments\n            \n      \n \n\n\n\n\n\n      Like\nhttps://www.linkedin.com/feed/update/urn:li:activity:7211003429203107840KEY ACCOUNT MANAGER. \nCEH . CST . Try Hack Me Top 3% .\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      9mo\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🎓 Day 12/100 of #100DaysOfLearning\n\nDeep Web vs Dark Web\n\nDistinguishing the deep web from the dark web is crucial. While the deep web includes content not indexed by search engines (like private emails), the dark web demands encryption for higher security.\n\nDeep Web: Password-protected sites, paywalled content, and non-indexed material comprise 96-99% of the internet, used for daily logins and sensitive transactions.\n\nDark Web: A small portion requiring anonymity through encrypted browsers and VPNs. Accessing it isn't accidental; intent is key.\n\nhistory:\nUser: what is CFCS2R\nAI: CFCS2R stands for the Center for Cyber Security Studies & Research. It is an organization that focuses on cybersecurity education and research. The user's post mentions their internship with CFCS2R, where they led a cybersecurity awareness campaign at a local education center. The campaign aimed to educate students about various cyber threats, digital identity protection, and safe social media practices.\nUser: give me the retrieval link for the information\nAI: Here are the retrieval links for the information provided in the context:\n\n- **Project Badri and Road Map:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\n- **Bihar's Historical Significance:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\n- **Internship with CFCS2R:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\nThese links provide access to the original sources of information mentioned in the context.\nUser: give me the link from where the data is extracted\n\nuser message:\ngive me the link from where the data is extracted\n\n",
                    "prompt": {
                      "lc": 1,
                      "type": "constructor",
                      "id": [
                        "langchain",
                        "prompts",
                        "chat",
                        "ChatPromptTemplate"
                      ],
                      "kwargs": {
                        "input_variables": [],
                        "messages": [
                          {
                            "content": "The user is a data analyst or business analyst answer the questions ask by him on the basis of the data in the context only and give the retriever documents or the links by using the retriever\n\ncontext: \n1mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🚀 Dark Web Scraping Project 🚀\nJust set up a dark web scraping environment as a home lab project using ARM macOS, Kali Linux, and ARM Ubuntu Server. This project leverages the Tor network for anonymity and various scraping tools to collect data. It's a fantastic way to gain practical experience in safely and anonymously accessing the dark web. Rather than diving into step-by-step details, the key takeaway is the importance of understanding secure, anonymous scraping practices. If you're looking to enhance your cybersecurity skills, a home lab project like this is a great place to start! 💻🔐\nHeres the link: https://lnkd.in/ef3kPQhq\n#Cybersecurity #HomeLab #DarkWeb #TorNetwork #LearningByDoing #PracticalSkills #CybersecuritySkills #remotework #remote #workfromhome \n \n\n\n\n\n\n\n              Dark Web Scraper\n🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n\n\n🟢 Dark Web Monitoring for Blue Team Operations\n📌 Katana The Dork Scanner https://lnkd.in/dmhuKJUh\n📌 Onion Search https://lnkd.in/ddgvcbyR\n📌 Darkdump2 for Deep Web Search https://lnkd.in/d6tTDFRE\n📌 Tor Bot for Dark Web Crawling https://lnkd.in/dQQT5DTP\n\n\n🟢 List of Dark Web Search Engine\n📌 The Hidden Wiki https://lnkd.in/dQW3NYuK\n📌 Torch https://lnkd.in/dQW3NYuK\n📌 DuckDuckGo https://lnkd.in/dQW3NYuK\n📌 Archive Today https://lnkd.in/dQW3NYuK\n📌 The Intercept https://lnkd.in/dQW3NYuK\n\nFull credit goes to Rajneesh G. for creating 100 percent of content.\n\nDisclaimer: Permission granted to share this content from creator\n\n#cybersecurity #infosecurity #leadershipbyexample\n#darkweb\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n\n                    479\n              \n\n\n \n\n \n\n\n\n\n\n        \n                34 Comments\n            \n      \n \n\n\n\n\n\n      Like\nKEY ACCOUNT MANAGER. \nCEH . CST . Try Hack Me Top 3% .\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      9mo\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🎓 Day 12/100 of #100DaysOfLearning\n\nDeep Web vs Dark Web\n\nDistinguishing the deep web from the dark web is crucial. While the deep web includes content not indexed by search engines (like private emails), the dark web demands encryption for higher security.\n\nDeep Web: Password-protected sites, paywalled content, and non-indexed material comprise 96-99% of the internet, used for daily logins and sensitive transactions.\n\nDark Web: A small portion requiring anonymity through encrypted browsers and VPNs. Accessing it isn't accidental; intent is key.\n2mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n😱💥[Dark Web & Anonymity Home-Lab]💥👇 How to \"Access the Dark Web Safely\", tools to stay \"Anonymous, Dark Web Monitoring for Blue Team Operations\" and much more.\n\n👇👇👇👇👇\n.\n.🟢 System Setup\n📌 Download Tor Browser https://lnkd.in/dGswmqdj\n📌 Kali Linux https://lnkd.in/d-8E2tuw\n\n\n🟢 Accessing Dark Web Safely\n📌 Install and Setup OpenVPN https://lnkd.in/dNwwgXhk\n📌 Best Practices for Tor Browser https://lnkd.in/dr5A8Qkr\n\n\n🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n1mo\n  \n \n \n\n \n\nIt's Quiz time ,\n\nQuiz -4 \nThis hardware forensics device is used in which operation\n\nMainly this is one of the activity done by our Cyber Investigation Interns 2024\n------------------------------------------------------------\nCOMMENT BELOW THE RIGHT ANSWERS 👇\n\n#cyberrakshak #cyberrakshakinternship #cybercrime #साइबररक्षक #internship #digitalforensics #policework #cyberlaws #CRI2024 #cybersecurity #investigation\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n                    7\n              \n\n\n \n\n \n\n\n\n\n\n        \n                1 Comment\n            \n      \n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              CYBER1 Solutions - South Africa\nDark Web Scraper\n            \n\n                medium.com\n            \n\n \n\n\n\n\n\n\n\n                    1\n              \n\n\n \n\n \n\n\n\n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Rakshan Joel Alphonse\n            \n \n\n                Penetration Testing Enthusiast | Exploring Cybersecurity Challenges | Second-Year CSE Student at Sathyabama University\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      3w\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🌐 **Day 19 of 100 Days of picoCTF Challenge: Web Exploitation Mastery with cURL** 🌐\n🚀  My Final Project report : Keylogger, Password Generator, and Text Encryption Tool in Python! 🚀\nMonth 1 Week4 Final Projects Report \nAs I conclude my journey at Cyberdosti with a fruitful internship in Cybersecurity and Ethical Hacking, I'm excited to share the final project report that encapsulates months of learning, coding, and exploring the depths of cybersecurity tools. This project has been a transformative experience, and I'm eager to share the details with my network.\n🌟 Project Highlights 🌟\n🔍 Keylogger:\nPurpose: Developed for ethical and security research, this tool records key presses to monitor unauthorized access or potential security breaches.\nFeatures:\nLogs key presses efficiently and securely.\nStores data in a protected file to ensure confidentiality.\nProvides insight into keystroke patterns for analysis.\n🔐 Password Generator:\nPurpose: Aimed at enhancing password security, this tool generates strong, random passwords.\nFeatures:\nComment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Chaudhary Pawan Sohlot\n            \n \n\n                Cyber Crime Investigator & Trainer\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      1mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\nThis hardware forensics device is used in which operation \n \n\n\n\n\n \n\n\n\n              Cyber Rakshak Org.\n            \n \n\n                548 followers\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      1mo\n  \n \n \n\n \n\nIt's Quiz time ,\nI'm happy to share with you some valuable quiz for knowledge enhancement in Cyber Investigation & Digital Forensics \n\nKindly share your feedback for better insights:) \n\nJai Hind 🇮🇳 \nChaudhary Pawan Sohlot\n#cyberrakshak #cyberrakshakinternship #cybercrime #साइबररक्षक #internship #digitalforensics #policework #cyberlaws #CRI2024 #cybersecurity #investigation\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n                    15\n              \n\n\n \n\n \n\n\n\n\n\n        \n                13 Comments\n            \n      \n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Aditya Pratap\n            \n \n\n                Entrepreneur | Web/App Developer | OSINT AND RESEARCH\nProvides insight into keystroke patterns for analysis.\n🔐 Password Generator:\nPurpose: Aimed at enhancing password security, this tool generates strong, random passwords.\nFeatures:\nCustomizable parameters for password length and character types.\nEnsures the creation of secure passwords resistant to common attack methods.\nUser-friendly interface that simplifies the password creation process.\n🔒 Text Encryption Tool:\nPurpose: Implements encryption to protect sensitive textual information using the Caesar cipher.\nFeatures:\nProvides both encryption and decryption functionalities.\nAllows users to set a custom shift value for tailored encryption.\nIntegrates a graphical user interface for ease of use.\n💻 Technologies and Skills:\nProgramming Language: Python\nLibraries Used: Tkinter for GUI, Pynput for key logging, Pyfiglet for ASCII art, and Termcolor for colored text.\nSkills Developed:\nAdvanced Python programming.\nPractical understanding of encryption techniques.\n\nretriever:\nhttps://www.linkedin.com/feed/update/urn:li:activity:72110034292031078401mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🚀 Dark Web Scraping Project 🚀\nJust set up a dark web scraping environment as a home lab project using ARM macOS, Kali Linux, and ARM Ubuntu Server. This project leverages the Tor network for anonymity and various scraping tools to collect data. It's a fantastic way to gain practical experience in safely and anonymously accessing the dark web. Rather than diving into step-by-step details, the key takeaway is the importance of understanding secure, anonymous scraping practices. If you're looking to enhance your cybersecurity skills, a home lab project like this is a great place to start! 💻🔐\nHeres the link: https://lnkd.in/ef3kPQhq\n#Cybersecurity #HomeLab #DarkWeb #TorNetwork #LearningByDoing #PracticalSkills #CybersecuritySkills #remotework #remote #workfromhome \n \n\n\n\n\n\n\n              Dark Web Scraper\nhttps://www.linkedin.com/feed/update/urn:li:activity:7211003429203107840🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n\n\n🟢 Dark Web Monitoring for Blue Team Operations\n📌 Katana The Dork Scanner https://lnkd.in/dmhuKJUh\n📌 Onion Search https://lnkd.in/ddgvcbyR\n📌 Darkdump2 for Deep Web Search https://lnkd.in/d6tTDFRE\n📌 Tor Bot for Dark Web Crawling https://lnkd.in/dQQT5DTP\n\n\n🟢 List of Dark Web Search Engine\n📌 The Hidden Wiki https://lnkd.in/dQW3NYuK\n📌 Torch https://lnkd.in/dQW3NYuK\n📌 DuckDuckGo https://lnkd.in/dQW3NYuK\n📌 Archive Today https://lnkd.in/dQW3NYuK\n📌 The Intercept https://lnkd.in/dQW3NYuK\n\nFull credit goes to Rajneesh G. for creating 100 percent of content.\n\nDisclaimer: Permission granted to share this content from creator\n\n#cybersecurity #infosecurity #leadershipbyexample\n#darkweb\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n\n                    479\n              \n\n\n \n\n \n\n\n\n\n\n        \n                34 Comments\n            \n      \n \n\n\n\n\n\n      Like\nhttps://www.linkedin.com/feed/update/urn:li:activity:7211003429203107840KEY ACCOUNT MANAGER. \nCEH . CST . Try Hack Me Top 3% .\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      9mo\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🎓 Day 12/100 of #100DaysOfLearning\n\nDeep Web vs Dark Web\n\nDistinguishing the deep web from the dark web is crucial. While the deep web includes content not indexed by search engines (like private emails), the dark web demands encryption for higher security.\n\nDeep Web: Password-protected sites, paywalled content, and non-indexed material comprise 96-99% of the internet, used for daily logins and sensitive transactions.\n\nDark Web: A small portion requiring anonymity through encrypted browsers and VPNs. Accessing it isn't accidental; intent is key.\n\nhistory:\nUser: what is CFCS2R\nAI: CFCS2R stands for the Center for Cyber Security Studies & Research. It is an organization that focuses on cybersecurity education and research. The user's post mentions their internship with CFCS2R, where they led a cybersecurity awareness campaign at a local education center. The campaign aimed to educate students about various cyber threats, digital identity protection, and safe social media practices.\nUser: give me the retrieval link for the information\nAI: Here are the retrieval links for the information provided in the context:\n\n- **Project Badri and Road Map:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\n- **Bihar's Historical Significance:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\n- **Internship with CFCS2R:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\nThese links provide access to the original sources of information mentioned in the context.\nUser: give me the link from where the data is extracted\n\nuser message:\ngive me the link from where the data is extracted\n\n",
                            "additional_kwargs": {},
                            "response_metadata": {},
                            "type": "human",
                            "name": null,
                            "id": null,
                            "example": false
                          }
                        ]
                      },
                      "name": "ChatPromptTemplate",
                      "graph": {
                        "nodes": [
                          {
                            "id": 0,
                            "type": "schema",
                            "data": "PromptInput"
                          },
                          {
                            "id": 1,
                            "type": "runnable",
                            "data": {
                              "id": [
                                "langchain",
                                "prompts",
                                "chat",
                                "ChatPromptTemplate"
                              ],
                              "name": "ChatPromptTemplate"
                            }
                          },
                          {
                            "id": 2,
                            "type": "schema",
                            "data": "ChatPromptTemplateOutput"
                          }
                        ],
                        "edges": [
                          {
                            "source": 0,
                            "target": 1
                          },
                          {
                            "source": 1,
                            "target": 2
                          }
                        ]
                      }
                    },
                    "messages": [
                      {
                        "content": "The user is a data analyst or business analyst answer the questions ask by him on the basis of the data in the context only and give the retriever documents or the links by using the retriever\n\ncontext: \n1mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🚀 Dark Web Scraping Project 🚀\nJust set up a dark web scraping environment as a home lab project using ARM macOS, Kali Linux, and ARM Ubuntu Server. This project leverages the Tor network for anonymity and various scraping tools to collect data. It's a fantastic way to gain practical experience in safely and anonymously accessing the dark web. Rather than diving into step-by-step details, the key takeaway is the importance of understanding secure, anonymous scraping practices. If you're looking to enhance your cybersecurity skills, a home lab project like this is a great place to start! 💻🔐\nHeres the link: https://lnkd.in/ef3kPQhq\n#Cybersecurity #HomeLab #DarkWeb #TorNetwork #LearningByDoing #PracticalSkills #CybersecuritySkills #remotework #remote #workfromhome \n \n\n\n\n\n\n\n              Dark Web Scraper\n🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n\n\n🟢 Dark Web Monitoring for Blue Team Operations\n📌 Katana The Dork Scanner https://lnkd.in/dmhuKJUh\n📌 Onion Search https://lnkd.in/ddgvcbyR\n📌 Darkdump2 for Deep Web Search https://lnkd.in/d6tTDFRE\n📌 Tor Bot for Dark Web Crawling https://lnkd.in/dQQT5DTP\n\n\n🟢 List of Dark Web Search Engine\n📌 The Hidden Wiki https://lnkd.in/dQW3NYuK\n📌 Torch https://lnkd.in/dQW3NYuK\n📌 DuckDuckGo https://lnkd.in/dQW3NYuK\n📌 Archive Today https://lnkd.in/dQW3NYuK\n📌 The Intercept https://lnkd.in/dQW3NYuK\n\nFull credit goes to Rajneesh G. for creating 100 percent of content.\n\nDisclaimer: Permission granted to share this content from creator\n\n#cybersecurity #infosecurity #leadershipbyexample\n#darkweb\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n\n                    479\n              \n\n\n \n\n \n\n\n\n\n\n        \n                34 Comments\n            \n      \n \n\n\n\n\n\n      Like\nKEY ACCOUNT MANAGER. \nCEH . CST . Try Hack Me Top 3% .\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      9mo\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🎓 Day 12/100 of #100DaysOfLearning\n\nDeep Web vs Dark Web\n\nDistinguishing the deep web from the dark web is crucial. While the deep web includes content not indexed by search engines (like private emails), the dark web demands encryption for higher security.\n\nDeep Web: Password-protected sites, paywalled content, and non-indexed material comprise 96-99% of the internet, used for daily logins and sensitive transactions.\n\nDark Web: A small portion requiring anonymity through encrypted browsers and VPNs. Accessing it isn't accidental; intent is key.\n2mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n😱💥[Dark Web & Anonymity Home-Lab]💥👇 How to \"Access the Dark Web Safely\", tools to stay \"Anonymous, Dark Web Monitoring for Blue Team Operations\" and much more.\n\n👇👇👇👇👇\n.\n.🟢 System Setup\n📌 Download Tor Browser https://lnkd.in/dGswmqdj\n📌 Kali Linux https://lnkd.in/d-8E2tuw\n\n\n🟢 Accessing Dark Web Safely\n📌 Install and Setup OpenVPN https://lnkd.in/dNwwgXhk\n📌 Best Practices for Tor Browser https://lnkd.in/dr5A8Qkr\n\n\n🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n1mo\n  \n \n \n\n \n\nIt's Quiz time ,\n\nQuiz -4 \nThis hardware forensics device is used in which operation\n\nMainly this is one of the activity done by our Cyber Investigation Interns 2024\n------------------------------------------------------------\nCOMMENT BELOW THE RIGHT ANSWERS 👇\n\n#cyberrakshak #cyberrakshakinternship #cybercrime #साइबररक्षक #internship #digitalforensics #policework #cyberlaws #CRI2024 #cybersecurity #investigation\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n                    7\n              \n\n\n \n\n \n\n\n\n\n\n        \n                1 Comment\n            \n      \n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              CYBER1 Solutions - South Africa\nDark Web Scraper\n            \n\n                medium.com\n            \n\n \n\n\n\n\n\n\n\n                    1\n              \n\n\n \n\n \n\n\n\n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Rakshan Joel Alphonse\n            \n \n\n                Penetration Testing Enthusiast | Exploring Cybersecurity Challenges | Second-Year CSE Student at Sathyabama University\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      3w\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🌐 **Day 19 of 100 Days of picoCTF Challenge: Web Exploitation Mastery with cURL** 🌐\n🚀  My Final Project report : Keylogger, Password Generator, and Text Encryption Tool in Python! 🚀\nMonth 1 Week4 Final Projects Report \nAs I conclude my journey at Cyberdosti with a fruitful internship in Cybersecurity and Ethical Hacking, I'm excited to share the final project report that encapsulates months of learning, coding, and exploring the depths of cybersecurity tools. This project has been a transformative experience, and I'm eager to share the details with my network.\n🌟 Project Highlights 🌟\n🔍 Keylogger:\nPurpose: Developed for ethical and security research, this tool records key presses to monitor unauthorized access or potential security breaches.\nFeatures:\nLogs key presses efficiently and securely.\nStores data in a protected file to ensure confidentiality.\nProvides insight into keystroke patterns for analysis.\n🔐 Password Generator:\nPurpose: Aimed at enhancing password security, this tool generates strong, random passwords.\nFeatures:\nComment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Chaudhary Pawan Sohlot\n            \n \n\n                Cyber Crime Investigator & Trainer\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      1mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\nThis hardware forensics device is used in which operation \n \n\n\n\n\n \n\n\n\n              Cyber Rakshak Org.\n            \n \n\n                548 followers\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      1mo\n  \n \n \n\n \n\nIt's Quiz time ,\nI'm happy to share with you some valuable quiz for knowledge enhancement in Cyber Investigation & Digital Forensics \n\nKindly share your feedback for better insights:) \n\nJai Hind 🇮🇳 \nChaudhary Pawan Sohlot\n#cyberrakshak #cyberrakshakinternship #cybercrime #साइबररक्षक #internship #digitalforensics #policework #cyberlaws #CRI2024 #cybersecurity #investigation\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n                    15\n              \n\n\n \n\n \n\n\n\n\n\n        \n                13 Comments\n            \n      \n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Aditya Pratap\n            \n \n\n                Entrepreneur | Web/App Developer | OSINT AND RESEARCH\nProvides insight into keystroke patterns for analysis.\n🔐 Password Generator:\nPurpose: Aimed at enhancing password security, this tool generates strong, random passwords.\nFeatures:\nCustomizable parameters for password length and character types.\nEnsures the creation of secure passwords resistant to common attack methods.\nUser-friendly interface that simplifies the password creation process.\n🔒 Text Encryption Tool:\nPurpose: Implements encryption to protect sensitive textual information using the Caesar cipher.\nFeatures:\nProvides both encryption and decryption functionalities.\nAllows users to set a custom shift value for tailored encryption.\nIntegrates a graphical user interface for ease of use.\n💻 Technologies and Skills:\nProgramming Language: Python\nLibraries Used: Tkinter for GUI, Pynput for key logging, Pyfiglet for ASCII art, and Termcolor for colored text.\nSkills Developed:\nAdvanced Python programming.\nPractical understanding of encryption techniques.\n\nretriever:\nhttps://www.linkedin.com/feed/update/urn:li:activity:72110034292031078401mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🚀 Dark Web Scraping Project 🚀\nJust set up a dark web scraping environment as a home lab project using ARM macOS, Kali Linux, and ARM Ubuntu Server. This project leverages the Tor network for anonymity and various scraping tools to collect data. It's a fantastic way to gain practical experience in safely and anonymously accessing the dark web. Rather than diving into step-by-step details, the key takeaway is the importance of understanding secure, anonymous scraping practices. If you're looking to enhance your cybersecurity skills, a home lab project like this is a great place to start! 💻🔐\nHeres the link: https://lnkd.in/ef3kPQhq\n#Cybersecurity #HomeLab #DarkWeb #TorNetwork #LearningByDoing #PracticalSkills #CybersecuritySkills #remotework #remote #workfromhome \n \n\n\n\n\n\n\n              Dark Web Scraper\nhttps://www.linkedin.com/feed/update/urn:li:activity:7211003429203107840🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n\n\n🟢 Dark Web Monitoring for Blue Team Operations\n📌 Katana The Dork Scanner https://lnkd.in/dmhuKJUh\n📌 Onion Search https://lnkd.in/ddgvcbyR\n📌 Darkdump2 for Deep Web Search https://lnkd.in/d6tTDFRE\n📌 Tor Bot for Dark Web Crawling https://lnkd.in/dQQT5DTP\n\n\n🟢 List of Dark Web Search Engine\n📌 The Hidden Wiki https://lnkd.in/dQW3NYuK\n📌 Torch https://lnkd.in/dQW3NYuK\n📌 DuckDuckGo https://lnkd.in/dQW3NYuK\n📌 Archive Today https://lnkd.in/dQW3NYuK\n📌 The Intercept https://lnkd.in/dQW3NYuK\n\nFull credit goes to Rajneesh G. for creating 100 percent of content.\n\nDisclaimer: Permission granted to share this content from creator\n\n#cybersecurity #infosecurity #leadershipbyexample\n#darkweb\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n\n                    479\n              \n\n\n \n\n \n\n\n\n\n\n        \n                34 Comments\n            \n      \n \n\n\n\n\n\n      Like\nhttps://www.linkedin.com/feed/update/urn:li:activity:7211003429203107840KEY ACCOUNT MANAGER. \nCEH . CST . Try Hack Me Top 3% .\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      9mo\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🎓 Day 12/100 of #100DaysOfLearning\n\nDeep Web vs Dark Web\n\nDistinguishing the deep web from the dark web is crucial. While the deep web includes content not indexed by search engines (like private emails), the dark web demands encryption for higher security.\n\nDeep Web: Password-protected sites, paywalled content, and non-indexed material comprise 96-99% of the internet, used for daily logins and sensitive transactions.\n\nDark Web: A small portion requiring anonymity through encrypted browsers and VPNs. Accessing it isn't accidental; intent is key.\n\nhistory:\nUser: what is CFCS2R\nAI: CFCS2R stands for the Center for Cyber Security Studies & Research. It is an organization that focuses on cybersecurity education and research. The user's post mentions their internship with CFCS2R, where they led a cybersecurity awareness campaign at a local education center. The campaign aimed to educate students about various cyber threats, digital identity protection, and safe social media practices.\nUser: give me the retrieval link for the information\nAI: Here are the retrieval links for the information provided in the context:\n\n- **Project Badri and Road Map:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\n- **Bihar's Historical Significance:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\n- **Internship with CFCS2R:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\nThese links provide access to the original sources of information mentioned in the context.\nUser: give me the link from where the data is extracted\n\nuser message:\ngive me the link from where the data is extracted\n\n",
                        "additional_kwargs": {},
                        "response_metadata": {},
                        "type": "human",
                        "name": null,
                        "id": null,
                        "example": false
                      }
                    ],
                    "flow_id": "8622e87d-3671-436f-9ff4-bf38a55e9c93"
                  },
                  "default_value": "",
                  "text": "The user is a data analyst or business analyst answer the questions ask by him on the basis of the data in the context only and give the retriever documents or the links by using the retriever\n\ncontext: \n1mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🚀 Dark Web Scraping Project 🚀\nJust set up a dark web scraping environment as a home lab project using ARM macOS, Kali Linux, and ARM Ubuntu Server. This project leverages the Tor network for anonymity and various scraping tools to collect data. It's a fantastic way to gain practical experience in safely and anonymously accessing the dark web. Rather than diving into step-by-step details, the key takeaway is the importance of understanding secure, anonymous scraping practices. If you're looking to enhance your cybersecurity skills, a home lab project like this is a great place to start! 💻🔐\nHeres the link: https://lnkd.in/ef3kPQhq\n#Cybersecurity #HomeLab #DarkWeb #TorNetwork #LearningByDoing #PracticalSkills #CybersecuritySkills #remotework #remote #workfromhome \n \n\n\n\n\n\n\n              Dark Web Scraper\n🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n\n\n🟢 Dark Web Monitoring for Blue Team Operations\n📌 Katana The Dork Scanner https://lnkd.in/dmhuKJUh\n📌 Onion Search https://lnkd.in/ddgvcbyR\n📌 Darkdump2 for Deep Web Search https://lnkd.in/d6tTDFRE\n📌 Tor Bot for Dark Web Crawling https://lnkd.in/dQQT5DTP\n\n\n🟢 List of Dark Web Search Engine\n📌 The Hidden Wiki https://lnkd.in/dQW3NYuK\n📌 Torch https://lnkd.in/dQW3NYuK\n📌 DuckDuckGo https://lnkd.in/dQW3NYuK\n📌 Archive Today https://lnkd.in/dQW3NYuK\n📌 The Intercept https://lnkd.in/dQW3NYuK\n\nFull credit goes to Rajneesh G. for creating 100 percent of content.\n\nDisclaimer: Permission granted to share this content from creator\n\n#cybersecurity #infosecurity #leadershipbyexample\n#darkweb\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n\n                    479\n              \n\n\n \n\n \n\n\n\n\n\n        \n                34 Comments\n            \n      \n \n\n\n\n\n\n      Like\nKEY ACCOUNT MANAGER. \nCEH . CST . Try Hack Me Top 3% .\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      9mo\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🎓 Day 12/100 of #100DaysOfLearning\n\nDeep Web vs Dark Web\n\nDistinguishing the deep web from the dark web is crucial. While the deep web includes content not indexed by search engines (like private emails), the dark web demands encryption for higher security.\n\nDeep Web: Password-protected sites, paywalled content, and non-indexed material comprise 96-99% of the internet, used for daily logins and sensitive transactions.\n\nDark Web: A small portion requiring anonymity through encrypted browsers and VPNs. Accessing it isn't accidental; intent is key.\n2mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n😱💥[Dark Web & Anonymity Home-Lab]💥👇 How to \"Access the Dark Web Safely\", tools to stay \"Anonymous, Dark Web Monitoring for Blue Team Operations\" and much more.\n\n👇👇👇👇👇\n.\n.🟢 System Setup\n📌 Download Tor Browser https://lnkd.in/dGswmqdj\n📌 Kali Linux https://lnkd.in/d-8E2tuw\n\n\n🟢 Accessing Dark Web Safely\n📌 Install and Setup OpenVPN https://lnkd.in/dNwwgXhk\n📌 Best Practices for Tor Browser https://lnkd.in/dr5A8Qkr\n\n\n🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n1mo\n  \n \n \n\n \n\nIt's Quiz time ,\n\nQuiz -4 \nThis hardware forensics device is used in which operation\n\nMainly this is one of the activity done by our Cyber Investigation Interns 2024\n------------------------------------------------------------\nCOMMENT BELOW THE RIGHT ANSWERS 👇\n\n#cyberrakshak #cyberrakshakinternship #cybercrime #साइबररक्षक #internship #digitalforensics #policework #cyberlaws #CRI2024 #cybersecurity #investigation\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n                    7\n              \n\n\n \n\n \n\n\n\n\n\n        \n                1 Comment\n            \n      \n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              CYBER1 Solutions - South Africa\nDark Web Scraper\n            \n\n                medium.com\n            \n\n \n\n\n\n\n\n\n\n                    1\n              \n\n\n \n\n \n\n\n\n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Rakshan Joel Alphonse\n            \n \n\n                Penetration Testing Enthusiast | Exploring Cybersecurity Challenges | Second-Year CSE Student at Sathyabama University\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      3w\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🌐 **Day 19 of 100 Days of picoCTF Challenge: Web Exploitation Mastery with cURL** 🌐\n🚀  My Final Project report : Keylogger, Password Generator, and Text Encryption Tool in Python! 🚀\nMonth 1 Week4 Final Projects Report \nAs I conclude my journey at Cyberdosti with a fruitful internship in Cybersecurity and Ethical Hacking, I'm excited to share the final project report that encapsulates months of learning, coding, and exploring the depths of cybersecurity tools. This project has been a transformative experience, and I'm eager to share the details with my network.\n🌟 Project Highlights 🌟\n🔍 Keylogger:\nPurpose: Developed for ethical and security research, this tool records key presses to monitor unauthorized access or potential security breaches.\nFeatures:\nLogs key presses efficiently and securely.\nStores data in a protected file to ensure confidentiality.\nProvides insight into keystroke patterns for analysis.\n🔐 Password Generator:\nPurpose: Aimed at enhancing password security, this tool generates strong, random passwords.\nFeatures:\nComment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Chaudhary Pawan Sohlot\n            \n \n\n                Cyber Crime Investigator & Trainer\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      1mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\nThis hardware forensics device is used in which operation \n \n\n\n\n\n \n\n\n\n              Cyber Rakshak Org.\n            \n \n\n                548 followers\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      1mo\n  \n \n \n\n \n\nIt's Quiz time ,\nI'm happy to share with you some valuable quiz for knowledge enhancement in Cyber Investigation & Digital Forensics \n\nKindly share your feedback for better insights:) \n\nJai Hind 🇮🇳 \nChaudhary Pawan Sohlot\n#cyberrakshak #cyberrakshakinternship #cybercrime #साइबररक्षक #internship #digitalforensics #policework #cyberlaws #CRI2024 #cybersecurity #investigation\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n                    15\n              \n\n\n \n\n \n\n\n\n\n\n        \n                13 Comments\n            \n      \n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Aditya Pratap\n            \n \n\n                Entrepreneur | Web/App Developer | OSINT AND RESEARCH\nProvides insight into keystroke patterns for analysis.\n🔐 Password Generator:\nPurpose: Aimed at enhancing password security, this tool generates strong, random passwords.\nFeatures:\nCustomizable parameters for password length and character types.\nEnsures the creation of secure passwords resistant to common attack methods.\nUser-friendly interface that simplifies the password creation process.\n🔒 Text Encryption Tool:\nPurpose: Implements encryption to protect sensitive textual information using the Caesar cipher.\nFeatures:\nProvides both encryption and decryption functionalities.\nAllows users to set a custom shift value for tailored encryption.\nIntegrates a graphical user interface for ease of use.\n💻 Technologies and Skills:\nProgramming Language: Python\nLibraries Used: Tkinter for GUI, Pynput for key logging, Pyfiglet for ASCII art, and Termcolor for colored text.\nSkills Developed:\nAdvanced Python programming.\nPractical understanding of encryption techniques.\n\nretriever:\nhttps://www.linkedin.com/feed/update/urn:li:activity:72110034292031078401mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🚀 Dark Web Scraping Project 🚀\nJust set up a dark web scraping environment as a home lab project using ARM macOS, Kali Linux, and ARM Ubuntu Server. This project leverages the Tor network for anonymity and various scraping tools to collect data. It's a fantastic way to gain practical experience in safely and anonymously accessing the dark web. Rather than diving into step-by-step details, the key takeaway is the importance of understanding secure, anonymous scraping practices. If you're looking to enhance your cybersecurity skills, a home lab project like this is a great place to start! 💻🔐\nHeres the link: https://lnkd.in/ef3kPQhq\n#Cybersecurity #HomeLab #DarkWeb #TorNetwork #LearningByDoing #PracticalSkills #CybersecuritySkills #remotework #remote #workfromhome \n \n\n\n\n\n\n\n              Dark Web Scraper\nhttps://www.linkedin.com/feed/update/urn:li:activity:7211003429203107840🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n\n\n🟢 Dark Web Monitoring for Blue Team Operations\n📌 Katana The Dork Scanner https://lnkd.in/dmhuKJUh\n📌 Onion Search https://lnkd.in/ddgvcbyR\n📌 Darkdump2 for Deep Web Search https://lnkd.in/d6tTDFRE\n📌 Tor Bot for Dark Web Crawling https://lnkd.in/dQQT5DTP\n\n\n🟢 List of Dark Web Search Engine\n📌 The Hidden Wiki https://lnkd.in/dQW3NYuK\n📌 Torch https://lnkd.in/dQW3NYuK\n📌 DuckDuckGo https://lnkd.in/dQW3NYuK\n📌 Archive Today https://lnkd.in/dQW3NYuK\n📌 The Intercept https://lnkd.in/dQW3NYuK\n\nFull credit goes to Rajneesh G. for creating 100 percent of content.\n\nDisclaimer: Permission granted to share this content from creator\n\n#cybersecurity #infosecurity #leadershipbyexample\n#darkweb\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n\n                    479\n              \n\n\n \n\n \n\n\n\n\n\n        \n                34 Comments\n            \n      \n \n\n\n\n\n\n      Like\nhttps://www.linkedin.com/feed/update/urn:li:activity:7211003429203107840KEY ACCOUNT MANAGER. \nCEH . CST . Try Hack Me Top 3% .\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      9mo\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🎓 Day 12/100 of #100DaysOfLearning\n\nDeep Web vs Dark Web\n\nDistinguishing the deep web from the dark web is crucial. While the deep web includes content not indexed by search engines (like private emails), the dark web demands encryption for higher security.\n\nDeep Web: Password-protected sites, paywalled content, and non-indexed material comprise 96-99% of the internet, used for daily logins and sensitive transactions.\n\nDark Web: A small portion requiring anonymity through encrypted browsers and VPNs. Accessing it isn't accidental; intent is key.\n\nhistory:\nUser: what is CFCS2R\nAI: CFCS2R stands for the Center for Cyber Security Studies & Research. It is an organization that focuses on cybersecurity education and research. The user's post mentions their internship with CFCS2R, where they led a cybersecurity awareness campaign at a local education center. The campaign aimed to educate students about various cyber threats, digital identity protection, and safe social media practices.\nUser: give me the retrieval link for the information\nAI: Here are the retrieval links for the information provided in the context:\n\n- **Project Badri and Road Map:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\n- **Bihar's Historical Significance:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\n- **Internship with CFCS2R:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\nThese links provide access to the original sources of information mentioned in the context.\nUser: give me the link from where the data is extracted\n\nuser message:\ngive me the link from where the data is extracted\n\n",
                  "files": [],
                  "session_id": "",
                  "timestamp": "2024-09-04 19:12:07",
                  "flow_id": "8622e87d-3671-436f-9ff4-bf38a55e9c93"
                },
                "display_name": "Input",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageInput"
              },
              "stream": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "stream",
                "value": false,
                "display_name": "Stream",
                "advanced": true,
                "dynamic": false,
                "info": "Stream the response from the model. Streaming works only in Chat.",
                "title_case": false,
                "type": "bool",
                "_input_type": "BoolInput"
              },
              "system_message": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "system_message",
                "value": "",
                "display_name": "System Message",
                "advanced": true,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "System message to pass to the model.",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              },
              "temperature": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "temperature",
                "value": 0.75,
                "display_name": "Temperature",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "float",
                "_input_type": "FloatInput"
              }
            },
            "description": "Generate text using Cohere LLMs.",
            "icon": "Cohere",
            "base_classes": [
              "LanguageModel",
              "Message"
            ],
            "display_name": "Cohere",
            "documentation": "https://python.langchain.com/docs/modules/model_io/models/llms/integrations/cohere",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "text_output",
                "display_name": "Text",
                "method": "text_response",
                "value": "__UNDEFINED__",
                "cache": true
              },
              {
                "types": [
                  "LanguageModel"
                ],
                "selected": "LanguageModel",
                "name": "model_output",
                "display_name": "Language Model",
                "method": "build_model",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "input_value",
              "system_message",
              "stream",
              "cohere_api_key",
              "temperature"
            ],
            "beta": false,
            "edited": false,
            "lf_version": "1.0.17"
          },
          "id": "CohereModel-BcREe"
        },
        "selected": false,
        "width": 384,
        "height": 511,
        "positionAbsolute": {
          "x": -2008.120261172667,
          "y": -391.8477196329559
        },
        "dragging": false
      },
      {
        "id": "Chroma-D1OmN",
        "type": "genericNode",
        "position": {
          "x": -2137.7513260974297,
          "y": 1130.686190961237
        },
        "data": {
          "type": "Chroma",
          "node": {
            "template": {
              "_type": "Component",
              "embedding": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "embedding",
                "value": "",
                "display_name": "Embedding",
                "advanced": false,
                "input_types": [
                  "Embeddings"
                ],
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "other",
                "_input_type": "HandleInput"
              },
              "ingest_data": {
                "trace_as_metadata": true,
                "list": true,
                "trace_as_input": true,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "ingest_data",
                "value": "",
                "display_name": "Ingest Data",
                "advanced": false,
                "input_types": [
                  "Data"
                ],
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "other",
                "_input_type": "DataInput"
              },
              "allow_duplicates": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "allow_duplicates",
                "value": false,
                "display_name": "Allow Duplicates",
                "advanced": true,
                "dynamic": false,
                "info": "If false, will not add documents that are already in the Vector Store.",
                "title_case": false,
                "type": "bool",
                "_input_type": "BoolInput"
              },
              "chroma_server_cors_allow_origins": {
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "chroma_server_cors_allow_origins",
                "value": "",
                "display_name": "Server CORS Allow Origins",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str",
                "_input_type": "StrInput"
              },
              "chroma_server_grpc_port": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "chroma_server_grpc_port",
                "value": "",
                "display_name": "Server gRPC Port",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "int",
                "_input_type": "IntInput"
              },
              "chroma_server_host": {
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "chroma_server_host",
                "value": "",
                "display_name": "Server Host",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str",
                "_input_type": "StrInput"
              },
              "chroma_server_http_port": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "chroma_server_http_port",
                "value": "",
                "display_name": "Server HTTP Port",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "int",
                "_input_type": "IntInput"
              },
              "chroma_server_ssl_enabled": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "chroma_server_ssl_enabled",
                "value": false,
                "display_name": "Server SSL Enabled",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "bool",
                "_input_type": "BoolInput"
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from copy import deepcopy\nfrom typing import TYPE_CHECKING\n\nfrom chromadb.config import Settings\nfrom langchain_chroma.vectorstores import Chroma\nfrom loguru import logger\n\nfrom axiestudio.base.vectorstores.model import LCVectorStoreComponent, check_cached_vector_store\nfrom axiestudio.base.vectorstores.utils import chroma_collection_to_data\nfrom axiestudio.io import BoolInput, DataInput, DropdownInput, HandleInput, IntInput, StrInput, MultilineInput\nfrom axiestudio.schema import Data\n\nif TYPE_CHECKING:\n    from langchain_chroma import Chroma\n\n\nclass ChromaVectorStoreComponent(LCVectorStoreComponent):\n    \"\"\"\n    Chroma Vector Store with search capabilities\n    \"\"\"\n\n    display_name: str = \"Chroma DB\"\n    description: str = \"Chroma Vector Store with search capabilities\"\n    documentation = \"https://python.langchain.com/docs/integrations/vectorstores/chroma\"\n    name = \"Chroma\"\n    icon = \"Chroma\"\n\n    inputs = [\n        StrInput(\n            name=\"collection_name\",\n            display_name=\"Collection Name\",\n            value=\"axiestudio\",\n        ),\n        StrInput(\n            name=\"persist_directory\",\n            display_name=\"Persist Directory\",\n        ),\n        MultilineInput(\n            name=\"search_query\",\n            display_name=\"Search Query\",\n        ),\n        DataInput(\n            name=\"ingest_data\",\n            display_name=\"Ingest Data\",\n            is_list=True,\n        ),\n        HandleInput(name=\"embedding\", display_name=\"Embedding\", input_types=[\"Embeddings\"]),\n        StrInput(\n            name=\"chroma_server_cors_allow_origins\",\n            display_name=\"Server CORS Allow Origins\",\n            advanced=True,\n        ),\n        StrInput(\n            name=\"chroma_server_host\",\n            display_name=\"Server Host\",\n            advanced=True,\n        ),\n        IntInput(\n            name=\"chroma_server_http_port\",\n            display_name=\"Server HTTP Port\",\n            advanced=True,\n        ),\n        IntInput(\n            name=\"chroma_server_grpc_port\",\n            display_name=\"Server gRPC Port\",\n            advanced=True,\n        ),\n        BoolInput(\n            name=\"chroma_server_ssl_enabled\",\n            display_name=\"Server SSL Enabled\",\n            advanced=True,\n        ),\n        BoolInput(\n            name=\"allow_duplicates\",\n            display_name=\"Allow Duplicates\",\n            advanced=True,\n            info=\"If false, will not add documents that are already in the Vector Store.\",\n        ),\n        DropdownInput(\n            name=\"search_type\",\n            display_name=\"Search Type\",\n            options=[\"Similarity\", \"MMR\"],\n            value=\"Similarity\",\n            advanced=True,\n        ),\n        IntInput(\n            name=\"number_of_results\",\n            display_name=\"Number of Results\",\n            info=\"Number of results to return.\",\n            advanced=True,\n            value=10,\n        ),\n        IntInput(\n            name=\"limit\",\n            display_name=\"Limit\",\n            advanced=True,\n            info=\"Limit the number of records to compare when Allow Duplicates is False.\",\n        ),\n    ]\n\n    @check_cached_vector_store\n    def build_vector_store(self) -> Chroma:\n        \"\"\"\n        Builds the Chroma object.\n        \"\"\"\n        try:\n            from chromadb import Client\n            from langchain_chroma import Chroma\n        except ImportError:\n            raise ImportError(\n                \"Could not import Chroma integration package. \" \"Please install it with `pip install langchain-chroma`.\"\n            )\n        # Chroma settings\n        chroma_settings = None\n        client = None\n        if self.chroma_server_host:\n            chroma_settings = Settings(\n                chroma_server_cors_allow_origins=self.chroma_server_cors_allow_origins or [],\n                chroma_server_host=self.chroma_server_host,\n                chroma_server_http_port=self.chroma_server_http_port or None,\n                chroma_server_grpc_port=self.chroma_server_grpc_port or None,\n                chroma_server_ssl_enabled=self.chroma_server_ssl_enabled,\n            )\n            client = Client(settings=chroma_settings)\n\n        # Check persist_directory and expand it if it is a relative path\n        if self.persist_directory is not None:\n            persist_directory = self.resolve_path(self.persist_directory)\n        else:\n            persist_directory = None\n\n        chroma = Chroma(\n            persist_directory=persist_directory,\n            client=client,\n            embedding_function=self.embedding,\n            collection_name=self.collection_name,\n        )\n\n        self._add_documents_to_vector_store(chroma)\n        self.status = chroma_collection_to_data(chroma.get(limit=self.limit))\n        return chroma\n\n    def _add_documents_to_vector_store(self, vector_store: \"Chroma\") -> None:\n        \"\"\"\n        Adds documents to the Vector Store.\n        \"\"\"\n        if not self.ingest_data:\n            self.status = \"\"\n            return\n\n        _stored_documents_without_id = []\n        if self.allow_duplicates:\n            stored_data = []\n        else:\n            stored_data = chroma_collection_to_data(vector_store.get(limit=self.limit))\n            for value in deepcopy(stored_data):\n                del value.id\n                _stored_documents_without_id.append(value)\n\n        documents = []\n        for _input in self.ingest_data or []:\n            if isinstance(_input, Data):\n                if _input not in _stored_documents_without_id:\n                    documents.append(_input.to_lc_document())\n            else:\n                raise ValueError(\"Vector Store Inputs must be Data objects.\")\n\n        if documents and self.embedding is not None:\n            logger.debug(f\"Adding {len(documents)} documents to the Vector Store.\")\n            vector_store.add_documents(documents)\n        else:\n            logger.debug(\"No documents to add to the Vector Store.\")\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "collection_name": {
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "collection_name",
                "value": "axiestudio",
                "display_name": "Collection Name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str",
                "_input_type": "StrInput"
              },
              "limit": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "limit",
                "value": "",
                "display_name": "Limit",
                "advanced": true,
                "dynamic": false,
                "info": "Limit the number of records to compare when Allow Duplicates is False.",
                "title_case": false,
                "type": "int",
                "_input_type": "IntInput"
              },
              "number_of_results": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "number_of_results",
                "value": 10,
                "display_name": "Number of Results",
                "advanced": true,
                "dynamic": false,
                "info": "Number of results to return.",
                "title_case": false,
                "type": "int",
                "_input_type": "IntInput"
              },
              "persist_directory": {
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "persist_directory",
                "value": "C:\\Users\\sahil\\OneDrive\\Desktop\\internship\\axiestudio",
                "display_name": "Persist Directory",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str",
                "_input_type": "StrInput"
              },
              "search_query": {
                "trace_as_input": true,
                "multiline": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "search_query",
                "value": "",
                "display_name": "Search Query",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str",
                "_input_type": "MultilineInput"
              },
              "search_type": {
                "trace_as_metadata": true,
                "options": [
                  "Similarity",
                  "MMR"
                ],
                "combobox": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "search_type",
                "value": "Similarity",
                "display_name": "Search Type",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str",
                "_input_type": "DropdownInput"
              }
            },
            "description": "Chroma Vector Store with search capabilities",
            "icon": "Chroma",
            "base_classes": [
              "Data",
              "Retriever",
              "VectorStore"
            ],
            "display_name": "Chroma DB",
            "documentation": "https://python.langchain.com/docs/integrations/vectorstores/chroma",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Retriever"
                ],
                "selected": "Retriever",
                "name": "base_retriever",
                "display_name": "Retriever",
                "method": "build_base_retriever",
                "value": "__UNDEFINED__",
                "cache": true
              },
              {
                "types": [
                  "Data"
                ],
                "selected": "Data",
                "name": "search_results",
                "display_name": "Search Results",
                "method": "search_documents",
                "value": "__UNDEFINED__",
                "cache": true
              },
              {
                "types": [
                  "VectorStore"
                ],
                "selected": "VectorStore",
                "name": "vector_store",
                "display_name": "Vector Store",
                "method": "cast_vector_store",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "collection_name",
              "persist_directory",
              "search_query",
              "ingest_data",
              "embedding",
              "chroma_server_cors_allow_origins",
              "chroma_server_host",
              "chroma_server_http_port",
              "chroma_server_grpc_port",
              "chroma_server_ssl_enabled",
              "allow_duplicates",
              "search_type",
              "number_of_results",
              "limit"
            ],
            "beta": false,
            "edited": false,
            "lf_version": "1.0.17"
          },
          "id": "Chroma-D1OmN"
        },
        "selected": false,
        "width": 384,
        "height": 651,
        "positionAbsolute": {
          "x": -2137.7513260974297,
          "y": 1130.686190961237
        },
        "dragging": false
      },
      {
        "id": "ParseData-qbgBL",
        "type": "genericNode",
        "position": {
          "x": -1609.777373629971,
          "y": 1313.4318183386695
        },
        "data": {
          "type": "ParseData",
          "node": {
            "template": {
              "_type": "Component",
              "data": {
                "trace_as_metadata": true,
                "list": false,
                "trace_as_input": true,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "data",
                "value": "",
                "display_name": "Data",
                "advanced": false,
                "input_types": [
                  "Data"
                ],
                "dynamic": false,
                "info": "The data to convert to text.",
                "title_case": false,
                "type": "other",
                "_input_type": "DataInput"
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio.custom import Component\nfrom axiestudio.helpers.data import data_to_text\nfrom axiestudio.io import DataInput, MultilineInput, Output, StrInput\nfrom axiestudio.schema.message import Message\n\n\nclass ParseDataComponent(Component):\n    display_name = \"Parse Data\"\n    description = \"Convert Data into plain text following a specified template.\"\n    icon = \"braces\"\n    name = \"ParseData\"\n\n    inputs = [\n        DataInput(name=\"data\", display_name=\"Data\", info=\"The data to convert to text.\"),\n        MultilineInput(\n            name=\"template\",\n            display_name=\"Template\",\n            info=\"The template to use for formatting the data. It can contain the keys {text}, {data} or any other key in the Data.\",\n            value=\"{text}\",\n        ),\n        StrInput(name=\"sep\", display_name=\"Separator\", advanced=True, value=\"\\n\"),\n    ]\n\n    outputs = [\n        Output(display_name=\"Text\", name=\"text\", method=\"parse_data\"),\n    ]\n\n    def parse_data(self) -> Message:\n        data = self.data if isinstance(self.data, list) else [self.data]\n        template = self.template\n\n        result_string = data_to_text(template, data, sep=self.sep)\n        self.status = result_string\n        return Message(text=result_string)\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "sep": {
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "sep",
                "value": "\n",
                "display_name": "Separator",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str",
                "_input_type": "StrInput"
              },
              "template": {
                "trace_as_input": true,
                "multiline": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "template",
                "value": "{text},{source}",
                "display_name": "Template",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "The template to use for formatting the data. It can contain the keys {text}, {data} or any other key in the Data.",
                "title_case": false,
                "type": "str",
                "_input_type": "MultilineInput"
              }
            },
            "description": "Convert Data into plain text following a specified template.",
            "icon": "braces",
            "base_classes": [
              "Message"
            ],
            "display_name": "Parse Data",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "text",
                "display_name": "Text",
                "method": "parse_data",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "data",
              "template",
              "sep"
            ],
            "beta": false,
            "edited": false,
            "lf_version": "1.0.17"
          },
          "id": "ParseData-qbgBL"
        },
        "selected": false,
        "width": 384,
        "height": 372,
        "positionAbsolute": {
          "x": -1609.777373629971,
          "y": 1313.4318183386695
        },
        "dragging": false
      },
      {
        "id": "ParseData-5OvOz",
        "type": "genericNode",
        "position": {
          "x": -1051.4203709377425,
          "y": 1502.1445866835127
        },
        "data": {
          "type": "ParseData",
          "node": {
            "template": {
              "_type": "Component",
              "data": {
                "trace_as_metadata": true,
                "list": false,
                "trace_as_input": true,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "data",
                "value": "",
                "display_name": "Data",
                "advanced": false,
                "input_types": [
                  "Data"
                ],
                "dynamic": false,
                "info": "The data to convert to text.",
                "title_case": false,
                "type": "other",
                "_input_type": "DataInput"
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio.custom import Component\nfrom axiestudio.helpers.data import data_to_text\nfrom axiestudio.io import DataInput, MultilineInput, Output, StrInput\nfrom axiestudio.schema.message import Message\n\n\nclass ParseDataComponent(Component):\n    display_name = \"Parse Data\"\n    description = \"Convert Data into plain text following a specified template.\"\n    icon = \"braces\"\n    name = \"ParseData\"\n\n    inputs = [\n        DataInput(name=\"data\", display_name=\"Data\", info=\"The data to convert to text.\"),\n        MultilineInput(\n            name=\"template\",\n            display_name=\"Template\",\n            info=\"The template to use for formatting the data. It can contain the keys {text}, {data} or any other key in the Data.\",\n            value=\"{text}\",\n        ),\n        StrInput(name=\"sep\", display_name=\"Separator\", advanced=True, value=\"\\n\"),\n    ]\n\n    outputs = [\n        Output(display_name=\"Text\", name=\"text\", method=\"parse_data\"),\n    ]\n\n    def parse_data(self) -> Message:\n        data = self.data if isinstance(self.data, list) else [self.data]\n        template = self.template\n\n        result_string = data_to_text(template, data, sep=self.sep)\n        self.status = result_string\n        return Message(text=result_string)\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "sep": {
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "sep",
                "value": "\n",
                "display_name": "Separator",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str",
                "_input_type": "StrInput"
              },
              "template": {
                "trace_as_input": true,
                "multiline": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "template",
                "value": "{source}",
                "display_name": "Template",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "The template to use for formatting the data. It can contain the keys {text}, {data} or any other key in the Data.",
                "title_case": false,
                "type": "str",
                "_input_type": "MultilineInput"
              }
            },
            "description": "Convert Data into plain text following a specified template.",
            "icon": "braces",
            "base_classes": [
              "Message"
            ],
            "display_name": "Parse Data",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "text",
                "display_name": "Text",
                "method": "parse_data",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "data",
              "template",
              "sep"
            ],
            "beta": false,
            "edited": false,
            "lf_version": "1.0.17"
          },
          "id": "ParseData-5OvOz"
        },
        "selected": false,
        "width": 384,
        "height": 372,
        "positionAbsolute": {
          "x": -1051.4203709377425,
          "y": 1502.1445866835127
        },
        "dragging": false
      },
      {
        "id": "CohereEmbeddings-jtVYO",
        "type": "genericNode",
        "position": {
          "x": -2675.863209480058,
          "y": 1305.928353938188
        },
        "data": {
          "type": "CohereEmbeddings",
          "node": {
            "template": {
              "_type": "Component",
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from langchain_community.embeddings.cohere import CohereEmbeddings\n\nfrom axiestudio.base.models.model import LCModelComponent\nfrom axiestudio.field_typing import Embeddings\nfrom axiestudio.io import DropdownInput, FloatInput, IntInput, MessageTextInput, Output, SecretStrInput\n\n\nclass CohereEmbeddingsComponent(LCModelComponent):\n    display_name = \"Cohere Embeddings\"\n    description = \"Generate embeddings using Cohere models.\"\n    icon = \"Cohere\"\n    name = \"CohereEmbeddings\"\n\n    inputs = [\n        SecretStrInput(name=\"cohere_api_key\", display_name=\"Cohere API Key\"),\n        DropdownInput(\n            name=\"model\",\n            display_name=\"Model\",\n            advanced=True,\n            options=[\n                \"embed-english-v2.0\",\n                \"embed-multilingual-v2.0\",\n                \"embed-english-light-v2.0\",\n                \"embed-multilingual-light-v2.0\",\n            ],\n            value=\"embed-english-v2.0\",\n        ),\n        MessageTextInput(name=\"truncate\", display_name=\"Truncate\", advanced=True),\n        IntInput(name=\"max_retries\", display_name=\"Max Retries\", value=3, advanced=True),\n        MessageTextInput(name=\"user_agent\", display_name=\"User Agent\", advanced=True, value=\"langchain\"),\n        FloatInput(name=\"request_timeout\", display_name=\"Request Timeout\", advanced=True),\n    ]\n\n    outputs = [\n        Output(display_name=\"Embeddings\", name=\"embeddings\", method=\"build_embeddings\"),\n    ]\n\n    def build_embeddings(self) -> Embeddings:\n        return CohereEmbeddings(  # type: ignore\n            cohere_api_key=self.cohere_api_key,\n            model=self.model,\n            truncate=self.truncate,\n            max_retries=self.max_retries,\n            user_agent=self.user_agent,\n            request_timeout=self.request_timeout or None,\n        )\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "cohere_api_key": {
                "load_from_db": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "cohere_api_key",
                "value": "",
                "display_name": "Cohere API Key",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "",
                "title_case": false,
                "password": true,
                "type": "str",
                "_input_type": "SecretStrInput"
              },
              "max_retries": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "max_retries",
                "value": 3,
                "display_name": "Max Retries",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "int",
                "_input_type": "IntInput"
              },
              "model": {
                "trace_as_metadata": true,
                "options": [
                  "embed-english-v2.0",
                  "embed-multilingual-v2.0",
                  "embed-english-light-v2.0",
                  "embed-multilingual-light-v2.0"
                ],
                "combobox": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "model",
                "value": "embed-english-v2.0",
                "display_name": "Model",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str",
                "_input_type": "DropdownInput"
              },
              "request_timeout": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "request_timeout",
                "value": "",
                "display_name": "Request Timeout",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "float",
                "_input_type": "FloatInput"
              },
              "truncate": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "truncate",
                "value": "",
                "display_name": "Truncate",
                "advanced": true,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              },
              "user_agent": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "user_agent",
                "value": "langchain",
                "display_name": "User Agent",
                "advanced": true,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              }
            },
            "description": "Generate embeddings using Cohere models.",
            "icon": "Cohere",
            "base_classes": [
              "Embeddings"
            ],
            "display_name": "Cohere Embeddings",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Embeddings"
                ],
                "selected": "Embeddings",
                "name": "embeddings",
                "display_name": "Embeddings",
                "method": "build_embeddings",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "cohere_api_key",
              "model",
              "truncate",
              "max_retries",
              "user_agent",
              "request_timeout"
            ],
            "beta": false,
            "edited": false,
            "lf_version": "1.0.17"
          },
          "id": "CohereEmbeddings-jtVYO"
        },
        "selected": false,
        "width": 384,
        "height": 296,
        "dragging": false,
        "positionAbsolute": {
          "x": -2675.863209480058,
          "y": 1305.928353938188
        }
      },
      {
        "id": "ChatInput-zpbQQ",
        "type": "genericNode",
        "position": {
          "x": -2326.8705336134044,
          "y": 625.2968705752525
        },
        "data": {
          "type": "ChatInput",
          "node": {
            "template": {
              "_type": "Component",
              "files": {
                "trace_as_metadata": true,
                "file_path": "",
                "fileTypes": [
                  "txt",
                  "md",
                  "mdx",
                  "csv",
                  "json",
                  "yaml",
                  "yml",
                  "xml",
                  "html",
                  "htm",
                  "pdf",
                  "docx",
                  "py",
                  "sh",
                  "sql",
                  "js",
                  "ts",
                  "tsx",
                  "jpg",
                  "jpeg",
                  "png",
                  "bmp",
                  "image"
                ],
                "list": true,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "files",
                "value": "",
                "display_name": "Files",
                "advanced": true,
                "dynamic": false,
                "info": "Files to be sent with the message.",
                "title_case": false,
                "type": "file",
                "_input_type": "FileInput"
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio.base.data.utils import IMG_FILE_TYPES, TEXT_FILE_TYPES\nfrom axiestudio.base.io.chat import ChatComponent\nfrom axiestudio.inputs import BoolInput\nfrom axiestudio.io import DropdownInput, FileInput, MessageTextInput, MultilineInput, Output\nfrom axiestudio.memory import store_message\nfrom axiestudio.schema.message import Message\nfrom axiestudio.utils.constants import MESSAGE_SENDER_AI, MESSAGE_SENDER_USER, MESSAGE_SENDER_NAME_USER\n\n\nclass ChatInput(ChatComponent):\n    display_name = \"Chat Input\"\n    description = \"Get chat inputs from the Playground.\"\n    icon = \"ChatInput\"\n    name = \"ChatInput\"\n\n    inputs = [\n        MultilineInput(\n            name=\"input_value\",\n            display_name=\"Text\",\n            value=\"\",\n            info=\"Message to be passed as input.\",\n        ),\n        BoolInput(\n            name=\"should_store_message\",\n            display_name=\"Store Messages\",\n            info=\"Store the message in the history.\",\n            value=True,\n            advanced=True,\n        ),\n        DropdownInput(\n            name=\"sender\",\n            display_name=\"Sender Type\",\n            options=[MESSAGE_SENDER_AI, MESSAGE_SENDER_USER],\n            value=MESSAGE_SENDER_USER,\n            info=\"Type of sender.\",\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\"sender_name\",\n            display_name=\"Sender Name\",\n            info=\"Name of the sender.\",\n            value=MESSAGE_SENDER_NAME_USER,\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\"session_id\",\n            display_name=\"Session ID\",\n            info=\"The session ID of the chat. If empty, the current session ID parameter will be used.\",\n            advanced=True,\n        ),\n        FileInput(\n            name=\"files\",\n            display_name=\"Files\",\n            file_types=TEXT_FILE_TYPES + IMG_FILE_TYPES,\n            info=\"Files to be sent with the message.\",\n            advanced=True,\n            is_list=True,\n        ),\n    ]\n    outputs = [\n        Output(display_name=\"Message\", name=\"message\", method=\"message_response\"),\n    ]\n\n    def message_response(self) -> Message:\n        message = Message(\n            text=self.input_value,\n            sender=self.sender,\n            sender_name=self.sender_name,\n            session_id=self.session_id,\n            files=self.files,\n        )\n\n        if (\n            self.session_id\n            and isinstance(message, Message)\n            and isinstance(message.text, str)\n            and self.should_store_message\n        ):\n            store_message(\n                message,\n                flow_id=self.graph.flow_id,\n            )\n            self.message.value = message\n\n        self.status = message\n        return message\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "input_value": {
                "trace_as_input": true,
                "multiline": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "input_value",
                "value": "what is CFCS2R",
                "display_name": "Text",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Message to be passed as input.",
                "title_case": false,
                "type": "str",
                "_input_type": "MultilineInput"
              },
              "sender": {
                "trace_as_metadata": true,
                "options": [
                  "Machine",
                  "User"
                ],
                "combobox": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "sender",
                "value": "User",
                "display_name": "Sender Type",
                "advanced": true,
                "dynamic": false,
                "info": "Type of sender.",
                "title_case": false,
                "type": "str",
                "_input_type": "DropdownInput"
              },
              "sender_name": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "sender_name",
                "value": "User",
                "display_name": "Sender Name",
                "advanced": true,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Name of the sender.",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              },
              "session_id": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "session_id",
                "value": "",
                "display_name": "Session ID",
                "advanced": true,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "The session ID of the chat. If empty, the current session ID parameter will be used.",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              },
              "should_store_message": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "should_store_message",
                "value": true,
                "display_name": "Store Messages",
                "advanced": true,
                "dynamic": false,
                "info": "Store the message in the history.",
                "title_case": false,
                "type": "bool",
                "_input_type": "BoolInput"
              }
            },
            "description": "Get chat inputs from the Playground.",
            "icon": "ChatInput",
            "base_classes": [
              "Message"
            ],
            "display_name": "Chat Input",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "message",
                "display_name": "Message",
                "method": "message_response",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "input_value",
              "should_store_message",
              "sender",
              "sender_name",
              "session_id",
              "files"
            ],
            "beta": false,
            "edited": false,
            "lf_version": "1.0.17"
          },
          "id": "ChatInput-zpbQQ"
        },
        "selected": false,
        "width": 384,
        "height": 296,
        "positionAbsolute": {
          "x": -2326.8705336134044,
          "y": 625.2968705752525
        },
        "dragging": false
      }
    ],
    "edges": [
      {
        "className": "",
        "data": {
          "sourceHandle": {
            "dataType": "SequentialCrewComponent",
            "id": "SequentialCrewComponent-0rViC",
            "name": "output",
            "output_types": [
              "Message"
            ]
          },
          "targetHandle": {
            "fieldName": "input_value",
            "id": "ChatOutput-mTwlz",
            "inputTypes": [
              "Message"
            ],
            "type": "str"
          }
        },
        "id": "reactflow__edge-SequentialCrewComponent-0rViC{œdataTypeœ:œSequentialCrewComponentœ,œidœ:œSequentialCrewComponent-0rViCœ,œnameœ:œoutputœ,œoutput_typesœ:[œMessageœ]}-ChatOutput-mTwlz{œfieldNameœ:œinput_valueœ,œidœ:œChatOutput-mTwlzœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
        "source": "SequentialCrewComponent-0rViC",
        "sourceHandle": "{œdataTypeœ:œSequentialCrewComponentœ,œidœ:œSequentialCrewComponent-0rViCœ,œnameœ:œoutputœ,œoutput_typesœ:[œMessageœ]}",
        "target": "ChatOutput-mTwlz",
        "targetHandle": "{œfieldNameœ:œinput_valueœ,œidœ:œChatOutput-mTwlzœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}"
      },
      {
        "className": "",
        "data": {
          "sourceHandle": {
            "dataType": "Prompt",
            "id": "Prompt-3iPjH",
            "name": "prompt",
            "output_types": [
              "Message"
            ]
          },
          "targetHandle": {
            "fieldName": "task_description",
            "id": "SequentialTaskAgentComponent-M340K",
            "inputTypes": [
              "Message"
            ],
            "type": "str"
          }
        },
        "id": "reactflow__edge-Prompt-3iPjH{œdataTypeœ:œPromptœ,œidœ:œPrompt-3iPjHœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}-SequentialTaskAgentComponent-M340K{œfieldNameœ:œtask_descriptionœ,œidœ:œSequentialTaskAgentComponent-M340Kœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
        "source": "Prompt-3iPjH",
        "sourceHandle": "{œdataTypeœ:œPromptœ,œidœ:œPrompt-3iPjHœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}",
        "target": "SequentialTaskAgentComponent-M340K",
        "targetHandle": "{œfieldNameœ:œtask_descriptionœ,œidœ:œSequentialTaskAgentComponent-M340Kœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}"
      },
      {
        "data": {
          "sourceHandle": {
            "dataType": "Prompt",
            "id": "Prompt-sO6Gs",
            "name": "prompt",
            "output_types": [
              "Message"
            ]
          },
          "targetHandle": {
            "fieldName": "task_description",
            "id": "SequentialTaskAgentComponent-xs4Oo",
            "inputTypes": [
              "Message"
            ],
            "type": "str"
          }
        },
        "id": "reactflow__edge-Prompt-sO6Gs{œdataTypeœ:œPromptœ,œidœ:œPrompt-sO6Gsœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}-SequentialTaskAgentComponent-xs4Oo{œfieldNameœ:œtask_descriptionœ,œidœ:œSequentialTaskAgentComponent-xs4Ooœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
        "source": "Prompt-sO6Gs",
        "sourceHandle": "{œdataTypeœ:œPromptœ,œidœ:œPrompt-sO6Gsœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}",
        "target": "SequentialTaskAgentComponent-xs4Oo",
        "targetHandle": "{œfieldNameœ:œtask_descriptionœ,œidœ:œSequentialTaskAgentComponent-xs4Ooœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
        "className": ""
      },
      {
        "data": {
          "sourceHandle": {
            "dataType": "SequentialTaskAgentComponent",
            "id": "SequentialTaskAgentComponent-M340K",
            "name": "task_output",
            "output_types": [
              "SequentialTask"
            ]
          },
          "targetHandle": {
            "fieldName": "previous_task",
            "id": "SequentialTaskAgentComponent-xs4Oo",
            "inputTypes": [
              "SequentialTask"
            ],
            "type": "other"
          }
        },
        "id": "reactflow__edge-SequentialTaskAgentComponent-M340K{œdataTypeœ:œSequentialTaskAgentComponentœ,œidœ:œSequentialTaskAgentComponent-M340Kœ,œnameœ:œtask_outputœ,œoutput_typesœ:[œSequentialTaskœ]}-SequentialTaskAgentComponent-xs4Oo{œfieldNameœ:œprevious_taskœ,œidœ:œSequentialTaskAgentComponent-xs4Ooœ,œinputTypesœ:[œSequentialTaskœ],œtypeœ:œotherœ}",
        "source": "SequentialTaskAgentComponent-M340K",
        "sourceHandle": "{œdataTypeœ:œSequentialTaskAgentComponentœ,œidœ:œSequentialTaskAgentComponent-M340Kœ,œnameœ:œtask_outputœ,œoutput_typesœ:[œSequentialTaskœ]}",
        "target": "SequentialTaskAgentComponent-xs4Oo",
        "targetHandle": "{œfieldNameœ:œprevious_taskœ,œidœ:œSequentialTaskAgentComponent-xs4Ooœ,œinputTypesœ:[œSequentialTaskœ],œtypeœ:œotherœ}",
        "className": ""
      },
      {
        "source": "CohereModel-BcREe",
        "sourceHandle": "{œdataTypeœ:œCohereModelœ,œidœ:œCohereModel-BcREeœ,œnameœ:œmodel_outputœ,œoutput_typesœ:[œLanguageModelœ]}",
        "target": "SequentialTaskAgentComponent-M340K",
        "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œSequentialTaskAgentComponent-M340Kœ,œinputTypesœ:[œLanguageModelœ],œtypeœ:œotherœ}",
        "data": {
          "targetHandle": {
            "fieldName": "llm",
            "id": "SequentialTaskAgentComponent-M340K",
            "inputTypes": [
              "LanguageModel"
            ],
            "type": "other"
          },
          "sourceHandle": {
            "dataType": "CohereModel",
            "id": "CohereModel-BcREe",
            "name": "model_output",
            "output_types": [
              "LanguageModel"
            ]
          }
        },
        "id": "reactflow__edge-CohereModel-BcREe{œdataTypeœ:œCohereModelœ,œidœ:œCohereModel-BcREeœ,œnameœ:œmodel_outputœ,œoutput_typesœ:[œLanguageModelœ]}-SequentialTaskAgentComponent-M340K{œfieldNameœ:œllmœ,œidœ:œSequentialTaskAgentComponent-M340Kœ,œinputTypesœ:[œLanguageModelœ],œtypeœ:œotherœ}",
        "className": ""
      },
      {
        "source": "CohereModel-BcREe",
        "sourceHandle": "{œdataTypeœ:œCohereModelœ,œidœ:œCohereModel-BcREeœ,œnameœ:œmodel_outputœ,œoutput_typesœ:[œLanguageModelœ]}",
        "target": "SequentialTaskAgentComponent-xs4Oo",
        "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œSequentialTaskAgentComponent-xs4Ooœ,œinputTypesœ:[œLanguageModelœ],œtypeœ:œotherœ}",
        "data": {
          "targetHandle": {
            "fieldName": "llm",
            "id": "SequentialTaskAgentComponent-xs4Oo",
            "inputTypes": [
              "LanguageModel"
            ],
            "type": "other"
          },
          "sourceHandle": {
            "dataType": "CohereModel",
            "id": "CohereModel-BcREe",
            "name": "model_output",
            "output_types": [
              "LanguageModel"
            ]
          }
        },
        "id": "reactflow__edge-CohereModel-BcREe{œdataTypeœ:œCohereModelœ,œidœ:œCohereModel-BcREeœ,œnameœ:œmodel_outputœ,œoutput_typesœ:[œLanguageModelœ]}-SequentialTaskAgentComponent-xs4Oo{œfieldNameœ:œllmœ,œidœ:œSequentialTaskAgentComponent-xs4Ooœ,œinputTypesœ:[œLanguageModelœ],œtypeœ:œotherœ}",
        "className": ""
      },
      {
        "source": "Chroma-D1OmN",
        "sourceHandle": "{œdataTypeœ:œChromaœ,œidœ:œChroma-D1OmNœ,œnameœ:œsearch_resultsœ,œoutput_typesœ:[œDataœ]}",
        "target": "ParseData-qbgBL",
        "targetHandle": "{œfieldNameœ:œdataœ,œidœ:œParseData-qbgBLœ,œinputTypesœ:[œDataœ],œtypeœ:œotherœ}",
        "data": {
          "targetHandle": {
            "fieldName": "data",
            "id": "ParseData-qbgBL",
            "inputTypes": [
              "Data"
            ],
            "type": "other"
          },
          "sourceHandle": {
            "dataType": "Chroma",
            "id": "Chroma-D1OmN",
            "name": "search_results",
            "output_types": [
              "Data"
            ]
          }
        },
        "id": "reactflow__edge-Chroma-D1OmN{œdataTypeœ:œChromaœ,œidœ:œChroma-D1OmNœ,œnameœ:œsearch_resultsœ,œoutput_typesœ:[œDataœ]}-ParseData-qbgBL{œfieldNameœ:œdataœ,œidœ:œParseData-qbgBLœ,œinputTypesœ:[œDataœ],œtypeœ:œotherœ}",
        "className": ""
      },
      {
        "source": "Chroma-D1OmN",
        "sourceHandle": "{œdataTypeœ:œChromaœ,œidœ:œChroma-D1OmNœ,œnameœ:œsearch_resultsœ,œoutput_typesœ:[œDataœ]}",
        "target": "ParseData-5OvOz",
        "targetHandle": "{œfieldNameœ:œdataœ,œidœ:œParseData-5OvOzœ,œinputTypesœ:[œDataœ],œtypeœ:œotherœ}",
        "data": {
          "targetHandle": {
            "fieldName": "data",
            "id": "ParseData-5OvOz",
            "inputTypes": [
              "Data"
            ],
            "type": "other"
          },
          "sourceHandle": {
            "dataType": "Chroma",
            "id": "Chroma-D1OmN",
            "name": "search_results",
            "output_types": [
              "Data"
            ]
          }
        },
        "id": "reactflow__edge-Chroma-D1OmN{œdataTypeœ:œChromaœ,œidœ:œChroma-D1OmNœ,œnameœ:œsearch_resultsœ,œoutput_typesœ:[œDataœ]}-ParseData-5OvOz{œfieldNameœ:œdataœ,œidœ:œParseData-5OvOzœ,œinputTypesœ:[œDataœ],œtypeœ:œotherœ}",
        "className": ""
      },
      {
        "source": "CohereEmbeddings-jtVYO",
        "sourceHandle": "{œdataTypeœ:œCohereEmbeddingsœ,œidœ:œCohereEmbeddings-jtVYOœ,œnameœ:œembeddingsœ,œoutput_typesœ:[œEmbeddingsœ]}",
        "target": "Chroma-D1OmN",
        "targetHandle": "{œfieldNameœ:œembeddingœ,œidœ:œChroma-D1OmNœ,œinputTypesœ:[œEmbeddingsœ],œtypeœ:œotherœ}",
        "data": {
          "targetHandle": {
            "fieldName": "embedding",
            "id": "Chroma-D1OmN",
            "inputTypes": [
              "Embeddings"
            ],
            "type": "other"
          },
          "sourceHandle": {
            "dataType": "CohereEmbeddings",
            "id": "CohereEmbeddings-jtVYO",
            "name": "embeddings",
            "output_types": [
              "Embeddings"
            ]
          }
        },
        "id": "reactflow__edge-CohereEmbeddings-jtVYO{œdataTypeœ:œCohereEmbeddingsœ,œidœ:œCohereEmbeddings-jtVYOœ,œnameœ:œembeddingsœ,œoutput_typesœ:[œEmbeddingsœ]}-Chroma-D1OmN{œfieldNameœ:œembeddingœ,œidœ:œChroma-D1OmNœ,œinputTypesœ:[œEmbeddingsœ],œtypeœ:œotherœ}",
        "className": ""
      },
      {
        "source": "ParseData-qbgBL",
        "sourceHandle": "{œdataTypeœ:œParseDataœ,œidœ:œParseData-qbgBLœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}",
        "target": "Prompt-3iPjH",
        "targetHandle": "{œfieldNameœ:œcontextœ,œidœ:œPrompt-3iPjHœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
        "data": {
          "targetHandle": {
            "fieldName": "context",
            "id": "Prompt-3iPjH",
            "inputTypes": [
              "Message",
              "Text"
            ],
            "type": "str"
          },
          "sourceHandle": {
            "dataType": "ParseData",
            "id": "ParseData-qbgBL",
            "name": "text",
            "output_types": [
              "Message"
            ]
          }
        },
        "id": "reactflow__edge-ParseData-qbgBL{œdataTypeœ:œParseDataœ,œidœ:œParseData-qbgBLœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}-Prompt-3iPjH{œfieldNameœ:œcontextœ,œidœ:œPrompt-3iPjHœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}"
      },
      {
        "source": "ParseData-5OvOz",
        "sourceHandle": "{œdataTypeœ:œParseDataœ,œidœ:œParseData-5OvOzœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}",
        "target": "Prompt-3iPjH",
        "targetHandle": "{œfieldNameœ:œsourceœ,œidœ:œPrompt-3iPjHœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
        "data": {
          "targetHandle": {
            "fieldName": "source",
            "id": "Prompt-3iPjH",
            "inputTypes": [
              "Message",
              "Text"
            ],
            "type": "str"
          },
          "sourceHandle": {
            "dataType": "ParseData",
            "id": "ParseData-5OvOz",
            "name": "text",
            "output_types": [
              "Message"
            ]
          }
        },
        "id": "reactflow__edge-ParseData-5OvOz{œdataTypeœ:œParseDataœ,œidœ:œParseData-5OvOzœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}-Prompt-3iPjH{œfieldNameœ:œsourceœ,œidœ:œPrompt-3iPjHœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}"
      },
      {
        "source": "ParseData-5OvOz",
        "sourceHandle": "{œdataTypeœ:œParseDataœ,œidœ:œParseData-5OvOzœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}",
        "target": "Prompt-sO6Gs",
        "targetHandle": "{œfieldNameœ:œsourceœ,œidœ:œPrompt-sO6Gsœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
        "data": {
          "targetHandle": {
            "fieldName": "source",
            "id": "Prompt-sO6Gs",
            "inputTypes": [
              "Message",
              "Text"
            ],
            "type": "str"
          },
          "sourceHandle": {
            "dataType": "ParseData",
            "id": "ParseData-5OvOz",
            "name": "text",
            "output_types": [
              "Message"
            ]
          }
        },
        "id": "reactflow__edge-ParseData-5OvOz{œdataTypeœ:œParseDataœ,œidœ:œParseData-5OvOzœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}-Prompt-sO6Gs{œfieldNameœ:œsourceœ,œidœ:œPrompt-sO6Gsœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}"
      },
      {
        "source": "ChatInput-zpbQQ",
        "sourceHandle": "{œdataTypeœ:œChatInputœ,œidœ:œChatInput-zpbQQœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}",
        "target": "Prompt-3iPjH",
        "targetHandle": "{œfieldNameœ:œuser_msgœ,œidœ:œPrompt-3iPjHœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
        "data": {
          "targetHandle": {
            "fieldName": "user_msg",
            "id": "Prompt-3iPjH",
            "inputTypes": [
              "Message",
              "Text"
            ],
            "type": "str"
          },
          "sourceHandle": {
            "dataType": "ChatInput",
            "id": "ChatInput-zpbQQ",
            "name": "message",
            "output_types": [
              "Message"
            ]
          }
        },
        "id": "reactflow__edge-ChatInput-zpbQQ{œdataTypeœ:œChatInputœ,œidœ:œChatInput-zpbQQœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}-Prompt-3iPjH{œfieldNameœ:œuser_msgœ,œidœ:œPrompt-3iPjHœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}"
      },
      {
        "source": "ChatInput-zpbQQ",
        "sourceHandle": "{œdataTypeœ:œChatInputœ,œidœ:œChatInput-zpbQQœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}",
        "target": "Prompt-sO6Gs",
        "targetHandle": "{œfieldNameœ:œmessageœ,œidœ:œPrompt-sO6Gsœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
        "data": {
          "targetHandle": {
            "fieldName": "message",
            "id": "Prompt-sO6Gs",
            "inputTypes": [
              "Message",
              "Text"
            ],
            "type": "str"
          },
          "sourceHandle": {
            "dataType": "ChatInput",
            "id": "ChatInput-zpbQQ",
            "name": "message",
            "output_types": [
              "Message"
            ]
          }
        },
        "id": "reactflow__edge-ChatInput-zpbQQ{œdataTypeœ:œChatInputœ,œidœ:œChatInput-zpbQQœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}-Prompt-sO6Gs{œfieldNameœ:œmessageœ,œidœ:œPrompt-sO6Gsœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}"
      },
      {
        "source": "ChatInput-zpbQQ",
        "sourceHandle": "{œdataTypeœ:œChatInputœ,œidœ:œChatInput-zpbQQœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}",
        "target": "Chroma-D1OmN",
        "targetHandle": "{œfieldNameœ:œsearch_queryœ,œidœ:œChroma-D1OmNœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
        "data": {
          "targetHandle": {
            "fieldName": "search_query",
            "id": "Chroma-D1OmN",
            "inputTypes": [
              "Message"
            ],
            "type": "str"
          },
          "sourceHandle": {
            "dataType": "ChatInput",
            "id": "ChatInput-zpbQQ",
            "name": "message",
            "output_types": [
              "Message"
            ]
          }
        },
        "id": "reactflow__edge-ChatInput-zpbQQ{œdataTypeœ:œChatInputœ,œidœ:œChatInput-zpbQQœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}-Chroma-D1OmN{œfieldNameœ:œsearch_queryœ,œidœ:œChroma-D1OmNœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}"
      },
      {
        "source": "SequentialTaskAgentComponent-xs4Oo",
        "sourceHandle": "{œdataTypeœ:œSequentialTaskAgentComponentœ,œidœ:œSequentialTaskAgentComponent-xs4Ooœ,œnameœ:œtask_outputœ,œoutput_typesœ:[œSequentialTaskœ]}",
        "target": "SequentialCrewComponent-0rViC",
        "targetHandle": "{œfieldNameœ:œtasksœ,œidœ:œSequentialCrewComponent-0rViCœ,œinputTypesœ:[œSequentialTaskœ],œtypeœ:œotherœ}",
        "data": {
          "targetHandle": {
            "fieldName": "tasks",
            "id": "SequentialCrewComponent-0rViC",
            "inputTypes": [
              "SequentialTask"
            ],
            "type": "other"
          },
          "sourceHandle": {
            "dataType": "SequentialTaskAgentComponent",
            "id": "SequentialTaskAgentComponent-xs4Oo",
            "name": "task_output",
            "output_types": [
              "SequentialTask"
            ]
          }
        },
        "id": "reactflow__edge-SequentialTaskAgentComponent-xs4Oo{œdataTypeœ:œSequentialTaskAgentComponentœ,œidœ:œSequentialTaskAgentComponent-xs4Ooœ,œnameœ:œtask_outputœ,œoutput_typesœ:[œSequentialTaskœ]}-SequentialCrewComponent-0rViC{œfieldNameœ:œtasksœ,œidœ:œSequentialCrewComponent-0rViCœ,œinputTypesœ:[œSequentialTaskœ],œtypeœ:œotherœ}"
      }
    ],
    "viewport": {
      "x": 1152.696179099062,
      "y": 216.85946514260263,
      "zoom": 0.409518348929928
    }
  },
  "metadata": {
    "SequentialCrewComponent": {
      "count": 1
    },
    "ChatOutput": {
      "count": 1
    },
    "Prompt": {
      "count": 2
    },
    "SequentialTaskAgentComponent": {
      "count": 2
    },
    "CohereModel": {
      "count": 1
    },
    "Chroma": {
      "count": 1
    },
    "ParseData": {
      "count": 2
    },
    "CohereEmbeddings": {
      "count": 1
    },
    "ChatInput": {
      "count": 1
    },
    "total": 12
  },
  "original": {
    "id": "dc0a52e2-d9fe-4684-81a3-52ad451dc051",
    "name": "Sequential Agent(Vector rag , source retrieval)",
    "description": "This Agent runs tasks in a predefined sequence. It answer the user's questions by performing the vector search and is able to retrieve the source links along with the output message",
    "is_component": false,
    "liked_by_count": "8",
    "downloads_count": "104",
    "metadata": {
      "SequentialCrewComponent": {
        "count": 1
      },
      "ChatOutput": {
        "count": 1
      },
      "Prompt": {
        "count": 2
      },
      "SequentialTaskAgentComponent": {
        "count": 2
      },
      "CohereModel": {
        "count": 1
      },
      "Chroma": {
        "count": 1
      },
      "ParseData": {
        "count": 2
      },
      "CohereEmbeddings": {
        "count": 1
      },
      "ChatInput": {
        "count": 1
      },
      "total": 12
    },
    "last_tested_version": "1.0.17",
    "private": false,
    "data": {
      "nodes": [
        {
          "data": {
            "description": "Represents a group of agents, defining how they should collaborate and the tasks they should perform.",
            "display_name": "Sequential Crew",
            "id": "SequentialCrewComponent-0rViC",
            "node": {
              "base_classes": [
                "Message"
              ],
              "beta": false,
              "conditional_paths": [],
              "custom_fields": {},
              "description": "Represents a group of agents with tasks that are executed sequentially.",
              "display_name": "Sequential Crew",
              "documentation": "https://docs.crewai.com/how-to/LLM-Connections/",
              "edited": false,
              "field_order": [
                "verbose",
                "memory",
                "use_cache",
                "max_rpm",
                "share_crew",
                "function_calling_llm",
                "tasks"
              ],
              "frozen": false,
              "icon": "CrewAI",
              "lf_version": "1.0.17",
              "output_types": [],
              "outputs": [
                {
                  "cache": true,
                  "display_name": "Output",
                  "method": "build_output",
                  "name": "output",
                  "selected": "Message",
                  "types": [
                    "Message"
                  ],
                  "value": "__UNDEFINED__"
                }
              ],
              "pinned": false,
              "template": {
                "_type": "Component",
                "code": {
                  "advanced": true,
                  "dynamic": true,
                  "fileTypes": [],
                  "file_path": "",
                  "info": "",
                  "list": false,
                  "load_from_db": false,
                  "multiline": true,
                  "name": "code",
                  "password": false,
                  "placeholder": "",
                  "required": true,
                  "show": true,
                  "title_case": false,
                  "type": "code",
                  "value": "from crewai import Agent, Crew, Process, Task  # type: ignore\n\nfrom axiestudio.base.agents.crewai.crew import BaseCrewComponent\nfrom axiestudio.io import HandleInput\nfrom axiestudio.schema.message import Message\n\n\nclass SequentialCrewComponent(BaseCrewComponent):\n    display_name: str = \"Sequential Crew\"\n    description: str = \"Represents a group of agents with tasks that are executed sequentially.\"\n    documentation: str = \"https://docs.crewai.com/how-to/Sequential/\"\n    icon = \"CrewAI\"\n\n    inputs = BaseCrewComponent._base_inputs + [\n        HandleInput(name=\"tasks\", display_name=\"Tasks\", input_types=[\"SequentialTask\"], is_list=True),\n    ]\n\n    def get_tasks_and_agents(self) -> tuple[list[Task], list[Agent]]:\n        return self.tasks, [task.agent for task in self.tasks]\n\n    def build_crew(self) -> Message:\n        tasks, agents = self.get_tasks_and_agents()\n        crew = Crew(\n            agents=agents,\n            tasks=tasks,\n            process=Process.sequential,\n            verbose=self.verbose,\n            memory=self.memory,\n            cache=self.use_cache,\n            max_rpm=self.max_rpm,\n            share_crew=self.share_crew,\n            function_calling_llm=self.function_calling_llm,\n            step_callback=self.get_step_callback(),\n            task_callback=self.get_task_callback(),\n        )\n        return crew\n"
                },
                "function_calling_llm": {
                  "advanced": true,
                  "display_name": "Function Calling LLM",
                  "dynamic": false,
                  "info": "Turns the ReAct CrewAI agent into a function-calling agent",
                  "input_types": [
                    "LanguageModel"
                  ],
                  "list": false,
                  "name": "function_calling_llm",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_metadata": true,
                  "type": "other",
                  "value": ""
                },
                "max_rpm": {
                  "advanced": true,
                  "display_name": "Max RPM",
                  "dynamic": false,
                  "info": "",
                  "list": false,
                  "name": "max_rpm",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_metadata": true,
                  "type": "int",
                  "value": 100
                },
                "memory": {
                  "advanced": true,
                  "display_name": "Memory",
                  "dynamic": false,
                  "info": "",
                  "list": false,
                  "name": "memory",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_metadata": true,
                  "type": "bool",
                  "value": false
                },
                "share_crew": {
                  "advanced": true,
                  "display_name": "Share Crew",
                  "dynamic": false,
                  "info": "",
                  "list": false,
                  "name": "share_crew",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_metadata": true,
                  "type": "bool",
                  "value": false
                },
                "tasks": {
                  "advanced": false,
                  "display_name": "Tasks",
                  "dynamic": false,
                  "info": "",
                  "input_types": [
                    "SequentialTask"
                  ],
                  "list": true,
                  "name": "tasks",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_metadata": true,
                  "type": "other",
                  "value": ""
                },
                "use_cache": {
                  "advanced": true,
                  "display_name": "Cache",
                  "dynamic": false,
                  "info": "",
                  "list": false,
                  "name": "use_cache",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_metadata": true,
                  "type": "bool",
                  "value": true
                },
                "verbose": {
                  "advanced": true,
                  "display_name": "Verbose",
                  "dynamic": false,
                  "info": "",
                  "list": false,
                  "name": "verbose",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_metadata": true,
                  "type": "int",
                  "value": 0
                }
              }
            },
            "type": "SequentialCrewComponent"
          },
          "dragging": false,
          "height": 282,
          "id": "SequentialCrewComponent-0rViC",
          "position": {
            "x": 820.5237933887977,
            "y": 85.68255703918686
          },
          "positionAbsolute": {
            "x": 820.5237933887977,
            "y": 85.68255703918686
          },
          "selected": false,
          "type": "genericNode",
          "width": 384
        },
        {
          "data": {
            "description": "Display a chat message in the Playground.",
            "display_name": "Chat Output",
            "id": "ChatOutput-mTwlz",
            "node": {
              "base_classes": [
                "Message"
              ],
              "beta": false,
              "conditional_paths": [],
              "custom_fields": {},
              "description": "Display a chat message in the Playground.",
              "display_name": "Chat Output",
              "documentation": "",
              "edited": false,
              "field_order": [
                "input_value",
                "should_store_message",
                "sender",
                "sender_name",
                "session_id",
                "data_template"
              ],
              "frozen": false,
              "icon": "ChatOutput",
              "lf_version": "1.0.17",
              "output_types": [],
              "outputs": [
                {
                  "cache": true,
                  "display_name": "Message",
                  "method": "message_response",
                  "name": "message",
                  "selected": "Message",
                  "types": [
                    "Message"
                  ],
                  "value": "__UNDEFINED__"
                }
              ],
              "pinned": false,
              "template": {
                "_type": "Component",
                "code": {
                  "advanced": true,
                  "dynamic": true,
                  "fileTypes": [],
                  "file_path": "",
                  "info": "",
                  "list": false,
                  "load_from_db": false,
                  "multiline": true,
                  "name": "code",
                  "password": false,
                  "placeholder": "",
                  "required": true,
                  "show": true,
                  "title_case": false,
                  "type": "code",
                  "value": "from axiestudio.base.io.chat import ChatComponent\nfrom axiestudio.inputs import BoolInput\nfrom axiestudio.io import DropdownInput, MessageTextInput, Output\nfrom axiestudio.memory import store_message\nfrom axiestudio.schema.message import Message\nfrom axiestudio.utils.constants import MESSAGE_SENDER_NAME_AI, MESSAGE_SENDER_USER, MESSAGE_SENDER_AI\n\n\nclass ChatOutput(ChatComponent):\n    display_name = \"Chat Output\"\n    description = \"Display a chat message in the Playground.\"\n    icon = \"ChatOutput\"\n    name = \"ChatOutput\"\n\n    inputs = [\n        MessageTextInput(\n            name=\"input_value\",\n            display_name=\"Text\",\n            info=\"Message to be passed as output.\",\n        ),\n        BoolInput(\n            name=\"should_store_message\",\n            display_name=\"Store Messages\",\n            info=\"Store the message in the history.\",\n            value=True,\n            advanced=True,\n        ),\n        DropdownInput(\n            name=\"sender\",\n            display_name=\"Sender Type\",\n            options=[MESSAGE_SENDER_AI, MESSAGE_SENDER_USER],\n            value=MESSAGE_SENDER_AI,\n            advanced=True,\n            info=\"Type of sender.\",\n        ),\n        MessageTextInput(\n            name=\"sender_name\",\n            display_name=\"Sender Name\",\n            info=\"Name of the sender.\",\n            value=MESSAGE_SENDER_NAME_AI,\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\"session_id\",\n            display_name=\"Session ID\",\n            info=\"The session ID of the chat. If empty, the current session ID parameter will be used.\",\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\"data_template\",\n            display_name=\"Data Template\",\n            value=\"{text}\",\n            advanced=True,\n            info=\"Template to convert Data to Text. If left empty, it will be dynamically set to the Data's text key.\",\n        ),\n    ]\n    outputs = [\n        Output(display_name=\"Message\", name=\"message\", method=\"message_response\"),\n    ]\n\n    def message_response(self) -> Message:\n        message = Message(\n            text=self.input_value,\n            sender=self.sender,\n            sender_name=self.sender_name,\n            session_id=self.session_id,\n        )\n        if (\n            self.session_id\n            and isinstance(message, Message)\n            and isinstance(message.text, str)\n            and self.should_store_message\n        ):\n            store_message(\n                message,\n                flow_id=self.graph.flow_id,\n            )\n            self.message.value = message\n\n        self.status = message\n        return message\n"
                },
                "data_template": {
                  "advanced": true,
                  "display_name": "Data Template",
                  "dynamic": false,
                  "info": "Template to convert Data to Text. If left empty, it will be dynamically set to the Data's text key.",
                  "input_types": [
                    "Message"
                  ],
                  "list": false,
                  "load_from_db": false,
                  "name": "data_template",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "type": "str",
                  "value": "{text}"
                },
                "input_value": {
                  "advanced": false,
                  "display_name": "Text",
                  "dynamic": false,
                  "info": "Message to be passed as output.",
                  "input_types": [
                    "Message"
                  ],
                  "list": false,
                  "load_from_db": false,
                  "name": "input_value",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "type": "str",
                  "value": ""
                },
                "sender": {
                  "advanced": true,
                  "display_name": "Sender Type",
                  "dynamic": false,
                  "info": "Type of sender.",
                  "name": "sender",
                  "options": [
                    "Machine",
                    "User"
                  ],
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_metadata": true,
                  "type": "str",
                  "value": "Machine"
                },
                "sender_name": {
                  "advanced": true,
                  "display_name": "Sender Name",
                  "dynamic": false,
                  "info": "Name of the sender.",
                  "input_types": [
                    "Message"
                  ],
                  "list": false,
                  "load_from_db": false,
                  "name": "sender_name",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "type": "str",
                  "value": "AI"
                },
                "session_id": {
                  "advanced": true,
                  "display_name": "Session ID",
                  "dynamic": false,
                  "info": "The session ID of the chat. If empty, the current session ID parameter will be used.",
                  "input_types": [
                    "Message"
                  ],
                  "list": false,
                  "load_from_db": false,
                  "name": "session_id",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "type": "str",
                  "value": ""
                },
                "should_store_message": {
                  "advanced": true,
                  "display_name": "Store Messages",
                  "dynamic": false,
                  "info": "Store the message in the history.",
                  "list": false,
                  "name": "should_store_message",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_metadata": true,
                  "type": "bool",
                  "value": true
                }
              }
            },
            "type": "ChatOutput"
          },
          "dragging": false,
          "height": 296,
          "id": "ChatOutput-mTwlz",
          "position": {
            "x": 1396.0853935307105,
            "y": 139.5035852115936
          },
          "selected": false,
          "type": "genericNode",
          "width": 384,
          "positionAbsolute": {
            "x": 1396.0853935307105,
            "y": 139.5035852115936
          }
        },
        {
          "data": {
            "description": "Create a prompt template with dynamic variables.",
            "display_name": "Prompt",
            "id": "Prompt-3iPjH",
            "node": {
              "template": {
                "_type": "Component",
                "code": {
                  "advanced": true,
                  "dynamic": true,
                  "fileTypes": [],
                  "file_path": "",
                  "info": "",
                  "list": false,
                  "load_from_db": false,
                  "multiline": true,
                  "name": "code",
                  "password": false,
                  "placeholder": "",
                  "required": true,
                  "show": true,
                  "title_case": false,
                  "type": "code",
                  "value": "from axiestudio.base.prompts.api_utils import process_prompt_template\nfrom axiestudio.custom import Component\nfrom axiestudio.inputs.inputs import DefaultPromptField\nfrom axiestudio.io import Output, PromptInput\nfrom axiestudio.schema.message import Message\nfrom axiestudio.template.utils import update_template_values\n\n\nclass PromptComponent(Component):\n    display_name: str = \"Prompt\"\n    description: str = \"Create a prompt template with dynamic variables.\"\n    icon = \"prompts\"\n    trace_type = \"prompt\"\n    name = \"Prompt\"\n\n    inputs = [\n        PromptInput(name=\"template\", display_name=\"Template\"),\n    ]\n\n    outputs = [\n        Output(display_name=\"Prompt Message\", name=\"prompt\", method=\"build_prompt\"),\n    ]\n\n    async def build_prompt(\n        self,\n    ) -> Message:\n        prompt = await Message.from_template_and_variables(**self._attributes)\n        self.status = prompt.text\n        return prompt\n\n    def _update_template(self, frontend_node: dict):\n        prompt_template = frontend_node[\"template\"][\"template\"][\"value\"]\n        custom_fields = frontend_node[\"custom_fields\"]\n        frontend_node_template = frontend_node[\"template\"]\n        _ = process_prompt_template(\n            template=prompt_template,\n            name=\"template\",\n            custom_fields=custom_fields,\n            frontend_node_template=frontend_node_template,\n        )\n        return frontend_node\n\n    def post_code_processing(self, new_frontend_node: dict, current_frontend_node: dict):\n        \"\"\"\n        This function is called after the code validation is done.\n        \"\"\"\n        frontend_node = super().post_code_processing(new_frontend_node, current_frontend_node)\n        template = frontend_node[\"template\"][\"template\"][\"value\"]\n        # Kept it duplicated for backwards compatibility\n        _ = process_prompt_template(\n            template=template,\n            name=\"template\",\n            custom_fields=frontend_node[\"custom_fields\"],\n            frontend_node_template=frontend_node[\"template\"],\n        )\n        # Now that template is updated, we need to grab any values that were set in the current_frontend_node\n        # and update the frontend_node with those values\n        update_template_values(new_template=frontend_node, previous_template=current_frontend_node[\"template\"])\n        return frontend_node\n\n    def _get_fallback_input(self, **kwargs):\n        return DefaultPromptField(**kwargs)\n"
                },
                "template": {
                  "advanced": false,
                  "display_name": "Template",
                  "dynamic": false,
                  "info": "",
                  "list": false,
                  "load_from_db": false,
                  "name": "template",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_input": true,
                  "type": "prompt",
                  "value": "The user is a data analyst or business analyst answer the questions ask by him on the basis of the data in the context variable only and attach the source links with the output using the links in the source (check the data is taken from which link and attach that link to the output ) variable only\n\ncontext: \n{context}\n\nsource:\n{source}\n\nuser message:\n{user_msg}\n\n\n"
                },
                "context": {
                  "field_type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "context",
                  "display_name": "context",
                  "advanced": false,
                  "input_types": [
                    "Message",
                    "Text"
                  ],
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "type": "str"
                },
                "source": {
                  "field_type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "source",
                  "display_name": "source",
                  "advanced": false,
                  "input_types": [
                    "Message",
                    "Text"
                  ],
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "type": "str"
                },
                "user_msg": {
                  "field_type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "user_msg",
                  "display_name": "user_msg",
                  "advanced": false,
                  "input_types": [
                    "Message",
                    "Text"
                  ],
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "type": "str"
                }
              },
              "description": "Create a prompt template with dynamic variables.",
              "icon": "prompts",
              "is_input": null,
              "is_output": null,
              "is_composition": null,
              "base_classes": [
                "Message"
              ],
              "name": "",
              "display_name": "Prompt",
              "documentation": "",
              "custom_fields": {
                "template": [
                  "context",
                  "source",
                  "user_msg"
                ]
              },
              "output_types": [],
              "full_path": null,
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "prompt",
                  "hidden": null,
                  "display_name": "Prompt Message",
                  "method": "build_prompt",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "template"
              ],
              "beta": false,
              "error": null,
              "edited": false,
              "lf_version": "1.0.17"
            },
            "type": "Prompt"
          },
          "dragging": false,
          "height": 582,
          "id": "Prompt-3iPjH",
          "position": {
            "x": -1137.319170578746,
            "y": 747.7078391713424
          },
          "positionAbsolute": {
            "x": -1137.319170578746,
            "y": 747.7078391713424
          },
          "selected": true,
          "type": "genericNode",
          "width": 384
        },
        {
          "data": {
            "description": "Create a prompt template with dynamic variables.",
            "display_name": "Prompt",
            "id": "Prompt-sO6Gs",
            "node": {
              "template": {
                "_type": "Component",
                "code": {
                  "advanced": true,
                  "dynamic": true,
                  "fileTypes": [],
                  "file_path": "",
                  "info": "",
                  "list": false,
                  "load_from_db": false,
                  "multiline": true,
                  "name": "code",
                  "password": false,
                  "placeholder": "",
                  "required": true,
                  "show": true,
                  "title_case": false,
                  "type": "code",
                  "value": "from axiestudio.base.prompts.api_utils import process_prompt_template\nfrom axiestudio.custom import Component\nfrom axiestudio.inputs.inputs import DefaultPromptField\nfrom axiestudio.io import Output, PromptInput\nfrom axiestudio.schema.message import Message\nfrom axiestudio.template.utils import update_template_values\n\n\nclass PromptComponent(Component):\n    display_name: str = \"Prompt\"\n    description: str = \"Create a prompt template with dynamic variables.\"\n    icon = \"prompts\"\n    trace_type = \"prompt\"\n    name = \"Prompt\"\n\n    inputs = [\n        PromptInput(name=\"template\", display_name=\"Template\"),\n    ]\n\n    outputs = [\n        Output(display_name=\"Prompt Message\", name=\"prompt\", method=\"build_prompt\"),\n    ]\n\n    async def build_prompt(\n        self,\n    ) -> Message:\n        prompt = await Message.from_template_and_variables(**self._attributes)\n        self.status = prompt.text\n        return prompt\n\n    def _update_template(self, frontend_node: dict):\n        prompt_template = frontend_node[\"template\"][\"template\"][\"value\"]\n        custom_fields = frontend_node[\"custom_fields\"]\n        frontend_node_template = frontend_node[\"template\"]\n        _ = process_prompt_template(\n            template=prompt_template,\n            name=\"template\",\n            custom_fields=custom_fields,\n            frontend_node_template=frontend_node_template,\n        )\n        return frontend_node\n\n    def post_code_processing(self, new_frontend_node: dict, current_frontend_node: dict):\n        \"\"\"\n        This function is called after the code validation is done.\n        \"\"\"\n        frontend_node = super().post_code_processing(new_frontend_node, current_frontend_node)\n        template = frontend_node[\"template\"][\"template\"][\"value\"]\n        # Kept it duplicated for backwards compatibility\n        _ = process_prompt_template(\n            template=template,\n            name=\"template\",\n            custom_fields=frontend_node[\"custom_fields\"],\n            frontend_node_template=frontend_node[\"template\"],\n        )\n        # Now that template is updated, we need to grab any values that were set in the current_frontend_node\n        # and update the frontend_node with those values\n        update_template_values(new_template=frontend_node, previous_template=current_frontend_node[\"template\"])\n        return frontend_node\n\n    def _get_fallback_input(self, **kwargs):\n        return DefaultPromptField(**kwargs)\n"
                },
                "template": {
                  "advanced": false,
                  "display_name": "Template",
                  "dynamic": false,
                  "info": "",
                  "list": false,
                  "load_from_db": false,
                  "name": "template",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_input": true,
                  "type": "prompt",
                  "value": "Revise this document check the data is taken from which link in the source variables and attach that link to the output\n\nsource:\n{source}\n\nuser_message:\n{message}\n"
                },
                "source": {
                  "field_type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "source",
                  "display_name": "source",
                  "advanced": false,
                  "input_types": [
                    "Message",
                    "Text"
                  ],
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "type": "str"
                },
                "message": {
                  "field_type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "message",
                  "display_name": "message",
                  "advanced": false,
                  "input_types": [
                    "Message",
                    "Text"
                  ],
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "type": "str"
                }
              },
              "description": "Create a prompt template with dynamic variables.",
              "icon": "prompts",
              "is_input": null,
              "is_output": null,
              "is_composition": null,
              "base_classes": [
                "Message"
              ],
              "name": "",
              "display_name": "Prompt",
              "documentation": "",
              "custom_fields": {
                "template": [
                  "source",
                  "message"
                ]
              },
              "output_types": [],
              "full_path": null,
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "prompt",
                  "hidden": null,
                  "display_name": "Prompt Message",
                  "method": "build_prompt",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "template"
              ],
              "beta": false,
              "error": null,
              "edited": false,
              "lf_version": "1.0.17"
            },
            "type": "Prompt"
          },
          "dragging": false,
          "height": 495,
          "id": "Prompt-sO6Gs",
          "position": {
            "x": -369.56336473301,
            "y": 790.2887357303061
          },
          "positionAbsolute": {
            "x": -369.56336473301,
            "y": 790.2887357303061
          },
          "selected": false,
          "type": "genericNode",
          "width": 384
        },
        {
          "data": {
            "id": "SequentialTaskAgentComponent-M340K",
            "node": {
              "base_classes": [
                "SequentialTask"
              ],
              "beta": false,
              "conditional_paths": [],
              "custom_fields": {},
              "description": "Creates a CrewAI Task and its associated Agent.",
              "display_name": "Sequential Task Agent",
              "documentation": "https://docs.crewai.com/how-to/LLM-Connections/",
              "edited": false,
              "field_order": [
                "role",
                "goal",
                "backstory",
                "tools",
                "llm",
                "memory",
                "verbose",
                "allow_delegation",
                "allow_code_execution",
                "agent_kwargs",
                "task_description",
                "expected_output",
                "async_execution",
                "previous_task"
              ],
              "frozen": false,
              "icon": "CrewAI",
              "lf_version": "1.0.17",
              "output_types": [],
              "outputs": [
                {
                  "cache": true,
                  "display_name": "Sequential Task",
                  "method": "build_agent_and_task",
                  "name": "task_output",
                  "selected": "SequentialTask",
                  "types": [
                    "SequentialTask"
                  ],
                  "value": "__UNDEFINED__"
                }
              ],
              "pinned": false,
              "template": {
                "_type": "Component",
                "agent_kwargs": {
                  "_input_type": "DictInput",
                  "advanced": true,
                  "display_name": "Agent kwargs",
                  "dynamic": false,
                  "info": "Additional kwargs for the agent.",
                  "list": true,
                  "name": "agent_kwargs",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_input": true,
                  "type": "dict",
                  "value": {}
                },
                "allow_code_execution": {
                  "_input_type": "BoolInput",
                  "advanced": true,
                  "display_name": "Allow Code Execution",
                  "dynamic": false,
                  "info": "Whether the agent is allowed to execute code.",
                  "list": false,
                  "name": "allow_code_execution",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_metadata": true,
                  "type": "bool",
                  "value": false
                },
                "allow_delegation": {
                  "_input_type": "BoolInput",
                  "advanced": true,
                  "display_name": "Allow Delegation",
                  "dynamic": false,
                  "info": "Whether the agent is allowed to delegate tasks to other agents.",
                  "list": false,
                  "name": "allow_delegation",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_metadata": true,
                  "type": "bool",
                  "value": false
                },
                "async_execution": {
                  "_input_type": "BoolInput",
                  "advanced": true,
                  "display_name": "Async Execution",
                  "dynamic": false,
                  "info": "Boolean flag indicating asynchronous task execution.",
                  "list": false,
                  "name": "async_execution",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_metadata": true,
                  "type": "bool",
                  "value": false
                },
                "backstory": {
                  "_input_type": "MultilineInput",
                  "advanced": false,
                  "display_name": "Backstory",
                  "dynamic": false,
                  "info": "The backstory of the agent.",
                  "input_types": [
                    "Message"
                  ],
                  "list": false,
                  "load_from_db": false,
                  "multiline": true,
                  "name": "backstory",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "type": "str",
                  "value": "You are professional researcher who creates the answer for user's(business analyst) queries "
                },
                "code": {
                  "advanced": true,
                  "dynamic": true,
                  "fileTypes": [],
                  "file_path": "",
                  "info": "",
                  "list": false,
                  "load_from_db": false,
                  "multiline": true,
                  "name": "code",
                  "password": false,
                  "placeholder": "",
                  "required": true,
                  "show": true,
                  "title_case": false,
                  "type": "code",
                  "value": "from crewai import Agent, Task\n\nfrom axiestudio.base.agents.crewai.tasks import SequentialTask\nfrom axiestudio.custom import Component\nfrom axiestudio.io import BoolInput, DictInput, HandleInput, MultilineInput, Output\n\n\nclass SequentialTaskAgentComponent(Component):\n    display_name = \"Sequential Task Agent\"\n    description = \"Creates a CrewAI Task and its associated Agent.\"\n    documentation = \"https://docs.crewai.com/how-to/LLM-Connections/\"\n    icon = \"CrewAI\"\n\n    inputs = [\n        # Agent inputs\n        MultilineInput(name=\"role\", display_name=\"Role\", info=\"The role of the agent.\"),\n        MultilineInput(name=\"goal\", display_name=\"Goal\", info=\"The objective of the agent.\"),\n        MultilineInput(\n            name=\"backstory\",\n            display_name=\"Backstory\",\n            info=\"The backstory of the agent.\",\n        ),\n        HandleInput(\n            name=\"tools\",\n            display_name=\"Tools\",\n            input_types=[\"Tool\"],\n            is_list=True,\n            info=\"Tools at agent's disposal\",\n            value=[],\n        ),\n        HandleInput(\n            name=\"llm\",\n            display_name=\"Language Model\",\n            info=\"Language model that will run the agent.\",\n            input_types=[\"LanguageModel\"],\n        ),\n        BoolInput(\n            name=\"memory\",\n            display_name=\"Memory\",\n            info=\"Whether the agent should have memory or not\",\n            advanced=True,\n            value=True,\n        ),\n        BoolInput(\n            name=\"verbose\",\n            display_name=\"Verbose\",\n            advanced=True,\n            value=True,\n        ),\n        BoolInput(\n            name=\"allow_delegation\",\n            display_name=\"Allow Delegation\",\n            info=\"Whether the agent is allowed to delegate tasks to other agents.\",\n            value=False,\n            advanced=True,\n        ),\n        BoolInput(\n            name=\"allow_code_execution\",\n            display_name=\"Allow Code Execution\",\n            info=\"Whether the agent is allowed to execute code.\",\n            value=False,\n            advanced=True,\n        ),\n        DictInput(\n            name=\"agent_kwargs\",\n            display_name=\"Agent kwargs\",\n            info=\"Additional kwargs for the agent.\",\n            is_list=True,\n            advanced=True,\n        ),\n        # Task inputs\n        MultilineInput(\n            name=\"task_description\",\n            display_name=\"Task Description\",\n            info=\"Descriptive text detailing task's purpose and execution.\",\n        ),\n        MultilineInput(\n            name=\"expected_output\",\n            display_name=\"Expected Task Output\",\n            info=\"Clear definition of expected task outcome.\",\n        ),\n        BoolInput(\n            name=\"async_execution\",\n            display_name=\"Async Execution\",\n            value=False,\n            advanced=True,\n            info=\"Boolean flag indicating asynchronous task execution.\",\n        ),\n        # Chaining input\n        HandleInput(\n            name=\"previous_task\",\n            display_name=\"Previous Task\",\n            input_types=[\"SequentialTask\"],\n            info=\"The previous task in the sequence (for chaining).\",\n            required=False,\n        ),\n    ]\n\n    outputs = [\n        Output(\n            display_name=\"Sequential Task\",\n            name=\"task_output\",\n            method=\"build_agent_and_task\",\n        ),\n    ]\n\n    def build_agent_and_task(self) -> list[SequentialTask]:\n        # Build the agent\n        agent_kwargs = self.agent_kwargs or {}\n        agent = Agent(\n            role=self.role,\n            goal=self.goal,\n            backstory=self.backstory,\n            llm=self.llm,\n            verbose=self.verbose,\n            memory=self.memory,\n            tools=self.tools if self.tools else [],\n            allow_delegation=self.allow_delegation,\n            allow_code_execution=self.allow_code_execution,\n            **agent_kwargs,\n        )\n\n        # Build the task\n        task = Task(\n            description=self.task_description,\n            expected_output=self.expected_output,\n            agent=agent,\n            async_execution=self.async_execution,\n        )\n\n        # If there's a previous task, create a list of tasks\n        if self.previous_task:\n            if isinstance(self.previous_task, list):\n                tasks = self.previous_task + [task]\n            else:\n                tasks = [self.previous_task, task]\n        else:\n            tasks = [task]\n\n        self.status = f\"Agent: {repr(agent)}\\nTask: {repr(task)}\"\n        return tasks\n"
                },
                "expected_output": {
                  "_input_type": "MultilineInput",
                  "advanced": false,
                  "display_name": "Expected Task Output",
                  "dynamic": false,
                  "info": "Clear definition of expected task outcome.",
                  "input_types": [
                    "Message"
                  ],
                  "list": false,
                  "load_from_db": false,
                  "multiline": true,
                  "name": "expected_output",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "type": "str",
                  "value": "A text paragraph fulfilling the users question along with the source link attached to it through the data is taken "
                },
                "goal": {
                  "_input_type": "MultilineInput",
                  "advanced": false,
                  "display_name": "Goal",
                  "dynamic": false,
                  "info": "The objective of the agent.",
                  "input_types": [
                    "Message"
                  ],
                  "list": false,
                  "load_from_db": false,
                  "multiline": true,
                  "name": "goal",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "type": "str",
                  "value": "On the basis of the data provided in the task description generate the appropriate answer"
                },
                "llm": {
                  "_input_type": "HandleInput",
                  "advanced": false,
                  "display_name": "Language Model",
                  "dynamic": false,
                  "info": "Language model that will run the agent.",
                  "input_types": [
                    "LanguageModel"
                  ],
                  "list": false,
                  "name": "llm",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_metadata": true,
                  "type": "other",
                  "value": ""
                },
                "memory": {
                  "_input_type": "BoolInput",
                  "advanced": true,
                  "display_name": "Memory",
                  "dynamic": false,
                  "info": "Whether the agent should have memory or not",
                  "list": false,
                  "name": "memory",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_metadata": true,
                  "type": "bool",
                  "value": true
                },
                "previous_task": {
                  "_input_type": "HandleInput",
                  "advanced": false,
                  "display_name": "Previous Task",
                  "dynamic": false,
                  "info": "The previous task in the sequence (for chaining).",
                  "input_types": [
                    "SequentialTask"
                  ],
                  "list": false,
                  "name": "previous_task",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_metadata": true,
                  "type": "other",
                  "value": ""
                },
                "role": {
                  "_input_type": "MultilineInput",
                  "advanced": false,
                  "display_name": "Role",
                  "dynamic": false,
                  "info": "The role of the agent.",
                  "input_types": [
                    "Message"
                  ],
                  "list": false,
                  "load_from_db": false,
                  "multiline": true,
                  "name": "role",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "type": "str",
                  "value": "Researcher"
                },
                "task_description": {
                  "_input_type": "MultilineInput",
                  "advanced": false,
                  "display_name": "Task Description",
                  "dynamic": false,
                  "info": "Descriptive text detailing task's purpose and execution.",
                  "input_types": [
                    "Message"
                  ],
                  "list": false,
                  "load_from_db": false,
                  "multiline": true,
                  "name": "task_description",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "type": "str",
                  "value": ""
                },
                "tools": {
                  "_input_type": "HandleInput",
                  "advanced": false,
                  "display_name": "Tools",
                  "dynamic": false,
                  "info": "Tools at agent's disposal",
                  "input_types": [
                    "Tool"
                  ],
                  "list": true,
                  "name": "tools",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_metadata": true,
                  "type": "other",
                  "value": []
                },
                "verbose": {
                  "_input_type": "BoolInput",
                  "advanced": true,
                  "display_name": "Verbose",
                  "dynamic": false,
                  "info": "",
                  "list": false,
                  "name": "verbose",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_metadata": true,
                  "type": "bool",
                  "value": true
                }
              }
            },
            "type": "SequentialTaskAgentComponent"
          },
          "dragging": false,
          "height": 778,
          "id": "SequentialTaskAgentComponent-M340K",
          "position": {
            "x": -742.6676461208307,
            "y": -336.7987303380612
          },
          "positionAbsolute": {
            "x": -742.6676461208307,
            "y": -336.7987303380612
          },
          "selected": false,
          "type": "genericNode",
          "width": 384
        },
        {
          "data": {
            "id": "SequentialTaskAgentComponent-xs4Oo",
            "node": {
              "base_classes": [
                "SequentialTask"
              ],
              "beta": false,
              "conditional_paths": [],
              "custom_fields": {},
              "description": "Creates a CrewAI Task and its associated Agent.",
              "display_name": "Sequential Task Agent",
              "documentation": "https://docs.crewai.com/how-to/LLM-Connections/",
              "edited": false,
              "field_order": [
                "role",
                "goal",
                "backstory",
                "tools",
                "llm",
                "memory",
                "verbose",
                "allow_delegation",
                "allow_code_execution",
                "agent_kwargs",
                "task_description",
                "expected_output",
                "async_execution",
                "previous_task"
              ],
              "frozen": false,
              "icon": "CrewAI",
              "lf_version": "1.0.17",
              "output_types": [],
              "outputs": [
                {
                  "cache": true,
                  "display_name": "Sequential Task",
                  "method": "build_agent_and_task",
                  "name": "task_output",
                  "selected": "SequentialTask",
                  "types": [
                    "SequentialTask"
                  ],
                  "value": "__UNDEFINED__"
                }
              ],
              "pinned": false,
              "template": {
                "_type": "Component",
                "agent_kwargs": {
                  "_input_type": "DictInput",
                  "advanced": true,
                  "display_name": "Agent kwargs",
                  "dynamic": false,
                  "info": "Additional kwargs for the agent.",
                  "list": true,
                  "name": "agent_kwargs",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_input": true,
                  "type": "dict",
                  "value": {}
                },
                "allow_code_execution": {
                  "_input_type": "BoolInput",
                  "advanced": true,
                  "display_name": "Allow Code Execution",
                  "dynamic": false,
                  "info": "Whether the agent is allowed to execute code.",
                  "list": false,
                  "name": "allow_code_execution",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_metadata": true,
                  "type": "bool",
                  "value": false
                },
                "allow_delegation": {
                  "_input_type": "BoolInput",
                  "advanced": true,
                  "display_name": "Allow Delegation",
                  "dynamic": false,
                  "info": "Whether the agent is allowed to delegate tasks to other agents.",
                  "list": false,
                  "name": "allow_delegation",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_metadata": true,
                  "type": "bool",
                  "value": false
                },
                "async_execution": {
                  "_input_type": "BoolInput",
                  "advanced": true,
                  "display_name": "Async Execution",
                  "dynamic": false,
                  "info": "Boolean flag indicating asynchronous task execution.",
                  "list": false,
                  "name": "async_execution",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_metadata": true,
                  "type": "bool",
                  "value": false
                },
                "backstory": {
                  "_input_type": "MultilineInput",
                  "advanced": false,
                  "display_name": "Backstory",
                  "dynamic": false,
                  "info": "The backstory of the agent.",
                  "input_types": [
                    "Message"
                  ],
                  "list": false,
                  "load_from_db": false,
                  "multiline": true,
                  "name": "backstory",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "type": "str",
                  "value": "You are an editor who checks for the validity of the data by crosschecking it with the source links "
                },
                "code": {
                  "advanced": true,
                  "dynamic": true,
                  "fileTypes": [],
                  "file_path": "",
                  "info": "",
                  "list": false,
                  "load_from_db": false,
                  "multiline": true,
                  "name": "code",
                  "password": false,
                  "placeholder": "",
                  "required": true,
                  "show": true,
                  "title_case": false,
                  "type": "code",
                  "value": "from crewai import Agent, Task\n\nfrom axiestudio.base.agents.crewai.tasks import SequentialTask\nfrom axiestudio.custom import Component\nfrom axiestudio.io import BoolInput, DictInput, HandleInput, MultilineInput, Output\n\n\nclass SequentialTaskAgentComponent(Component):\n    display_name = \"Sequential Task Agent\"\n    description = \"Creates a CrewAI Task and its associated Agent.\"\n    documentation = \"https://docs.crewai.com/how-to/LLM-Connections/\"\n    icon = \"CrewAI\"\n\n    inputs = [\n        # Agent inputs\n        MultilineInput(name=\"role\", display_name=\"Role\", info=\"The role of the agent.\"),\n        MultilineInput(name=\"goal\", display_name=\"Goal\", info=\"The objective of the agent.\"),\n        MultilineInput(\n            name=\"backstory\",\n            display_name=\"Backstory\",\n            info=\"The backstory of the agent.\",\n        ),\n        HandleInput(\n            name=\"tools\",\n            display_name=\"Tools\",\n            input_types=[\"Tool\"],\n            is_list=True,\n            info=\"Tools at agent's disposal\",\n            value=[],\n        ),\n        HandleInput(\n            name=\"llm\",\n            display_name=\"Language Model\",\n            info=\"Language model that will run the agent.\",\n            input_types=[\"LanguageModel\"],\n        ),\n        BoolInput(\n            name=\"memory\",\n            display_name=\"Memory\",\n            info=\"Whether the agent should have memory or not\",\n            advanced=True,\n            value=True,\n        ),\n        BoolInput(\n            name=\"verbose\",\n            display_name=\"Verbose\",\n            advanced=True,\n            value=True,\n        ),\n        BoolInput(\n            name=\"allow_delegation\",\n            display_name=\"Allow Delegation\",\n            info=\"Whether the agent is allowed to delegate tasks to other agents.\",\n            value=False,\n            advanced=True,\n        ),\n        BoolInput(\n            name=\"allow_code_execution\",\n            display_name=\"Allow Code Execution\",\n            info=\"Whether the agent is allowed to execute code.\",\n            value=False,\n            advanced=True,\n        ),\n        DictInput(\n            name=\"agent_kwargs\",\n            display_name=\"Agent kwargs\",\n            info=\"Additional kwargs for the agent.\",\n            is_list=True,\n            advanced=True,\n        ),\n        # Task inputs\n        MultilineInput(\n            name=\"task_description\",\n            display_name=\"Task Description\",\n            info=\"Descriptive text detailing task's purpose and execution.\",\n        ),\n        MultilineInput(\n            name=\"expected_output\",\n            display_name=\"Expected Task Output\",\n            info=\"Clear definition of expected task outcome.\",\n        ),\n        BoolInput(\n            name=\"async_execution\",\n            display_name=\"Async Execution\",\n            value=False,\n            advanced=True,\n            info=\"Boolean flag indicating asynchronous task execution.\",\n        ),\n        # Chaining input\n        HandleInput(\n            name=\"previous_task\",\n            display_name=\"Previous Task\",\n            input_types=[\"SequentialTask\"],\n            info=\"The previous task in the sequence (for chaining).\",\n            required=False,\n        ),\n    ]\n\n    outputs = [\n        Output(\n            display_name=\"Sequential Task\",\n            name=\"task_output\",\n            method=\"build_agent_and_task\",\n        ),\n    ]\n\n    def build_agent_and_task(self) -> list[SequentialTask]:\n        # Build the agent\n        agent_kwargs = self.agent_kwargs or {}\n        agent = Agent(\n            role=self.role,\n            goal=self.goal,\n            backstory=self.backstory,\n            llm=self.llm,\n            verbose=self.verbose,\n            memory=self.memory,\n            tools=self.tools if self.tools else [],\n            allow_delegation=self.allow_delegation,\n            allow_code_execution=self.allow_code_execution,\n            **agent_kwargs,\n        )\n\n        # Build the task\n        task = Task(\n            description=self.task_description,\n            expected_output=self.expected_output,\n            agent=agent,\n            async_execution=self.async_execution,\n        )\n\n        # If there's a previous task, create a list of tasks\n        if self.previous_task:\n            if isinstance(self.previous_task, list):\n                tasks = self.previous_task + [task]\n            else:\n                tasks = [self.previous_task, task]\n        else:\n            tasks = [task]\n\n        self.status = f\"Agent: {repr(agent)}\\nTask: {repr(task)}\"\n        return tasks\n"
                },
                "expected_output": {
                  "_input_type": "MultilineInput",
                  "advanced": false,
                  "display_name": "Expected Task Output",
                  "dynamic": false,
                  "info": "Clear definition of expected task outcome.",
                  "input_types": [
                    "Message"
                  ],
                  "list": false,
                  "load_from_db": false,
                  "multiline": true,
                  "name": "expected_output",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "type": "str",
                  "value": "Small paragraphs answer containing the source link attached to it ."
                },
                "goal": {
                  "_input_type": "MultilineInput",
                  "advanced": false,
                  "display_name": "Goal",
                  "dynamic": false,
                  "info": "The objective of the agent.",
                  "input_types": [
                    "Message"
                  ],
                  "list": false,
                  "load_from_db": false,
                  "multiline": true,
                  "name": "goal",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "type": "str",
                  "value": "On the basis of the data provided in the task description generate the appropriate answer and don't forget to attached the source link to the output message"
                },
                "llm": {
                  "_input_type": "HandleInput",
                  "advanced": false,
                  "display_name": "Language Model",
                  "dynamic": false,
                  "info": "Language model that will run the agent.",
                  "input_types": [
                    "LanguageModel"
                  ],
                  "list": false,
                  "name": "llm",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_metadata": true,
                  "type": "other",
                  "value": ""
                },
                "memory": {
                  "_input_type": "BoolInput",
                  "advanced": true,
                  "display_name": "Memory",
                  "dynamic": false,
                  "info": "Whether the agent should have memory or not",
                  "list": false,
                  "name": "memory",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_metadata": true,
                  "type": "bool",
                  "value": true
                },
                "previous_task": {
                  "_input_type": "HandleInput",
                  "advanced": false,
                  "display_name": "Previous Task",
                  "dynamic": false,
                  "info": "The previous task in the sequence (for chaining).",
                  "input_types": [
                    "SequentialTask"
                  ],
                  "list": false,
                  "name": "previous_task",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_metadata": true,
                  "type": "other",
                  "value": ""
                },
                "role": {
                  "_input_type": "MultilineInput",
                  "advanced": false,
                  "display_name": "Role",
                  "dynamic": false,
                  "info": "The role of the agent.",
                  "input_types": [
                    "Message"
                  ],
                  "list": false,
                  "load_from_db": false,
                  "multiline": true,
                  "name": "role",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "type": "str",
                  "value": "Editor"
                },
                "task_description": {
                  "_input_type": "MultilineInput",
                  "advanced": false,
                  "display_name": "Task Description",
                  "dynamic": false,
                  "info": "Descriptive text detailing task's purpose and execution.",
                  "input_types": [
                    "Message"
                  ],
                  "list": false,
                  "load_from_db": false,
                  "multiline": true,
                  "name": "task_description",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "type": "str",
                  "value": ""
                },
                "tools": {
                  "_input_type": "HandleInput",
                  "advanced": false,
                  "display_name": "Tools",
                  "dynamic": false,
                  "info": "Tools at agent's disposal",
                  "input_types": [
                    "Tool"
                  ],
                  "list": true,
                  "name": "tools",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_metadata": true,
                  "type": "other",
                  "value": []
                },
                "verbose": {
                  "_input_type": "BoolInput",
                  "advanced": true,
                  "display_name": "Verbose",
                  "dynamic": false,
                  "info": "",
                  "list": false,
                  "name": "verbose",
                  "placeholder": "",
                  "required": false,
                  "show": true,
                  "title_case": false,
                  "trace_as_metadata": true,
                  "type": "bool",
                  "value": true
                }
              }
            },
            "type": "SequentialTaskAgentComponent"
          },
          "dragging": false,
          "height": 778,
          "id": "SequentialTaskAgentComponent-xs4Oo",
          "position": {
            "x": 62.10105154443647,
            "y": -336.82282969954827
          },
          "positionAbsolute": {
            "x": 62.10105154443647,
            "y": -336.82282969954827
          },
          "selected": false,
          "type": "genericNode",
          "width": 384
        },
        {
          "id": "CohereModel-BcREe",
          "type": "genericNode",
          "position": {
            "x": -2008.120261172667,
            "y": -391.8477196329559
          },
          "data": {
            "type": "CohereModel",
            "node": {
              "template": {
                "_type": "Component",
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from langchain_cohere import ChatCohere\nfrom pydantic.v1 import SecretStr\n\nfrom axiestudio.base.models.model import LCModelComponent\nfrom axiestudio.field_typing import LanguageModel\nfrom axiestudio.io import FloatInput, SecretStrInput\n\n\nclass CohereComponent(LCModelComponent):\n    display_name = \"Cohere\"\n    description = \"Generate text using Cohere LLMs.\"\n    documentation = \"https://python.langchain.com/docs/modules/model_io/models/llms/integrations/cohere\"\n    icon = \"Cohere\"\n    name = \"CohereModel\"\n\n    inputs = LCModelComponent._base_inputs + [\n        SecretStrInput(\n            name=\"cohere_api_key\",\n            display_name=\"Cohere API Key\",\n            info=\"The Cohere API Key to use for the Cohere model.\",\n            advanced=False,\n            value=\"COHERE_API_KEY\",\n        ),\n        FloatInput(name=\"temperature\", display_name=\"Temperature\", value=0.75),\n    ]\n\n    def build_model(self) -> LanguageModel:  # type: ignore[type-var]\n        cohere_api_key = self.cohere_api_key\n        temperature = self.temperature\n\n        if cohere_api_key:\n            api_key = SecretStr(cohere_api_key)\n        else:\n            api_key = None\n\n        output = ChatCohere(\n            temperature=temperature or 0.75,\n            cohere_api_key=api_key,\n        )\n\n        return output  # type: ignore\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "cohere_api_key": {
                  "load_from_db": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "cohere_api_key",
                  "value": "",
                  "display_name": "Cohere API Key",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "The Cohere API Key to use for the Cohere model.",
                  "title_case": false,
                  "password": true,
                  "type": "str",
                  "_input_type": "SecretStrInput"
                },
                "input_value": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "input_value",
                  "value": {
                    "text_key": "text",
                    "data": {
                      "template": "The user is a data analyst or business analyst answer the questions ask by him on the basis of the data in the context only and give the retriever documents or the links by using the retriever\n\ncontext: \n{context}\n\nretriever:\n{retriever}\n\nhistory:\n{history}\n\nuser message:\n{user_msg}\n\n",
                      "variables": {
                        "user_msg": {
                          "text_key": "text",
                          "data": {
                            "text": "give me the link from where the data is extracted",
                            "sender": "User",
                            "sender_name": "User",
                            "session_id": "8622e87d-3671-436f-9ff4-bf38a55e9c93",
                            "files": [],
                            "timestamp": "2024-09-04 19:12:03",
                            "flow_id": "8622e87d-3671-436f-9ff4-bf38a55e9c93"
                          },
                          "default_value": "",
                          "text": "give me the link from where the data is extracted",
                          "sender": "User",
                          "sender_name": "User",
                          "files": [],
                          "session_id": "8622e87d-3671-436f-9ff4-bf38a55e9c93",
                          "timestamp": "2024-09-04 19:12:03",
                          "flow_id": "8622e87d-3671-436f-9ff4-bf38a55e9c93"
                        },
                        "history": {
                          "text_key": "text",
                          "data": {
                            "text": "User: what is CFCS2R\nAI: CFCS2R stands for the Center for Cyber Security Studies & Research. It is an organization that focuses on cybersecurity education and research. The user's post mentions their internship with CFCS2R, where they led a cybersecurity awareness campaign at a local education center. The campaign aimed to educate students about various cyber threats, digital identity protection, and safe social media practices.\nUser: give me the retrieval link for the information\nAI: Here are the retrieval links for the information provided in the context:\n\n- **Project Badri and Road Map:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\n- **Bihar's Historical Significance:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\n- **Internship with CFCS2R:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\nThese links provide access to the original sources of information mentioned in the context.\nUser: give me the link from where the data is extracted",
                            "files": [],
                            "timestamp": "2024-09-04 19:12:03",
                            "flow_id": "8622e87d-3671-436f-9ff4-bf38a55e9c93"
                          },
                          "default_value": "",
                          "text": "User: what is CFCS2R\nAI: CFCS2R stands for the Center for Cyber Security Studies & Research. It is an organization that focuses on cybersecurity education and research. The user's post mentions their internship with CFCS2R, where they led a cybersecurity awareness campaign at a local education center. The campaign aimed to educate students about various cyber threats, digital identity protection, and safe social media practices.\nUser: give me the retrieval link for the information\nAI: Here are the retrieval links for the information provided in the context:\n\n- **Project Badri and Road Map:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\n- **Bihar's Historical Significance:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\n- **Internship with CFCS2R:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\nThese links provide access to the original sources of information mentioned in the context.\nUser: give me the link from where the data is extracted",
                          "files": [],
                          "session_id": "",
                          "timestamp": "2024-09-04 19:12:03",
                          "flow_id": "8622e87d-3671-436f-9ff4-bf38a55e9c93"
                        },
                        "context": {
                          "text_key": "text",
                          "data": {
                            "text": "1mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🚀 Dark Web Scraping Project 🚀\nJust set up a dark web scraping environment as a home lab project using ARM macOS, Kali Linux, and ARM Ubuntu Server. This project leverages the Tor network for anonymity and various scraping tools to collect data. It's a fantastic way to gain practical experience in safely and anonymously accessing the dark web. Rather than diving into step-by-step details, the key takeaway is the importance of understanding secure, anonymous scraping practices. If you're looking to enhance your cybersecurity skills, a home lab project like this is a great place to start! 💻🔐\nHeres the link: https://lnkd.in/ef3kPQhq\n#Cybersecurity #HomeLab #DarkWeb #TorNetwork #LearningByDoing #PracticalSkills #CybersecuritySkills #remotework #remote #workfromhome \n \n\n\n\n\n\n\n              Dark Web Scraper\n🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n\n\n🟢 Dark Web Monitoring for Blue Team Operations\n📌 Katana The Dork Scanner https://lnkd.in/dmhuKJUh\n📌 Onion Search https://lnkd.in/ddgvcbyR\n📌 Darkdump2 for Deep Web Search https://lnkd.in/d6tTDFRE\n📌��Tor Bot for Dark Web Crawling https://lnkd.in/dQQT5DTP\n\n\n🟢 List of Dark Web Search Engine\n📌 The Hidden Wiki https://lnkd.in/dQW3NYuK\n📌 Torch https://lnkd.in/dQW3NYuK\n📌 DuckDuckGo https://lnkd.in/dQW3NYuK\n📌 Archive Today https://lnkd.in/dQW3NYuK\n📌 The Intercept https://lnkd.in/dQW3NYuK\n\nFull credit goes to Rajneesh G. for creating 100 percent of content.\n\nDisclaimer: Permission granted to share this content from creator\n\n#cybersecurity #infosecurity #leadershipbyexample\n#darkweb\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n\n                    479\n              \n\n\n \n\n \n\n\n\n\n\n        \n                34 Comments\n            \n      \n \n\n\n\n\n\n      Like\nKEY ACCOUNT MANAGER. \nCEH . CST . Try Hack Me Top 3% .\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      9mo\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🎓 Day 12/100 of #100DaysOfLearning\n\nDeep Web vs Dark Web\n\nDistinguishing the deep web from the dark web is crucial. While the deep web includes content not indexed by search engines (like private emails), the dark web demands encryption for higher security.\n\nDeep Web: Password-protected sites, paywalled content, and non-indexed material comprise 96-99% of the internet, used for daily logins and sensitive transactions.\n\nDark Web: A small portion requiring anonymity through encrypted browsers and VPNs. Accessing it isn't accidental; intent is key.\n2mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n😱💥[Dark Web & Anonymity Home-Lab]💥👇 How to \"Access the Dark Web Safely\", tools to stay \"Anonymous, Dark Web Monitoring for Blue Team Operations\" and much more.\n\n👇👇👇👇👇\n.\n.🟢 System Setup\n📌 Download Tor Browser https://lnkd.in/dGswmqdj\n📌 Kali Linux https://lnkd.in/d-8E2tuw\n\n\n🟢 Accessing Dark Web Safely\n📌 Install and Setup OpenVPN https://lnkd.in/dNwwgXhk\n📌 Best Practices for Tor Browser https://lnkd.in/dr5A8Qkr\n\n\n🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n1mo\n  \n \n \n\n \n\nIt's Quiz time ,\n\nQuiz -4 \nThis hardware forensics device is used in which operation\n\nMainly this is one of the activity done by our Cyber Investigation Interns 2024\n------------------------------------------------------------\nCOMMENT BELOW THE RIGHT ANSWERS 👇\n\n#cyberrakshak #cyberrakshakinternship #cybercrime #साइबररक्षक #internship #digitalforensics #policework #cyberlaws #CRI2024 #cybersecurity #investigation\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n                    7\n              \n\n\n \n\n \n\n\n\n\n\n        \n                1 Comment\n            \n      \n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              CYBER1 Solutions - South Africa\nDark Web Scraper\n            \n\n                medium.com\n            \n\n \n\n\n\n\n\n\n\n                    1\n              \n\n\n \n\n \n\n\n\n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Rakshan Joel Alphonse\n            \n \n\n                Penetration Testing Enthusiast | Exploring Cybersecurity Challenges | Second-Year CSE Student at Sathyabama University\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      3w\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🌐 **Day 19 of 100 Days of picoCTF Challenge: Web Exploitation Mastery with cURL** 🌐\n🚀  My Final Project report : Keylogger, Password Generator, and Text Encryption Tool in Python! 🚀\nMonth 1 Week4 Final Projects Report \nAs I conclude my journey at Cyberdosti with a fruitful internship in Cybersecurity and Ethical Hacking, I'm excited to share the final project report that encapsulates months of learning, coding, and exploring the depths of cybersecurity tools. This project has been a transformative experience, and I'm eager to share the details with my network.\n🌟 Project Highlights 🌟\n🔍 Keylogger:\nPurpose: Developed for ethical and security research, this tool records key presses to monitor unauthorized access or potential security breaches.\nFeatures:\nLogs key presses efficiently and securely.\nStores data in a protected file to ensure confidentiality.\nProvides insight into keystroke patterns for analysis.\n🔐 Password Generator:\nPurpose: Aimed at enhancing password security, this tool generates strong, random passwords.\nFeatures:\nComment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Chaudhary Pawan Sohlot\n            \n \n\n                Cyber Crime Investigator & Trainer\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      1mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\nThis hardware forensics device is used in which operation \n \n\n\n\n\n \n\n\n\n              Cyber Rakshak Org.\n            \n \n\n                548 followers\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      1mo\n  \n \n \n\n \n\nIt's Quiz time ,\nI'm happy to share with you some valuable quiz for knowledge enhancement in Cyber Investigation & Digital Forensics \n\nKindly share your feedback for better insights:) \n\nJai Hind 🇮🇳 \nChaudhary Pawan Sohlot\n#cyberrakshak #cyberrakshakinternship #cybercrime #साइबररक्षक #internship #digitalforensics #policework #cyberlaws #CRI2024 #cybersecurity #investigation\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n                    15\n              \n\n\n \n\n \n\n\n\n\n\n        \n                13 Comments\n            \n      \n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Aditya Pratap\n            \n \n\n                Entrepreneur | Web/App Developer | OSINT AND RESEARCH\nProvides insight into keystroke patterns for analysis.\n🔐 Password Generator:\nPurpose: Aimed at enhancing password security, this tool generates strong, random passwords.\nFeatures:\nCustomizable parameters for password length and character types.\nEnsures the creation of secure passwords resistant to common attack methods.\nUser-friendly interface that simplifies the password creation process.\n🔒 Text Encryption Tool:\nPurpose: Implements encryption to protect sensitive textual information using the Caesar cipher.\nFeatures:\nProvides both encryption and decryption functionalities.\nAllows users to set a custom shift value for tailored encryption.\nIntegrates a graphical user interface for ease of use.\n💻 Technologies and Skills:\nProgramming Language: Python\nLibraries Used: Tkinter for GUI, Pynput for key logging, Pyfiglet for ASCII art, and Termcolor for colored text.\nSkills Developed:\nAdvanced Python programming.\nPractical understanding of encryption techniques.",
                            "files": [],
                            "timestamp": "2024-09-04 19:12:04",
                            "flow_id": "8622e87d-3671-436f-9ff4-bf38a55e9c93"
                          },
                          "default_value": "",
                          "text": "1mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🚀 Dark Web Scraping Project 🚀\nJust set up a dark web scraping environment as a home lab project using ARM macOS, Kali Linux, and ARM Ubuntu Server. This project leverages the Tor network for anonymity and various scraping tools to collect data. It's a fantastic way to gain practical experience in safely and anonymously accessing the dark web. Rather than diving into step-by-step details, the key takeaway is the importance of understanding secure, anonymous scraping practices. If you're looking to enhance your cybersecurity skills, a home lab project like this is a great place to start! 💻🔐\nHeres the link: https://lnkd.in/ef3kPQhq\n#Cybersecurity #HomeLab #DarkWeb #TorNetwork #LearningByDoing #PracticalSkills #CybersecuritySkills #remotework #remote #workfromhome \n \n\n\n\n\n\n\n              Dark Web Scraper\n🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n\n\n🟢 Dark Web Monitoring for Blue Team Operations\n📌 Katana The Dork Scanner https://lnkd.in/dmhuKJUh\n📌 Onion Search https://lnkd.in/ddgvcbyR\n📌 Darkdump2 for Deep Web Search https://lnkd.in/d6tTDFRE\n📌 Tor Bot for Dark Web Crawling https://lnkd.in/dQQT5DTP\n\n\n🟢 List of Dark Web Search Engine\n📌 The Hidden Wiki https://lnkd.in/dQW3NYuK\n📌 Torch https://lnkd.in/dQW3NYuK\n📌 DuckDuckGo https://lnkd.in/dQW3NYuK\n📌 Archive Today https://lnkd.in/dQW3NYuK\n📌 The Intercept https://lnkd.in/dQW3NYuK\n\nFull credit goes to Rajneesh G. for creating 100 percent of content.\n\nDisclaimer: Permission granted to share this content from creator\n\n#cybersecurity #infosecurity #leadershipbyexample\n#darkweb\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n\n                    479\n              \n\n\n \n\n \n\n\n\n\n\n        \n                34 Comments\n            \n      \n \n\n\n\n\n\n      Like\nKEY ACCOUNT MANAGER. \nCEH . CST . Try Hack Me Top 3% .\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      9mo\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🎓 Day 12/100 of #100DaysOfLearning\n\nDeep Web vs Dark Web\n\nDistinguishing the deep web from the dark web is crucial. While the deep web includes content not indexed by search engines (like private emails), the dark web demands encryption for higher security.\n\nDeep Web: Password-protected sites, paywalled content, and non-indexed material comprise 96-99% of the internet, used for daily logins and sensitive transactions.\n\nDark Web: A small portion requiring anonymity through encrypted browsers and VPNs. Accessing it isn't accidental; intent is key.\n2mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n😱💥[Dark Web & Anonymity Home-Lab]💥👇 How to \"Access the Dark Web Safely\", tools to stay \"Anonymous, Dark Web Monitoring for Blue Team Operations\" and much more.\n\n👇👇👇👇👇\n.\n.🟢 System Setup\n📌 Download Tor Browser https://lnkd.in/dGswmqdj\n📌 Kali Linux https://lnkd.in/d-8E2tuw\n\n\n🟢 Accessing Dark Web Safely\n📌 Install and Setup OpenVPN https://lnkd.in/dNwwgXhk\n📌 Best Practices for Tor Browser https://lnkd.in/dr5A8Qkr\n\n\n🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n1mo\n  \n \n \n\n \n\nIt's Quiz time ,\n\nQuiz -4 \nThis hardware forensics device is used in which operation\n\nMainly this is one of the activity done by our Cyber Investigation Interns 2024\n------------------------------------------------------------\nCOMMENT BELOW THE RIGHT ANSWERS 👇\n\n#cyberrakshak #cyberrakshakinternship #cybercrime #साइबररक्षक #internship #digitalforensics #policework #cyberlaws #CRI2024 #cybersecurity #investigation\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n                    7\n              \n\n\n \n\n \n\n\n\n\n\n        \n                1 Comment\n            \n      \n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              CYBER1 Solutions - South Africa\nDark Web Scraper\n            \n\n                medium.com\n            \n\n \n\n\n\n\n\n\n\n                    1\n              \n\n\n \n\n \n\n\n\n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Rakshan Joel Alphonse\n            \n \n\n                Penetration Testing Enthusiast | Exploring Cybersecurity Challenges | Second-Year CSE Student at Sathyabama University\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      3w\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🌐 **Day 19 of 100 Days of picoCTF Challenge: Web Exploitation Mastery with cURL** 🌐\n🚀  My Final Project report : Keylogger, Password Generator, and Text Encryption Tool in Python! 🚀\nMonth 1 Week4 Final Projects Report \nAs I conclude my journey at Cyberdosti with a fruitful internship in Cybersecurity and Ethical Hacking, I'm excited to share the final project report that encapsulates months of learning, coding, and exploring the depths of cybersecurity tools. This project has been a transformative experience, and I'm eager to share the details with my network.\n🌟 Project Highlights 🌟\n🔍 Keylogger:\nPurpose: Developed for ethical and security research, this tool records key presses to monitor unauthorized access or potential security breaches.\nFeatures:\nLogs key presses efficiently and securely.\nStores data in a protected file to ensure confidentiality.\nProvides insight into keystroke patterns for analysis.\n🔐 Password Generator:\nPurpose: Aimed at enhancing password security, this tool generates strong, random passwords.\nFeatures:\nComment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Chaudhary Pawan Sohlot\n            \n \n\n                Cyber Crime Investigator & Trainer\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      1mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\nThis hardware forensics device is used in which operation \n \n\n\n\n\n \n\n\n\n              Cyber Rakshak Org.\n            \n \n\n                548 followers\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      1mo\n  \n \n \n\n \n\nIt's Quiz time ,\nI'm happy to share with you some valuable quiz for knowledge enhancement in Cyber Investigation & Digital Forensics \n\nKindly share your feedback for better insights:) \n\nJai Hind 🇮🇳 \nChaudhary Pawan Sohlot\n#cyberrakshak #cyberrakshakinternship #cybercrime #साइबररक्षक #internship #digitalforensics #policework #cyberlaws #CRI2024 #cybersecurity #investigation\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n                    15\n              \n\n\n \n\n \n\n\n\n\n\n        \n                13 Comments\n            \n      \n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Aditya Pratap\n            \n \n\n                Entrepreneur | Web/App Developer | OSINT AND RESEARCH\nProvides insight into keystroke patterns for analysis.\n🔐 Password Generator:\nPurpose: Aimed at enhancing password security, this tool generates strong, random passwords.\nFeatures:\nCustomizable parameters for password length and character types.\nEnsures the creation of secure passwords resistant to common attack methods.\nUser-friendly interface that simplifies the password creation process.\n🔒 Text Encryption Tool:\nPurpose: Implements encryption to protect sensitive textual information using the Caesar cipher.\nFeatures:\nProvides both encryption and decryption functionalities.\nAllows users to set a custom shift value for tailored encryption.\nIntegrates a graphical user interface for ease of use.\n💻 Technologies and Skills:\nProgramming Language: Python\nLibraries Used: Tkinter for GUI, Pynput for key logging, Pyfiglet for ASCII art, and Termcolor for colored text.\nSkills Developed:\nAdvanced Python programming.\nPractical understanding of encryption techniques.",
                          "files": [],
                          "session_id": "",
                          "timestamp": "2024-09-04 19:12:04",
                          "flow_id": "8622e87d-3671-436f-9ff4-bf38a55e9c93"
                        },
                        "retriever": {
                          "text_key": "text",
                          "data": {
                            "text": "https://www.linkedin.com/feed/update/urn:li:activity:72110034292031078401mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🚀 Dark Web Scraping Project 🚀\nJust set up a dark web scraping environment as a home lab project using ARM macOS, Kali Linux, and ARM Ubuntu Server. This project leverages the Tor network for anonymity and various scraping tools to collect data. It's a fantastic way to gain practical experience in safely and anonymously accessing the dark web. Rather than diving into step-by-step details, the key takeaway is the importance of understanding secure, anonymous scraping practices. If you're looking to enhance your cybersecurity skills, a home lab project like this is a great place to start! 💻🔐\nHeres the link: https://lnkd.in/ef3kPQhq\n#Cybersecurity #HomeLab #DarkWeb #TorNetwork #LearningByDoing #PracticalSkills #CybersecuritySkills #remotework #remote #workfromhome \n \n\n\n\n\n\n\n              Dark Web Scraper\nhttps://www.linkedin.com/feed/update/urn:li:activity:7211003429203107840🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n\n\n🟢 Dark Web Monitoring for Blue Team Operations\n📌 Katana The Dork Scanner https://lnkd.in/dmhuKJUh\n📌 Onion Search https://lnkd.in/ddgvcbyR\n📌 Darkdump2 for Deep Web Search https://lnkd.in/d6tTDFRE\n📌 Tor Bot for Dark Web Crawling https://lnkd.in/dQQT5DTP\n\n\n🟢 List of Dark Web Search Engine\n📌 The Hidden Wiki https://lnkd.in/dQW3NYuK\n📌 Torch https://lnkd.in/dQW3NYuK\n📌 DuckDuckGo https://lnkd.in/dQW3NYuK\n📌 Archive Today https://lnkd.in/dQW3NYuK\n📌 The Intercept https://lnkd.in/dQW3NYuK\n\nFull credit goes to Rajneesh G. for creating 100 percent of content.\n\nDisclaimer: Permission granted to share this content from creator\n\n#cybersecurity #infosecurity #leadershipbyexample\n#darkweb\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n\n                    479\n              \n\n\n \n\n \n\n\n\n\n\n        \n                34 Comments\n            \n      \n \n\n\n\n\n\n      Like\nhttps://www.linkedin.com/feed/update/urn:li:activity:7211003429203107840KEY ACCOUNT MANAGER. \nCEH . CST . Try Hack Me Top 3% .\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      9mo\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🎓 Day 12/100 of #100DaysOfLearning\n\nDeep Web vs Dark Web\n\nDistinguishing the deep web from the dark web is crucial. While the deep web includes content not indexed by search engines (like private emails), the dark web demands encryption for higher security.\n\nDeep Web: Password-protected sites, paywalled content, and non-indexed material comprise 96-99% of the internet, used for daily logins and sensitive transactions.\n\nDark Web: A small portion requiring anonymity through encrypted browsers and VPNs. Accessing it isn't accidental; intent is key.",
                            "files": [],
                            "timestamp": "2024-09-04 19:12:07",
                            "flow_id": "8622e87d-3671-436f-9ff4-bf38a55e9c93"
                          },
                          "default_value": "",
                          "text": "https://www.linkedin.com/feed/update/urn:li:activity:72110034292031078401mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🚀 Dark Web Scraping Project 🚀\nJust set up a dark web scraping environment as a home lab project using ARM macOS, Kali Linux, and ARM Ubuntu Server. This project leverages the Tor network for anonymity and various scraping tools to collect data. It's a fantastic way to gain practical experience in safely and anonymously accessing the dark web. Rather than diving into step-by-step details, the key takeaway is the importance of understanding secure, anonymous scraping practices. If you're looking to enhance your cybersecurity skills, a home lab project like this is a great place to start! 💻🔐\nHeres the link: https://lnkd.in/ef3kPQhq\n#Cybersecurity #HomeLab #DarkWeb #TorNetwork #LearningByDoing #PracticalSkills #CybersecuritySkills #remotework #remote #workfromhome \n \n\n\n\n\n\n\n              Dark Web Scraper\nhttps://www.linkedin.com/feed/update/urn:li:activity:7211003429203107840🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n\n\n🟢 Dark Web Monitoring for Blue Team Operations\n📌 Katana The Dork Scanner https://lnkd.in/dmhuKJUh\n📌 Onion Search https://lnkd.in/ddgvcbyR\n📌 Darkdump2 for Deep Web Search https://lnkd.in/d6tTDFRE\n📌 Tor Bot for Dark Web Crawling https://lnkd.in/dQQT5DTP\n\n\n🟢 List of Dark Web Search Engine\n📌 The Hidden Wiki https://lnkd.in/dQW3NYuK\n📌 Torch https://lnkd.in/dQW3NYuK\n📌 DuckDuckGo https://lnkd.in/dQW3NYuK\n📌 Archive Today https://lnkd.in/dQW3NYuK\n📌 The Intercept https://lnkd.in/dQW3NYuK\n\nFull credit goes to Rajneesh G. for creating 100 percent of content.\n\nDisclaimer: Permission granted to share this content from creator\n\n#cybersecurity #infosecurity #leadershipbyexample\n#darkweb\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n\n                    479\n              \n\n\n \n\n \n\n\n\n\n\n        \n                34 Comments\n            \n      \n \n\n\n\n\n\n      Like\nhttps://www.linkedin.com/feed/update/urn:li:activity:7211003429203107840KEY ACCOUNT MANAGER. \nCEH . CST . Try Hack Me Top 3% .\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      9mo\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🎓 Day 12/100 of #100DaysOfLearning\n\nDeep Web vs Dark Web\n\nDistinguishing the deep web from the dark web is crucial. While the deep web includes content not indexed by search engines (like private emails), the dark web demands encryption for higher security.\n\nDeep Web: Password-protected sites, paywalled content, and non-indexed material comprise 96-99% of the internet, used for daily logins and sensitive transactions.\n\nDark Web: A small portion requiring anonymity through encrypted browsers and VPNs. Accessing it isn't accidental; intent is key.",
                          "files": [],
                          "session_id": "",
                          "timestamp": "2024-09-04 19:12:07",
                          "flow_id": "8622e87d-3671-436f-9ff4-bf38a55e9c93"
                        }
                      },
                      "files": [],
                      "timestamp": "2024-09-04 19:12:07",
                      "text": "The user is a data analyst or business analyst answer the questions ask by him on the basis of the data in the context only and give the retriever documents or the links by using the retriever\n\ncontext: \n1mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🚀 Dark Web Scraping Project 🚀\nJust set up a dark web scraping environment as a home lab project using ARM macOS, Kali Linux, and ARM Ubuntu Server. This project leverages the Tor network for anonymity and various scraping tools to collect data. It's a fantastic way to gain practical experience in safely and anonymously accessing the dark web. Rather than diving into step-by-step details, the key takeaway is the importance of understanding secure, anonymous scraping practices. If you're looking to enhance your cybersecurity skills, a home lab project like this is a great place to start! 💻🔐\nHeres the link: https://lnkd.in/ef3kPQhq\n#Cybersecurity #HomeLab #DarkWeb #TorNetwork #LearningByDoing #PracticalSkills #CybersecuritySkills #remotework #remote #workfromhome \n \n\n\n\n\n\n\n              Dark Web Scraper\n🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n\n\n🟢 Dark Web Monitoring for Blue Team Operations\n📌 Katana The Dork Scanner https://lnkd.in/dmhuKJUh\n📌 Onion Search https://lnkd.in/ddgvcbyR\n📌 Darkdump2 for Deep Web Search https://lnkd.in/d6tTDFRE\n📌 Tor Bot for Dark Web Crawling https://lnkd.in/dQQT5DTP\n\n\n🟢 List of Dark Web Search Engine\n📌 The Hidden Wiki https://lnkd.in/dQW3NYuK\n📌 Torch https://lnkd.in/dQW3NYuK\n📌 DuckDuckGo https://lnkd.in/dQW3NYuK\n📌 Archive Today https://lnkd.in/dQW3NYuK\n📌 The Intercept https://lnkd.in/dQW3NYuK\n\nFull credit goes to Rajneesh G. for creating 100 percent of content.\n\nDisclaimer: Permission granted to share this content from creator\n\n#cybersecurity #infosecurity #leadershipbyexample\n#darkweb\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n\n                    479\n              \n\n\n \n\n \n\n\n\n\n\n        \n                34 Comments\n            \n      \n \n\n\n\n\n\n      Like\nKEY ACCOUNT MANAGER. \nCEH . CST . Try Hack Me Top 3% .\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      9mo\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🎓 Day 12/100 of #100DaysOfLearning\n\nDeep Web vs Dark Web\n\nDistinguishing the deep web from the dark web is crucial. While the deep web includes content not indexed by search engines (like private emails), the dark web demands encryption for higher security.\n\nDeep Web: Password-protected sites, paywalled content, and non-indexed material comprise 96-99% of the internet, used for daily logins and sensitive transactions.\n\nDark Web: A small portion requiring anonymity through encrypted browsers and VPNs. Accessing it isn't accidental; intent is key.\n2mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n😱💥[Dark Web & Anonymity Home-Lab]💥👇 How to \"Access the Dark Web Safely\", tools to stay \"Anonymous, Dark Web Monitoring for Blue Team Operations\" and much more.\n\n👇👇👇👇👇\n.\n.🟢 System Setup\n📌 Download Tor Browser https://lnkd.in/dGswmqdj\n📌 Kali Linux https://lnkd.in/d-8E2tuw\n\n\n🟢 Accessing Dark Web Safely\n📌 Install and Setup OpenVPN https://lnkd.in/dNwwgXhk\n📌 Best Practices for Tor Browser https://lnkd.in/dr5A8Qkr\n\n\n🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n1mo\n  \n \n \n\n \n\nIt's Quiz time ,\n\nQuiz -4 \nThis hardware forensics device is used in which operation\n\nMainly this is one of the activity done by our Cyber Investigation Interns 2024\n------------------------------------------------------------\nCOMMENT BELOW THE RIGHT ANSWERS 👇\n\n#cyberrakshak #cyberrakshakinternship #cybercrime #साइबररक्षक #internship #digitalforensics #policework #cyberlaws #CRI2024 #cybersecurity #investigation\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n                    7\n              \n\n\n \n\n \n\n\n\n\n\n        \n                1 Comment\n            \n      \n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              CYBER1 Solutions - South Africa\nDark Web Scraper\n            \n\n                medium.com\n            \n\n \n\n\n\n\n\n\n\n                    1\n              \n\n\n \n\n \n\n\n\n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Rakshan Joel Alphonse\n            \n \n\n                Penetration Testing Enthusiast | Exploring Cybersecurity Challenges | Second-Year CSE Student at Sathyabama University\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      3w\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🌐 **Day 19 of 100 Days of picoCTF Challenge: Web Exploitation Mastery with cURL** 🌐\n🚀  My Final Project report : Keylogger, Password Generator, and Text Encryption Tool in Python! 🚀\nMonth 1 Week4 Final Projects Report \nAs I conclude my journey at Cyberdosti with a fruitful internship in Cybersecurity and Ethical Hacking, I'm excited to share the final project report that encapsulates months of learning, coding, and exploring the depths of cybersecurity tools. This project has been a transformative experience, and I'm eager to share the details with my network.\n🌟 Project Highlights 🌟\n🔍 Keylogger:\nPurpose: Developed for ethical and security research, this tool records key presses to monitor unauthorized access or potential security breaches.\nFeatures:\nLogs key presses efficiently and securely.\nStores data in a protected file to ensure confidentiality.\nProvides insight into keystroke patterns for analysis.\n🔐 Password Generator:\nPurpose: Aimed at enhancing password security, this tool generates strong, random passwords.\nFeatures:\nComment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Chaudhary Pawan Sohlot\n            \n \n\n                Cyber Crime Investigator & Trainer\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      1mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\nThis hardware forensics device is used in which operation \n \n\n\n\n\n \n\n\n\n              Cyber Rakshak Org.\n            \n \n\n                548 followers\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      1mo\n  \n \n \n\n \n\nIt's Quiz time ,\nI'm happy to share with you some valuable quiz for knowledge enhancement in Cyber Investigation & Digital Forensics \n\nKindly share your feedback for better insights:) \n\nJai Hind 🇮🇳 \nChaudhary Pawan Sohlot\n#cyberrakshak #cyberrakshakinternship #cybercrime #साइबररक्षक #internship #digitalforensics #policework #cyberlaws #CRI2024 #cybersecurity #investigation\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n                    15\n              \n\n\n \n\n \n\n\n\n\n\n        \n                13 Comments\n            \n      \n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Aditya Pratap\n            \n \n\n                Entrepreneur | Web/App Developer | OSINT AND RESEARCH\nProvides insight into keystroke patterns for analysis.\n🔐 Password Generator:\nPurpose: Aimed at enhancing password security, this tool generates strong, random passwords.\nFeatures:\nCustomizable parameters for password length and character types.\nEnsures the creation of secure passwords resistant to common attack methods.\nUser-friendly interface that simplifies the password creation process.\n🔒 Text Encryption Tool:\nPurpose: Implements encryption to protect sensitive textual information using the Caesar cipher.\nFeatures:\nProvides both encryption and decryption functionalities.\nAllows users to set a custom shift value for tailored encryption.\nIntegrates a graphical user interface for ease of use.\n💻 Technologies and Skills:\nProgramming Language: Python\nLibraries Used: Tkinter for GUI, Pynput for key logging, Pyfiglet for ASCII art, and Termcolor for colored text.\nSkills Developed:\nAdvanced Python programming.\nPractical understanding of encryption techniques.\n\nretriever:\nhttps://www.linkedin.com/feed/update/urn:li:activity:72110034292031078401mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🚀 Dark Web Scraping Project 🚀\nJust set up a dark web scraping environment as a home lab project using ARM macOS, Kali Linux, and ARM Ubuntu Server. This project leverages the Tor network for anonymity and various scraping tools to collect data. It's a fantastic way to gain practical experience in safely and anonymously accessing the dark web. Rather than diving into step-by-step details, the key takeaway is the importance of understanding secure, anonymous scraping practices. If you're looking to enhance your cybersecurity skills, a home lab project like this is a great place to start! 💻🔐\nHeres the link: https://lnkd.in/ef3kPQhq\n#Cybersecurity #HomeLab #DarkWeb #TorNetwork #LearningByDoing #PracticalSkills #CybersecuritySkills #remotework #remote #workfromhome \n \n\n\n\n\n\n\n              Dark Web Scraper\nhttps://www.linkedin.com/feed/update/urn:li:activity:7211003429203107840🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n\n\n🟢 Dark Web Monitoring for Blue Team Operations\n📌 Katana The Dork Scanner https://lnkd.in/dmhuKJUh\n📌 Onion Search https://lnkd.in/ddgvcbyR\n📌 Darkdump2 for Deep Web Search https://lnkd.in/d6tTDFRE\n📌 Tor Bot for Dark Web Crawling https://lnkd.in/dQQT5DTP\n\n\n🟢 List of Dark Web Search Engine\n📌 The Hidden Wiki https://lnkd.in/dQW3NYuK\n📌 Torch https://lnkd.in/dQW3NYuK\n📌 DuckDuckGo https://lnkd.in/dQW3NYuK\n📌 Archive Today https://lnkd.in/dQW3NYuK\n📌 The Intercept https://lnkd.in/dQW3NYuK\n\nFull credit goes to Rajneesh G. for creating 100 percent of content.\n\nDisclaimer: Permission granted to share this content from creator\n\n#cybersecurity #infosecurity #leadershipbyexample\n#darkweb\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n\n                    479\n              \n\n\n \n\n \n\n\n\n\n\n        \n                34 Comments\n            \n      \n \n\n\n\n\n\n      Like\nhttps://www.linkedin.com/feed/update/urn:li:activity:7211003429203107840KEY ACCOUNT MANAGER. \nCEH . CST . Try Hack Me Top 3% .\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      9mo\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🎓 Day 12/100 of #100DaysOfLearning\n\nDeep Web vs Dark Web\n\nDistinguishing the deep web from the dark web is crucial. While the deep web includes content not indexed by search engines (like private emails), the dark web demands encryption for higher security.\n\nDeep Web: Password-protected sites, paywalled content, and non-indexed material comprise 96-99% of the internet, used for daily logins and sensitive transactions.\n\nDark Web: A small portion requiring anonymity through encrypted browsers and VPNs. Accessing it isn't accidental; intent is key.\n\nhistory:\nUser: what is CFCS2R\nAI: CFCS2R stands for the Center for Cyber Security Studies & Research. It is an organization that focuses on cybersecurity education and research. The user's post mentions their internship with CFCS2R, where they led a cybersecurity awareness campaign at a local education center. The campaign aimed to educate students about various cyber threats, digital identity protection, and safe social media practices.\nUser: give me the retrieval link for the information\nAI: Here are the retrieval links for the information provided in the context:\n\n- **Project Badri and Road Map:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\n- **Bihar's Historical Significance:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\n- **Internship with CFCS2R:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\nThese links provide access to the original sources of information mentioned in the context.\nUser: give me the link from where the data is extracted\n\nuser message:\ngive me the link from where the data is extracted\n\n",
                      "prompt": {
                        "lc": 1,
                        "type": "constructor",
                        "id": [
                          "langchain",
                          "prompts",
                          "chat",
                          "ChatPromptTemplate"
                        ],
                        "kwargs": {
                          "input_variables": [],
                          "messages": [
                            {
                              "content": "The user is a data analyst or business analyst answer the questions ask by him on the basis of the data in the context only and give the retriever documents or the links by using the retriever\n\ncontext: \n1mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🚀 Dark Web Scraping Project 🚀\nJust set up a dark web scraping environment as a home lab project using ARM macOS, Kali Linux, and ARM Ubuntu Server. This project leverages the Tor network for anonymity and various scraping tools to collect data. It's a fantastic way to gain practical experience in safely and anonymously accessing the dark web. Rather than diving into step-by-step details, the key takeaway is the importance of understanding secure, anonymous scraping practices. If you're looking to enhance your cybersecurity skills, a home lab project like this is a great place to start! 💻🔐\nHeres the link: https://lnkd.in/ef3kPQhq\n#Cybersecurity #HomeLab #DarkWeb #TorNetwork #LearningByDoing #PracticalSkills #CybersecuritySkills #remotework #remote #workfromhome \n \n\n\n\n\n\n\n              Dark Web Scraper\n🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n\n\n🟢 Dark Web Monitoring for Blue Team Operations\n📌 Katana The Dork Scanner https://lnkd.in/dmhuKJUh\n📌 Onion Search https://lnkd.in/ddgvcbyR\n📌 Darkdump2 for Deep Web Search https://lnkd.in/d6tTDFRE\n📌 Tor Bot for Dark Web Crawling https://lnkd.in/dQQT5DTP\n\n\n🟢 List of Dark Web Search Engine\n📌 The Hidden Wiki https://lnkd.in/dQW3NYuK\n📌 Torch https://lnkd.in/dQW3NYuK\n📌 DuckDuckGo https://lnkd.in/dQW3NYuK\n📌 Archive Today https://lnkd.in/dQW3NYuK\n📌 The Intercept https://lnkd.in/dQW3NYuK\n\nFull credit goes to Rajneesh G. for creating 100 percent of content.\n\nDisclaimer: Permission granted to share this content from creator\n\n#cybersecurity #infosecurity #leadershipbyexample\n#darkweb\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n\n                    479\n              \n\n\n \n\n \n\n\n\n\n\n        \n                34 Comments\n            \n      \n \n\n\n\n\n\n      Like\nKEY ACCOUNT MANAGER. \nCEH . CST . Try Hack Me Top 3% .\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      9mo\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🎓 Day 12/100 of #100DaysOfLearning\n\nDeep Web vs Dark Web\n\nDistinguishing the deep web from the dark web is crucial. While the deep web includes content not indexed by search engines (like private emails), the dark web demands encryption for higher security.\n\nDeep Web: Password-protected sites, paywalled content, and non-indexed material comprise 96-99% of the internet, used for daily logins and sensitive transactions.\n\nDark Web: A small portion requiring anonymity through encrypted browsers and VPNs. Accessing it isn't accidental; intent is key.\n2mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n😱💥[Dark Web & Anonymity Home-Lab]💥👇 How to \"Access the Dark Web Safely\", tools to stay \"Anonymous, Dark Web Monitoring for Blue Team Operations\" and much more.\n\n👇👇👇👇👇\n.\n.🟢 System Setup\n📌 Download Tor Browser https://lnkd.in/dGswmqdj\n📌 Kali Linux https://lnkd.in/d-8E2tuw\n\n\n🟢 Accessing Dark Web Safely\n📌 Install and Setup OpenVPN https://lnkd.in/dNwwgXhk\n📌 Best Practices for Tor Browser https://lnkd.in/dr5A8Qkr\n\n\n🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n1mo\n  \n \n \n\n \n\nIt's Quiz time ,\n\nQuiz -4 \nThis hardware forensics device is used in which operation\n\nMainly this is one of the activity done by our Cyber Investigation Interns 2024\n------------------------------------------------------------\nCOMMENT BELOW THE RIGHT ANSWERS 👇\n\n#cyberrakshak #cyberrakshakinternship #cybercrime #साइबररक्षक #internship #digitalforensics #policework #cyberlaws #CRI2024 #cybersecurity #investigation\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n                    7\n              \n\n\n \n\n \n\n\n\n\n\n        \n                1 Comment\n            \n      \n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              CYBER1 Solutions - South Africa\nDark Web Scraper\n            \n\n                medium.com\n            \n\n \n\n\n\n\n\n\n\n                    1\n              \n\n\n \n\n \n\n\n\n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Rakshan Joel Alphonse\n            \n \n\n                Penetration Testing Enthusiast | Exploring Cybersecurity Challenges | Second-Year CSE Student at Sathyabama University\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      3w\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🌐 **Day 19 of 100 Days of picoCTF Challenge: Web Exploitation Mastery with cURL** 🌐\n🚀  My Final Project report : Keylogger, Password Generator, and Text Encryption Tool in Python! 🚀\nMonth 1 Week4 Final Projects Report \nAs I conclude my journey at Cyberdosti with a fruitful internship in Cybersecurity and Ethical Hacking, I'm excited to share the final project report that encapsulates months of learning, coding, and exploring the depths of cybersecurity tools. This project has been a transformative experience, and I'm eager to share the details with my network.\n🌟 Project Highlights 🌟\n🔍 Keylogger:\nPurpose: Developed for ethical and security research, this tool records key presses to monitor unauthorized access or potential security breaches.\nFeatures:\nLogs key presses efficiently and securely.\nStores data in a protected file to ensure confidentiality.\nProvides insight into keystroke patterns for analysis.\n🔐 Password Generator:\nPurpose: Aimed at enhancing password security, this tool generates strong, random passwords.\nFeatures:\nComment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Chaudhary Pawan Sohlot\n            \n \n\n                Cyber Crime Investigator & Trainer\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      1mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\nThis hardware forensics device is used in which operation \n \n\n\n\n\n \n\n\n\n              Cyber Rakshak Org.\n            \n \n\n                548 followers\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      1mo\n  \n \n \n\n \n\nIt's Quiz time ,\nI'm happy to share with you some valuable quiz for knowledge enhancement in Cyber Investigation & Digital Forensics \n\nKindly share your feedback for better insights:) \n\nJai Hind 🇮🇳 \nChaudhary Pawan Sohlot\n#cyberrakshak #cyberrakshakinternship #cybercrime #साइबररक्षक #internship #digitalforensics #policework #cyberlaws #CRI2024 #cybersecurity #investigation\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n                    15\n              \n\n\n \n\n \n\n\n\n\n\n        \n                13 Comments\n            \n      \n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Aditya Pratap\n            \n \n\n                Entrepreneur | Web/App Developer | OSINT AND RESEARCH\nProvides insight into keystroke patterns for analysis.\n🔐 Password Generator:\nPurpose: Aimed at enhancing password security, this tool generates strong, random passwords.\nFeatures:\nCustomizable parameters for password length and character types.\nEnsures the creation of secure passwords resistant to common attack methods.\nUser-friendly interface that simplifies the password creation process.\n🔒 Text Encryption Tool:\nPurpose: Implements encryption to protect sensitive textual information using the Caesar cipher.\nFeatures:\nProvides both encryption and decryption functionalities.\nAllows users to set a custom shift value for tailored encryption.\nIntegrates a graphical user interface for ease of use.\n💻 Technologies and Skills:\nProgramming Language: Python\nLibraries Used: Tkinter for GUI, Pynput for key logging, Pyfiglet for ASCII art, and Termcolor for colored text.\nSkills Developed:\nAdvanced Python programming.\nPractical understanding of encryption techniques.\n\nretriever:\nhttps://www.linkedin.com/feed/update/urn:li:activity:72110034292031078401mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🚀 Dark Web Scraping Project 🚀\nJust set up a dark web scraping environment as a home lab project using ARM macOS, Kali Linux, and ARM Ubuntu Server. This project leverages the Tor network for anonymity and various scraping tools to collect data. It's a fantastic way to gain practical experience in safely and anonymously accessing the dark web. Rather than diving into step-by-step details, the key takeaway is the importance of understanding secure, anonymous scraping practices. If you're looking to enhance your cybersecurity skills, a home lab project like this is a great place to start! 💻🔐\nHeres the link: https://lnkd.in/ef3kPQhq\n#Cybersecurity #HomeLab #DarkWeb #TorNetwork #LearningByDoing #PracticalSkills #CybersecuritySkills #remotework #remote #workfromhome \n \n\n\n\n\n\n\n              Dark Web Scraper\nhttps://www.linkedin.com/feed/update/urn:li:activity:7211003429203107840🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n\n\n🟢 Dark Web Monitoring for Blue Team Operations\n📌 Katana The Dork Scanner https://lnkd.in/dmhuKJUh\n📌 Onion Search https://lnkd.in/ddgvcbyR\n📌 Darkdump2 for Deep Web Search https://lnkd.in/d6tTDFRE\n📌 Tor Bot for Dark Web Crawling https://lnkd.in/dQQT5DTP\n\n\n🟢 List of Dark Web Search Engine\n📌 The Hidden Wiki https://lnkd.in/dQW3NYuK\n📌 Torch https://lnkd.in/dQW3NYuK\n📌 DuckDuckGo https://lnkd.in/dQW3NYuK\n📌 Archive Today https://lnkd.in/dQW3NYuK\n📌 The Intercept https://lnkd.in/dQW3NYuK\n\nFull credit goes to Rajneesh G. for creating 100 percent of content.\n\nDisclaimer: Permission granted to share this content from creator\n\n#cybersecurity #infosecurity #leadershipbyexample\n#darkweb\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n\n                    479\n              \n\n\n \n\n \n\n\n\n\n\n        \n                34 Comments\n            \n      \n \n\n\n\n\n\n      Like\nhttps://www.linkedin.com/feed/update/urn:li:activity:7211003429203107840KEY ACCOUNT MANAGER. \nCEH . CST . Try Hack Me Top 3% .\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      9mo\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🎓 Day 12/100 of #100DaysOfLearning\n\nDeep Web vs Dark Web\n\nDistinguishing the deep web from the dark web is crucial. While the deep web includes content not indexed by search engines (like private emails), the dark web demands encryption for higher security.\n\nDeep Web: Password-protected sites, paywalled content, and non-indexed material comprise 96-99% of the internet, used for daily logins and sensitive transactions.\n\nDark Web: A small portion requiring anonymity through encrypted browsers and VPNs. Accessing it isn't accidental; intent is key.\n\nhistory:\nUser: what is CFCS2R\nAI: CFCS2R stands for the Center for Cyber Security Studies & Research. It is an organization that focuses on cybersecurity education and research. The user's post mentions their internship with CFCS2R, where they led a cybersecurity awareness campaign at a local education center. The campaign aimed to educate students about various cyber threats, digital identity protection, and safe social media practices.\nUser: give me the retrieval link for the information\nAI: Here are the retrieval links for the information provided in the context:\n\n- **Project Badri and Road Map:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\n- **Bihar's Historical Significance:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\n- **Internship with CFCS2R:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\nThese links provide access to the original sources of information mentioned in the context.\nUser: give me the link from where the data is extracted\n\nuser message:\ngive me the link from where the data is extracted\n\n",
                              "additional_kwargs": {},
                              "response_metadata": {},
                              "type": "human",
                              "name": null,
                              "id": null,
                              "example": false
                            }
                          ]
                        },
                        "name": "ChatPromptTemplate",
                        "graph": {
                          "nodes": [
                            {
                              "id": 0,
                              "type": "schema",
                              "data": "PromptInput"
                            },
                            {
                              "id": 1,
                              "type": "runnable",
                              "data": {
                                "id": [
                                  "langchain",
                                  "prompts",
                                  "chat",
                                  "ChatPromptTemplate"
                                ],
                                "name": "ChatPromptTemplate"
                              }
                            },
                            {
                              "id": 2,
                              "type": "schema",
                              "data": "ChatPromptTemplateOutput"
                            }
                          ],
                          "edges": [
                            {
                              "source": 0,
                              "target": 1
                            },
                            {
                              "source": 1,
                              "target": 2
                            }
                          ]
                        }
                      },
                      "messages": [
                        {
                          "content": "The user is a data analyst or business analyst answer the questions ask by him on the basis of the data in the context only and give the retriever documents or the links by using the retriever\n\ncontext: \n1mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🚀 Dark Web Scraping Project 🚀\nJust set up a dark web scraping environment as a home lab project using ARM macOS, Kali Linux, and ARM Ubuntu Server. This project leverages the Tor network for anonymity and various scraping tools to collect data. It's a fantastic way to gain practical experience in safely and anonymously accessing the dark web. Rather than diving into step-by-step details, the key takeaway is the importance of understanding secure, anonymous scraping practices. If you're looking to enhance your cybersecurity skills, a home lab project like this is a great place to start! 💻🔐\nHeres the link: https://lnkd.in/ef3kPQhq\n#Cybersecurity #HomeLab #DarkWeb #TorNetwork #LearningByDoing #PracticalSkills #CybersecuritySkills #remotework #remote #workfromhome \n \n\n\n\n\n\n\n              Dark Web Scraper\n🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n\n\n🟢 Dark Web Monitoring for Blue Team Operations\n📌 Katana The Dork Scanner https://lnkd.in/dmhuKJUh\n📌 Onion Search https://lnkd.in/ddgvcbyR\n📌 Darkdump2 for Deep Web Search https://lnkd.in/d6tTDFRE\n📌 Tor Bot for Dark Web Crawling https://lnkd.in/dQQT5DTP\n\n\n🟢 List of Dark Web Search Engine\n📌 The Hidden Wiki https://lnkd.in/dQW3NYuK\n📌 Torch https://lnkd.in/dQW3NYuK\n📌 DuckDuckGo https://lnkd.in/dQW3NYuK\n📌 Archive Today https://lnkd.in/dQW3NYuK\n📌 The Intercept https://lnkd.in/dQW3NYuK\n\nFull credit goes to Rajneesh G. for creating 100 percent of content.\n\nDisclaimer: Permission granted to share this content from creator\n\n#cybersecurity #infosecurity #leadershipbyexample\n#darkweb\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n\n                    479\n              \n\n\n \n\n \n\n\n\n\n\n        \n                34 Comments\n            \n      \n \n\n\n\n\n\n      Like\nKEY ACCOUNT MANAGER. \nCEH . CST . Try Hack Me Top 3% .\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      9mo\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🎓 Day 12/100 of #100DaysOfLearning\n\nDeep Web vs Dark Web\n\nDistinguishing the deep web from the dark web is crucial. While the deep web includes content not indexed by search engines (like private emails), the dark web demands encryption for higher security.\n\nDeep Web: Password-protected sites, paywalled content, and non-indexed material comprise 96-99% of the internet, used for daily logins and sensitive transactions.\n\nDark Web: A small portion requiring anonymity through encrypted browsers and VPNs. Accessing it isn't accidental; intent is key.\n2mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n😱💥[Dark Web & Anonymity Home-Lab]💥👇 How to \"Access the Dark Web Safely\", tools to stay \"Anonymous, Dark Web Monitoring for Blue Team Operations\" and much more.\n\n👇👇👇👇👇\n.\n.🟢 System Setup\n📌 Download Tor Browser https://lnkd.in/dGswmqdj\n📌 Kali Linux https://lnkd.in/d-8E2tuw\n\n\n🟢 Accessing Dark Web Safely\n📌 Install and Setup OpenVPN https://lnkd.in/dNwwgXhk\n📌 Best Practices for Tor Browser https://lnkd.in/dr5A8Qkr\n\n\n🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n1mo\n  \n \n \n\n \n\nIt's Quiz time ,\n\nQuiz -4 \nThis hardware forensics device is used in which operation\n\nMainly this is one of the activity done by our Cyber Investigation Interns 2024\n------------------------------------------------------------\nCOMMENT BELOW THE RIGHT ANSWERS 👇\n\n#cyberrakshak #cyberrakshakinternship #cybercrime #साइबररक्षक #internship #digitalforensics #policework #cyberlaws #CRI2024 #cybersecurity #investigation\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n                    7\n              \n\n\n \n\n \n\n\n\n\n\n        \n                1 Comment\n            \n      \n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              CYBER1 Solutions - South Africa\nDark Web Scraper\n            \n\n                medium.com\n            \n\n \n\n\n\n\n\n\n\n                    1\n              \n\n\n \n\n \n\n\n\n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Rakshan Joel Alphonse\n            \n \n\n                Penetration Testing Enthusiast | Exploring Cybersecurity Challenges | Second-Year CSE Student at Sathyabama University\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      3w\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🌐 **Day 19 of 100 Days of picoCTF Challenge: Web Exploitation Mastery with cURL** 🌐\n🚀  My Final Project report : Keylogger, Password Generator, and Text Encryption Tool in Python! 🚀\nMonth 1 Week4 Final Projects Report \nAs I conclude my journey at Cyberdosti with a fruitful internship in Cybersecurity and Ethical Hacking, I'm excited to share the final project report that encapsulates months of learning, coding, and exploring the depths of cybersecurity tools. This project has been a transformative experience, and I'm eager to share the details with my network.\n🌟 Project Highlights 🌟\n🔍 Keylogger:\nPurpose: Developed for ethical and security research, this tool records key presses to monitor unauthorized access or potential security breaches.\nFeatures:\nLogs key presses efficiently and securely.\nStores data in a protected file to ensure confidentiality.\nProvides insight into keystroke patterns for analysis.\n🔐 Password Generator:\nPurpose: Aimed at enhancing password security, this tool generates strong, random passwords.\nFeatures:\nComment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Chaudhary Pawan Sohlot\n            \n \n\n                Cyber Crime Investigator & Trainer\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      1mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\nThis hardware forensics device is used in which operation \n \n\n\n\n\n \n\n\n\n              Cyber Rakshak Org.\n            \n \n\n                548 followers\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      1mo\n  \n \n \n\n \n\nIt's Quiz time ,\nI'm happy to share with you some valuable quiz for knowledge enhancement in Cyber Investigation & Digital Forensics \n\nKindly share your feedback for better insights:) \n\nJai Hind 🇮🇳 \nChaudhary Pawan Sohlot\n#cyberrakshak #cyberrakshakinternship #cybercrime #साइबररक्षक #internship #digitalforensics #policework #cyberlaws #CRI2024 #cybersecurity #investigation\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n                    15\n              \n\n\n \n\n \n\n\n\n\n\n        \n                13 Comments\n            \n      \n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Aditya Pratap\n            \n \n\n                Entrepreneur | Web/App Developer | OSINT AND RESEARCH\nProvides insight into keystroke patterns for analysis.\n🔐 Password Generator:\nPurpose: Aimed at enhancing password security, this tool generates strong, random passwords.\nFeatures:\nCustomizable parameters for password length and character types.\nEnsures the creation of secure passwords resistant to common attack methods.\nUser-friendly interface that simplifies the password creation process.\n🔒 Text Encryption Tool:\nPurpose: Implements encryption to protect sensitive textual information using the Caesar cipher.\nFeatures:\nProvides both encryption and decryption functionalities.\nAllows users to set a custom shift value for tailored encryption.\nIntegrates a graphical user interface for ease of use.\n💻 Technologies and Skills:\nProgramming Language: Python\nLibraries Used: Tkinter for GUI, Pynput for key logging, Pyfiglet for ASCII art, and Termcolor for colored text.\nSkills Developed:\nAdvanced Python programming.\nPractical understanding of encryption techniques.\n\nretriever:\nhttps://www.linkedin.com/feed/update/urn:li:activity:72110034292031078401mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🚀 Dark Web Scraping Project 🚀\nJust set up a dark web scraping environment as a home lab project using ARM macOS, Kali Linux, and ARM Ubuntu Server. This project leverages the Tor network for anonymity and various scraping tools to collect data. It's a fantastic way to gain practical experience in safely and anonymously accessing the dark web. Rather than diving into step-by-step details, the key takeaway is the importance of understanding secure, anonymous scraping practices. If you're looking to enhance your cybersecurity skills, a home lab project like this is a great place to start! 💻🔐\nHeres the link: https://lnkd.in/ef3kPQhq\n#Cybersecurity #HomeLab #DarkWeb #TorNetwork #LearningByDoing #PracticalSkills #CybersecuritySkills #remotework #remote #workfromhome \n \n\n\n\n\n\n\n              Dark Web Scraper\nhttps://www.linkedin.com/feed/update/urn:li:activity:7211003429203107840🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n\n\n🟢 Dark Web Monitoring for Blue Team Operations\n📌 Katana The Dork Scanner https://lnkd.in/dmhuKJUh\n📌 Onion Search https://lnkd.in/ddgvcbyR\n📌 Darkdump2 for Deep Web Search https://lnkd.in/d6tTDFRE\n📌 Tor Bot for Dark Web Crawling https://lnkd.in/dQQT5DTP\n\n\n🟢 List of Dark Web Search Engine\n📌 The Hidden Wiki https://lnkd.in/dQW3NYuK\n📌 Torch https://lnkd.in/dQW3NYuK\n📌 DuckDuckGo https://lnkd.in/dQW3NYuK\n📌 Archive Today https://lnkd.in/dQW3NYuK\n📌 The Intercept https://lnkd.in/dQW3NYuK\n\nFull credit goes to Rajneesh G. for creating 100 percent of content.\n\nDisclaimer: Permission granted to share this content from creator\n\n#cybersecurity #infosecurity #leadershipbyexample\n#darkweb\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n\n                    479\n              \n\n\n \n\n \n\n\n\n\n\n        \n                34 Comments\n            \n      \n \n\n\n\n\n\n      Like\nhttps://www.linkedin.com/feed/update/urn:li:activity:7211003429203107840KEY ACCOUNT MANAGER. \nCEH . CST . Try Hack Me Top 3% .\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      9mo\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🎓 Day 12/100 of #100DaysOfLearning\n\nDeep Web vs Dark Web\n\nDistinguishing the deep web from the dark web is crucial. While the deep web includes content not indexed by search engines (like private emails), the dark web demands encryption for higher security.\n\nDeep Web: Password-protected sites, paywalled content, and non-indexed material comprise 96-99% of the internet, used for daily logins and sensitive transactions.\n\nDark Web: A small portion requiring anonymity through encrypted browsers and VPNs. Accessing it isn't accidental; intent is key.\n\nhistory:\nUser: what is CFCS2R\nAI: CFCS2R stands for the Center for Cyber Security Studies & Research. It is an organization that focuses on cybersecurity education and research. The user's post mentions their internship with CFCS2R, where they led a cybersecurity awareness campaign at a local education center. The campaign aimed to educate students about various cyber threats, digital identity protection, and safe social media practices.\nUser: give me the retrieval link for the information\nAI: Here are the retrieval links for the information provided in the context:\n\n- **Project Badri and Road Map:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\n- **Bihar's Historical Significance:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\n- **Internship with CFCS2R:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\nThese links provide access to the original sources of information mentioned in the context.\nUser: give me the link from where the data is extracted\n\nuser message:\ngive me the link from where the data is extracted\n\n",
                          "additional_kwargs": {},
                          "response_metadata": {},
                          "type": "human",
                          "name": null,
                          "id": null,
                          "example": false
                        }
                      ],
                      "flow_id": "8622e87d-3671-436f-9ff4-bf38a55e9c93"
                    },
                    "default_value": "",
                    "text": "The user is a data analyst or business analyst answer the questions ask by him on the basis of the data in the context only and give the retriever documents or the links by using the retriever\n\ncontext: \n1mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🚀 Dark Web Scraping Project 🚀\nJust set up a dark web scraping environment as a home lab project using ARM macOS, Kali Linux, and ARM Ubuntu Server. This project leverages the Tor network for anonymity and various scraping tools to collect data. It's a fantastic way to gain practical experience in safely and anonymously accessing the dark web. Rather than diving into step-by-step details, the key takeaway is the importance of understanding secure, anonymous scraping practices. If you're looking to enhance your cybersecurity skills, a home lab project like this is a great place to start! 💻🔐\nHeres the link: https://lnkd.in/ef3kPQhq\n#Cybersecurity #HomeLab #DarkWeb #TorNetwork #LearningByDoing #PracticalSkills #CybersecuritySkills #remotework #remote #workfromhome \n \n\n\n\n\n\n\n              Dark Web Scraper\n🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n\n\n🟢 Dark Web Monitoring for Blue Team Operations\n📌 Katana The Dork Scanner https://lnkd.in/dmhuKJUh\n📌 Onion Search https://lnkd.in/ddgvcbyR\n📌 Darkdump2 for Deep Web Search https://lnkd.in/d6tTDFRE\n📌 Tor Bot for Dark Web Crawling https://lnkd.in/dQQT5DTP\n\n\n🟢 List of Dark Web Search Engine\n📌 The Hidden Wiki https://lnkd.in/dQW3NYuK\n📌 Torch https://lnkd.in/dQW3NYuK\n📌 DuckDuckGo https://lnkd.in/dQW3NYuK\n📌 Archive Today https://lnkd.in/dQW3NYuK\n📌 The Intercept https://lnkd.in/dQW3NYuK\n\nFull credit goes to Rajneesh G. for creating 100 percent of content.\n\nDisclaimer: Permission granted to share this content from creator\n\n#cybersecurity #infosecurity #leadershipbyexample\n#darkweb\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n\n                    479\n              \n\n\n \n\n \n\n\n\n\n\n        \n                34 Comments\n            \n      \n \n\n\n\n\n\n      Like\nKEY ACCOUNT MANAGER. \nCEH . CST . Try Hack Me Top 3% .\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      9mo\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🎓 Day 12/100 of #100DaysOfLearning\n\nDeep Web vs Dark Web\n\nDistinguishing the deep web from the dark web is crucial. While the deep web includes content not indexed by search engines (like private emails), the dark web demands encryption for higher security.\n\nDeep Web: Password-protected sites, paywalled content, and non-indexed material comprise 96-99% of the internet, used for daily logins and sensitive transactions.\n\nDark Web: A small portion requiring anonymity through encrypted browsers and VPNs. Accessing it isn't accidental; intent is key.\n2mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n😱💥[Dark Web & Anonymity Home-Lab]💥👇 How to \"Access the Dark Web Safely\", tools to stay \"Anonymous, Dark Web Monitoring for Blue Team Operations\" and much more.\n\n👇👇👇👇👇\n.\n.🟢 System Setup\n📌 Download Tor Browser https://lnkd.in/dGswmqdj\n📌 Kali Linux https://lnkd.in/d-8E2tuw\n\n\n🟢 Accessing Dark Web Safely\n📌 Install and Setup OpenVPN https://lnkd.in/dNwwgXhk\n📌 Best Practices for Tor Browser https://lnkd.in/dr5A8Qkr\n\n\n🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n1mo\n  \n \n \n\n \n\nIt's Quiz time ,\n\nQuiz -4 \nThis hardware forensics device is used in which operation\n\nMainly this is one of the activity done by our Cyber Investigation Interns 2024\n------------------------------------------------------------\nCOMMENT BELOW THE RIGHT ANSWERS 👇\n\n#cyberrakshak #cyberrakshakinternship #cybercrime #साइबररक्षक #internship #digitalforensics #policework #cyberlaws #CRI2024 #cybersecurity #investigation\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n                    7\n              \n\n\n \n\n \n\n\n\n\n\n        \n                1 Comment\n            \n      \n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              CYBER1 Solutions - South Africa\nDark Web Scraper\n            \n\n                medium.com\n            \n\n \n\n\n\n\n\n\n\n                    1\n              \n\n\n \n\n \n\n\n\n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Rakshan Joel Alphonse\n            \n \n\n                Penetration Testing Enthusiast | Exploring Cybersecurity Challenges | Second-Year CSE Student at Sathyabama University\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      3w\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🌐 **Day 19 of 100 Days of picoCTF Challenge: Web Exploitation Mastery with cURL** 🌐\n🚀  My Final Project report : Keylogger, Password Generator, and Text Encryption Tool in Python! 🚀\nMonth 1 Week4 Final Projects Report \nAs I conclude my journey at Cyberdosti with a fruitful internship in Cybersecurity and Ethical Hacking, I'm excited to share the final project report that encapsulates months of learning, coding, and exploring the depths of cybersecurity tools. This project has been a transformative experience, and I'm eager to share the details with my network.\n🌟 Project Highlights 🌟\n🔍 Keylogger:\nPurpose: Developed for ethical and security research, this tool records key presses to monitor unauthorized access or potential security breaches.\nFeatures:\nLogs key presses efficiently and securely.\nStores data in a protected file to ensure confidentiality.\nProvides insight into keystroke patterns for analysis.\n🔐 Password Generator:\nPurpose: Aimed at enhancing password security, this tool generates strong, random passwords.\nFeatures:\nComment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Chaudhary Pawan Sohlot\n            \n \n\n                Cyber Crime Investigator & Trainer\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      1mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\nThis hardware forensics device is used in which operation \n \n\n\n\n\n \n\n\n\n              Cyber Rakshak Org.\n            \n \n\n                548 followers\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      1mo\n  \n \n \n\n \n\nIt's Quiz time ,\nI'm happy to share with you some valuable quiz for knowledge enhancement in Cyber Investigation & Digital Forensics \n\nKindly share your feedback for better insights:) \n\nJai Hind 🇮🇳 \nChaudhary Pawan Sohlot\n#cyberrakshak #cyberrakshakinternship #cybercrime #साइबररक्षक #internship #digitalforensics #policework #cyberlaws #CRI2024 #cybersecurity #investigation\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n                    15\n              \n\n\n \n\n \n\n\n\n\n\n        \n                13 Comments\n            \n      \n \n\n\n\n\n\n      Like\n    \n\n\n\n\n\n      Comment\n    \n\n\n\n\n\n\n\n              Share\n            \n\n\n\n\n\nCopy\n\n\n\n\n\nLinkedIn\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n \n\n\n\n\n        To view or add a comment, sign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n              Aditya Pratap\n            \n \n\n                Entrepreneur | Web/App Developer | OSINT AND RESEARCH\nProvides insight into keystroke patterns for analysis.\n🔐 Password Generator:\nPurpose: Aimed at enhancing password security, this tool generates strong, random passwords.\nFeatures:\nCustomizable parameters for password length and character types.\nEnsures the creation of secure passwords resistant to common attack methods.\nUser-friendly interface that simplifies the password creation process.\n🔒 Text Encryption Tool:\nPurpose: Implements encryption to protect sensitive textual information using the Caesar cipher.\nFeatures:\nProvides both encryption and decryption functionalities.\nAllows users to set a custom shift value for tailored encryption.\nIntegrates a graphical user interface for ease of use.\n💻 Technologies and Skills:\nProgramming Language: Python\nLibraries Used: Tkinter for GUI, Pynput for key logging, Pyfiglet for ASCII art, and Termcolor for colored text.\nSkills Developed:\nAdvanced Python programming.\nPractical understanding of encryption techniques.\n\nretriever:\nhttps://www.linkedin.com/feed/update/urn:li:activity:72110034292031078401mo\n  \n \n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🚀 Dark Web Scraping Project 🚀\nJust set up a dark web scraping environment as a home lab project using ARM macOS, Kali Linux, and ARM Ubuntu Server. This project leverages the Tor network for anonymity and various scraping tools to collect data. It's a fantastic way to gain practical experience in safely and anonymously accessing the dark web. Rather than diving into step-by-step details, the key takeaway is the importance of understanding secure, anonymous scraping practices. If you're looking to enhance your cybersecurity skills, a home lab project like this is a great place to start! 💻🔐\nHeres the link: https://lnkd.in/ef3kPQhq\n#Cybersecurity #HomeLab #DarkWeb #TorNetwork #LearningByDoing #PracticalSkills #CybersecuritySkills #remotework #remote #workfromhome \n \n\n\n\n\n\n\n              Dark Web Scraper\nhttps://www.linkedin.com/feed/update/urn:li:activity:7211003429203107840🟢 Tools to stay Anonymous\n📌 Proxychains - https://lnkd.in/dhPs8UhE\n📌 Macchanger - https://lnkd.in/dUVyNH8q\n📌 DuckDuckGo - https://duckduckgo.com/\n\n\n🟢 Dark Web Monitoring for Blue Team Operations\n📌 Katana The Dork Scanner https://lnkd.in/dmhuKJUh\n📌 Onion Search https://lnkd.in/ddgvcbyR\n📌 Darkdump2 for Deep Web Search https://lnkd.in/d6tTDFRE\n📌 Tor Bot for Dark Web Crawling https://lnkd.in/dQQT5DTP\n\n\n🟢 List of Dark Web Search Engine\n📌 The Hidden Wiki https://lnkd.in/dQW3NYuK\n📌 Torch https://lnkd.in/dQW3NYuK\n📌 DuckDuckGo https://lnkd.in/dQW3NYuK\n📌 Archive Today https://lnkd.in/dQW3NYuK\n📌 The Intercept https://lnkd.in/dQW3NYuK\n\nFull credit goes to Rajneesh G. for creating 100 percent of content.\n\nDisclaimer: Permission granted to share this content from creator\n\n#cybersecurity #infosecurity #leadershipbyexample\n#darkweb\n \n\n\n\n \n\n\n\n\n\n\n\n\n\n\n                    479\n              \n\n\n \n\n \n\n\n\n\n\n        \n                34 Comments\n            \n      \n \n\n\n\n\n\n      Like\nhttps://www.linkedin.com/feed/update/urn:li:activity:7211003429203107840KEY ACCOUNT MANAGER. \nCEH . CST . Try Hack Me Top 3% .\n            \n\n\n                  \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n      9mo\n  \n                    \n\n                      Edited\n                    \n\n \n\n \n\n\n\n\n\n\n\n\n\n\n\n                      Report this post\n                    \n    \n\n\n\n\n \n\n\n🎓 Day 12/100 of #100DaysOfLearning\n\nDeep Web vs Dark Web\n\nDistinguishing the deep web from the dark web is crucial. While the deep web includes content not indexed by search engines (like private emails), the dark web demands encryption for higher security.\n\nDeep Web: Password-protected sites, paywalled content, and non-indexed material comprise 96-99% of the internet, used for daily logins and sensitive transactions.\n\nDark Web: A small portion requiring anonymity through encrypted browsers and VPNs. Accessing it isn't accidental; intent is key.\n\nhistory:\nUser: what is CFCS2R\nAI: CFCS2R stands for the Center for Cyber Security Studies & Research. It is an organization that focuses on cybersecurity education and research. The user's post mentions their internship with CFCS2R, where they led a cybersecurity awareness campaign at a local education center. The campaign aimed to educate students about various cyber threats, digital identity protection, and safe social media practices.\nUser: give me the retrieval link for the information\nAI: Here are the retrieval links for the information provided in the context:\n\n- **Project Badri and Road Map:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\n- **Bihar's Historical Significance:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\n- **Internship with CFCS2R:** https://www.linkedin.com/feed/update/urn:li:activity:7208822609390559232\n\nThese links provide access to the original sources of information mentioned in the context.\nUser: give me the link from where the data is extracted\n\nuser message:\ngive me the link from where the data is extracted\n\n",
                    "files": [],
                    "session_id": "",
                    "timestamp": "2024-09-04 19:12:07",
                    "flow_id": "8622e87d-3671-436f-9ff4-bf38a55e9c93"
                  },
                  "display_name": "Input",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MessageInput"
                },
                "stream": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "stream",
                  "value": false,
                  "display_name": "Stream",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Stream the response from the model. Streaming works only in Chat.",
                  "title_case": false,
                  "type": "bool",
                  "_input_type": "BoolInput"
                },
                "system_message": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "system_message",
                  "value": "",
                  "display_name": "System Message",
                  "advanced": true,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "System message to pass to the model.",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MessageTextInput"
                },
                "temperature": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "temperature",
                  "value": 0.75,
                  "display_name": "Temperature",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "float",
                  "_input_type": "FloatInput"
                }
              },
              "description": "Generate text using Cohere LLMs.",
              "icon": "Cohere",
              "base_classes": [
                "LanguageModel",
                "Message"
              ],
              "display_name": "Cohere",
              "documentation": "https://python.langchain.com/docs/modules/model_io/models/llms/integrations/cohere",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "text_output",
                  "display_name": "Text",
                  "method": "text_response",
                  "value": "__UNDEFINED__",
                  "cache": true
                },
                {
                  "types": [
                    "LanguageModel"
                  ],
                  "selected": "LanguageModel",
                  "name": "model_output",
                  "display_name": "Language Model",
                  "method": "build_model",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "input_value",
                "system_message",
                "stream",
                "cohere_api_key",
                "temperature"
              ],
              "beta": false,
              "edited": false,
              "lf_version": "1.0.17"
            },
            "id": "CohereModel-BcREe"
          },
          "selected": false,
          "width": 384,
          "height": 511,
          "positionAbsolute": {
            "x": -2008.120261172667,
            "y": -391.8477196329559
          },
          "dragging": false
        },
        {
          "id": "Chroma-D1OmN",
          "type": "genericNode",
          "position": {
            "x": -2137.7513260974297,
            "y": 1130.686190961237
          },
          "data": {
            "type": "Chroma",
            "node": {
              "template": {
                "_type": "Component",
                "embedding": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "embedding",
                  "value": "",
                  "display_name": "Embedding",
                  "advanced": false,
                  "input_types": [
                    "Embeddings"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "other",
                  "_input_type": "HandleInput"
                },
                "ingest_data": {
                  "trace_as_metadata": true,
                  "list": true,
                  "trace_as_input": true,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "ingest_data",
                  "value": "",
                  "display_name": "Ingest Data",
                  "advanced": false,
                  "input_types": [
                    "Data"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "other",
                  "_input_type": "DataInput"
                },
                "allow_duplicates": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "allow_duplicates",
                  "value": false,
                  "display_name": "Allow Duplicates",
                  "advanced": true,
                  "dynamic": false,
                  "info": "If false, will not add documents that are already in the Vector Store.",
                  "title_case": false,
                  "type": "bool",
                  "_input_type": "BoolInput"
                },
                "chroma_server_cors_allow_origins": {
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "chroma_server_cors_allow_origins",
                  "value": "",
                  "display_name": "Server CORS Allow Origins",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "StrInput"
                },
                "chroma_server_grpc_port": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "chroma_server_grpc_port",
                  "value": "",
                  "display_name": "Server gRPC Port",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "int",
                  "_input_type": "IntInput"
                },
                "chroma_server_host": {
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "chroma_server_host",
                  "value": "",
                  "display_name": "Server Host",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "StrInput"
                },
                "chroma_server_http_port": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "chroma_server_http_port",
                  "value": "",
                  "display_name": "Server HTTP Port",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "int",
                  "_input_type": "IntInput"
                },
                "chroma_server_ssl_enabled": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "chroma_server_ssl_enabled",
                  "value": false,
                  "display_name": "Server SSL Enabled",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "bool",
                  "_input_type": "BoolInput"
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from copy import deepcopy\nfrom typing import TYPE_CHECKING\n\nfrom chromadb.config import Settings\nfrom langchain_chroma.vectorstores import Chroma\nfrom loguru import logger\n\nfrom axiestudio.base.vectorstores.model import LCVectorStoreComponent, check_cached_vector_store\nfrom axiestudio.base.vectorstores.utils import chroma_collection_to_data\nfrom axiestudio.io import BoolInput, DataInput, DropdownInput, HandleInput, IntInput, StrInput, MultilineInput\nfrom axiestudio.schema import Data\n\nif TYPE_CHECKING:\n    from langchain_chroma import Chroma\n\n\nclass ChromaVectorStoreComponent(LCVectorStoreComponent):\n    \"\"\"\n    Chroma Vector Store with search capabilities\n    \"\"\"\n\n    display_name: str = \"Chroma DB\"\n    description: str = \"Chroma Vector Store with search capabilities\"\n    documentation = \"https://python.langchain.com/docs/integrations/vectorstores/chroma\"\n    name = \"Chroma\"\n    icon = \"Chroma\"\n\n    inputs = [\n        StrInput(\n            name=\"collection_name\",\n            display_name=\"Collection Name\",\n            value=\"axiestudio\",\n        ),\n        StrInput(\n            name=\"persist_directory\",\n            display_name=\"Persist Directory\",\n        ),\n        MultilineInput(\n            name=\"search_query\",\n            display_name=\"Search Query\",\n        ),\n        DataInput(\n            name=\"ingest_data\",\n            display_name=\"Ingest Data\",\n            is_list=True,\n        ),\n        HandleInput(name=\"embedding\", display_name=\"Embedding\", input_types=[\"Embeddings\"]),\n        StrInput(\n            name=\"chroma_server_cors_allow_origins\",\n            display_name=\"Server CORS Allow Origins\",\n            advanced=True,\n        ),\n        StrInput(\n            name=\"chroma_server_host\",\n            display_name=\"Server Host\",\n            advanced=True,\n        ),\n        IntInput(\n            name=\"chroma_server_http_port\",\n            display_name=\"Server HTTP Port\",\n            advanced=True,\n        ),\n        IntInput(\n            name=\"chroma_server_grpc_port\",\n            display_name=\"Server gRPC Port\",\n            advanced=True,\n        ),\n        BoolInput(\n            name=\"chroma_server_ssl_enabled\",\n            display_name=\"Server SSL Enabled\",\n            advanced=True,\n        ),\n        BoolInput(\n            name=\"allow_duplicates\",\n            display_name=\"Allow Duplicates\",\n            advanced=True,\n            info=\"If false, will not add documents that are already in the Vector Store.\",\n        ),\n        DropdownInput(\n            name=\"search_type\",\n            display_name=\"Search Type\",\n            options=[\"Similarity\", \"MMR\"],\n            value=\"Similarity\",\n            advanced=True,\n        ),\n        IntInput(\n            name=\"number_of_results\",\n            display_name=\"Number of Results\",\n            info=\"Number of results to return.\",\n            advanced=True,\n            value=10,\n        ),\n        IntInput(\n            name=\"limit\",\n            display_name=\"Limit\",\n            advanced=True,\n            info=\"Limit the number of records to compare when Allow Duplicates is False.\",\n        ),\n    ]\n\n    @check_cached_vector_store\n    def build_vector_store(self) -> Chroma:\n        \"\"\"\n        Builds the Chroma object.\n        \"\"\"\n        try:\n            from chromadb import Client\n            from langchain_chroma import Chroma\n        except ImportError:\n            raise ImportError(\n                \"Could not import Chroma integration package. \" \"Please install it with `pip install langchain-chroma`.\"\n            )\n        # Chroma settings\n        chroma_settings = None\n        client = None\n        if self.chroma_server_host:\n            chroma_settings = Settings(\n                chroma_server_cors_allow_origins=self.chroma_server_cors_allow_origins or [],\n                chroma_server_host=self.chroma_server_host,\n                chroma_server_http_port=self.chroma_server_http_port or None,\n                chroma_server_grpc_port=self.chroma_server_grpc_port or None,\n                chroma_server_ssl_enabled=self.chroma_server_ssl_enabled,\n            )\n            client = Client(settings=chroma_settings)\n\n        # Check persist_directory and expand it if it is a relative path\n        if self.persist_directory is not None:\n            persist_directory = self.resolve_path(self.persist_directory)\n        else:\n            persist_directory = None\n\n        chroma = Chroma(\n            persist_directory=persist_directory,\n            client=client,\n            embedding_function=self.embedding,\n            collection_name=self.collection_name,\n        )\n\n        self._add_documents_to_vector_store(chroma)\n        self.status = chroma_collection_to_data(chroma.get(limit=self.limit))\n        return chroma\n\n    def _add_documents_to_vector_store(self, vector_store: \"Chroma\") -> None:\n        \"\"\"\n        Adds documents to the Vector Store.\n        \"\"\"\n        if not self.ingest_data:\n            self.status = \"\"\n            return\n\n        _stored_documents_without_id = []\n        if self.allow_duplicates:\n            stored_data = []\n        else:\n            stored_data = chroma_collection_to_data(vector_store.get(limit=self.limit))\n            for value in deepcopy(stored_data):\n                del value.id\n                _stored_documents_without_id.append(value)\n\n        documents = []\n        for _input in self.ingest_data or []:\n            if isinstance(_input, Data):\n                if _input not in _stored_documents_without_id:\n                    documents.append(_input.to_lc_document())\n            else:\n                raise ValueError(\"Vector Store Inputs must be Data objects.\")\n\n        if documents and self.embedding is not None:\n            logger.debug(f\"Adding {len(documents)} documents to the Vector Store.\")\n            vector_store.add_documents(documents)\n        else:\n            logger.debug(\"No documents to add to the Vector Store.\")\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "collection_name": {
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "collection_name",
                  "value": "axiestudio",
                  "display_name": "Collection Name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "StrInput"
                },
                "limit": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "limit",
                  "value": "",
                  "display_name": "Limit",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Limit the number of records to compare when Allow Duplicates is False.",
                  "title_case": false,
                  "type": "int",
                  "_input_type": "IntInput"
                },
                "number_of_results": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "number_of_results",
                  "value": 10,
                  "display_name": "Number of Results",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Number of results to return.",
                  "title_case": false,
                  "type": "int",
                  "_input_type": "IntInput"
                },
                "persist_directory": {
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "persist_directory",
                  "value": "C:\\Users\\sahil\\OneDrive\\Desktop\\internship\\axiestudio",
                  "display_name": "Persist Directory",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "StrInput"
                },
                "search_query": {
                  "trace_as_input": true,
                  "multiline": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "search_query",
                  "value": "",
                  "display_name": "Search Query",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MultilineInput"
                },
                "search_type": {
                  "trace_as_metadata": true,
                  "options": [
                    "Similarity",
                    "MMR"
                  ],
                  "combobox": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "search_type",
                  "value": "Similarity",
                  "display_name": "Search Type",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "DropdownInput"
                }
              },
              "description": "Chroma Vector Store with search capabilities",
              "icon": "Chroma",
              "base_classes": [
                "Data",
                "Retriever",
                "VectorStore"
              ],
              "display_name": "Chroma DB",
              "documentation": "https://python.langchain.com/docs/integrations/vectorstores/chroma",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Retriever"
                  ],
                  "selected": "Retriever",
                  "name": "base_retriever",
                  "display_name": "Retriever",
                  "method": "build_base_retriever",
                  "value": "__UNDEFINED__",
                  "cache": true
                },
                {
                  "types": [
                    "Data"
                  ],
                  "selected": "Data",
                  "name": "search_results",
                  "display_name": "Search Results",
                  "method": "search_documents",
                  "value": "__UNDEFINED__",
                  "cache": true
                },
                {
                  "types": [
                    "VectorStore"
                  ],
                  "selected": "VectorStore",
                  "name": "vector_store",
                  "display_name": "Vector Store",
                  "method": "cast_vector_store",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "collection_name",
                "persist_directory",
                "search_query",
                "ingest_data",
                "embedding",
                "chroma_server_cors_allow_origins",
                "chroma_server_host",
                "chroma_server_http_port",
                "chroma_server_grpc_port",
                "chroma_server_ssl_enabled",
                "allow_duplicates",
                "search_type",
                "number_of_results",
                "limit"
              ],
              "beta": false,
              "edited": false,
              "lf_version": "1.0.17"
            },
            "id": "Chroma-D1OmN"
          },
          "selected": false,
          "width": 384,
          "height": 651,
          "positionAbsolute": {
            "x": -2137.7513260974297,
            "y": 1130.686190961237
          },
          "dragging": false
        },
        {
          "id": "ParseData-qbgBL",
          "type": "genericNode",
          "position": {
            "x": -1609.777373629971,
            "y": 1313.4318183386695
          },
          "data": {
            "type": "ParseData",
            "node": {
              "template": {
                "_type": "Component",
                "data": {
                  "trace_as_metadata": true,
                  "list": false,
                  "trace_as_input": true,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "data",
                  "value": "",
                  "display_name": "Data",
                  "advanced": false,
                  "input_types": [
                    "Data"
                  ],
                  "dynamic": false,
                  "info": "The data to convert to text.",
                  "title_case": false,
                  "type": "other",
                  "_input_type": "DataInput"
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio.custom import Component\nfrom axiestudio.helpers.data import data_to_text\nfrom axiestudio.io import DataInput, MultilineInput, Output, StrInput\nfrom axiestudio.schema.message import Message\n\n\nclass ParseDataComponent(Component):\n    display_name = \"Parse Data\"\n    description = \"Convert Data into plain text following a specified template.\"\n    icon = \"braces\"\n    name = \"ParseData\"\n\n    inputs = [\n        DataInput(name=\"data\", display_name=\"Data\", info=\"The data to convert to text.\"),\n        MultilineInput(\n            name=\"template\",\n            display_name=\"Template\",\n            info=\"The template to use for formatting the data. It can contain the keys {text}, {data} or any other key in the Data.\",\n            value=\"{text}\",\n        ),\n        StrInput(name=\"sep\", display_name=\"Separator\", advanced=True, value=\"\\n\"),\n    ]\n\n    outputs = [\n        Output(display_name=\"Text\", name=\"text\", method=\"parse_data\"),\n    ]\n\n    def parse_data(self) -> Message:\n        data = self.data if isinstance(self.data, list) else [self.data]\n        template = self.template\n\n        result_string = data_to_text(template, data, sep=self.sep)\n        self.status = result_string\n        return Message(text=result_string)\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "sep": {
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "sep",
                  "value": "\n",
                  "display_name": "Separator",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "StrInput"
                },
                "template": {
                  "trace_as_input": true,
                  "multiline": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "template",
                  "value": "{text},{source}",
                  "display_name": "Template",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "The template to use for formatting the data. It can contain the keys {text}, {data} or any other key in the Data.",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MultilineInput"
                }
              },
              "description": "Convert Data into plain text following a specified template.",
              "icon": "braces",
              "base_classes": [
                "Message"
              ],
              "display_name": "Parse Data",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "text",
                  "display_name": "Text",
                  "method": "parse_data",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "data",
                "template",
                "sep"
              ],
              "beta": false,
              "edited": false,
              "lf_version": "1.0.17"
            },
            "id": "ParseData-qbgBL"
          },
          "selected": false,
          "width": 384,
          "height": 372,
          "positionAbsolute": {
            "x": -1609.777373629971,
            "y": 1313.4318183386695
          },
          "dragging": false
        },
        {
          "id": "ParseData-5OvOz",
          "type": "genericNode",
          "position": {
            "x": -1051.4203709377425,
            "y": 1502.1445866835127
          },
          "data": {
            "type": "ParseData",
            "node": {
              "template": {
                "_type": "Component",
                "data": {
                  "trace_as_metadata": true,
                  "list": false,
                  "trace_as_input": true,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "data",
                  "value": "",
                  "display_name": "Data",
                  "advanced": false,
                  "input_types": [
                    "Data"
                  ],
                  "dynamic": false,
                  "info": "The data to convert to text.",
                  "title_case": false,
                  "type": "other",
                  "_input_type": "DataInput"
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio.custom import Component\nfrom axiestudio.helpers.data import data_to_text\nfrom axiestudio.io import DataInput, MultilineInput, Output, StrInput\nfrom axiestudio.schema.message import Message\n\n\nclass ParseDataComponent(Component):\n    display_name = \"Parse Data\"\n    description = \"Convert Data into plain text following a specified template.\"\n    icon = \"braces\"\n    name = \"ParseData\"\n\n    inputs = [\n        DataInput(name=\"data\", display_name=\"Data\", info=\"The data to convert to text.\"),\n        MultilineInput(\n            name=\"template\",\n            display_name=\"Template\",\n            info=\"The template to use for formatting the data. It can contain the keys {text}, {data} or any other key in the Data.\",\n            value=\"{text}\",\n        ),\n        StrInput(name=\"sep\", display_name=\"Separator\", advanced=True, value=\"\\n\"),\n    ]\n\n    outputs = [\n        Output(display_name=\"Text\", name=\"text\", method=\"parse_data\"),\n    ]\n\n    def parse_data(self) -> Message:\n        data = self.data if isinstance(self.data, list) else [self.data]\n        template = self.template\n\n        result_string = data_to_text(template, data, sep=self.sep)\n        self.status = result_string\n        return Message(text=result_string)\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "sep": {
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "sep",
                  "value": "\n",
                  "display_name": "Separator",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "StrInput"
                },
                "template": {
                  "trace_as_input": true,
                  "multiline": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "template",
                  "value": "{source}",
                  "display_name": "Template",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "The template to use for formatting the data. It can contain the keys {text}, {data} or any other key in the Data.",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MultilineInput"
                }
              },
              "description": "Convert Data into plain text following a specified template.",
              "icon": "braces",
              "base_classes": [
                "Message"
              ],
              "display_name": "Parse Data",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "text",
                  "display_name": "Text",
                  "method": "parse_data",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "data",
                "template",
                "sep"
              ],
              "beta": false,
              "edited": false,
              "lf_version": "1.0.17"
            },
            "id": "ParseData-5OvOz"
          },
          "selected": false,
          "width": 384,
          "height": 372,
          "positionAbsolute": {
            "x": -1051.4203709377425,
            "y": 1502.1445866835127
          },
          "dragging": false
        },
        {
          "id": "CohereEmbeddings-jtVYO",
          "type": "genericNode",
          "position": {
            "x": -2675.863209480058,
            "y": 1305.928353938188
          },
          "data": {
            "type": "CohereEmbeddings",
            "node": {
              "template": {
                "_type": "Component",
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from langchain_community.embeddings.cohere import CohereEmbeddings\n\nfrom axiestudio.base.models.model import LCModelComponent\nfrom axiestudio.field_typing import Embeddings\nfrom axiestudio.io import DropdownInput, FloatInput, IntInput, MessageTextInput, Output, SecretStrInput\n\n\nclass CohereEmbeddingsComponent(LCModelComponent):\n    display_name = \"Cohere Embeddings\"\n    description = \"Generate embeddings using Cohere models.\"\n    icon = \"Cohere\"\n    name = \"CohereEmbeddings\"\n\n    inputs = [\n        SecretStrInput(name=\"cohere_api_key\", display_name=\"Cohere API Key\"),\n        DropdownInput(\n            name=\"model\",\n            display_name=\"Model\",\n            advanced=True,\n            options=[\n                \"embed-english-v2.0\",\n                \"embed-multilingual-v2.0\",\n                \"embed-english-light-v2.0\",\n                \"embed-multilingual-light-v2.0\",\n            ],\n            value=\"embed-english-v2.0\",\n        ),\n        MessageTextInput(name=\"truncate\", display_name=\"Truncate\", advanced=True),\n        IntInput(name=\"max_retries\", display_name=\"Max Retries\", value=3, advanced=True),\n        MessageTextInput(name=\"user_agent\", display_name=\"User Agent\", advanced=True, value=\"langchain\"),\n        FloatInput(name=\"request_timeout\", display_name=\"Request Timeout\", advanced=True),\n    ]\n\n    outputs = [\n        Output(display_name=\"Embeddings\", name=\"embeddings\", method=\"build_embeddings\"),\n    ]\n\n    def build_embeddings(self) -> Embeddings:\n        return CohereEmbeddings(  # type: ignore\n            cohere_api_key=self.cohere_api_key,\n            model=self.model,\n            truncate=self.truncate,\n            max_retries=self.max_retries,\n            user_agent=self.user_agent,\n            request_timeout=self.request_timeout or None,\n        )\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "cohere_api_key": {
                  "load_from_db": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "cohere_api_key",
                  "value": "",
                  "display_name": "Cohere API Key",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "password": true,
                  "type": "str",
                  "_input_type": "SecretStrInput"
                },
                "max_retries": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "max_retries",
                  "value": 3,
                  "display_name": "Max Retries",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "int",
                  "_input_type": "IntInput"
                },
                "model": {
                  "trace_as_metadata": true,
                  "options": [
                    "embed-english-v2.0",
                    "embed-multilingual-v2.0",
                    "embed-english-light-v2.0",
                    "embed-multilingual-light-v2.0"
                  ],
                  "combobox": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "model",
                  "value": "embed-english-v2.0",
                  "display_name": "Model",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "DropdownInput"
                },
                "request_timeout": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "request_timeout",
                  "value": "",
                  "display_name": "Request Timeout",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "float",
                  "_input_type": "FloatInput"
                },
                "truncate": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "truncate",
                  "value": "",
                  "display_name": "Truncate",
                  "advanced": true,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MessageTextInput"
                },
                "user_agent": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "user_agent",
                  "value": "langchain",
                  "display_name": "User Agent",
                  "advanced": true,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MessageTextInput"
                }
              },
              "description": "Generate embeddings using Cohere models.",
              "icon": "Cohere",
              "base_classes": [
                "Embeddings"
              ],
              "display_name": "Cohere Embeddings",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Embeddings"
                  ],
                  "selected": "Embeddings",
                  "name": "embeddings",
                  "display_name": "Embeddings",
                  "method": "build_embeddings",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "cohere_api_key",
                "model",
                "truncate",
                "max_retries",
                "user_agent",
                "request_timeout"
              ],
              "beta": false,
              "edited": false,
              "lf_version": "1.0.17"
            },
            "id": "CohereEmbeddings-jtVYO"
          },
          "selected": false,
          "width": 384,
          "height": 296,
          "dragging": false,
          "positionAbsolute": {
            "x": -2675.863209480058,
            "y": 1305.928353938188
          }
        },
        {
          "id": "ChatInput-zpbQQ",
          "type": "genericNode",
          "position": {
            "x": -2326.8705336134044,
            "y": 625.2968705752525
          },
          "data": {
            "type": "ChatInput",
            "node": {
              "template": {
                "_type": "Component",
                "files": {
                  "trace_as_metadata": true,
                  "file_path": "",
                  "fileTypes": [
                    "txt",
                    "md",
                    "mdx",
                    "csv",
                    "json",
                    "yaml",
                    "yml",
                    "xml",
                    "html",
                    "htm",
                    "pdf",
                    "docx",
                    "py",
                    "sh",
                    "sql",
                    "js",
                    "ts",
                    "tsx",
                    "jpg",
                    "jpeg",
                    "png",
                    "bmp",
                    "image"
                  ],
                  "list": true,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "files",
                  "value": "",
                  "display_name": "Files",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Files to be sent with the message.",
                  "title_case": false,
                  "type": "file",
                  "_input_type": "FileInput"
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio.base.data.utils import IMG_FILE_TYPES, TEXT_FILE_TYPES\nfrom axiestudio.base.io.chat import ChatComponent\nfrom axiestudio.inputs import BoolInput\nfrom axiestudio.io import DropdownInput, FileInput, MessageTextInput, MultilineInput, Output\nfrom axiestudio.memory import store_message\nfrom axiestudio.schema.message import Message\nfrom axiestudio.utils.constants import MESSAGE_SENDER_AI, MESSAGE_SENDER_USER, MESSAGE_SENDER_NAME_USER\n\n\nclass ChatInput(ChatComponent):\n    display_name = \"Chat Input\"\n    description = \"Get chat inputs from the Playground.\"\n    icon = \"ChatInput\"\n    name = \"ChatInput\"\n\n    inputs = [\n        MultilineInput(\n            name=\"input_value\",\n            display_name=\"Text\",\n            value=\"\",\n            info=\"Message to be passed as input.\",\n        ),\n        BoolInput(\n            name=\"should_store_message\",\n            display_name=\"Store Messages\",\n            info=\"Store the message in the history.\",\n            value=True,\n            advanced=True,\n        ),\n        DropdownInput(\n            name=\"sender\",\n            display_name=\"Sender Type\",\n            options=[MESSAGE_SENDER_AI, MESSAGE_SENDER_USER],\n            value=MESSAGE_SENDER_USER,\n            info=\"Type of sender.\",\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\"sender_name\",\n            display_name=\"Sender Name\",\n            info=\"Name of the sender.\",\n            value=MESSAGE_SENDER_NAME_USER,\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\"session_id\",\n            display_name=\"Session ID\",\n            info=\"The session ID of the chat. If empty, the current session ID parameter will be used.\",\n            advanced=True,\n        ),\n        FileInput(\n            name=\"files\",\n            display_name=\"Files\",\n            file_types=TEXT_FILE_TYPES + IMG_FILE_TYPES,\n            info=\"Files to be sent with the message.\",\n            advanced=True,\n            is_list=True,\n        ),\n    ]\n    outputs = [\n        Output(display_name=\"Message\", name=\"message\", method=\"message_response\"),\n    ]\n\n    def message_response(self) -> Message:\n        message = Message(\n            text=self.input_value,\n            sender=self.sender,\n            sender_name=self.sender_name,\n            session_id=self.session_id,\n            files=self.files,\n        )\n\n        if (\n            self.session_id\n            and isinstance(message, Message)\n            and isinstance(message.text, str)\n            and self.should_store_message\n        ):\n            store_message(\n                message,\n                flow_id=self.graph.flow_id,\n            )\n            self.message.value = message\n\n        self.status = message\n        return message\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "input_value": {
                  "trace_as_input": true,
                  "multiline": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "input_value",
                  "value": "what is CFCS2R",
                  "display_name": "Text",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "Message to be passed as input.",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MultilineInput"
                },
                "sender": {
                  "trace_as_metadata": true,
                  "options": [
                    "Machine",
                    "User"
                  ],
                  "combobox": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "sender",
                  "value": "User",
                  "display_name": "Sender Type",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Type of sender.",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "DropdownInput"
                },
                "sender_name": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "sender_name",
                  "value": "User",
                  "display_name": "Sender Name",
                  "advanced": true,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "Name of the sender.",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MessageTextInput"
                },
                "session_id": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "session_id",
                  "value": "",
                  "display_name": "Session ID",
                  "advanced": true,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "The session ID of the chat. If empty, the current session ID parameter will be used.",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MessageTextInput"
                },
                "should_store_message": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "should_store_message",
                  "value": true,
                  "display_name": "Store Messages",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Store the message in the history.",
                  "title_case": false,
                  "type": "bool",
                  "_input_type": "BoolInput"
                }
              },
              "description": "Get chat inputs from the Playground.",
              "icon": "ChatInput",
              "base_classes": [
                "Message"
              ],
              "display_name": "Chat Input",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "message",
                  "display_name": "Message",
                  "method": "message_response",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "input_value",
                "should_store_message",
                "sender",
                "sender_name",
                "session_id",
                "files"
              ],
              "beta": false,
              "edited": false,
              "lf_version": "1.0.17"
            },
            "id": "ChatInput-zpbQQ"
          },
          "selected": false,
          "width": 384,
          "height": 296,
          "positionAbsolute": {
            "x": -2326.8705336134044,
            "y": 625.2968705752525
          },
          "dragging": false
        }
      ],
      "edges": [
        {
          "className": "",
          "data": {
            "sourceHandle": {
              "dataType": "SequentialCrewComponent",
              "id": "SequentialCrewComponent-0rViC",
              "name": "output",
              "output_types": [
                "Message"
              ]
            },
            "targetHandle": {
              "fieldName": "input_value",
              "id": "ChatOutput-mTwlz",
              "inputTypes": [
                "Message"
              ],
              "type": "str"
            }
          },
          "id": "reactflow__edge-SequentialCrewComponent-0rViC{œdataTypeœ:œSequentialCrewComponentœ,œidœ:œSequentialCrewComponent-0rViCœ,œnameœ:œoutputœ,œoutput_typesœ:[œMessageœ]}-ChatOutput-mTwlz{œfieldNameœ:œinput_valueœ,œidœ:œChatOutput-mTwlzœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
          "source": "SequentialCrewComponent-0rViC",
          "sourceHandle": "{œdataTypeœ:œSequentialCrewComponentœ,œidœ:œSequentialCrewComponent-0rViCœ,œnameœ:œoutputœ,œoutput_typesœ:[œMessageœ]}",
          "target": "ChatOutput-mTwlz",
          "targetHandle": "{œfieldNameœ:œinput_valueœ,œidœ:œChatOutput-mTwlzœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}"
        },
        {
          "className": "",
          "data": {
            "sourceHandle": {
              "dataType": "Prompt",
              "id": "Prompt-3iPjH",
              "name": "prompt",
              "output_types": [
                "Message"
              ]
            },
            "targetHandle": {
              "fieldName": "task_description",
              "id": "SequentialTaskAgentComponent-M340K",
              "inputTypes": [
                "Message"
              ],
              "type": "str"
            }
          },
          "id": "reactflow__edge-Prompt-3iPjH{œdataTypeœ:œPromptœ,œidœ:œPrompt-3iPjHœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}-SequentialTaskAgentComponent-M340K{œfieldNameœ:œtask_descriptionœ,œidœ:œSequentialTaskAgentComponent-M340Kœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
          "source": "Prompt-3iPjH",
          "sourceHandle": "{œdataTypeœ:œPromptœ,œidœ:œPrompt-3iPjHœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}",
          "target": "SequentialTaskAgentComponent-M340K",
          "targetHandle": "{œfieldNameœ:œtask_descriptionœ,œidœ:œSequentialTaskAgentComponent-M340Kœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}"
        },
        {
          "data": {
            "sourceHandle": {
              "dataType": "Prompt",
              "id": "Prompt-sO6Gs",
              "name": "prompt",
              "output_types": [
                "Message"
              ]
            },
            "targetHandle": {
              "fieldName": "task_description",
              "id": "SequentialTaskAgentComponent-xs4Oo",
              "inputTypes": [
                "Message"
              ],
              "type": "str"
            }
          },
          "id": "reactflow__edge-Prompt-sO6Gs{œdataTypeœ:œPromptœ,œidœ:œPrompt-sO6Gsœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}-SequentialTaskAgentComponent-xs4Oo{œfieldNameœ:œtask_descriptionœ,œidœ:œSequentialTaskAgentComponent-xs4Ooœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
          "source": "Prompt-sO6Gs",
          "sourceHandle": "{œdataTypeœ:œPromptœ,œidœ:œPrompt-sO6Gsœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}",
          "target": "SequentialTaskAgentComponent-xs4Oo",
          "targetHandle": "{œfieldNameœ:œtask_descriptionœ,œidœ:œSequentialTaskAgentComponent-xs4Ooœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
          "className": ""
        },
        {
          "data": {
            "sourceHandle": {
              "dataType": "SequentialTaskAgentComponent",
              "id": "SequentialTaskAgentComponent-M340K",
              "name": "task_output",
              "output_types": [
                "SequentialTask"
              ]
            },
            "targetHandle": {
              "fieldName": "previous_task",
              "id": "SequentialTaskAgentComponent-xs4Oo",
              "inputTypes": [
                "SequentialTask"
              ],
              "type": "other"
            }
          },
          "id": "reactflow__edge-SequentialTaskAgentComponent-M340K{œdataTypeœ:œSequentialTaskAgentComponentœ,œidœ:œSequentialTaskAgentComponent-M340Kœ,œnameœ:œtask_outputœ,œoutput_typesœ:[œSequentialTaskœ]}-SequentialTaskAgentComponent-xs4Oo{œfieldNameœ:œprevious_taskœ,œidœ:œSequentialTaskAgentComponent-xs4Ooœ,œinputTypesœ:[œSequentialTaskœ],œtypeœ:œotherœ}",
          "source": "SequentialTaskAgentComponent-M340K",
          "sourceHandle": "{œdataTypeœ:œSequentialTaskAgentComponentœ,œidœ:œSequentialTaskAgentComponent-M340Kœ,œnameœ:œtask_outputœ,œoutput_typesœ:[œSequentialTaskœ]}",
          "target": "SequentialTaskAgentComponent-xs4Oo",
          "targetHandle": "{œfieldNameœ:œprevious_taskœ,œidœ:œSequentialTaskAgentComponent-xs4Ooœ,œinputTypesœ:[œSequentialTaskœ],œtypeœ:œotherœ}",
          "className": ""
        },
        {
          "source": "CohereModel-BcREe",
          "sourceHandle": "{œdataTypeœ:œCohereModelœ,œidœ:œCohereModel-BcREeœ,œnameœ:œmodel_outputœ,œoutput_typesœ:[œLanguageModelœ]}",
          "target": "SequentialTaskAgentComponent-M340K",
          "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œSequentialTaskAgentComponent-M340Kœ,œinputTypesœ:[œLanguageModelœ],œtypeœ:œotherœ}",
          "data": {
            "targetHandle": {
              "fieldName": "llm",
              "id": "SequentialTaskAgentComponent-M340K",
              "inputTypes": [
                "LanguageModel"
              ],
              "type": "other"
            },
            "sourceHandle": {
              "dataType": "CohereModel",
              "id": "CohereModel-BcREe",
              "name": "model_output",
              "output_types": [
                "LanguageModel"
              ]
            }
          },
          "id": "reactflow__edge-CohereModel-BcREe{œdataTypeœ:œCohereModelœ,œidœ:œCohereModel-BcREeœ,œnameœ:œmodel_outputœ,œoutput_typesœ:[œLanguageModelœ]}-SequentialTaskAgentComponent-M340K{œfieldNameœ:œllmœ,œidœ:œSequentialTaskAgentComponent-M340Kœ,œinputTypesœ:[œLanguageModelœ],œtypeœ:œotherœ}",
          "className": ""
        },
        {
          "source": "CohereModel-BcREe",
          "sourceHandle": "{œdataTypeœ:œCohereModelœ,œidœ:œCohereModel-BcREeœ,œnameœ:œmodel_outputœ,œoutput_typesœ:[œLanguageModelœ]}",
          "target": "SequentialTaskAgentComponent-xs4Oo",
          "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œSequentialTaskAgentComponent-xs4Ooœ,œinputTypesœ:[œLanguageModelœ],œtypeœ:œotherœ}",
          "data": {
            "targetHandle": {
              "fieldName": "llm",
              "id": "SequentialTaskAgentComponent-xs4Oo",
              "inputTypes": [
                "LanguageModel"
              ],
              "type": "other"
            },
            "sourceHandle": {
              "dataType": "CohereModel",
              "id": "CohereModel-BcREe",
              "name": "model_output",
              "output_types": [
                "LanguageModel"
              ]
            }
          },
          "id": "reactflow__edge-CohereModel-BcREe{œdataTypeœ:œCohereModelœ,œidœ:œCohereModel-BcREeœ,œnameœ:œmodel_outputœ,œoutput_typesœ:[œLanguageModelœ]}-SequentialTaskAgentComponent-xs4Oo{œfieldNameœ:œllmœ,œidœ:œSequentialTaskAgentComponent-xs4Ooœ,œinputTypesœ:[œLanguageModelœ],œtypeœ:œotherœ}",
          "className": ""
        },
        {
          "source": "Chroma-D1OmN",
          "sourceHandle": "{œdataTypeœ:œChromaœ,œidœ:œChroma-D1OmNœ,œnameœ:œsearch_resultsœ,œoutput_typesœ:[œDataœ]}",
          "target": "ParseData-qbgBL",
          "targetHandle": "{œfieldNameœ:œdataœ,œidœ:œParseData-qbgBLœ,œinputTypesœ:[œDataœ],œtypeœ:œotherœ}",
          "data": {
            "targetHandle": {
              "fieldName": "data",
              "id": "ParseData-qbgBL",
              "inputTypes": [
                "Data"
              ],
              "type": "other"
            },
            "sourceHandle": {
              "dataType": "Chroma",
              "id": "Chroma-D1OmN",
              "name": "search_results",
              "output_types": [
                "Data"
              ]
            }
          },
          "id": "reactflow__edge-Chroma-D1OmN{œdataTypeœ:œChromaœ,œidœ:œChroma-D1OmNœ,œnameœ:œsearch_resultsœ,œoutput_typesœ:[œDataœ]}-ParseData-qbgBL{œfieldNameœ:œdataœ,œidœ:œParseData-qbgBLœ,œinputTypesœ:[œDataœ],œtypeœ:œotherœ}",
          "className": ""
        },
        {
          "source": "Chroma-D1OmN",
          "sourceHandle": "{œdataTypeœ:œChromaœ,œidœ:œChroma-D1OmNœ,œnameœ:œsearch_resultsœ,œoutput_typesœ:[œDataœ]}",
          "target": "ParseData-5OvOz",
          "targetHandle": "{œfieldNameœ:œdataœ,œidœ:œParseData-5OvOzœ,œinputTypesœ:[œDataœ],œtypeœ:œotherœ}",
          "data": {
            "targetHandle": {
              "fieldName": "data",
              "id": "ParseData-5OvOz",
              "inputTypes": [
                "Data"
              ],
              "type": "other"
            },
            "sourceHandle": {
              "dataType": "Chroma",
              "id": "Chroma-D1OmN",
              "name": "search_results",
              "output_types": [
                "Data"
              ]
            }
          },
          "id": "reactflow__edge-Chroma-D1OmN{œdataTypeœ:œChromaœ,œidœ:œChroma-D1OmNœ,œnameœ:œsearch_resultsœ,œoutput_typesœ:[œDataœ]}-ParseData-5OvOz{œfieldNameœ:œdataœ,œidœ:œParseData-5OvOzœ,œinputTypesœ:[œDataœ],œtypeœ:œotherœ}",
          "className": ""
        },
        {
          "source": "CohereEmbeddings-jtVYO",
          "sourceHandle": "{œdataTypeœ:œCohereEmbeddingsœ,œidœ:œCohereEmbeddings-jtVYOœ,œnameœ:œembeddingsœ,œoutput_typesœ:[œEmbeddingsœ]}",
          "target": "Chroma-D1OmN",
          "targetHandle": "{œfieldNameœ:œembeddingœ,œidœ:œChroma-D1OmNœ,œinputTypesœ:[œEmbeddingsœ],œtypeœ:œotherœ}",
          "data": {
            "targetHandle": {
              "fieldName": "embedding",
              "id": "Chroma-D1OmN",
              "inputTypes": [
                "Embeddings"
              ],
              "type": "other"
            },
            "sourceHandle": {
              "dataType": "CohereEmbeddings",
              "id": "CohereEmbeddings-jtVYO",
              "name": "embeddings",
              "output_types": [
                "Embeddings"
              ]
            }
          },
          "id": "reactflow__edge-CohereEmbeddings-jtVYO{œdataTypeœ:œCohereEmbeddingsœ,œidœ:œCohereEmbeddings-jtVYOœ,œnameœ:œembeddingsœ,œoutput_typesœ:[œEmbeddingsœ]}-Chroma-D1OmN{œfieldNameœ:œembeddingœ,œidœ:œChroma-D1OmNœ,œinputTypesœ:[œEmbeddingsœ],œtypeœ:œotherœ}",
          "className": ""
        },
        {
          "source": "ParseData-qbgBL",
          "sourceHandle": "{œdataTypeœ:œParseDataœ,œidœ:œParseData-qbgBLœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}",
          "target": "Prompt-3iPjH",
          "targetHandle": "{œfieldNameœ:œcontextœ,œidœ:œPrompt-3iPjHœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
          "data": {
            "targetHandle": {
              "fieldName": "context",
              "id": "Prompt-3iPjH",
              "inputTypes": [
                "Message",
                "Text"
              ],
              "type": "str"
            },
            "sourceHandle": {
              "dataType": "ParseData",
              "id": "ParseData-qbgBL",
              "name": "text",
              "output_types": [
                "Message"
              ]
            }
          },
          "id": "reactflow__edge-ParseData-qbgBL{œdataTypeœ:œParseDataœ,œidœ:œParseData-qbgBLœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}-Prompt-3iPjH{œfieldNameœ:œcontextœ,œidœ:œPrompt-3iPjHœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}"
        },
        {
          "source": "ParseData-5OvOz",
          "sourceHandle": "{œdataTypeœ:œParseDataœ,œidœ:œParseData-5OvOzœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}",
          "target": "Prompt-3iPjH",
          "targetHandle": "{œfieldNameœ:œsourceœ,œidœ:œPrompt-3iPjHœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
          "data": {
            "targetHandle": {
              "fieldName": "source",
              "id": "Prompt-3iPjH",
              "inputTypes": [
                "Message",
                "Text"
              ],
              "type": "str"
            },
            "sourceHandle": {
              "dataType": "ParseData",
              "id": "ParseData-5OvOz",
              "name": "text",
              "output_types": [
                "Message"
              ]
            }
          },
          "id": "reactflow__edge-ParseData-5OvOz{œdataTypeœ:œParseDataœ,œidœ:œParseData-5OvOzœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}-Prompt-3iPjH{œfieldNameœ:œsourceœ,œidœ:œPrompt-3iPjHœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}"
        },
        {
          "source": "ParseData-5OvOz",
          "sourceHandle": "{œdataTypeœ:œParseDataœ,œidœ:œParseData-5OvOzœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}",
          "target": "Prompt-sO6Gs",
          "targetHandle": "{œfieldNameœ:œsourceœ,œidœ:œPrompt-sO6Gsœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
          "data": {
            "targetHandle": {
              "fieldName": "source",
              "id": "Prompt-sO6Gs",
              "inputTypes": [
                "Message",
                "Text"
              ],
              "type": "str"
            },
            "sourceHandle": {
              "dataType": "ParseData",
              "id": "ParseData-5OvOz",
              "name": "text",
              "output_types": [
                "Message"
              ]
            }
          },
          "id": "reactflow__edge-ParseData-5OvOz{œdataTypeœ:œParseDataœ,œidœ:œParseData-5OvOzœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}-Prompt-sO6Gs{œfieldNameœ:œsourceœ,œidœ:œPrompt-sO6Gsœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}"
        },
        {
          "source": "ChatInput-zpbQQ",
          "sourceHandle": "{œdataTypeœ:œChatInputœ,œidœ:œChatInput-zpbQQœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}",
          "target": "Prompt-3iPjH",
          "targetHandle": "{œfieldNameœ:œuser_msgœ,œidœ:œPrompt-3iPjHœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
          "data": {
            "targetHandle": {
              "fieldName": "user_msg",
              "id": "Prompt-3iPjH",
              "inputTypes": [
                "Message",
                "Text"
              ],
              "type": "str"
            },
            "sourceHandle": {
              "dataType": "ChatInput",
              "id": "ChatInput-zpbQQ",
              "name": "message",
              "output_types": [
                "Message"
              ]
            }
          },
          "id": "reactflow__edge-ChatInput-zpbQQ{œdataTypeœ:œChatInputœ,œidœ:œChatInput-zpbQQœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}-Prompt-3iPjH{œfieldNameœ:œuser_msgœ,œidœ:œPrompt-3iPjHœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}"
        },
        {
          "source": "ChatInput-zpbQQ",
          "sourceHandle": "{œdataTypeœ:œChatInputœ,œidœ:œChatInput-zpbQQœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}",
          "target": "Prompt-sO6Gs",
          "targetHandle": "{œfieldNameœ:œmessageœ,œidœ:œPrompt-sO6Gsœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
          "data": {
            "targetHandle": {
              "fieldName": "message",
              "id": "Prompt-sO6Gs",
              "inputTypes": [
                "Message",
                "Text"
              ],
              "type": "str"
            },
            "sourceHandle": {
              "dataType": "ChatInput",
              "id": "ChatInput-zpbQQ",
              "name": "message",
              "output_types": [
                "Message"
              ]
            }
          },
          "id": "reactflow__edge-ChatInput-zpbQQ{œdataTypeœ:œChatInputœ,œidœ:œChatInput-zpbQQœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}-Prompt-sO6Gs{œfieldNameœ:œmessageœ,œidœ:œPrompt-sO6Gsœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}"
        },
        {
          "source": "ChatInput-zpbQQ",
          "sourceHandle": "{œdataTypeœ:œChatInputœ,œidœ:œChatInput-zpbQQœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}",
          "target": "Chroma-D1OmN",
          "targetHandle": "{œfieldNameœ:œsearch_queryœ,œidœ:œChroma-D1OmNœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
          "data": {
            "targetHandle": {
              "fieldName": "search_query",
              "id": "Chroma-D1OmN",
              "inputTypes": [
                "Message"
              ],
              "type": "str"
            },
            "sourceHandle": {
              "dataType": "ChatInput",
              "id": "ChatInput-zpbQQ",
              "name": "message",
              "output_types": [
                "Message"
              ]
            }
          },
          "id": "reactflow__edge-ChatInput-zpbQQ{œdataTypeœ:œChatInputœ,œidœ:œChatInput-zpbQQœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}-Chroma-D1OmN{œfieldNameœ:œsearch_queryœ,œidœ:œChroma-D1OmNœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}"
        },
        {
          "source": "SequentialTaskAgentComponent-xs4Oo",
          "sourceHandle": "{œdataTypeœ:œSequentialTaskAgentComponentœ,œidœ:œSequentialTaskAgentComponent-xs4Ooœ,œnameœ:œtask_outputœ,œoutput_typesœ:[œSequentialTaskœ]}",
          "target": "SequentialCrewComponent-0rViC",
          "targetHandle": "{œfieldNameœ:œtasksœ,œidœ:œSequentialCrewComponent-0rViCœ,œinputTypesœ:[œSequentialTaskœ],œtypeœ:œotherœ}",
          "data": {
            "targetHandle": {
              "fieldName": "tasks",
              "id": "SequentialCrewComponent-0rViC",
              "inputTypes": [
                "SequentialTask"
              ],
              "type": "other"
            },
            "sourceHandle": {
              "dataType": "SequentialTaskAgentComponent",
              "id": "SequentialTaskAgentComponent-xs4Oo",
              "name": "task_output",
              "output_types": [
                "SequentialTask"
              ]
            }
          },
          "id": "reactflow__edge-SequentialTaskAgentComponent-xs4Oo{œdataTypeœ:œSequentialTaskAgentComponentœ,œidœ:œSequentialTaskAgentComponent-xs4Ooœ,œnameœ:œtask_outputœ,œoutput_typesœ:[œSequentialTaskœ]}-SequentialCrewComponent-0rViC{œfieldNameœ:œtasksœ,œidœ:œSequentialCrewComponent-0rViCœ,œinputTypesœ:[œSequentialTaskœ],œtypeœ:œotherœ}"
        }
      ],
      "viewport": {
        "x": 1152.696179099062,
        "y": 216.85946514260263,
        "zoom": 0.409518348929928
      }
    },
    "date_created": "2024-09-10T21:16:57.797Z",
    "date_updated": "2024-09-10T21:16:57.874Z",
    "status": "Public",
    "sort": null,
    "user_updated": "694f46e0-3805-4a2c-9852-cd3f52377859",
    "user_created": {
      "username": "SahilSapte",
      "first_name": "Sahil",
      "last_name": "Sapte",
      "id": "694f46e0-3805-4a2c-9852-cd3f52377859"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:06.643Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 110,
    "converter_version": "1.0.0"
  }
}