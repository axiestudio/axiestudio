{
  "id": "56d145c1-59a4-4510-b05b-a007bb004029",
  "name": "Document QA",
  "description": "This flow integrates PDF reading with a language model to answer document-specific questions. Ideal for small-scale texts, it facilitates direct queries with immediate insights. (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "FLOW",
  "is_component": false,
  "author": {
    "username": "hunghx",
    "first_name": "Xuân Hùng",
    "last_name": "Hồ",
    "id": "13c55d6c-be79-4411-a6af-42668a89bed1",
    "full_name": "Xuân Hùng Hồ"
  },
  "store_url": "https://www.langflow.store/store/component/56d145c1-59a4-4510-b05b-a007bb004029",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-05-30T08:35:39.472Z",
    "updated": "2024-05-30T08:35:39.496Z",
    "downloaded": "2025-08-19T17:50:05.526Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "0.6.19",
    "private": false,
    "status": "Public"
  },
  "data": {
    "nodes": [
      {
        "id": "Prompt-mtgZ0",
        "type": "genericNode",
        "position": {
          "x": 37.38117101502269,
          "y": -24.661963988010598
        },
        "data": {
          "type": "Prompt",
          "node": {
            "template": {
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from langchain_core.prompts import PromptTemplate\n\nfrom axiestudio.field_typing import Prompt, TemplateField, Text\nfrom axiestudio.interface.custom.custom_component import CustomComponent\n\n\nclass PromptComponent(CustomComponent):\n    display_name: str = \"Prompt\"\n    description: str = \"Create a prompt template with dynamic variables.\"\n    icon = \"prompts\"\n\n    def build_config(self):\n        return {\n            \"template\": TemplateField(display_name=\"Template\"),\n            \"code\": TemplateField(advanced=True),\n        }\n\n    def build(\n        self,\n        template: Prompt,\n        **kwargs,\n    ) -> Text:\n        from axiestudio.base.prompts.utils import dict_values_to_string\n\n        prompt_template = PromptTemplate.from_template(Text(template))\n        kwargs = dict_values_to_string(kwargs)\n        kwargs = {k: \"\\n\".join(v) if isinstance(v, list) else v for k, v in kwargs.items()}\n        try:\n            formated_prompt = prompt_template.format(**kwargs)\n        except Exception as exc:\n            raise ValueError(f\"Error formatting prompt: {exc}\") from exc\n        self.status = f'Prompt:\\n\"{formated_prompt}\"'\n        return formated_prompt\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "template": {
                "type": "prompt",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "Answer user's questions based on the document below:\n\n---\n\n{Document}\n\n---\n\nQuestion:\n{请检查这篇文章是否存在错别字？}\n\nAnswer:\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "template",
                "display_name": "Template",
                "advanced": false,
                "input_types": [
                  "Text"
                ],
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "_type": "CustomComponent",
              "Document": {
                "field_type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "Document",
                "display_name": "Document",
                "advanced": false,
                "input_types": [
                  "Document",
                  "BaseOutputParser",
                  "Record",
                  "Text"
                ],
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "type": "str"
              },
              "请检查这篇文章是否存在错别字？": {
                "field_type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "你是审校助手",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "请检查这篇文章是否存在错别字？",
                "display_name": "请检查这篇文章是否存在错别字？",
                "advanced": false,
                "input_types": [
                  "Document",
                  "BaseOutputParser",
                  "Record",
                  "Text"
                ],
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "type": "str"
              }
            },
            "description": "Create a prompt template with dynamic variables.",
            "icon": "prompts",
            "is_input": null,
            "is_output": null,
            "is_composition": null,
            "base_classes": [
              "object",
              "str",
              "Text"
            ],
            "name": "",
            "display_name": "Prompt",
            "documentation": "",
            "custom_fields": {
              "template": [
                "Document",
                "请检查这篇文章是否存在错别字？"
              ]
            },
            "output_types": [
              "Text"
            ],
            "full_path": null,
            "field_formatters": {},
            "frozen": false,
            "field_order": [],
            "beta": false,
            "error": null
          },
          "id": "Prompt-mtgZ0",
          "description": "Create a prompt template with dynamic variables.",
          "display_name": "Prompt"
        },
        "selected": false,
        "width": 384,
        "height": 478,
        "positionAbsolute": {
          "x": 37.38117101502269,
          "y": -24.661963988010598
        },
        "dragging": false
      },
      {
        "id": "File-hmJzZ",
        "type": "genericNode",
        "position": {
          "x": -501.82515208573386,
          "y": -84.70651283185228
        },
        "data": {
          "type": "File",
          "node": {
            "template": {
              "path": {
                "type": "file",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [
                  ".txt",
                  ".md",
                  ".mdx",
                  ".csv",
                  ".json",
                  ".yaml",
                  ".yml",
                  ".xml",
                  ".html",
                  ".htm",
                  ".pdf",
                  ".docx"
                ],
                "password": false,
                "name": "path",
                "display_name": "Path",
                "advanced": false,
                "dynamic": false,
                "info": "Supported file types: txt, md, mdx, csv, json, yaml, yml, xml, html, htm, pdf, docx",
                "load_from_db": false,
                "title_case": false,
                "value": "",
                "file_path": "/Users/xuanhungho/Library/Caches/axiestudio/7dd484a9-62d0-473e-89b0-b7aa819a1496/a159848caab051bcff5b7fe3d7ad7261c1132d166359cf08dd370a9de166087e.pdf"
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from pathlib import Path\nfrom typing import Any, Dict\n\nfrom axiestudio.base.data.utils import TEXT_FILE_TYPES, parse_text_file_to_record\nfrom axiestudio.interface.custom.custom_component import CustomComponent\nfrom axiestudio.schema import Record\n\n\nclass FileComponent(CustomComponent):\n    display_name = \"Files\"\n    description = \"A generic file loader.\"\n\n    def build_config(self) -> Dict[str, Any]:\n        return {\n            \"path\": {\n                \"display_name\": \"Path\",\n                \"field_type\": \"file\",\n                \"file_types\": TEXT_FILE_TYPES,\n                \"info\": f\"Supported file types: {', '.join(TEXT_FILE_TYPES)}\",\n            },\n            \"silent_errors\": {\n                \"display_name\": \"Silent Errors\",\n                \"advanced\": True,\n                \"info\": \"If true, errors will not raise an exception.\",\n            },\n        }\n\n    def load_file(self, path: str, silent_errors: bool = False) -> Record:\n        resolved_path = self.resolve_path(path)\n        path_obj = Path(resolved_path)\n        extension = path_obj.suffix[1:].lower()\n        if extension == \"doc\":\n            raise ValueError(\"doc files are not supported. Please save as .docx\")\n        if extension not in TEXT_FILE_TYPES:\n            raise ValueError(f\"Unsupported file type: {extension}\")\n        record = parse_text_file_to_record(resolved_path, silent_errors)\n        self.status = record if record else \"No data\"\n        return record or Record()\n\n    def build(\n        self,\n        path: str,\n        silent_errors: bool = False,\n    ) -> Record:\n        record = self.load_file(path, silent_errors)\n        self.status = record\n        return record\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "silent_errors": {
                "type": "bool",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "silent_errors",
                "display_name": "Silent Errors",
                "advanced": true,
                "dynamic": false,
                "info": "If true, errors will not raise an exception.",
                "load_from_db": false,
                "title_case": false
              },
              "_type": "CustomComponent"
            },
            "description": "A generic file loader.",
            "base_classes": [
              "Record"
            ],
            "display_name": "Files",
            "documentation": "",
            "custom_fields": {
              "path": null,
              "silent_errors": null
            },
            "output_types": [
              "Record"
            ],
            "field_formatters": {},
            "frozen": false,
            "field_order": [],
            "beta": false
          },
          "id": "File-hmJzZ"
        },
        "selected": false,
        "width": 384,
        "height": 282,
        "positionAbsolute": {
          "x": -501.82515208573386,
          "y": -84.70651283185228
        },
        "dragging": false
      },
      {
        "id": "ChatOutput-Hy8R4",
        "type": "genericNode",
        "position": {
          "x": 1325.9339755037443,
          "y": 125.4782107726206
        },
        "data": {
          "type": "ChatOutput",
          "node": {
            "template": {
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from typing import Optional, Union\n\nfrom axiestudio.base.io.chat import ChatComponent\nfrom axiestudio.field_typing import Text\nfrom axiestudio.schema import Record\n\n\nclass ChatOutput(ChatComponent):\n    display_name = \"Chat Output\"\n    description = \"Display a chat message in the Interaction Panel.\"\n    icon = \"ChatOutput\"\n\n    def build(\n        self,\n        sender: Optional[str] = \"Machine\",\n        sender_name: Optional[str] = \"AI\",\n        input_value: Optional[str] = None,\n        session_id: Optional[str] = None,\n        return_record: Optional[bool] = False,\n        record_template: Optional[str] = \"{text}\",\n    ) -> Union[Text, Record]:\n        return super().build_with_record(\n            sender=sender,\n            sender_name=sender_name,\n            input_value=input_value,\n            session_id=session_id,\n            return_record=return_record,\n            record_template=record_template or \"\",\n        )\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "input_value": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "input_value",
                "display_name": "Message",
                "advanced": false,
                "input_types": [
                  "Text"
                ],
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "return_record": {
                "type": "bool",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "return_record",
                "display_name": "Return Record",
                "advanced": true,
                "dynamic": false,
                "info": "Return the message as a record containing the sender, sender_name, and session_id.",
                "load_from_db": false,
                "title_case": false
              },
              "sender": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "Machine",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "options": [
                  "Machine",
                  "User"
                ],
                "name": "sender",
                "display_name": "Sender Type",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              },
              "sender_name": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "AI",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "sender_name",
                "display_name": "Sender Name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              },
              "session_id": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "session_id",
                "display_name": "Session ID",
                "advanced": true,
                "dynamic": false,
                "info": "If provided, the message will be stored in the memory.",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              },
              "_type": "CustomComponent"
            },
            "description": "Display a chat message in the Interaction Panel.",
            "icon": "ChatOutput",
            "base_classes": [
              "str",
              "Record",
              "Text",
              "object"
            ],
            "display_name": "Chat Output",
            "documentation": "",
            "custom_fields": {
              "sender": null,
              "sender_name": null,
              "input_value": null,
              "session_id": null,
              "return_record": null
            },
            "output_types": [
              "Text",
              "Record"
            ],
            "field_formatters": {},
            "frozen": false,
            "field_order": [],
            "beta": false
          },
          "id": "ChatOutput-Hy8R4"
        },
        "selected": false,
        "width": 384,
        "height": 382,
        "positionAbsolute": {
          "x": 1325.9339755037443,
          "y": 125.4782107726206
        },
        "dragging": false
      },
      {
        "id": "BaiduQianfanChatModel-aHrPp",
        "type": "genericNode",
        "position": {
          "x": 588.1062457074893,
          "y": -8.931177919720938
        },
        "data": {
          "type": "BaiduQianfanChatModel",
          "node": {
            "template": {
              "input_value": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "input_value",
                "display_name": "Input",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from typing import Optional\n\nfrom langchain_community.chat_models.baidu_qianfan_endpoint import QianfanChatEndpoint\nfrom pydantic.v1 import SecretStr\n\nfrom axiestudio.base.constants import STREAM_INFO_TEXT\nfrom axiestudio.base.models.model import LCModelComponent\nfrom axiestudio.field_typing import Text\n\n\nclass QianfanChatEndpointComponent(LCModelComponent):\n    display_name: str = \"Qianfan\"\n    description: str = \"Generate text using Baidu Qianfan LLMs.\"\n    documentation: str = \"https://python.langchain.com/docs/integrations/chat/baidu_qianfan_endpoint.\"\n    icon = \"BaiduQianfan\"\n\n    field_order = [\n        \"model\",\n        \"qianfan_ak\",\n        \"qianfan_sk\",\n        \"top_p\",\n        \"temperature\",\n        \"penalty_score\",\n        \"endpoint\",\n        \"input_value\",\n        \"system_message\",\n        \"stream\",\n    ]\n\n    def build_config(self):\n        return {\n            \"model\": {\n                \"display_name\": \"Model Name\",\n                \"options\": [\n                    \"ERNIE-Bot\",\n                    \"ERNIE-Bot-turbo\",\n                    \"BLOOMZ-7B\",\n                    \"Llama-2-7b-chat\",\n                    \"Llama-2-13b-chat\",\n                    \"Llama-2-70b-chat\",\n                    \"Qianfan-BLOOMZ-7B-compressed\",\n                    \"Qianfan-Chinese-Llama-2-7B\",\n                    \"ChatGLM2-6B-32K\",\n                    \"AquilaChat-7B\",\n                ],\n                \"info\": \"https://python.langchain.com/docs/integrations/chat/baidu_qianfan_endpoint\",\n                \"value\": \"ERNIE-Bot-turbo\",\n            },\n            \"qianfan_ak\": {\n                \"display_name\": \"Qianfan Ak\",\n                \"password\": True,\n                \"info\": \"which you could get from  https://cloud.baidu.com/product/wenxinworkshop\",\n            },\n            \"qianfan_sk\": {\n                \"display_name\": \"Qianfan Sk\",\n                \"password\": True,\n                \"info\": \"which you could get from  https://cloud.baidu.com/product/wenxinworkshop\",\n            },\n            \"top_p\": {\n                \"display_name\": \"Top p\",\n                \"field_type\": \"float\",\n                \"info\": \"Model params, only supported in ERNIE-Bot and ERNIE-Bot-turbo\",\n                \"value\": 0.8,\n                \"advanced\": True,\n            },\n            \"temperature\": {\n                \"display_name\": \"Temperature\",\n                \"field_type\": \"float\",\n                \"info\": \"Model params, only supported in ERNIE-Bot and ERNIE-Bot-turbo\",\n                \"value\": 0.95,\n            },\n            \"penalty_score\": {\n                \"display_name\": \"Penalty Score\",\n                \"field_type\": \"float\",\n                \"info\": \"Model params, only supported in ERNIE-Bot and ERNIE-Bot-turbo\",\n                \"value\": 1.0,\n                \"advanced\": True,\n            },\n            \"endpoint\": {\n                \"display_name\": \"Endpoint\",\n                \"info\": \"Endpoint of the Qianfan LLM, required if custom model used.\",\n            },\n            \"code\": {\"show\": False},\n            \"input_value\": {\"display_name\": \"Input\"},\n            \"stream\": {\n                \"display_name\": \"Stream\",\n                \"info\": STREAM_INFO_TEXT,\n                \"advanced\": True,\n            },\n            \"system_message\": {\n                \"display_name\": \"System Message\",\n                \"info\": \"System message to pass to the model.\",\n                \"advanced\": True,\n            },\n        }\n\n    def build(\n        self,\n        input_value: Text,\n        qianfan_ak: str,\n        qianfan_sk: str,\n        model: str,\n        top_p: Optional[float] = None,\n        temperature: Optional[float] = None,\n        penalty_score: Optional[float] = None,\n        endpoint: Optional[str] = None,\n        stream: bool = False,\n        system_message: Optional[str] = None,\n    ) -> Text:\n        try:\n            output = QianfanChatEndpoint(  # type: ignore\n                model=model,\n                qianfan_ak=SecretStr(qianfan_ak) if qianfan_ak else None,\n                qianfan_sk=SecretStr(qianfan_sk) if qianfan_sk else None,\n                top_p=top_p,\n                temperature=temperature,\n                penalty_score=penalty_score,\n                endpoint=endpoint,\n            )\n        except Exception as e:\n            raise ValueError(\"Could not connect to Baidu Qianfan API.\") from e\n\n        return self.get_chat_result(output, stream, input_value, system_message)\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "endpoint": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "endpoint",
                "display_name": "Endpoint",
                "advanced": false,
                "dynamic": false,
                "info": "Endpoint of the Qianfan LLM, required if custom model used.",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "您好"
              },
              "model": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "Llama-2-7b-chat",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "options": [
                  "ERNIE-Bot",
                  "ERNIE-Bot-turbo",
                  "BLOOMZ-7B",
                  "Llama-2-7b-chat",
                  "Llama-2-13b-chat",
                  "Llama-2-70b-chat",
                  "Qianfan-BLOOMZ-7B-compressed",
                  "Qianfan-Chinese-Llama-2-7B",
                  "ChatGLM2-6B-32K",
                  "AquilaChat-7B"
                ],
                "name": "model",
                "display_name": "Model Name",
                "advanced": false,
                "dynamic": false,
                "info": "https://python.langchain.com/docs/integrations/chat/baidu_qianfan_endpoint",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              },
              "penalty_score": {
                "type": "float",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": 1,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "penalty_score",
                "display_name": "Penalty Score",
                "advanced": true,
                "dynamic": false,
                "info": "Model params, only supported in ERNIE-Bot and ERNIE-Bot-turbo",
                "rangeSpec": {
                  "step_type": "float",
                  "min": -1,
                  "max": 1,
                  "step": 0.1
                },
                "load_from_db": false,
                "title_case": false
              },
              "qianfan_ak": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": true,
                "name": "qianfan_ak",
                "display_name": "Qianfan Ak",
                "advanced": false,
                "dynamic": false,
                "info": "which you could get from  https://cloud.baidu.com/product/wenxinworkshop",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": ""
              },
              "qianfan_sk": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": true,
                "name": "qianfan_sk",
                "display_name": "Qianfan Sk",
                "advanced": false,
                "dynamic": false,
                "info": "which you could get from  https://cloud.baidu.com/product/wenxinworkshop",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": ""
              },
              "stream": {
                "type": "bool",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "stream",
                "display_name": "Stream",
                "advanced": true,
                "dynamic": false,
                "info": "Stream the response from the model. Streaming works only in Chat.",
                "load_from_db": false,
                "title_case": false
              },
              "system_message": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "system_message",
                "display_name": "System Message",
                "advanced": true,
                "dynamic": false,
                "info": "System message to pass to the model.",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              },
              "temperature": {
                "type": "float",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": 0.95,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "temperature",
                "display_name": "Temperature",
                "advanced": false,
                "dynamic": false,
                "info": "Model params, only supported in ERNIE-Bot and ERNIE-Bot-turbo",
                "rangeSpec": {
                  "step_type": "float",
                  "min": -1,
                  "max": 1,
                  "step": 0.1
                },
                "load_from_db": false,
                "title_case": false
              },
              "top_p": {
                "type": "float",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": 0.8,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "top_p",
                "display_name": "Top p",
                "advanced": true,
                "dynamic": false,
                "info": "Model params, only supported in ERNIE-Bot and ERNIE-Bot-turbo",
                "rangeSpec": {
                  "step_type": "float",
                  "min": -1,
                  "max": 1,
                  "step": 0.1
                },
                "load_from_db": false,
                "title_case": false
              },
              "_type": "CustomComponent"
            },
            "description": "Generate text using Baidu Qianfan LLMs.",
            "icon": "BaiduQianfan",
            "base_classes": [
              "object",
              "str",
              "Text"
            ],
            "display_name": "Qianfan",
            "documentation": "https://python.langchain.com/docs/integrations/chat/baidu_qianfan_endpoint.",
            "custom_fields": {
              "input_value": null,
              "qianfan_ak": null,
              "qianfan_sk": null,
              "model": null,
              "top_p": null,
              "temperature": null,
              "penalty_score": null,
              "endpoint": null,
              "stream": null,
              "system_message": null
            },
            "output_types": [
              "Text"
            ],
            "field_formatters": {},
            "frozen": false,
            "field_order": [
              "model",
              "qianfan_ak",
              "qianfan_sk",
              "top_p",
              "temperature",
              "penalty_score",
              "endpoint",
              "input_value",
              "system_message",
              "stream"
            ],
            "beta": false
          },
          "id": "BaiduQianfanChatModel-aHrPp"
        },
        "selected": true,
        "width": 384,
        "height": 751,
        "positionAbsolute": {
          "x": 588.1062457074893,
          "y": -8.931177919720938
        },
        "dragging": false
      }
    ],
    "edges": [
      {
        "source": "File-hmJzZ",
        "sourceHandle": "{œbaseClassesœ:[œRecordœ],œdataTypeœ:œFileœ,œidœ:œFile-hmJzZœ}",
        "target": "Prompt-mtgZ0",
        "targetHandle": "{œfieldNameœ:œDocumentœ,œidœ:œPrompt-mtgZ0œ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ,œRecordœ,œTextœ],œtypeœ:œstrœ}",
        "data": {
          "targetHandle": {
            "fieldName": "Document",
            "id": "Prompt-mtgZ0",
            "inputTypes": [
              "Document",
              "BaseOutputParser",
              "Record",
              "Text"
            ],
            "type": "str"
          },
          "sourceHandle": {
            "baseClasses": [
              "Record"
            ],
            "dataType": "File",
            "id": "File-hmJzZ"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-gray-900  stroke-connection",
        "id": "reactflow__edge-File-hmJzZ{œbaseClassesœ:[œRecordœ],œdataTypeœ:œFileœ,œidœ:œFile-hmJzZœ}-Prompt-mtgZ0{œfieldNameœ:œDocumentœ,œidœ:œPrompt-mtgZ0œ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ,œRecordœ,œTextœ],œtypeœ:œstrœ}",
        "animated": false
      },
      {
        "source": "Prompt-mtgZ0",
        "sourceHandle": "{œbaseClassesœ:[œobjectœ,œstrœ,œTextœ],œdataTypeœ:œPromptœ,œidœ:œPrompt-mtgZ0œ}",
        "target": "BaiduQianfanChatModel-aHrPp",
        "targetHandle": "{œfieldNameœ:œinput_valueœ,œidœ:œBaiduQianfanChatModel-aHrPpœ,œinputTypesœ:[œTextœ],œtypeœ:œstrœ}",
        "data": {
          "targetHandle": {
            "fieldName": "input_value",
            "id": "BaiduQianfanChatModel-aHrPp",
            "inputTypes": [
              "Text"
            ],
            "type": "str"
          },
          "sourceHandle": {
            "baseClasses": [
              "object",
              "str",
              "Text"
            ],
            "dataType": "Prompt",
            "id": "Prompt-mtgZ0"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-gray-900  stroke-connection",
        "id": "reactflow__edge-Prompt-mtgZ0{œbaseClassesœ:[œobjectœ,œstrœ,œTextœ],œdataTypeœ:œPromptœ,œidœ:œPrompt-mtgZ0œ}-BaiduQianfanChatModel-aHrPp{œfieldNameœ:œinput_valueœ,œidœ:œBaiduQianfanChatModel-aHrPpœ,œinputTypesœ:[œTextœ],œtypeœ:œstrœ}",
        "animated": false
      },
      {
        "source": "BaiduQianfanChatModel-aHrPp",
        "sourceHandle": "{œbaseClassesœ:[œobjectœ,œstrœ,œTextœ],œdataTypeœ:œBaiduQianfanChatModelœ,œidœ:œBaiduQianfanChatModel-aHrPpœ}",
        "target": "ChatOutput-Hy8R4",
        "targetHandle": "{œfieldNameœ:œinput_valueœ,œidœ:œChatOutput-Hy8R4œ,œinputTypesœ:[œTextœ],œtypeœ:œstrœ}",
        "data": {
          "targetHandle": {
            "fieldName": "input_value",
            "id": "ChatOutput-Hy8R4",
            "inputTypes": [
              "Text"
            ],
            "type": "str"
          },
          "sourceHandle": {
            "baseClasses": [
              "object",
              "str",
              "Text"
            ],
            "dataType": "BaiduQianfanChatModel",
            "id": "BaiduQianfanChatModel-aHrPp"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-gray-900  stroke-connection",
        "id": "reactflow__edge-BaiduQianfanChatModel-aHrPp{œbaseClassesœ:[œobjectœ,œstrœ,œTextœ],œdataTypeœ:œBaiduQianfanChatModelœ,œidœ:œBaiduQianfanChatModel-aHrPpœ}-ChatOutput-Hy8R4{œfieldNameœ:œinput_valueœ,œidœ:œChatOutput-Hy8R4œ,œinputTypesœ:[œTextœ],œtypeœ:œstrœ}",
        "animated": false
      }
    ],
    "viewport": {
      "x": 498.29301054866136,
      "y": 186.0446530215318,
      "zoom": 0.6651454088302746
    }
  },
  "metadata": {
    "Prompt": {
      "count": 1
    },
    "File": {
      "count": 1
    },
    "ChatOutput": {
      "count": 1
    },
    "BaiduQianfanChatModel": {
      "count": 1
    },
    "total": 4
  },
  "original": {
    "id": "56d145c1-59a4-4510-b05b-a007bb004029",
    "name": "Document QA",
    "description": "This flow integrates PDF reading with a language model to answer document-specific questions. Ideal for small-scale texts, it facilitates direct queries with immediate insights.",
    "is_component": false,
    "liked_by_count": "1",
    "downloads_count": "26",
    "metadata": {
      "Prompt": {
        "count": 1
      },
      "File": {
        "count": 1
      },
      "ChatOutput": {
        "count": 1
      },
      "BaiduQianfanChatModel": {
        "count": 1
      },
      "total": 4
    },
    "last_tested_version": "0.6.19",
    "private": false,
    "data": {
      "nodes": [
        {
          "id": "Prompt-mtgZ0",
          "type": "genericNode",
          "position": {
            "x": 37.38117101502269,
            "y": -24.661963988010598
          },
          "data": {
            "type": "Prompt",
            "node": {
              "template": {
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from langchain_core.prompts import PromptTemplate\n\nfrom axiestudio.field_typing import Prompt, TemplateField, Text\nfrom axiestudio.interface.custom.custom_component import CustomComponent\n\n\nclass PromptComponent(CustomComponent):\n    display_name: str = \"Prompt\"\n    description: str = \"Create a prompt template with dynamic variables.\"\n    icon = \"prompts\"\n\n    def build_config(self):\n        return {\n            \"template\": TemplateField(display_name=\"Template\"),\n            \"code\": TemplateField(advanced=True),\n        }\n\n    def build(\n        self,\n        template: Prompt,\n        **kwargs,\n    ) -> Text:\n        from axiestudio.base.prompts.utils import dict_values_to_string\n\n        prompt_template = PromptTemplate.from_template(Text(template))\n        kwargs = dict_values_to_string(kwargs)\n        kwargs = {k: \"\\n\".join(v) if isinstance(v, list) else v for k, v in kwargs.items()}\n        try:\n            formated_prompt = prompt_template.format(**kwargs)\n        except Exception as exc:\n            raise ValueError(f\"Error formatting prompt: {exc}\") from exc\n        self.status = f'Prompt:\\n\"{formated_prompt}\"'\n        return formated_prompt\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "template": {
                  "type": "prompt",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "Answer user's questions based on the document below:\n\n---\n\n{Document}\n\n---\n\nQuestion:\n{请检查这篇文章是否存在错别字？}\n\nAnswer:\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "template",
                  "display_name": "Template",
                  "advanced": false,
                  "input_types": [
                    "Text"
                  ],
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "_type": "CustomComponent",
                "Document": {
                  "field_type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "Document",
                  "display_name": "Document",
                  "advanced": false,
                  "input_types": [
                    "Document",
                    "BaseOutputParser",
                    "Record",
                    "Text"
                  ],
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "type": "str"
                },
                "请检查这篇文章是否存在错别字？": {
                  "field_type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "你是审校助手",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "请检查这篇文章是否存在错别字？",
                  "display_name": "请检查这篇文章是否存在错别字？",
                  "advanced": false,
                  "input_types": [
                    "Document",
                    "BaseOutputParser",
                    "Record",
                    "Text"
                  ],
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "type": "str"
                }
              },
              "description": "Create a prompt template with dynamic variables.",
              "icon": "prompts",
              "is_input": null,
              "is_output": null,
              "is_composition": null,
              "base_classes": [
                "object",
                "str",
                "Text"
              ],
              "name": "",
              "display_name": "Prompt",
              "documentation": "",
              "custom_fields": {
                "template": [
                  "Document",
                  "请检查这篇文章是否存在错别字？"
                ]
              },
              "output_types": [
                "Text"
              ],
              "full_path": null,
              "field_formatters": {},
              "frozen": false,
              "field_order": [],
              "beta": false,
              "error": null
            },
            "id": "Prompt-mtgZ0",
            "description": "Create a prompt template with dynamic variables.",
            "display_name": "Prompt"
          },
          "selected": false,
          "width": 384,
          "height": 478,
          "positionAbsolute": {
            "x": 37.38117101502269,
            "y": -24.661963988010598
          },
          "dragging": false
        },
        {
          "id": "File-hmJzZ",
          "type": "genericNode",
          "position": {
            "x": -501.82515208573386,
            "y": -84.70651283185228
          },
          "data": {
            "type": "File",
            "node": {
              "template": {
                "path": {
                  "type": "file",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [
                    ".txt",
                    ".md",
                    ".mdx",
                    ".csv",
                    ".json",
                    ".yaml",
                    ".yml",
                    ".xml",
                    ".html",
                    ".htm",
                    ".pdf",
                    ".docx"
                  ],
                  "password": false,
                  "name": "path",
                  "display_name": "Path",
                  "advanced": false,
                  "dynamic": false,
                  "info": "Supported file types: txt, md, mdx, csv, json, yaml, yml, xml, html, htm, pdf, docx",
                  "load_from_db": false,
                  "title_case": false,
                  "value": "",
                  "file_path": "/Users/xuanhungho/Library/Caches/axiestudio/7dd484a9-62d0-473e-89b0-b7aa819a1496/a159848caab051bcff5b7fe3d7ad7261c1132d166359cf08dd370a9de166087e.pdf"
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from pathlib import Path\nfrom typing import Any, Dict\n\nfrom axiestudio.base.data.utils import TEXT_FILE_TYPES, parse_text_file_to_record\nfrom axiestudio.interface.custom.custom_component import CustomComponent\nfrom axiestudio.schema import Record\n\n\nclass FileComponent(CustomComponent):\n    display_name = \"Files\"\n    description = \"A generic file loader.\"\n\n    def build_config(self) -> Dict[str, Any]:\n        return {\n            \"path\": {\n                \"display_name\": \"Path\",\n                \"field_type\": \"file\",\n                \"file_types\": TEXT_FILE_TYPES,\n                \"info\": f\"Supported file types: {', '.join(TEXT_FILE_TYPES)}\",\n            },\n            \"silent_errors\": {\n                \"display_name\": \"Silent Errors\",\n                \"advanced\": True,\n                \"info\": \"If true, errors will not raise an exception.\",\n            },\n        }\n\n    def load_file(self, path: str, silent_errors: bool = False) -> Record:\n        resolved_path = self.resolve_path(path)\n        path_obj = Path(resolved_path)\n        extension = path_obj.suffix[1:].lower()\n        if extension == \"doc\":\n            raise ValueError(\"doc files are not supported. Please save as .docx\")\n        if extension not in TEXT_FILE_TYPES:\n            raise ValueError(f\"Unsupported file type: {extension}\")\n        record = parse_text_file_to_record(resolved_path, silent_errors)\n        self.status = record if record else \"No data\"\n        return record or Record()\n\n    def build(\n        self,\n        path: str,\n        silent_errors: bool = False,\n    ) -> Record:\n        record = self.load_file(path, silent_errors)\n        self.status = record\n        return record\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "silent_errors": {
                  "type": "bool",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "silent_errors",
                  "display_name": "Silent Errors",
                  "advanced": true,
                  "dynamic": false,
                  "info": "If true, errors will not raise an exception.",
                  "load_from_db": false,
                  "title_case": false
                },
                "_type": "CustomComponent"
              },
              "description": "A generic file loader.",
              "base_classes": [
                "Record"
              ],
              "display_name": "Files",
              "documentation": "",
              "custom_fields": {
                "path": null,
                "silent_errors": null
              },
              "output_types": [
                "Record"
              ],
              "field_formatters": {},
              "frozen": false,
              "field_order": [],
              "beta": false
            },
            "id": "File-hmJzZ"
          },
          "selected": false,
          "width": 384,
          "height": 282,
          "positionAbsolute": {
            "x": -501.82515208573386,
            "y": -84.70651283185228
          },
          "dragging": false
        },
        {
          "id": "ChatOutput-Hy8R4",
          "type": "genericNode",
          "position": {
            "x": 1325.9339755037443,
            "y": 125.4782107726206
          },
          "data": {
            "type": "ChatOutput",
            "node": {
              "template": {
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from typing import Optional, Union\n\nfrom axiestudio.base.io.chat import ChatComponent\nfrom axiestudio.field_typing import Text\nfrom axiestudio.schema import Record\n\n\nclass ChatOutput(ChatComponent):\n    display_name = \"Chat Output\"\n    description = \"Display a chat message in the Interaction Panel.\"\n    icon = \"ChatOutput\"\n\n    def build(\n        self,\n        sender: Optional[str] = \"Machine\",\n        sender_name: Optional[str] = \"AI\",\n        input_value: Optional[str] = None,\n        session_id: Optional[str] = None,\n        return_record: Optional[bool] = False,\n        record_template: Optional[str] = \"{text}\",\n    ) -> Union[Text, Record]:\n        return super().build_with_record(\n            sender=sender,\n            sender_name=sender_name,\n            input_value=input_value,\n            session_id=session_id,\n            return_record=return_record,\n            record_template=record_template or \"\",\n        )\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "input_value": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "input_value",
                  "display_name": "Message",
                  "advanced": false,
                  "input_types": [
                    "Text"
                  ],
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "return_record": {
                  "type": "bool",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "return_record",
                  "display_name": "Return Record",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Return the message as a record containing the sender, sender_name, and session_id.",
                  "load_from_db": false,
                  "title_case": false
                },
                "sender": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "Machine",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "options": [
                    "Machine",
                    "User"
                  ],
                  "name": "sender",
                  "display_name": "Sender Type",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                },
                "sender_name": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "AI",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "sender_name",
                  "display_name": "Sender Name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                },
                "session_id": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "session_id",
                  "display_name": "Session ID",
                  "advanced": true,
                  "dynamic": false,
                  "info": "If provided, the message will be stored in the memory.",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                },
                "_type": "CustomComponent"
              },
              "description": "Display a chat message in the Interaction Panel.",
              "icon": "ChatOutput",
              "base_classes": [
                "str",
                "Record",
                "Text",
                "object"
              ],
              "display_name": "Chat Output",
              "documentation": "",
              "custom_fields": {
                "sender": null,
                "sender_name": null,
                "input_value": null,
                "session_id": null,
                "return_record": null
              },
              "output_types": [
                "Text",
                "Record"
              ],
              "field_formatters": {},
              "frozen": false,
              "field_order": [],
              "beta": false
            },
            "id": "ChatOutput-Hy8R4"
          },
          "selected": false,
          "width": 384,
          "height": 382,
          "positionAbsolute": {
            "x": 1325.9339755037443,
            "y": 125.4782107726206
          },
          "dragging": false
        },
        {
          "id": "BaiduQianfanChatModel-aHrPp",
          "type": "genericNode",
          "position": {
            "x": 588.1062457074893,
            "y": -8.931177919720938
          },
          "data": {
            "type": "BaiduQianfanChatModel",
            "node": {
              "template": {
                "input_value": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "input_value",
                  "display_name": "Input",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from typing import Optional\n\nfrom langchain_community.chat_models.baidu_qianfan_endpoint import QianfanChatEndpoint\nfrom pydantic.v1 import SecretStr\n\nfrom axiestudio.base.constants import STREAM_INFO_TEXT\nfrom axiestudio.base.models.model import LCModelComponent\nfrom axiestudio.field_typing import Text\n\n\nclass QianfanChatEndpointComponent(LCModelComponent):\n    display_name: str = \"Qianfan\"\n    description: str = \"Generate text using Baidu Qianfan LLMs.\"\n    documentation: str = \"https://python.langchain.com/docs/integrations/chat/baidu_qianfan_endpoint.\"\n    icon = \"BaiduQianfan\"\n\n    field_order = [\n        \"model\",\n        \"qianfan_ak\",\n        \"qianfan_sk\",\n        \"top_p\",\n        \"temperature\",\n        \"penalty_score\",\n        \"endpoint\",\n        \"input_value\",\n        \"system_message\",\n        \"stream\",\n    ]\n\n    def build_config(self):\n        return {\n            \"model\": {\n                \"display_name\": \"Model Name\",\n                \"options\": [\n                    \"ERNIE-Bot\",\n                    \"ERNIE-Bot-turbo\",\n                    \"BLOOMZ-7B\",\n                    \"Llama-2-7b-chat\",\n                    \"Llama-2-13b-chat\",\n                    \"Llama-2-70b-chat\",\n                    \"Qianfan-BLOOMZ-7B-compressed\",\n                    \"Qianfan-Chinese-Llama-2-7B\",\n                    \"ChatGLM2-6B-32K\",\n                    \"AquilaChat-7B\",\n                ],\n                \"info\": \"https://python.langchain.com/docs/integrations/chat/baidu_qianfan_endpoint\",\n                \"value\": \"ERNIE-Bot-turbo\",\n            },\n            \"qianfan_ak\": {\n                \"display_name\": \"Qianfan Ak\",\n                \"password\": True,\n                \"info\": \"which you could get from  https://cloud.baidu.com/product/wenxinworkshop\",\n            },\n            \"qianfan_sk\": {\n                \"display_name\": \"Qianfan Sk\",\n                \"password\": True,\n                \"info\": \"which you could get from  https://cloud.baidu.com/product/wenxinworkshop\",\n            },\n            \"top_p\": {\n                \"display_name\": \"Top p\",\n                \"field_type\": \"float\",\n                \"info\": \"Model params, only supported in ERNIE-Bot and ERNIE-Bot-turbo\",\n                \"value\": 0.8,\n                \"advanced\": True,\n            },\n            \"temperature\": {\n                \"display_name\": \"Temperature\",\n                \"field_type\": \"float\",\n                \"info\": \"Model params, only supported in ERNIE-Bot and ERNIE-Bot-turbo\",\n                \"value\": 0.95,\n            },\n            \"penalty_score\": {\n                \"display_name\": \"Penalty Score\",\n                \"field_type\": \"float\",\n                \"info\": \"Model params, only supported in ERNIE-Bot and ERNIE-Bot-turbo\",\n                \"value\": 1.0,\n                \"advanced\": True,\n            },\n            \"endpoint\": {\n                \"display_name\": \"Endpoint\",\n                \"info\": \"Endpoint of the Qianfan LLM, required if custom model used.\",\n            },\n            \"code\": {\"show\": False},\n            \"input_value\": {\"display_name\": \"Input\"},\n            \"stream\": {\n                \"display_name\": \"Stream\",\n                \"info\": STREAM_INFO_TEXT,\n                \"advanced\": True,\n            },\n            \"system_message\": {\n                \"display_name\": \"System Message\",\n                \"info\": \"System message to pass to the model.\",\n                \"advanced\": True,\n            },\n        }\n\n    def build(\n        self,\n        input_value: Text,\n        qianfan_ak: str,\n        qianfan_sk: str,\n        model: str,\n        top_p: Optional[float] = None,\n        temperature: Optional[float] = None,\n        penalty_score: Optional[float] = None,\n        endpoint: Optional[str] = None,\n        stream: bool = False,\n        system_message: Optional[str] = None,\n    ) -> Text:\n        try:\n            output = QianfanChatEndpoint(  # type: ignore\n                model=model,\n                qianfan_ak=SecretStr(qianfan_ak) if qianfan_ak else None,\n                qianfan_sk=SecretStr(qianfan_sk) if qianfan_sk else None,\n                top_p=top_p,\n                temperature=temperature,\n                penalty_score=penalty_score,\n                endpoint=endpoint,\n            )\n        except Exception as e:\n            raise ValueError(\"Could not connect to Baidu Qianfan API.\") from e\n\n        return self.get_chat_result(output, stream, input_value, system_message)\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "endpoint": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "endpoint",
                  "display_name": "Endpoint",
                  "advanced": false,
                  "dynamic": false,
                  "info": "Endpoint of the Qianfan LLM, required if custom model used.",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "您好"
                },
                "model": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "Llama-2-7b-chat",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "options": [
                    "ERNIE-Bot",
                    "ERNIE-Bot-turbo",
                    "BLOOMZ-7B",
                    "Llama-2-7b-chat",
                    "Llama-2-13b-chat",
                    "Llama-2-70b-chat",
                    "Qianfan-BLOOMZ-7B-compressed",
                    "Qianfan-Chinese-Llama-2-7B",
                    "ChatGLM2-6B-32K",
                    "AquilaChat-7B"
                  ],
                  "name": "model",
                  "display_name": "Model Name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "https://python.langchain.com/docs/integrations/chat/baidu_qianfan_endpoint",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                },
                "penalty_score": {
                  "type": "float",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": 1,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "penalty_score",
                  "display_name": "Penalty Score",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Model params, only supported in ERNIE-Bot and ERNIE-Bot-turbo",
                  "rangeSpec": {
                    "step_type": "float",
                    "min": -1,
                    "max": 1,
                    "step": 0.1
                  },
                  "load_from_db": false,
                  "title_case": false
                },
                "qianfan_ak": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": true,
                  "name": "qianfan_ak",
                  "display_name": "Qianfan Ak",
                  "advanced": false,
                  "dynamic": false,
                  "info": "which you could get from  https://cloud.baidu.com/product/wenxinworkshop",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": ""
                },
                "qianfan_sk": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": true,
                  "name": "qianfan_sk",
                  "display_name": "Qianfan Sk",
                  "advanced": false,
                  "dynamic": false,
                  "info": "which you could get from  https://cloud.baidu.com/product/wenxinworkshop",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": ""
                },
                "stream": {
                  "type": "bool",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "stream",
                  "display_name": "Stream",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Stream the response from the model. Streaming works only in Chat.",
                  "load_from_db": false,
                  "title_case": false
                },
                "system_message": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "system_message",
                  "display_name": "System Message",
                  "advanced": true,
                  "dynamic": false,
                  "info": "System message to pass to the model.",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                },
                "temperature": {
                  "type": "float",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": 0.95,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "temperature",
                  "display_name": "Temperature",
                  "advanced": false,
                  "dynamic": false,
                  "info": "Model params, only supported in ERNIE-Bot and ERNIE-Bot-turbo",
                  "rangeSpec": {
                    "step_type": "float",
                    "min": -1,
                    "max": 1,
                    "step": 0.1
                  },
                  "load_from_db": false,
                  "title_case": false
                },
                "top_p": {
                  "type": "float",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": 0.8,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "top_p",
                  "display_name": "Top p",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Model params, only supported in ERNIE-Bot and ERNIE-Bot-turbo",
                  "rangeSpec": {
                    "step_type": "float",
                    "min": -1,
                    "max": 1,
                    "step": 0.1
                  },
                  "load_from_db": false,
                  "title_case": false
                },
                "_type": "CustomComponent"
              },
              "description": "Generate text using Baidu Qianfan LLMs.",
              "icon": "BaiduQianfan",
              "base_classes": [
                "object",
                "str",
                "Text"
              ],
              "display_name": "Qianfan",
              "documentation": "https://python.langchain.com/docs/integrations/chat/baidu_qianfan_endpoint.",
              "custom_fields": {
                "input_value": null,
                "qianfan_ak": null,
                "qianfan_sk": null,
                "model": null,
                "top_p": null,
                "temperature": null,
                "penalty_score": null,
                "endpoint": null,
                "stream": null,
                "system_message": null
              },
              "output_types": [
                "Text"
              ],
              "field_formatters": {},
              "frozen": false,
              "field_order": [
                "model",
                "qianfan_ak",
                "qianfan_sk",
                "top_p",
                "temperature",
                "penalty_score",
                "endpoint",
                "input_value",
                "system_message",
                "stream"
              ],
              "beta": false
            },
            "id": "BaiduQianfanChatModel-aHrPp"
          },
          "selected": true,
          "width": 384,
          "height": 751,
          "positionAbsolute": {
            "x": 588.1062457074893,
            "y": -8.931177919720938
          },
          "dragging": false
        }
      ],
      "edges": [
        {
          "source": "File-hmJzZ",
          "sourceHandle": "{œbaseClassesœ:[œRecordœ],œdataTypeœ:œFileœ,œidœ:œFile-hmJzZœ}",
          "target": "Prompt-mtgZ0",
          "targetHandle": "{œfieldNameœ:œDocumentœ,œidœ:œPrompt-mtgZ0œ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ,œRecordœ,œTextœ],œtypeœ:œstrœ}",
          "data": {
            "targetHandle": {
              "fieldName": "Document",
              "id": "Prompt-mtgZ0",
              "inputTypes": [
                "Document",
                "BaseOutputParser",
                "Record",
                "Text"
              ],
              "type": "str"
            },
            "sourceHandle": {
              "baseClasses": [
                "Record"
              ],
              "dataType": "File",
              "id": "File-hmJzZ"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-gray-900  stroke-connection",
          "id": "reactflow__edge-File-hmJzZ{œbaseClassesœ:[œRecordœ],œdataTypeœ:œFileœ,œidœ:œFile-hmJzZœ}-Prompt-mtgZ0{œfieldNameœ:œDocumentœ,œidœ:œPrompt-mtgZ0œ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ,œRecordœ,œTextœ],œtypeœ:œstrœ}",
          "animated": false
        },
        {
          "source": "Prompt-mtgZ0",
          "sourceHandle": "{œbaseClassesœ:[œobjectœ,œstrœ,œTextœ],œdataTypeœ:œPromptœ,œidœ:œPrompt-mtgZ0œ}",
          "target": "BaiduQianfanChatModel-aHrPp",
          "targetHandle": "{œfieldNameœ:œinput_valueœ,œidœ:œBaiduQianfanChatModel-aHrPpœ,œinputTypesœ:[œTextœ],œtypeœ:œstrœ}",
          "data": {
            "targetHandle": {
              "fieldName": "input_value",
              "id": "BaiduQianfanChatModel-aHrPp",
              "inputTypes": [
                "Text"
              ],
              "type": "str"
            },
            "sourceHandle": {
              "baseClasses": [
                "object",
                "str",
                "Text"
              ],
              "dataType": "Prompt",
              "id": "Prompt-mtgZ0"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-gray-900  stroke-connection",
          "id": "reactflow__edge-Prompt-mtgZ0{œbaseClassesœ:[œobjectœ,œstrœ,œTextœ],œdataTypeœ:œPromptœ,œidœ:œPrompt-mtgZ0œ}-BaiduQianfanChatModel-aHrPp{œfieldNameœ:œinput_valueœ,œidœ:œBaiduQianfanChatModel-aHrPpœ,œinputTypesœ:[œTextœ],œtypeœ:œstrœ}",
          "animated": false
        },
        {
          "source": "BaiduQianfanChatModel-aHrPp",
          "sourceHandle": "{œbaseClassesœ:[œobjectœ,œstrœ,œTextœ],œdataTypeœ:œBaiduQianfanChatModelœ,œidœ:œBaiduQianfanChatModel-aHrPpœ}",
          "target": "ChatOutput-Hy8R4",
          "targetHandle": "{œfieldNameœ:œinput_valueœ,œidœ:œChatOutput-Hy8R4œ,œinputTypesœ:[œTextœ],œtypeœ:œstrœ}",
          "data": {
            "targetHandle": {
              "fieldName": "input_value",
              "id": "ChatOutput-Hy8R4",
              "inputTypes": [
                "Text"
              ],
              "type": "str"
            },
            "sourceHandle": {
              "baseClasses": [
                "object",
                "str",
                "Text"
              ],
              "dataType": "BaiduQianfanChatModel",
              "id": "BaiduQianfanChatModel-aHrPp"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-gray-900  stroke-connection",
          "id": "reactflow__edge-BaiduQianfanChatModel-aHrPp{œbaseClassesœ:[œobjectœ,œstrœ,œTextœ],œdataTypeœ:œBaiduQianfanChatModelœ,œidœ:œBaiduQianfanChatModel-aHrPpœ}-ChatOutput-Hy8R4{œfieldNameœ:œinput_valueœ,œidœ:œChatOutput-Hy8R4œ,œinputTypesœ:[œTextœ],œtypeœ:œstrœ}",
          "animated": false
        }
      ],
      "viewport": {
        "x": 498.29301054866136,
        "y": 186.0446530215318,
        "zoom": 0.6651454088302746
      }
    },
    "date_created": "2024-05-30T08:35:39.472Z",
    "date_updated": "2024-05-30T08:35:39.496Z",
    "status": "Public",
    "sort": null,
    "user_updated": "13c55d6c-be79-4411-a6af-42668a89bed1",
    "user_created": {
      "username": "hunghx",
      "first_name": "Xuân Hùng",
      "last_name": "Hồ",
      "id": "13c55d6c-be79-4411-a6af-42668a89bed1"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:08:58.205Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 26,
    "converter_version": "1.0.0"
  }
}