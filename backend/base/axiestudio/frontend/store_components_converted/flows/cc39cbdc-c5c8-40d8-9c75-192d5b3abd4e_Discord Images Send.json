{
  "id": "cc39cbdc-c5c8-40d8-9c75-192d5b3abd4e",
  "name": "Discord Images Send ",
  "description": "A simple flow containing the send/receiving images from a discord channel. (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "FLOW",
  "is_component": false,
  "author": {
    "username": "ygorbalves",
    "first_name": "Ygor",
    "last_name": "Alves",
    "id": "3785b674-1a4b-42da-9b4d-d028c7191975",
    "full_name": "Ygor Alves"
  },
  "store_url": "https://www.langflow.store/store/component/cc39cbdc-c5c8-40d8-9c75-192d5b3abd4e",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-05-23T03:14:05.501Z",
    "updated": "2024-05-23T04:25:20.330Z",
    "downloaded": "2025-08-19T17:50:05.172Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "1.0.0a36",
    "private": false,
    "status": "Public"
  },
  "data": {
    "nodes": [
      {
        "id": "ChatOutput-xRo0r",
        "type": "genericNode",
        "position": {
          "x": 712.4376910512364,
          "y": 1809.639624850638
        },
        "data": {
          "type": "ChatOutput",
          "node": {
            "template": {
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from typing import Optional, Union\n\nfrom axiestudio.base.io.chat import ChatComponent\nfrom axiestudio.field_typing import Text\nfrom axiestudio.schema import Record\n\n\nclass ChatOutput(ChatComponent):\n    display_name = \"Chat Output\"\n    description = \"Display a chat message in the Playground.\"\n    icon = \"ChatOutput\"\n\n    def build(\n        self,\n        sender: Optional[str] = \"Machine\",\n        sender_name: Optional[str] = \"AI\",\n        input_value: Optional[str] = None,\n        session_id: Optional[str] = None,\n        return_record: Optional[bool] = False,\n        record_template: Optional[str] = \"{text}\",\n    ) -> Union[Text, Record]:\n        return super().build_with_record(\n            sender=sender,\n            sender_name=sender_name,\n            input_value=input_value,\n            session_id=session_id,\n            return_record=return_record,\n            record_template=record_template or \"\",\n        )\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "input_value": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "input_value",
                "display_name": "Message",
                "advanced": false,
                "input_types": [
                  "Text"
                ],
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "record_template": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "{text}",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "record_template",
                "display_name": "Record Template",
                "advanced": true,
                "dynamic": false,
                "info": "In case of Message being a Record, this template will be used to convert it to text.",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              },
              "return_record": {
                "type": "bool",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "return_record",
                "display_name": "Return Record",
                "advanced": true,
                "dynamic": false,
                "info": "Return the message as a record containing the sender, sender_name, and session_id.",
                "load_from_db": false,
                "title_case": false
              },
              "sender": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "Machine",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "options": [
                  "Machine",
                  "User"
                ],
                "name": "sender",
                "display_name": "Sender Type",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              },
              "sender_name": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "AI",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "sender_name",
                "display_name": "Sender Name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              },
              "session_id": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "session_id",
                "display_name": "Session ID",
                "advanced": true,
                "dynamic": false,
                "info": "If provided, the message will be stored in the memory.",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              },
              "_type": "CustomComponent"
            },
            "description": "Display a chat message in the Playground.",
            "icon": "ChatOutput",
            "base_classes": [
              "object",
              "Record",
              "str",
              "Text"
            ],
            "display_name": "Chat Output",
            "documentation": "",
            "custom_fields": {
              "sender": null,
              "sender_name": null,
              "input_value": null,
              "session_id": null,
              "return_record": null,
              "record_template": null
            },
            "output_types": [
              "Text",
              "Record"
            ],
            "field_formatters": {},
            "frozen": false,
            "field_order": [],
            "beta": false
          },
          "id": "ChatOutput-xRo0r"
        },
        "selected": true,
        "width": 384,
        "height": 382,
        "positionAbsolute": {
          "x": 712.4376910512364,
          "y": 1809.639624850638
        },
        "dragging": false
      },
      {
        "id": "CustomComponent-wplX3",
        "type": "genericNode",
        "position": {
          "x": -187.83145026182632,
          "y": 1728.5793860606834
        },
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "channel_id": {
                "type": "int",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "channel_id",
                "display_name": "ChannelId",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "value": "1240496339968856094"
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from typing import Optional, Any\nfrom axiestudio import CustomComponent\nfrom axiestudio.schema import Record\nfrom tempfile import NamedTemporaryFile\nimport subprocess\nimport sys\nimport base64\nfrom json import loads\n\n\ndef install(package):\n    subprocess.check_call([sys.executable, \"-m\", \"pip\", \"install\", package])\n    return 1\n\ninstall(\"requests\")\n\nclass DiscordGetImage(CustomComponent):\n    display_name = \"DiscordGetImage\"\n    description = \"get the image from discord's channel\"\n    field_order = [\"token\", \"channel_id\", \"limit\"]\n    icon = \"Discord\"\n\n    def build_config(self) -> dict:\n        return {\n            \"token\": {\n                \"display_name\": \"Token\",\n                \"advanced\": False,\n                \"password\": True,\n                \"required\": True,\n            }, \"channel_id\": {\n                \"display_name\": \"ChannelId\",\n                \"advanced\": False,\n                \"required\": True,\n            }, \"limit\": {\n                \"display_name\": \"Limit\",\n                \"value\": 20,\n                \"advanced\": False,\n                \"info\": \"The value 0 means limitless\",\n                \"required\": True,\n            }\n        }\n\n\n    def build(self, token: str, channel_id: int,  limit: int) -> Record:\n        import requests\n        body = {\"token\": token, \"limit\": limit, \"content_type\": [\"png\", \"jpg\",\"jpeg\"]}\n        resp = requests.post(f\"http://discord:7880/api/v1/channels/{channel_id}/get_messages/last\", json=body)\n        if resp.status_code == 200:\n            file = loads(resp.content)\n            print(file.keys())\n            tmp_file = NamedTemporaryFile(delete=False, suffix=\".png\")\n            resolved_path = self.resolve_path(tmp_file.name)\n            print(tmp_file.name, type(tmp_file.name), type(file))\n            with open(tmp_file.name, 'wb') as f:  # Open the file in binary mode\n                f.write(base64.b64decode(file[\"content\"]))\n            return Record(data={\"file_path\": resolved_path, \"text\": file[\"content\"]})\n        else:\n            raise Exception(\"Timeout exception\")\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "limit": {
                "type": "int",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "10",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "limit",
                "display_name": "Limit",
                "advanced": false,
                "dynamic": false,
                "info": "The value 0 means limitless",
                "load_from_db": false,
                "title_case": false
              },
              "token": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": true,
                "name": "token",
                "display_name": "Token",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": ""
              },
              "_type": "CustomComponent"
            },
            "description": "get the image from discord's channel",
            "icon": "Discord",
            "base_classes": [
              "Record"
            ],
            "display_name": "DiscordGetImage",
            "documentation": "",
            "custom_fields": {
              "token": null,
              "channel_id": null,
              "limit": null
            },
            "output_types": [
              "Record"
            ],
            "field_formatters": {},
            "frozen": false,
            "field_order": [
              "token",
              "channel_id",
              "limit"
            ],
            "beta": false,
            "official": false
          },
          "id": "CustomComponent-wplX3"
        },
        "selected": false,
        "width": 384,
        "height": 460,
        "positionAbsolute": {
          "x": -187.83145026182632,
          "y": 1728.5793860606834
        },
        "dragging": false
      },
      {
        "id": "CustomComponent-MREHo",
        "type": "genericNode",
        "position": {
          "x": 266.21226826166185,
          "y": 1765.6161848526297
        },
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "file": {
                "type": "Record",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "file",
                "display_name": "File",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "channel_id": {
                "type": "int",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "channel_id",
                "display_name": "ChannelId",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "value": "1240496339968856094"
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from typing import Optional\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import Data\nfrom axiestudio.schema import Record\nimport subprocess\nimport sys\nimport base64\nimport re\n\ndef install(package):\n    subprocess.check_call([sys.executable, \"-m\", \"pip\", \"install\", package])\n    return 1\n\ninstall(\"requests\")\n\nclass DiscordImageSender(CustomComponent):\n    display_name = \"DiscordImageSender\"\n    description = \"Send image to discord's channel\"\n    field_order = [\"token\", \"channel_id\", \"file\"]\n    icon = \"Discord\"\n\n    def build_config(self) -> dict:\n        return {\n            \"token\": {\n                \"display_name\": \"Token\",\n                \"advanced\": False,\n                \"password\": True,\n                \"required\": True,\n            }, \"channel_id\": {\n                \"display_name\": \"ChannelId\",\n                \"advanced\": False,\n                \"required\": True,\n            }, \"file\": {\n                \"display_name\": \"File\",\n                \"advanced\": False,\n                \"required\": True,\n            }\n        }\n\n    def build(self, token: str, channel_id: int, file: Record) -> str:\n        import requests\n        filename = re.findall(r\"(?:(?:\\/)|(?:\\\\))([a-zA-Z\\d ._]{0,40})\", file.file_path)[-1]\n\n        body = {\n            \"token\": token,\n            \"type\": file.text_key,\n            \"filename\": filename,\n            \"data\": file.data,\n        }\n        resp = requests.post(\n            f\"http://discord:7880/api/v1/channels/{channel_id}/send_message\",\n            json=body)\n        if resp.status_code == 200:\n            return \"Sent record successfully\"\n        else:\n            if isinstance(resp.content, str):\n                raise Exception(resp.content)\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "token": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": true,
                "name": "token",
                "display_name": "Token",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": ""
              },
              "_type": "CustomComponent"
            },
            "description": "Send image to discord's channel",
            "icon": "Discord",
            "base_classes": [
              "object",
              "str",
              "Text"
            ],
            "display_name": "DiscordImageSender",
            "documentation": "",
            "custom_fields": {
              "token": null,
              "channel_id": null,
              "file": null
            },
            "output_types": [
              "Text"
            ],
            "field_formatters": {},
            "frozen": false,
            "field_order": [
              "token",
              "channel_id",
              "file"
            ],
            "beta": false,
            "official": false
          },
          "id": "CustomComponent-MREHo"
        },
        "selected": false,
        "width": 384,
        "height": 422,
        "positionAbsolute": {
          "x": 266.21226826166185,
          "y": 1765.6161848526297
        },
        "dragging": false
      }
    ],
    "edges": [
      {
        "source": "CustomComponent-wplX3",
        "sourceHandle": "{œbaseClassesœ:[œRecordœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-wplX3œ}",
        "target": "CustomComponent-MREHo",
        "targetHandle": "{œfieldNameœ:œfileœ,œidœ:œCustomComponent-MREHoœ,œinputTypesœ:null,œtypeœ:œRecordœ}",
        "data": {
          "targetHandle": {
            "fieldName": "file",
            "id": "CustomComponent-MREHo",
            "inputTypes": null,
            "type": "Record"
          },
          "sourceHandle": {
            "baseClasses": [
              "Record"
            ],
            "dataType": "CustomComponent",
            "id": "CustomComponent-wplX3"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-gray-900 stroke-connection",
        "id": "reactflow__edge-CustomComponent-wplX3{œbaseClassesœ:[œRecordœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-wplX3œ}-CustomComponent-MREHo{œfieldNameœ:œfileœ,œidœ:œCustomComponent-MREHoœ,œinputTypesœ:null,œtypeœ:œRecordœ}"
      },
      {
        "source": "CustomComponent-MREHo",
        "sourceHandle": "{œbaseClassesœ:[œobjectœ,œstrœ,œTextœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-MREHoœ}",
        "target": "ChatOutput-xRo0r",
        "targetHandle": "{œfieldNameœ:œinput_valueœ,œidœ:œChatOutput-xRo0rœ,œinputTypesœ:[œTextœ],œtypeœ:œstrœ}",
        "data": {
          "targetHandle": {
            "fieldName": "input_value",
            "id": "ChatOutput-xRo0r",
            "inputTypes": [
              "Text"
            ],
            "type": "str"
          },
          "sourceHandle": {
            "baseClasses": [
              "object",
              "str",
              "Text"
            ],
            "dataType": "CustomComponent",
            "id": "CustomComponent-MREHo"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-gray-900 stroke-connection",
        "id": "reactflow__edge-CustomComponent-MREHo{œbaseClassesœ:[œobjectœ,œstrœ,œTextœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-MREHoœ}-ChatOutput-xRo0r{œfieldNameœ:œinput_valueœ,œidœ:œChatOutput-xRo0rœ,œinputTypesœ:[œTextœ],œtypeœ:œstrœ}"
      }
    ],
    "viewport": {
      "x": 252.44363860288775,
      "y": -1031.6909558247862,
      "zoom": 0.7290046894082887
    }
  },
  "metadata": {
    "ChatOutput": {
      "count": 1
    },
    "CustomComponent": {
      "count": 2
    },
    "total": 3
  },
  "original": {
    "id": "cc39cbdc-c5c8-40d8-9c75-192d5b3abd4e",
    "name": "Discord Images Send ",
    "description": "A simple flow containing the send/receiving images from a discord channel.",
    "is_component": false,
    "liked_by_count": "4",
    "downloads_count": "58",
    "metadata": {
      "ChatOutput": {
        "count": 1
      },
      "CustomComponent": {
        "count": 2
      },
      "total": 3
    },
    "last_tested_version": "1.0.0a36",
    "private": false,
    "data": {
      "nodes": [
        {
          "id": "ChatOutput-xRo0r",
          "type": "genericNode",
          "position": {
            "x": 712.4376910512364,
            "y": 1809.639624850638
          },
          "data": {
            "type": "ChatOutput",
            "node": {
              "template": {
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from typing import Optional, Union\n\nfrom axiestudio.base.io.chat import ChatComponent\nfrom axiestudio.field_typing import Text\nfrom axiestudio.schema import Record\n\n\nclass ChatOutput(ChatComponent):\n    display_name = \"Chat Output\"\n    description = \"Display a chat message in the Playground.\"\n    icon = \"ChatOutput\"\n\n    def build(\n        self,\n        sender: Optional[str] = \"Machine\",\n        sender_name: Optional[str] = \"AI\",\n        input_value: Optional[str] = None,\n        session_id: Optional[str] = None,\n        return_record: Optional[bool] = False,\n        record_template: Optional[str] = \"{text}\",\n    ) -> Union[Text, Record]:\n        return super().build_with_record(\n            sender=sender,\n            sender_name=sender_name,\n            input_value=input_value,\n            session_id=session_id,\n            return_record=return_record,\n            record_template=record_template or \"\",\n        )\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "input_value": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "input_value",
                  "display_name": "Message",
                  "advanced": false,
                  "input_types": [
                    "Text"
                  ],
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "record_template": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "{text}",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "record_template",
                  "display_name": "Record Template",
                  "advanced": true,
                  "dynamic": false,
                  "info": "In case of Message being a Record, this template will be used to convert it to text.",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                },
                "return_record": {
                  "type": "bool",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "return_record",
                  "display_name": "Return Record",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Return the message as a record containing the sender, sender_name, and session_id.",
                  "load_from_db": false,
                  "title_case": false
                },
                "sender": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "Machine",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "options": [
                    "Machine",
                    "User"
                  ],
                  "name": "sender",
                  "display_name": "Sender Type",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                },
                "sender_name": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "AI",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "sender_name",
                  "display_name": "Sender Name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                },
                "session_id": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "session_id",
                  "display_name": "Session ID",
                  "advanced": true,
                  "dynamic": false,
                  "info": "If provided, the message will be stored in the memory.",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                },
                "_type": "CustomComponent"
              },
              "description": "Display a chat message in the Playground.",
              "icon": "ChatOutput",
              "base_classes": [
                "object",
                "Record",
                "str",
                "Text"
              ],
              "display_name": "Chat Output",
              "documentation": "",
              "custom_fields": {
                "sender": null,
                "sender_name": null,
                "input_value": null,
                "session_id": null,
                "return_record": null,
                "record_template": null
              },
              "output_types": [
                "Text",
                "Record"
              ],
              "field_formatters": {},
              "frozen": false,
              "field_order": [],
              "beta": false
            },
            "id": "ChatOutput-xRo0r"
          },
          "selected": true,
          "width": 384,
          "height": 382,
          "positionAbsolute": {
            "x": 712.4376910512364,
            "y": 1809.639624850638
          },
          "dragging": false
        },
        {
          "id": "CustomComponent-wplX3",
          "type": "genericNode",
          "position": {
            "x": -187.83145026182632,
            "y": 1728.5793860606834
          },
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "channel_id": {
                  "type": "int",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "channel_id",
                  "display_name": "ChannelId",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "value": "1240496339968856094"
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from typing import Optional, Any\nfrom axiestudio import CustomComponent\nfrom axiestudio.schema import Record\nfrom tempfile import NamedTemporaryFile\nimport subprocess\nimport sys\nimport base64\nfrom json import loads\n\n\ndef install(package):\n    subprocess.check_call([sys.executable, \"-m\", \"pip\", \"install\", package])\n    return 1\n\ninstall(\"requests\")\n\nclass DiscordGetImage(CustomComponent):\n    display_name = \"DiscordGetImage\"\n    description = \"get the image from discord's channel\"\n    field_order = [\"token\", \"channel_id\", \"limit\"]\n    icon = \"Discord\"\n\n    def build_config(self) -> dict:\n        return {\n            \"token\": {\n                \"display_name\": \"Token\",\n                \"advanced\": False,\n                \"password\": True,\n                \"required\": True,\n            }, \"channel_id\": {\n                \"display_name\": \"ChannelId\",\n                \"advanced\": False,\n                \"required\": True,\n            }, \"limit\": {\n                \"display_name\": \"Limit\",\n                \"value\": 20,\n                \"advanced\": False,\n                \"info\": \"The value 0 means limitless\",\n                \"required\": True,\n            }\n        }\n\n\n    def build(self, token: str, channel_id: int,  limit: int) -> Record:\n        import requests\n        body = {\"token\": token, \"limit\": limit, \"content_type\": [\"png\", \"jpg\",\"jpeg\"]}\n        resp = requests.post(f\"http://discord:7880/api/v1/channels/{channel_id}/get_messages/last\", json=body)\n        if resp.status_code == 200:\n            file = loads(resp.content)\n            print(file.keys())\n            tmp_file = NamedTemporaryFile(delete=False, suffix=\".png\")\n            resolved_path = self.resolve_path(tmp_file.name)\n            print(tmp_file.name, type(tmp_file.name), type(file))\n            with open(tmp_file.name, 'wb') as f:  # Open the file in binary mode\n                f.write(base64.b64decode(file[\"content\"]))\n            return Record(data={\"file_path\": resolved_path, \"text\": file[\"content\"]})\n        else:\n            raise Exception(\"Timeout exception\")\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "limit": {
                  "type": "int",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "10",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "limit",
                  "display_name": "Limit",
                  "advanced": false,
                  "dynamic": false,
                  "info": "The value 0 means limitless",
                  "load_from_db": false,
                  "title_case": false
                },
                "token": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": true,
                  "name": "token",
                  "display_name": "Token",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": ""
                },
                "_type": "CustomComponent"
              },
              "description": "get the image from discord's channel",
              "icon": "Discord",
              "base_classes": [
                "Record"
              ],
              "display_name": "DiscordGetImage",
              "documentation": "",
              "custom_fields": {
                "token": null,
                "channel_id": null,
                "limit": null
              },
              "output_types": [
                "Record"
              ],
              "field_formatters": {},
              "frozen": false,
              "field_order": [
                "token",
                "channel_id",
                "limit"
              ],
              "beta": false,
              "official": false
            },
            "id": "CustomComponent-wplX3"
          },
          "selected": false,
          "width": 384,
          "height": 460,
          "positionAbsolute": {
            "x": -187.83145026182632,
            "y": 1728.5793860606834
          },
          "dragging": false
        },
        {
          "id": "CustomComponent-MREHo",
          "type": "genericNode",
          "position": {
            "x": 266.21226826166185,
            "y": 1765.6161848526297
          },
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "file": {
                  "type": "Record",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "file",
                  "display_name": "File",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "channel_id": {
                  "type": "int",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "channel_id",
                  "display_name": "ChannelId",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "value": "1240496339968856094"
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from typing import Optional\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import Data\nfrom axiestudio.schema import Record\nimport subprocess\nimport sys\nimport base64\nimport re\n\ndef install(package):\n    subprocess.check_call([sys.executable, \"-m\", \"pip\", \"install\", package])\n    return 1\n\ninstall(\"requests\")\n\nclass DiscordImageSender(CustomComponent):\n    display_name = \"DiscordImageSender\"\n    description = \"Send image to discord's channel\"\n    field_order = [\"token\", \"channel_id\", \"file\"]\n    icon = \"Discord\"\n\n    def build_config(self) -> dict:\n        return {\n            \"token\": {\n                \"display_name\": \"Token\",\n                \"advanced\": False,\n                \"password\": True,\n                \"required\": True,\n            }, \"channel_id\": {\n                \"display_name\": \"ChannelId\",\n                \"advanced\": False,\n                \"required\": True,\n            }, \"file\": {\n                \"display_name\": \"File\",\n                \"advanced\": False,\n                \"required\": True,\n            }\n        }\n\n    def build(self, token: str, channel_id: int, file: Record) -> str:\n        import requests\n        filename = re.findall(r\"(?:(?:\\/)|(?:\\\\))([a-zA-Z\\d ._]{0,40})\", file.file_path)[-1]\n\n        body = {\n            \"token\": token,\n            \"type\": file.text_key,\n            \"filename\": filename,\n            \"data\": file.data,\n        }\n        resp = requests.post(\n            f\"http://discord:7880/api/v1/channels/{channel_id}/send_message\",\n            json=body)\n        if resp.status_code == 200:\n            return \"Sent record successfully\"\n        else:\n            if isinstance(resp.content, str):\n                raise Exception(resp.content)\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "token": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": true,
                  "name": "token",
                  "display_name": "Token",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": ""
                },
                "_type": "CustomComponent"
              },
              "description": "Send image to discord's channel",
              "icon": "Discord",
              "base_classes": [
                "object",
                "str",
                "Text"
              ],
              "display_name": "DiscordImageSender",
              "documentation": "",
              "custom_fields": {
                "token": null,
                "channel_id": null,
                "file": null
              },
              "output_types": [
                "Text"
              ],
              "field_formatters": {},
              "frozen": false,
              "field_order": [
                "token",
                "channel_id",
                "file"
              ],
              "beta": false,
              "official": false
            },
            "id": "CustomComponent-MREHo"
          },
          "selected": false,
          "width": 384,
          "height": 422,
          "positionAbsolute": {
            "x": 266.21226826166185,
            "y": 1765.6161848526297
          },
          "dragging": false
        }
      ],
      "edges": [
        {
          "source": "CustomComponent-wplX3",
          "sourceHandle": "{œbaseClassesœ:[œRecordœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-wplX3œ}",
          "target": "CustomComponent-MREHo",
          "targetHandle": "{œfieldNameœ:œfileœ,œidœ:œCustomComponent-MREHoœ,œinputTypesœ:null,œtypeœ:œRecordœ}",
          "data": {
            "targetHandle": {
              "fieldName": "file",
              "id": "CustomComponent-MREHo",
              "inputTypes": null,
              "type": "Record"
            },
            "sourceHandle": {
              "baseClasses": [
                "Record"
              ],
              "dataType": "CustomComponent",
              "id": "CustomComponent-wplX3"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-gray-900 stroke-connection",
          "id": "reactflow__edge-CustomComponent-wplX3{œbaseClassesœ:[œRecordœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-wplX3œ}-CustomComponent-MREHo{œfieldNameœ:œfileœ,œidœ:œCustomComponent-MREHoœ,œinputTypesœ:null,œtypeœ:œRecordœ}"
        },
        {
          "source": "CustomComponent-MREHo",
          "sourceHandle": "{œbaseClassesœ:[œobjectœ,œstrœ,œTextœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-MREHoœ}",
          "target": "ChatOutput-xRo0r",
          "targetHandle": "{œfieldNameœ:œinput_valueœ,œidœ:œChatOutput-xRo0rœ,œinputTypesœ:[œTextœ],œtypeœ:œstrœ}",
          "data": {
            "targetHandle": {
              "fieldName": "input_value",
              "id": "ChatOutput-xRo0r",
              "inputTypes": [
                "Text"
              ],
              "type": "str"
            },
            "sourceHandle": {
              "baseClasses": [
                "object",
                "str",
                "Text"
              ],
              "dataType": "CustomComponent",
              "id": "CustomComponent-MREHo"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-gray-900 stroke-connection",
          "id": "reactflow__edge-CustomComponent-MREHo{œbaseClassesœ:[œobjectœ,œstrœ,œTextœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-MREHoœ}-ChatOutput-xRo0r{œfieldNameœ:œinput_valueœ,œidœ:œChatOutput-xRo0rœ,œinputTypesœ:[œTextœ],œtypeœ:œstrœ}"
        }
      ],
      "viewport": {
        "x": 252.44363860288775,
        "y": -1031.6909558247862,
        "zoom": 0.7290046894082887
      }
    },
    "date_created": "2024-05-23T03:14:05.501Z",
    "date_updated": "2024-05-23T04:25:20.330Z",
    "status": "Public",
    "sort": null,
    "user_updated": "3785b674-1a4b-42da-9b4d-d028c7191975",
    "user_created": {
      "username": "ygorbalves",
      "first_name": "Ygor",
      "last_name": "Alves",
      "id": "3785b674-1a4b-42da-9b4d-d028c7191975"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:05.543Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 16,
    "converter_version": "1.0.0"
  }
}