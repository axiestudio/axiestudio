{
  "id": "016db16b-6adf-468a-96c8-37e35bfe3b9e",
  "name": "WB - Temporizador in Seconds",
  "description": "Tenho certeza que você encontrará um bom uso. (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "FLOW",
  "is_component": false,
  "author": {
    "username": "wagner",
    "first_name": "Wagner",
    "last_name": "Bittencourt",
    "id": "00808143-7274-457d-a5b8-75c89231a3dd",
    "full_name": "Wagner Bittencourt"
  },
  "store_url": "https://www.langflow.store/store/component/016db16b-6adf-468a-96c8-37e35bfe3b9e",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-09-11T23:16:05.474Z",
    "updated": "2024-09-11T23:16:05.499Z",
    "downloaded": "2025-08-19T17:50:07.005Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "1.0.16",
    "private": false,
    "status": "Public"
  },
  "data": {
    "nodes": [
      {
        "id": "TokenRateLimiter-4xc4U",
        "type": "genericNode",
        "position": {
          "x": 822,
          "y": 299.21875
        },
        "data": {
          "type": "TokenRateLimiter",
          "node": {
            "template": {
              "_type": "Component",
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "import time\r\nfrom axiestudio.custom import Component\r\nfrom axiestudio.inputs import IntInput\r\nfrom axiestudio.template import Output\r\nfrom axiestudio.schema import Data\r\n\r\nclass TokenRateLimiter(Component):\r\n    display_name = \"Token Rate Limiter\"\r\n    description = \"A component to limit the rate of requests by adding a delay.\"\r\n    icon = \"timer\"  # Escolha o ícone que desejar\r\n\r\n    inputs = [\r\n        IntInput(\r\n            name=\"wait_time\",\r\n            display_name=\"Wait Time (seconds)\",\r\n            info=\"Time to wait before processing the next request.\",\r\n        ),\r\n    ]\r\n\r\n    outputs = [\r\n        Output(display_name=\"Delayed Output\", name=\"delayed_output\", method=\"apply_delay\"),\r\n    ]\r\n\r\n    def apply_delay(self) -> Data:\r\n        wait_time = self.wait_time\r\n        time.sleep(wait_time)  # Aguarda o tempo especificado\r\n        return Data(data={\"status\": f\"Waited for {wait_time} seconds.\"})\r\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "wait_time": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "wait_time",
                "value": 5,
                "display_name": "Wait Time (seconds)",
                "advanced": false,
                "dynamic": false,
                "info": "Time to wait before processing the next request.",
                "title_case": false,
                "type": "int",
                "_input_type": "IntInput"
              }
            },
            "description": "A component to limit the rate of requests by adding a delay.",
            "icon": "timer",
            "base_classes": [
              "Data"
            ],
            "display_name": "WB - Temporizador in seconds",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Data"
                ],
                "selected": "Data",
                "name": "delayed_output",
                "display_name": "Delayed Output",
                "method": "apply_delay",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "wait_time"
            ],
            "beta": false,
            "edited": true,
            "official": false,
            "lf_version": "1.0.16"
          },
          "id": "TokenRateLimiter-4xc4U"
        },
        "selected": true,
        "width": 384,
        "height": 326,
        "dragging": false
      }
    ],
    "edges": [],
    "viewport": {
      "x": 0,
      "y": 0,
      "zoom": 1
    }
  },
  "metadata": {
    "TokenRateLimiter": {
      "count": 1
    },
    "total": 1
  },
  "original": {
    "id": "016db16b-6adf-468a-96c8-37e35bfe3b9e",
    "name": "WB - Temporizador in Seconds",
    "description": "Tenho certeza que você encontrará um bom uso.",
    "is_component": false,
    "liked_by_count": "1",
    "downloads_count": "4",
    "metadata": {
      "TokenRateLimiter": {
        "count": 1
      },
      "total": 1
    },
    "last_tested_version": "1.0.16",
    "private": false,
    "data": {
      "nodes": [
        {
          "id": "TokenRateLimiter-4xc4U",
          "type": "genericNode",
          "position": {
            "x": 822,
            "y": 299.21875
          },
          "data": {
            "type": "TokenRateLimiter",
            "node": {
              "template": {
                "_type": "Component",
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "import time\r\nfrom axiestudio.custom import Component\r\nfrom axiestudio.inputs import IntInput\r\nfrom axiestudio.template import Output\r\nfrom axiestudio.schema import Data\r\n\r\nclass TokenRateLimiter(Component):\r\n    display_name = \"Token Rate Limiter\"\r\n    description = \"A component to limit the rate of requests by adding a delay.\"\r\n    icon = \"timer\"  # Escolha o ícone que desejar\r\n\r\n    inputs = [\r\n        IntInput(\r\n            name=\"wait_time\",\r\n            display_name=\"Wait Time (seconds)\",\r\n            info=\"Time to wait before processing the next request.\",\r\n        ),\r\n    ]\r\n\r\n    outputs = [\r\n        Output(display_name=\"Delayed Output\", name=\"delayed_output\", method=\"apply_delay\"),\r\n    ]\r\n\r\n    def apply_delay(self) -> Data:\r\n        wait_time = self.wait_time\r\n        time.sleep(wait_time)  # Aguarda o tempo especificado\r\n        return Data(data={\"status\": f\"Waited for {wait_time} seconds.\"})\r\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "wait_time": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "wait_time",
                  "value": 5,
                  "display_name": "Wait Time (seconds)",
                  "advanced": false,
                  "dynamic": false,
                  "info": "Time to wait before processing the next request.",
                  "title_case": false,
                  "type": "int",
                  "_input_type": "IntInput"
                }
              },
              "description": "A component to limit the rate of requests by adding a delay.",
              "icon": "timer",
              "base_classes": [
                "Data"
              ],
              "display_name": "WB - Temporizador in seconds",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Data"
                  ],
                  "selected": "Data",
                  "name": "delayed_output",
                  "display_name": "Delayed Output",
                  "method": "apply_delay",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "wait_time"
              ],
              "beta": false,
              "edited": true,
              "official": false,
              "lf_version": "1.0.16"
            },
            "id": "TokenRateLimiter-4xc4U"
          },
          "selected": true,
          "width": 384,
          "height": 326,
          "dragging": false
        }
      ],
      "edges": [],
      "viewport": {
        "x": 0,
        "y": 0,
        "zoom": 1
      }
    },
    "date_created": "2024-09-11T23:16:05.474Z",
    "date_updated": "2024-09-11T23:16:05.499Z",
    "status": "Public",
    "sort": null,
    "user_updated": "00808143-7274-457d-a5b8-75c89231a3dd",
    "user_created": {
      "username": "wagner",
      "first_name": "Wagner",
      "last_name": "Bittencourt",
      "id": "00808143-7274-457d-a5b8-75c89231a3dd"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:08:53.088Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 8,
    "converter_version": "1.0.0"
  }
}