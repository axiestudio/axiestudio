{
  "id": "c2e53517-4817-41cd-936c-e3e1a8dcd986",
  "name": "Extract AI",
  "description": "Given an organization's firmographics, vision and products they are selling, this AI system tries to surface relevant insights for a prospecting company (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "FLOW",
  "is_component": false,
  "author": {
    "username": "rasput1n",
    "first_name": "Krishna",
    "last_name": "Kaipa",
    "id": "483d0756-96ef-4822-9900-ff764ce3f4c2",
    "full_name": "Krishna Kaipa"
  },
  "store_url": "https://www.langflow.store/store/component/c2e53517-4817-41cd-936c-e3e1a8dcd986",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-09-22T13:07:00.695Z",
    "updated": "2024-09-22T13:07:00.784Z",
    "downloaded": "2025-08-19T17:50:07.187Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "1.0.6",
    "private": true,
    "status": "Public"
  },
  "data": {
    "nodes": [
      {
        "id": "Prompt-HTp3t",
        "type": "genericNode",
        "position": {
          "x": -1486.5615718227568,
          "y": 673.8174761503055
        },
        "data": {
          "type": "Prompt",
          "node": {
            "template": {
              "_type": "Component",
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio.base.prompts.api_utils import process_prompt_template\nfrom axiestudio.custom import Component\nfrom axiestudio.io import Output, PromptInput\nfrom axiestudio.schema.message import Message\nfrom axiestudio.template.utils import update_template_values\n\n\nclass PromptComponent(Component):\n    display_name: str = \"Prompt\"\n    description: str = \"Create a prompt template with dynamic variables.\"\n    icon = \"prompts\"\n    trace_type = \"prompt\"\n\n    inputs = [\n        PromptInput(name=\"template\", display_name=\"Template\"),\n    ]\n\n    outputs = [\n        Output(display_name=\"Prompt Message\", name=\"prompt\", method=\"build_prompt\"),\n    ]\n\n    async def build_prompt(\n        self,\n    ) -> Message:\n        prompt = await Message.from_template_and_variables(**self._attributes)\n        self.status = prompt.text\n        return prompt\n\n    def post_code_processing(self, new_build_config: dict, current_build_config: dict):\n        \"\"\"\n        This function is called after the code validation is done.\n        \"\"\"\n        frontend_node = super().post_code_processing(new_build_config, current_build_config)\n        template = frontend_node[\"template\"][\"template\"][\"value\"]\n        _ = process_prompt_template(\n            template=template,\n            name=\"template\",\n            custom_fields=frontend_node[\"custom_fields\"],\n            frontend_node_template=frontend_node[\"template\"],\n        )\n        # Now that template is updated, we need to grab any values that were set in the current_build_config\n        # and update the frontend_node with those values\n        update_template_values(frontend_template=frontend_node, raw_template=current_build_config[\"template\"])\n        return frontend_node\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "template": {
                "trace_as_input": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "You are a Senior Sales Leader whose job it is to analyze the current products your organization is selling to identify the data points that sales reps have to look at in order to qualify and pitch a product. You will be provided with information regarding your current company including industry, description as well as detailed product information including the pain points each product addresses and their value propositions. You will also be provided with a list of data points that sales reps have access to for a given prospect. Your output should be the data points that the sales reps have to look at for each product and how that data point helps them pitch/what action can the sales rep take. If the data point is numeric, also mention what a higher value and a lower value represents or a value above or below a certain threshold represents, if that is relevant.\n\nThe following is the information of the company you are analyzing:\n{customer_organization_info}\n\nThe following are the products you are analyzing:\n{customer_product_info}\n\nThe following are the pain points and value propositions for the above products:\n{painpoints_valueprops}\n\nThe following are the data points the sellers have access to for a given company:\n{data_points}\n\nYour output should be strictly in JSON format as follows:\n\n[\n     \"name\": [\n                     \"data_point: \"How this data point helps seller and what action can they take based on it\",\n                     \"data_point\": \"\"\n                     ],\n     \"name\": [\n                     \"data_point: \"How this data point helps seller and what action can they take based on it\",\n                     \"data_point\": \"\"\n                     ],\n]\n",
                "name": "template",
                "display_name": "Template",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "prompt"
              },
              "customer_organization_info": {
                "field_type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "customer_organization_info",
                "display_name": "customer_organization_info",
                "advanced": false,
                "input_types": [
                  "Message",
                  "Text"
                ],
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "type": "str"
              },
              "customer_product_info": {
                "field_type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "customer_product_info",
                "display_name": "customer_product_info",
                "advanced": false,
                "input_types": [
                  "Message",
                  "Text"
                ],
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "type": "str"
              },
              "painpoints_valueprops": {
                "field_type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "painpoints_valueprops",
                "display_name": "painpoints_valueprops",
                "advanced": false,
                "input_types": [
                  "Message",
                  "Text"
                ],
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "type": "str"
              },
              "data_points": {
                "field_type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "data_points",
                "display_name": "data_points",
                "advanced": false,
                "input_types": [
                  "Message",
                  "Text"
                ],
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "type": "str"
              }
            },
            "description": "Create a prompt template with dynamic variables.",
            "icon": "prompts",
            "is_input": null,
            "is_output": null,
            "is_composition": null,
            "base_classes": [
              "Message"
            ],
            "name": "",
            "display_name": "Prompt",
            "documentation": "",
            "custom_fields": {
              "template": [
                "customer_organization_info",
                "customer_product_info",
                "painpoints_valueprops",
                "data_points"
              ]
            },
            "output_types": [],
            "full_path": null,
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "prompt",
                "hidden": false,
                "display_name": "Prompt Message",
                "method": "build_prompt",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "template"
            ],
            "beta": false,
            "error": null,
            "edited": false
          },
          "id": "Prompt-HTp3t",
          "description": "Create a prompt template with dynamic variables.",
          "display_name": "Prompt"
        },
        "selected": false,
        "width": 384,
        "height": 705,
        "positionAbsolute": {
          "x": -1486.5615718227568,
          "y": 673.8174761503055
        },
        "dragging": false
      },
      {
        "id": "AnthropicModel-WHomq",
        "type": "genericNode",
        "position": {
          "x": -980.7724556930953,
          "y": 624.6129160217743
        },
        "data": {
          "type": "AnthropicModel",
          "node": {
            "template": {
              "_type": "Component",
              "anthropic_api_key": {
                "load_from_db": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "",
                "name": "anthropic_api_key",
                "display_name": "Anthropic API Key",
                "advanced": false,
                "input_types": [],
                "dynamic": false,
                "info": "Your Anthropic API key.",
                "title_case": false,
                "password": true,
                "type": "str"
              },
              "anthropic_api_url": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "",
                "name": "anthropic_api_url",
                "display_name": "Anthropic API URL",
                "advanced": true,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Endpoint of the Anthropic API. Defaults to 'https://api.anthropic.com' if not specified.",
                "title_case": false,
                "type": "str"
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from langchain_anthropic.chat_models import ChatAnthropic\nfrom pydantic.v1 import SecretStr\n\nfrom axiestudio.base.constants import STREAM_INFO_TEXT\nfrom axiestudio.base.models.model import LCModelComponent\nfrom axiestudio.field_typing import LanguageModel\nfrom axiestudio.io import BoolInput, DropdownInput, FloatInput, IntInput, MessageTextInput, SecretStrInput\n\n\nclass AnthropicModelComponent(LCModelComponent):\n    display_name = \"Anthropic\"\n    description = \"Generate text using Anthropic Chat&Completion LLMs with prefill support.\"\n    icon = \"Anthropic\"\n\n    inputs = [\n        MessageTextInput(name=\"input_value\", display_name=\"Input\"),\n        IntInput(\n            name=\"max_tokens\",\n            display_name=\"Max Tokens\",\n            advanced=True,\n            value=4096,\n            info=\"The maximum number of tokens to generate. Set to 0 for unlimited tokens.\",\n        ),\n        DropdownInput(\n            name=\"model\",\n            display_name=\"Model Name\",\n            options=[\n                \"claude-3-5-sonnet-20240620\",\n                \"claude-3-opus-20240229\",\n                \"claude-3-sonnet-20240229\",\n                \"claude-3-haiku-20240307\",\n            ],\n            info=\"https://python.langchain.com/docs/integrations/chat/anthropic\",\n            value=\"claude-3-5-sonnet-20240620\",\n        ),\n        SecretStrInput(\n            name=\"anthropic_api_key\",\n            display_name=\"Anthropic API Key\",\n            info=\"Your Anthropic API key.\",\n        ),\n        FloatInput(name=\"temperature\", display_name=\"Temperature\", value=0.1),\n        MessageTextInput(\n            name=\"anthropic_api_url\",\n            display_name=\"Anthropic API URL\",\n            advanced=True,\n            info=\"Endpoint of the Anthropic API. Defaults to 'https://api.anthropic.com' if not specified.\",\n        ),\n        BoolInput(name=\"stream\", display_name=\"Stream\", info=STREAM_INFO_TEXT, advanced=True, value=False),\n        MessageTextInput(\n            name=\"system_message\",\n            display_name=\"System Message\",\n            info=\"System message to pass to the model.\",\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\"prefill\",\n            display_name=\"Prefill\",\n            info=\"Prefill text to guide the model's response.\",\n            advanced=True,\n        ),\n    ]\n\n    def build_model(self) -> LanguageModel:  # type: ignore[type-var]\n        model = self.model\n        anthropic_api_key = self.anthropic_api_key\n        max_tokens = self.max_tokens\n        temperature = self.temperature\n        anthropic_api_url = self.anthropic_api_url or \"https://api.anthropic.com\"\n\n        try:\n            output = ChatAnthropic(\n                model=model,\n                anthropic_api_key=(SecretStr(anthropic_api_key) if anthropic_api_key else None),\n                max_tokens_to_sample=max_tokens,  # type: ignore\n                temperature=temperature,\n                anthropic_api_url=anthropic_api_url,\n                streaming=self.stream,\n            )\n        except Exception as e:\n            raise ValueError(\"Could not connect to Anthropic API.\") from e\n\n        return output  # type: ignore\n\n    def _get_exception_message(self, exception: Exception) -> str | None:\n        \"\"\"\n        Get a message from an Anthropic exception.\n\n        Args:\n            exception (Exception): The exception to get the message from.\n\n        Returns:\n            str: The message from the exception.\n        \"\"\"\n        try:\n            from anthropic import BadRequestError\n        except ImportError:\n            return None\n        if isinstance(exception, BadRequestError):\n            message = exception.body.get(\"error\", {}).get(\"message\")  # type: ignore\n            if message:\n                return message\n        return None\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "input_value": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "",
                "name": "input_value",
                "display_name": "Input",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str"
              },
              "max_tokens": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": 4096,
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "advanced": true,
                "dynamic": false,
                "info": "The maximum number of tokens to generate. Set to 0 for unlimited tokens.",
                "title_case": false,
                "type": "int"
              },
              "model": {
                "trace_as_metadata": true,
                "options": [
                  "claude-3-5-sonnet-20240620",
                  "claude-3-opus-20240229",
                  "claude-3-sonnet-20240229",
                  "claude-3-haiku-20240307"
                ],
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "claude-3-5-sonnet-20240620",
                "name": "model",
                "display_name": "Model Name",
                "advanced": false,
                "dynamic": false,
                "info": "https://python.langchain.com/docs/integrations/chat/anthropic",
                "title_case": false,
                "type": "str"
              },
              "prefill": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "",
                "name": "prefill",
                "display_name": "Prefill",
                "advanced": true,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Prefill text to guide the model's response.",
                "title_case": false,
                "type": "str"
              },
              "stream": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": false,
                "name": "stream",
                "display_name": "Stream",
                "advanced": true,
                "dynamic": false,
                "info": "Stream the response from the model. Streaming works only in Chat.",
                "title_case": false,
                "type": "bool"
              },
              "system_message": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "",
                "name": "system_message",
                "display_name": "System Message",
                "advanced": true,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "System message to pass to the model.",
                "title_case": false,
                "type": "str"
              },
              "temperature": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": 0.1,
                "name": "temperature",
                "display_name": "Temperature",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "float"
              }
            },
            "description": "Generate text using Anthropic Chat&Completion LLMs with prefill support.",
            "icon": "Anthropic",
            "base_classes": [
              "LanguageModel",
              "Message"
            ],
            "display_name": "Anthropic",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "text_output",
                "display_name": "Text",
                "method": "text_response",
                "value": "__UNDEFINED__",
                "cache": true,
                "hidden": false
              },
              {
                "types": [
                  "LanguageModel"
                ],
                "selected": "LanguageModel",
                "name": "model_output",
                "display_name": "Language Model",
                "method": "build_model",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "input_value",
              "max_tokens",
              "model",
              "anthropic_api_key",
              "temperature",
              "anthropic_api_url",
              "stream",
              "system_message",
              "prefill"
            ],
            "beta": false,
            "edited": false
          },
          "id": "AnthropicModel-WHomq"
        },
        "selected": false,
        "width": 384,
        "height": 651,
        "positionAbsolute": {
          "x": -980.7724556930953,
          "y": 624.6129160217743
        },
        "dragging": false
      },
      {
        "id": "Prompt-7n6HR",
        "type": "genericNode",
        "position": {
          "x": -167.813225146248,
          "y": 693.4619088064
        },
        "data": {
          "type": "Prompt",
          "node": {
            "template": {
              "_type": "Component",
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio.base.prompts.api_utils import process_prompt_template\nfrom axiestudio.custom import Component\nfrom axiestudio.io import Output, PromptInput\nfrom axiestudio.schema.message import Message\nfrom axiestudio.template.utils import update_template_values\n\n\nclass PromptComponent(Component):\n    display_name: str = \"Prompt\"\n    description: str = \"Create a prompt template with dynamic variables.\"\n    icon = \"prompts\"\n    trace_type = \"prompt\"\n\n    inputs = [\n        PromptInput(name=\"template\", display_name=\"Template\"),\n    ]\n\n    outputs = [\n        Output(display_name=\"Prompt Message\", name=\"prompt\", method=\"build_prompt\"),\n    ]\n\n    async def build_prompt(\n        self,\n    ) -> Message:\n        prompt = await Message.from_template_and_variables(**self._attributes)\n        self.status = prompt.text\n        return prompt\n\n    def post_code_processing(self, new_build_config: dict, current_build_config: dict):\n        \"\"\"\n        This function is called after the code validation is done.\n        \"\"\"\n        frontend_node = super().post_code_processing(new_build_config, current_build_config)\n        template = frontend_node[\"template\"][\"template\"][\"value\"]\n        _ = process_prompt_template(\n            template=template,\n            name=\"template\",\n            custom_fields=frontend_node[\"custom_fields\"],\n            frontend_node_template=frontend_node[\"template\"],\n        )\n        # Now that template is updated, we need to grab any values that were set in the current_build_config\n        # and update the frontend_node with those values\n        update_template_values(frontend_template=frontend_node, raw_template=current_build_config[\"template\"])\n        return frontend_node\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "template": {
                "trace_as_input": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "You are a senior sales analyst who is an expert in analyzing fitment and sales strategy for a prospective company. You will be given information regarding your company and the products you are selling including their features,   information regarding the prospective company across a large number of data points and also a guide which tells you which data points to look into for each product. Your job is to generate actionable insights that helps your sales team sell your product.\n\nThe following is the information regarding your company:\n\n{customer_organization_info}\n\nThe following is the information regarding the products that your company is selling:\n{customer_product_info}\n\nThe following are the relevant data points that you should look at for each product:\n{relevant_datapoints}\n\nThe following is the data regarding a prospective company:\n{prospect_info}\n\nYour output should in the json format as below:\n\n[\n      \"product_name\" : [\"Actionable insight based on data point\" x n],\n      \"product_name\" : [\"Actionable insight based on data point\" x n],\n]",
                "name": "template",
                "display_name": "Template",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "prompt"
              },
              "customer_organization_info": {
                "field_type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "customer_organization_info",
                "display_name": "customer_organization_info",
                "advanced": false,
                "input_types": [
                  "Message",
                  "Text"
                ],
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "type": "str"
              },
              "customer_product_info": {
                "field_type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "customer_product_info",
                "display_name": "customer_product_info",
                "advanced": false,
                "input_types": [
                  "Message",
                  "Text"
                ],
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "type": "str"
              },
              "relevant_datapoints": {
                "field_type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "relevant_datapoints",
                "display_name": "relevant_datapoints",
                "advanced": false,
                "input_types": [
                  "Message",
                  "Text"
                ],
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "type": "str"
              },
              "prospect_info": {
                "field_type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "prospect_info",
                "display_name": "prospect_info",
                "advanced": false,
                "input_types": [
                  "Message",
                  "Text"
                ],
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "type": "str"
              }
            },
            "description": "Create a prompt template with dynamic variables.",
            "icon": "prompts",
            "is_input": null,
            "is_output": null,
            "is_composition": null,
            "base_classes": [
              "Message"
            ],
            "name": "",
            "display_name": "Prompt",
            "documentation": "",
            "custom_fields": {
              "template": [
                "customer_organization_info",
                "customer_product_info",
                "relevant_datapoints",
                "prospect_info"
              ]
            },
            "output_types": [],
            "full_path": null,
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "prompt",
                "hidden": false,
                "display_name": "Prompt Message",
                "method": "build_prompt",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "template"
            ],
            "beta": false,
            "error": null,
            "edited": false
          },
          "id": "Prompt-7n6HR",
          "description": "Create a prompt template with dynamic variables.",
          "display_name": "Prompt"
        },
        "selected": false,
        "width": 384,
        "height": 705,
        "positionAbsolute": {
          "x": -167.813225146248,
          "y": 693.4619088064
        },
        "dragging": false
      },
      {
        "id": "AnthropicModel-TZA59",
        "type": "genericNode",
        "position": {
          "x": 474.8394582994789,
          "y": 707.0958253201857
        },
        "data": {
          "type": "AnthropicModel",
          "node": {
            "template": {
              "_type": "Component",
              "anthropic_api_key": {
                "load_from_db": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "",
                "name": "anthropic_api_key",
                "display_name": "Anthropic API Key",
                "advanced": false,
                "input_types": [],
                "dynamic": false,
                "info": "Your Anthropic API key.",
                "title_case": false,
                "password": true,
                "type": "str"
              },
              "anthropic_api_url": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "",
                "name": "anthropic_api_url",
                "display_name": "Anthropic API URL",
                "advanced": true,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Endpoint of the Anthropic API. Defaults to 'https://api.anthropic.com' if not specified.",
                "title_case": false,
                "type": "str"
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from langchain_anthropic.chat_models import ChatAnthropic\nfrom pydantic.v1 import SecretStr\n\nfrom axiestudio.base.constants import STREAM_INFO_TEXT\nfrom axiestudio.base.models.model import LCModelComponent\nfrom axiestudio.field_typing import LanguageModel\nfrom axiestudio.io import BoolInput, DropdownInput, FloatInput, IntInput, MessageTextInput, SecretStrInput\n\n\nclass AnthropicModelComponent(LCModelComponent):\n    display_name = \"Anthropic\"\n    description = \"Generate text using Anthropic Chat&Completion LLMs with prefill support.\"\n    icon = \"Anthropic\"\n\n    inputs = [\n        MessageTextInput(name=\"input_value\", display_name=\"Input\"),\n        IntInput(\n            name=\"max_tokens\",\n            display_name=\"Max Tokens\",\n            advanced=True,\n            value=4096,\n            info=\"The maximum number of tokens to generate. Set to 0 for unlimited tokens.\",\n        ),\n        DropdownInput(\n            name=\"model\",\n            display_name=\"Model Name\",\n            options=[\n                \"claude-3-5-sonnet-20240620\",\n                \"claude-3-opus-20240229\",\n                \"claude-3-sonnet-20240229\",\n                \"claude-3-haiku-20240307\",\n            ],\n            info=\"https://python.langchain.com/docs/integrations/chat/anthropic\",\n            value=\"claude-3-5-sonnet-20240620\",\n        ),\n        SecretStrInput(\n            name=\"anthropic_api_key\",\n            display_name=\"Anthropic API Key\",\n            info=\"Your Anthropic API key.\",\n        ),\n        FloatInput(name=\"temperature\", display_name=\"Temperature\", value=0.1),\n        MessageTextInput(\n            name=\"anthropic_api_url\",\n            display_name=\"Anthropic API URL\",\n            advanced=True,\n            info=\"Endpoint of the Anthropic API. Defaults to 'https://api.anthropic.com' if not specified.\",\n        ),\n        BoolInput(name=\"stream\", display_name=\"Stream\", info=STREAM_INFO_TEXT, advanced=True, value=False),\n        MessageTextInput(\n            name=\"system_message\",\n            display_name=\"System Message\",\n            info=\"System message to pass to the model.\",\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\"prefill\",\n            display_name=\"Prefill\",\n            info=\"Prefill text to guide the model's response.\",\n            advanced=True,\n        ),\n    ]\n\n    def build_model(self) -> LanguageModel:  # type: ignore[type-var]\n        model = self.model\n        anthropic_api_key = self.anthropic_api_key\n        max_tokens = self.max_tokens\n        temperature = self.temperature\n        anthropic_api_url = self.anthropic_api_url or \"https://api.anthropic.com\"\n\n        try:\n            output = ChatAnthropic(\n                model=model,\n                anthropic_api_key=(SecretStr(anthropic_api_key) if anthropic_api_key else None),\n                max_tokens_to_sample=max_tokens,  # type: ignore\n                temperature=temperature,\n                anthropic_api_url=anthropic_api_url,\n                streaming=self.stream,\n            )\n        except Exception as e:\n            raise ValueError(\"Could not connect to Anthropic API.\") from e\n\n        return output  # type: ignore\n\n    def _get_exception_message(self, exception: Exception) -> str | None:\n        \"\"\"\n        Get a message from an Anthropic exception.\n\n        Args:\n            exception (Exception): The exception to get the message from.\n\n        Returns:\n            str: The message from the exception.\n        \"\"\"\n        try:\n            from anthropic import BadRequestError\n        except ImportError:\n            return None\n        if isinstance(exception, BadRequestError):\n            message = exception.body.get(\"error\", {}).get(\"message\")  # type: ignore\n            if message:\n                return message\n        return None\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "input_value": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "",
                "name": "input_value",
                "display_name": "Input",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str"
              },
              "max_tokens": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": 4096,
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "advanced": true,
                "dynamic": false,
                "info": "The maximum number of tokens to generate. Set to 0 for unlimited tokens.",
                "title_case": false,
                "type": "int"
              },
              "model": {
                "trace_as_metadata": true,
                "options": [
                  "claude-3-5-sonnet-20240620",
                  "claude-3-opus-20240229",
                  "claude-3-sonnet-20240229",
                  "claude-3-haiku-20240307"
                ],
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "claude-3-5-sonnet-20240620",
                "name": "model",
                "display_name": "Model Name",
                "advanced": false,
                "dynamic": false,
                "info": "https://python.langchain.com/docs/integrations/chat/anthropic",
                "title_case": false,
                "type": "str"
              },
              "prefill": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "",
                "name": "prefill",
                "display_name": "Prefill",
                "advanced": true,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Prefill text to guide the model's response.",
                "title_case": false,
                "type": "str"
              },
              "stream": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": false,
                "name": "stream",
                "display_name": "Stream",
                "advanced": true,
                "dynamic": false,
                "info": "Stream the response from the model. Streaming works only in Chat.",
                "title_case": false,
                "type": "bool"
              },
              "system_message": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "",
                "name": "system_message",
                "display_name": "System Message",
                "advanced": true,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "System message to pass to the model.",
                "title_case": false,
                "type": "str"
              },
              "temperature": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": 0.1,
                "name": "temperature",
                "display_name": "Temperature",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "float"
              }
            },
            "description": "Generate text using Anthropic Chat&Completion LLMs with prefill support.",
            "icon": "Anthropic",
            "base_classes": [
              "LanguageModel",
              "Message"
            ],
            "display_name": "Anthropic",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "text_output",
                "display_name": "Text",
                "method": "text_response",
                "value": "__UNDEFINED__",
                "cache": true,
                "hidden": true
              },
              {
                "types": [
                  "LanguageModel"
                ],
                "selected": "LanguageModel",
                "name": "model_output",
                "display_name": "Language Model",
                "method": "build_model",
                "value": "__UNDEFINED__",
                "cache": true,
                "hidden": true
              }
            ],
            "field_order": [
              "input_value",
              "max_tokens",
              "model",
              "anthropic_api_key",
              "temperature",
              "anthropic_api_url",
              "stream",
              "system_message",
              "prefill"
            ],
            "beta": false,
            "edited": false
          },
          "id": "AnthropicModel-TZA59"
        },
        "selected": false,
        "width": 384,
        "height": 651,
        "positionAbsolute": {
          "x": 474.8394582994789,
          "y": 707.0958253201857
        },
        "dragging": false
      },
      {
        "id": "TextInput-9osk1",
        "type": "genericNode",
        "position": {
          "x": -2028.116826801363,
          "y": 275.5567701160394
        },
        "data": {
          "type": "TextInput",
          "node": {
            "template": {
              "_type": "Component",
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio.base.io.text import TextComponent\nfrom axiestudio.io import MessageTextInput, Output\nfrom axiestudio.schema.message import Message\n\n\nclass TextInputComponent(TextComponent):\n    display_name = \"Text Input\"\n    description = \"Get text inputs from the Playground.\"\n    icon = \"type\"\n\n    inputs = [\n        MessageTextInput(\n            name=\"input_value\",\n            display_name=\"Text\",\n            info=\"Text to be passed as input.\",\n        ),\n    ]\n    outputs = [\n        Output(display_name=\"Text\", name=\"text\", method=\"text_response\"),\n    ]\n\n    def text_response(self) -> Message:\n        message = Message(\n            text=self.input_value,\n        )\n        return message\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "input_value": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "{     \"company_name\": \"Salesforce\",     \"industry\": \"Computer Software and Internet\",     \"description\": \"Salesforce, the #1 AI CRM, enables companies to connect with customers through a unified Einstein 1 platform that combines CRM, AI, Data, and Trust.\" }",
                "name": "input_value",
                "display_name": "Text",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Text to be passed as input.",
                "title_case": false,
                "type": "str"
              }
            },
            "description": "Get text inputs from the Playground.",
            "icon": "type",
            "base_classes": [
              "Message"
            ],
            "display_name": "Text Input",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "text",
                "display_name": "Text",
                "method": "text_response",
                "value": "__UNDEFINED__",
                "cache": true,
                "hidden": false
              }
            ],
            "field_order": [
              "input_value"
            ],
            "beta": false,
            "edited": false
          },
          "id": "TextInput-9osk1"
        },
        "selected": false,
        "width": 384,
        "height": 309,
        "positionAbsolute": {
          "x": -2028.116826801363,
          "y": 275.5567701160394
        },
        "dragging": false
      },
      {
        "id": "TextInput-Z5u1h",
        "type": "genericNode",
        "position": {
          "x": -2990.8524501213674,
          "y": 1261.659533062335
        },
        "data": {
          "type": "TextInput",
          "node": {
            "template": {
              "_type": "Component",
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio.base.io.text import TextComponent\nfrom axiestudio.io import MessageTextInput, Output\nfrom axiestudio.schema.message import Message\n\n\nclass TextInputComponent(TextComponent):\n    display_name = \"Text Input\"\n    description = \"Get text inputs from the Playground.\"\n    icon = \"type\"\n\n    inputs = [\n        MessageTextInput(\n            name=\"input_value\",\n            display_name=\"Text\",\n            info=\"Text to be passed as input.\",\n        ),\n    ]\n    outputs = [\n        Output(display_name=\"Text\", name=\"text\", method=\"text_response\"),\n    ]\n\n    def text_response(self) -> Message:\n        message = Message(\n            text=self.input_value,\n        )\n        return message\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "input_value": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "\"products\": [     {       \"features\": [         {           \"feature_name\": \"Simplified Sign-up\",           \"feature_description\": \"Get started fast with easy onboarding.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Efficiency Enhancements\",           \"feature_description\": \"Drive efficiency with built-in guidance and best practices.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Unified Business Suite\",           \"feature_description\": \"Unlock multiple business functions in one suite.\",           \"feature_subpoints\": []         }       ],       \"name\": \"Starter Suite\",       \"link\": \"https://www.salesforce.com\",       \"customers\": [],       \"product_description\": \"Starter Suite is a comprehensive suite that unlocks marketing, sales, service, and commerce to accelerate your business growth.\",       \"pricing\": \"Starting at $25 per month.\"     },     {       \"features\": [         {           \"feature_name\": \"Pre-loaded Data\",           \"feature_description\": \"Access to pre-loaded data to help streamline sales processes.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Pre-configured Processes\",           \"feature_description\": \"Utilize pre-configured processes to speed up and optimize sales activities.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Reports and Dashboards\",           \"feature_description\": \"Generate and analyze sales reports with pre-configured dashboards.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Guided Content and Training\",           \"feature_description\": \"Access guided content, how-tos, and best practices for improving sales performance.\",           \"feature_subpoints\": [             \"Online training\",             \"Live onboarding webinars\"           ]         }       ],       \"name\": \"Sales Cloud\",       \"link\": \"https://www.salesforce.com/\",       \"customers\": [],       \"product_description\": \"Sales Cloud is a platform designed to manage sales processes, offering features like pre-loaded data, pre-configured reports, and online training.\",       \"pricing\": null     },     {       \"features\": [],       \"name\": \"Service\",       \"link\": \"http://www.salesforce.com/plus/experience/dreamforce_2024/broadcast/day-1-channel-1\",       \"customers\": [],       \"product_description\": \"Tune in for three days of epic innovation and announcements with Salesforce.\",       \"pricing\": null     },     {       \"features\": [         {           \"feature_name\": \"Customer Data Platform\",           \"feature_description\": \"Drive growth with faster access to centralized data that's seamlessly activated to any channel.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Marketing Analytics\",           \"feature_description\": \"Optimize campaigns and spend with unified marketing performance data and AI insights.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Marketing AI\",           \"feature_description\": \"Optimize every step of the campaign process with trusted, purpose-built AI.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Marketing Cloud Engagement\",           \"feature_description\": \"Increase conversion with relevant engagement across email, mobile, ads, and web.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"B2B Marketing Automation\",           \"feature_description\": \"Grow revenue by aligning marketing and sales around every account.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Personalization\",           \"feature_description\": \"Drive ROI across your marketing programs with cross-channel personalization.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Customer Loyalty\",           \"feature_description\": \"Increase profitability and loyalty with better engagement and personalized rewards.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Marketing for Small Business\",           \"feature_description\": \"Grow your small business faster with marketing automation on the world's #1 AI CRM.\",           \"feature_subpoints\": []         }       ],       \"name\": \"Marketing Cloud\",       \"link\": \"https://www.salesforce.com/marketing-cloud/\",       \"customers\": [         \"General Mills\",         \"Formula 1\",         \"Humana\",         \"Esquire Bank\",         \"William-Sonoma Inc\"       ],       \"product_description\": \"Salesforce Marketing Cloud is an AI-powered, cloud-based digital marketing platform that helps marketers segment their audience, deliver personalized messages, track campaign performance, and optimize strategies based on real-time insights.\",       \"pricing\": null     },     {       \"features\": [         {           \"feature_name\": \"Unified Commerce\",           \"feature_description\": \"The most comprehensive commerce platform that merges commerce with sales, service, and marketing on Salesforce.\",           \"feature_subpoints\": [             \"B2B and D2C storefronts\",             \"Order Management\",             \"Payments integration\"           ]         },         {           \"feature_name\": \"Agentforce\",           \"feature_description\": \"Autonomous applications providing ongoing support to merchants and customers, leveraging data for task execution.\",           \"feature_subpoints\": [             \"Agentforce Merchant for ecommerce site management\",             \"Agentforce Buyer for B2B purchasing experiences\",             \"Agentforce Personal Shopper for personalized customer interactions\"           ]         },         {           \"feature_name\": \"Inventory Insights\",           \"feature_description\": \"Real-time store-level inventory insights to enhance conversion and satisfaction.\",           \"feature_subpoints\": [             \"View available stock\",             \"Predict inventory management actions\",             \"Avoid surplus and sell-outs\"           ]         },         {           \"feature_name\": \"Buy with Prime\",           \"feature_description\": \"Integrate Prime capabilities into ecommerce experiences, engaging Amazon shoppers.\",           \"feature_subpoints\": [             \"Fast and free delivery\",             \"Amazon product reviews\",             \"Hassle-free returns\"           ]         },         {           \"feature_name\": \"Commerce for Marketing\",           \"feature_description\": \"Integrate marketing campaigns with commerce capabilities for personalized outreach.\",           \"feature_subpoints\": [             \"Engagement and purchase data utilization\",             \"Send targeted offers\",             \"Re-engage with abandoned cart notifications\"           ]         },         {           \"feature_name\": \"Commerce for Service\",           \"feature_description\": \"Seamless order management and customer service integration.\",           \"feature_subpoints\": [             \"Order processing and returns\",             \"Service agent order placement\",             \"Integrated service console\"           ]         },         {           \"feature_name\": \"Commerce for Sales\",           \"feature_description\": \"Boost sales with configurable products and bundled options.\",           \"feature_subpoints\": [             \"Manage digital contracts\",             \"Shared data model\",             \"Bundle creation\"           ]         },         {           \"feature_name\": \"Data Cloud\",           \"feature_description\": \"Unify all data sources for comprehensive business insights and automation.\",           \"feature_subpoints\": [             \"Create unified customer profiles\",             \"Automate tasks like alerts and recommendations\",             \"Drive data-driven decisions\"           ]         },         {           \"feature_name\": \"Personalized Carts\",           \"feature_description\": \"Enhanced cart experiences through connected data insights.\",           \"feature_subpoints\": [             \"Transform customer engagement\",             \"Provide advanced personalization\",             \"Utilize Cart Intelligence\"           ]         }       ],       \"name\": \"Commerce Cloud\",       \"link\": \"https://www.salesforce.com/products/commerce-cloud/overview/\",       \"customers\": [],       \"product_description\": \"Commerce Cloud is a comprehensive, configurable, AI-powered commerce platform that unifies B2B, D2C, order management, payments, and data with Salesforce Platform capabilities.\",       \"pricing\": null     },     {       \"features\": [         {           \"feature_name\": \"Sales AI\",           \"feature_description\": \"Sell faster with trusted AI for sales.\",           \"feature_subpoints\": [             \"Ask Einstein to write emails enriched with customer data\",             \"Generate concise summaries of sales calls\",             \"Use actionable insights to inform conversations\",             \"Real-time predictions to guide sellers to close deals\"           ]         },         {           \"feature_name\": \"Customer Service AI\",           \"feature_description\": \"Deliver more personalized and impactful customer service experiences.\",           \"feature_subpoints\": [             \"Leverage Salesforce Agentforce to surface relevant information during support interactions\",             \"Automatically summarize case resolutions\",             \"Build a knowledge base\",             \"Scale service operations and drive immediate value\"           ]         },         {           \"feature_name\": \"Marketing AI\",           \"feature_description\": \"Drive personalization and productivity at scale.\",           \"feature_subpoints\": [             \"Boost engagement with insights\",             \"Build personalized customer journeys\",             \"Automatically customize outreach\"           ]         },         {           \"feature_name\": \"Commerce AI\",           \"feature_description\": \"Personalize buyer and merchant experiences with ecommerce AI tools.\",           \"feature_subpoints\": [             \"Generate product descriptions automatically\",             \"Recommend relevant products\",             \"Create seamless buying experiences\"           ]         },         {           \"feature_name\": \"Einstein Trust Layer\",           \"feature_description\": \"Deploy AI with trust and security.\",           \"feature_subpoints\": [             \"Dynamic grounding to improve accuracy and relevancy\",             \"Sensitive data masking\",             \"Ethics and Inclusivity\"           ]         }       ],       \"name\": \"Salesforce Artificial Intelligence\",       \"link\": \"https://www.salesforce.com/products/secure-ai/\",       \"customers\": [         \"RBC US Wealth\",         \"General Mills\",         \"Uber Eats\",         \"Schneider Electric\"       ],       \"product_description\": \"Salesforce AI delivers trusted, extensible AI capabilities integrated into the Salesforce Platform to create customizable, predictive, and generative AI experiences for business needs.\",       \"pricing\": null     },     {       \"features\": [],       \"name\": \"Data Cloud\",       \"link\": \"https://trailhead.salesforce.com/users/dataclouddocs/trailmixes/data-cloud-quick-start-guide\",       \"customers\": [         \"Formula 1\",         \"General Mills\",         \"St. Jude's\",         \"Vodaphone Ziggo\",         \"Santander\"       ],       \"product_description\": \"Data Cloud helps data-driven teams build meaningful customer relationships through insights and analytics.\",       \"pricing\": null     },     {       \"features\": [         {           \"feature_name\": \"Agentforce\",           \"feature_description\": \"Build and customize autonomous Agents to support your employees and customers 24/7.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Data Cloud\",           \"feature_description\": \"Activate all your customer data across Salesforce applications at every touch point.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Einstein\",           \"feature_description\": \"Create customizable, predictive, and generative AI experiences to fit all your business needs.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Agentforce & AI App Development\",           \"feature_description\": \"Build, customize, and deploy your Agentforce and AI apps with no code, low code, and pro code tools.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Security & Privacy\",           \"feature_description\": \"Keep your data secure and protected to increase customer trust and navigate compliance.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Automation\",           \"feature_description\": \"Integrate and connect your systems and automate business processes securely.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Mulesoft\",           \"feature_description\": \"Connect any data, system, or AI model securely and align CRM apps with metadata integration.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Tableau\",           \"feature_description\": \"Make better decisions with an intuitive, AI-powered analytics platform.\",           \"feature_subpoints\": []         }       ],       \"name\": \"Salesforce Platform\",       \"link\": \"https://www.salesforce.com/platform/overview/\",       \"customers\": [         \"Vonage\"       ],       \"product_description\": \"The Salesforce Platform is an enterprise AI-powered platform that integrates data, AI, security, privacy, analytics, automation, integration, and low code development capabilities to enhance customer and employee experiences.\",       \"pricing\": \"Platform Starter starts at $25/user/month. Platform Plus starts at $100/user/month.\"     },     {       \"features\": [         {           \"feature_name\": \"Agent-Powered Productivity\",           \"feature_description\": \"Keeps teams in the flow of work with user-friendly and personalized experiences.\",           \"feature_subpoints\": [             \"Collaboration and purpose-built productivity tools\",             \"Intuitive and secure AI and agents\"           ]         },         {           \"feature_name\": \"Connected CRM Data\",           \"feature_description\": \"Enhances team conversations with customer insights.\",           \"feature_subpoints\": [             \"Native Salesforce solutions\",             \"Relevant CRM context\"           ]         },         {           \"feature_name\": \"Work Coordination\",           \"feature_description\": \"Brings work to Slack with integrations and workflow automation.\",           \"feature_subpoints\": [             \"2,600+ out-of-the-box integrations\",             \"No-code workflow automation\"           ]         },         {           \"feature_name\": \"Business Growth Support\",           \"feature_description\": \"Streamlines processes for all business functions within Slack.\",           \"feature_subpoints\": [             \"Use cases for sales, service, marketing, finance, IT, and HR\"           ]         }       ],       \"name\": \"Slack\",       \"link\": \"https://www.salesforce.com/sales/team-productivity/\",       \"customers\": [         \"Capital One\",         \"Rivian\",         \"IBM\",         \"OpenAI\",         \"Spotify Advertising\",         \"Box\",         \"Shipt\"       ],       \"product_description\": \"Slack is where humans meet data, workflows, and apps to deliver results in a unified conversational platform.\",       \"pricing\": null     },     {       \"features\": [         {           \"feature_name\": \"Data Visualization\",           \"feature_description\": \"Create, edit, and share visualizations in the cloud.\",           \"feature_subpoints\": [             \"Interactive dashboards\",             \"Comprehensive chart types\",             \"Customization options\"           ]         },         {           \"feature_name\": \"Data Preparation\",           \"feature_description\": \"Prepare, connect and manage your data anywhere.\",           \"feature_subpoints\": [             \"Data cleaning tools\",             \"Data transformation capabilities\",             \"Seamless data integration\"           ]         },         {           \"feature_name\": \"Collaboration\",           \"feature_description\": \"Analyze in collaboration with your team.\",           \"feature_subpoints\": [             \"Team sharing features\",             \"Collaborative dashboards\",             \"Real-time data updates\"           ]         }       ],       \"name\": \"Tableau\",       \"link\": \"https://www.tableau.com/\",       \"customers\": [],       \"product_description\": \"Tableau is a powerful data visualization tool that helps users transform raw data into meaningful insights through interactive dashboards and analytics.\",       \"pricing\": null     },     {       \"features\": [         {           \"feature_name\": \"Low-Code Integration\",           \"feature_description\": \"Enables admins to use out-of-the-box connectors to integrate data in workflows.\",           \"feature_subpoints\": [             \"Use org-to-org and third-party data securely in workflows\",             \"Build workflows for autonomous actions like creating invoices\"           ]         },         {           \"feature_name\": \"Salesforce API Catalog\",           \"feature_description\": \"Provides a single repository of APIs from Salesforce, MuleSoft, and Heroku.\",           \"feature_subpoints\": [             \"Create new topics and actions for AI Agents\",             \"Integrate with systems like SAP\"           ]         },         {           \"feature_name\": \"MuleSoft Direct for Data Cloud\",           \"feature_description\": \"Easily find and deploy pre-built integrations to connect information to Salesforce Data Cloud.\",           \"feature_subpoints\": [             \"Connect Google Drive, Microsoft SharePoint, and other sources\",             \"Use organizational knowledge for grounding AI prompts\"           ]         },         {           \"feature_name\": \"MuleSoft Topic Center\",           \"feature_description\": \"Allows developers to publish actionable agent topics using integrations.\",           \"feature_subpoints\": [             \"Create topics to assess hardware replacement needs\",             \"Enhance the effectiveness of Agentforce Agents\"           ]         },         {           \"feature_name\": \"MuleSoft AI Chain\",           \"feature_description\": \"An open-source initiative for seamless interaction with LLMs and APIs.\",           \"feature_subpoints\": [             \"Connect and orchestrate systems like Jira\",             \"Enhance bug diagnosis and sentiment analysis\"           ]         }       ],       \"name\": \"MuleSoft\",       \"link\": \"https://www.salesforce.com/mulesoft/?d=cta-body-promo-8\",       \"customers\": [         \"Aston Martin Lagonda Ltd.\"       ],       \"product_description\": \"MuleSoft provides integration solutions to help AI agents access and act on data across CRM and external systems, enabling personalized experiences and driving revenue.\",       \"pricing\": null     },     {       \"features\": [         {           \"feature_name\": \"Heroku Runtime\",           \"feature_description\": \"Applications run in smart containers within a fully managed runtime environment, handling critical production elements such as configuration, orchestration, load balancing, and security.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Heroku Postgres\",           \"feature_description\": \"Secure PostgreSQL as a service, featuring easy setup, encryption at rest, scalability, and database forking with continuous protection.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Heroku Data for Redis\",           \"feature_description\": \"Managed service for Redis, providing robust data types, substantial throughput, and support for major languages.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Scale\",           \"feature_description\": \"Immediate vertical and horizontal scaling capabilities for all types of projects, from hobby to enterprise-grade applications.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Add-ons\",           \"feature_description\": \"Extend application capabilities with pre-integrated services such as New Relic, MongoDB, and SendGrid.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Data Clips\",           \"feature_description\": \"Real-time data insights sharing through secure URL query results distribution.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Code and Data Rollback\",           \"feature_description\": \"Instant rollback to previous states for both code and databases.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"App Metrics\",           \"feature_description\": \"Inbuilt monitoring for application performance metrics like throughput, response times, and errors.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Continuous Delivery\",           \"feature_description\": \"Streamlined app building with Heroku Flow, leveraging Pipelines, Review Apps, and GitHub Integration.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"GitHub Integration\",           \"feature_description\": \"Automatic deployment support for repositories with pull requests generating testable Review Apps.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Extensibility\",           \"feature_description\": \"Customizable stacks through community or custom-built Buildpacks.\",           \"feature_subpoints\": []         }       ],       \"name\": \"Heroku\",       \"link\": \"https://www.heroku.com\",       \"customers\": [         \"LitCharts\",         \"SHIFT Commerce\",         \"PensionBee\",         \"DrivenData\"       ],       \"product_description\": \"Heroku is a highly versatile and managed platform for running data-driven applications, offering modern architecture support, rapid scaling, and seamless integrations.\",       \"pricing\": null     }   ]",
                "name": "input_value",
                "display_name": "Text",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Text to be passed as input.",
                "title_case": false,
                "type": "str"
              }
            },
            "description": "Get text inputs from the Playground.",
            "icon": "type",
            "base_classes": [
              "Message"
            ],
            "display_name": "Text Input",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "text",
                "display_name": "Text",
                "method": "text_response",
                "value": "__UNDEFINED__",
                "cache": true,
                "hidden": false
              }
            ],
            "field_order": [
              "input_value"
            ],
            "beta": false,
            "edited": false
          },
          "id": "TextInput-Z5u1h"
        },
        "selected": false,
        "width": 384,
        "height": 309,
        "positionAbsolute": {
          "x": -2990.8524501213674,
          "y": 1261.659533062335
        },
        "dragging": false
      },
      {
        "id": "Prompt-UXSYo",
        "type": "genericNode",
        "position": {
          "x": -2456.780963872296,
          "y": 1239.039542969816
        },
        "data": {
          "type": "Prompt",
          "node": {
            "template": {
              "_type": "Component",
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio.base.prompts.api_utils import process_prompt_template\nfrom axiestudio.custom import Component\nfrom axiestudio.io import Output, PromptInput\nfrom axiestudio.schema.message import Message\nfrom axiestudio.template.utils import update_template_values\n\n\nclass PromptComponent(Component):\n    display_name: str = \"Prompt\"\n    description: str = \"Create a prompt template with dynamic variables.\"\n    icon = \"prompts\"\n    trace_type = \"prompt\"\n\n    inputs = [\n        PromptInput(name=\"template\", display_name=\"Template\"),\n    ]\n\n    outputs = [\n        Output(display_name=\"Prompt Message\", name=\"prompt\", method=\"build_prompt\"),\n    ]\n\n    async def build_prompt(\n        self,\n    ) -> Message:\n        prompt = await Message.from_template_and_variables(**self._attributes)\n        self.status = prompt.text\n        return prompt\n\n    def post_code_processing(self, new_build_config: dict, current_build_config: dict):\n        \"\"\"\n        This function is called after the code validation is done.\n        \"\"\"\n        frontend_node = super().post_code_processing(new_build_config, current_build_config)\n        template = frontend_node[\"template\"][\"template\"][\"value\"]\n        _ = process_prompt_template(\n            template=template,\n            name=\"template\",\n            custom_fields=frontend_node[\"custom_fields\"],\n            frontend_node_template=frontend_node[\"template\"],\n        )\n        # Now that template is updated, we need to grab any values that were set in the current_build_config\n        # and update the frontend_node with those values\n        update_template_values(frontend_template=frontend_node, raw_template=current_build_config[\"template\"])\n        return frontend_node\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "template": {
                "trace_as_input": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "You are a senior product analyst with expertise in a broad range of industries and companies. Your job is to analyse a given company's products to understand the problems it is trying to solve and the value proposition of the products. You will be given detailed information about the company, the products that they are selling and the features of the product and your output will be the pain points each product aims to solve and its value proposition.\n\nThe following are the product details for the company you need to analyze:\n\n{product_details}\n\nThe output should strictly be in JSON and in the format:\n\n    [\"name\": \"\",\n    \"product_description\": \"\",\n     \"pain_points\": \"\".\n      \"value_proposition: \"\"],\n    [\"name\": \"\",\n    \"product_description\": \"\",\n     \"pain_points\": \"\",\n      \"value_proposition: '\"\"]",
                "name": "template",
                "display_name": "Template",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "prompt"
              },
              "product_details": {
                "field_type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "product_details",
                "display_name": "product_details",
                "advanced": false,
                "input_types": [
                  "Message",
                  "Text"
                ],
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "type": "str"
              }
            },
            "description": "Create a prompt template with dynamic variables.",
            "icon": "prompts",
            "is_input": null,
            "is_output": null,
            "is_composition": null,
            "base_classes": [
              "Message"
            ],
            "name": "",
            "display_name": "Prompt",
            "documentation": "",
            "custom_fields": {
              "template": [
                "product_details"
              ]
            },
            "output_types": [],
            "full_path": null,
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "prompt",
                "hidden": false,
                "display_name": "Prompt Message",
                "method": "build_prompt",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "template"
            ],
            "beta": false,
            "error": null,
            "edited": false
          },
          "id": "Prompt-UXSYo",
          "description": "Create a prompt template with dynamic variables.",
          "display_name": "Prompt"
        },
        "selected": false,
        "width": 384,
        "height": 423,
        "positionAbsolute": {
          "x": -2456.780963872296,
          "y": 1239.039542969816
        },
        "dragging": false
      },
      {
        "id": "AnthropicModel-Tl7VR",
        "type": "genericNode",
        "position": {
          "x": -1998.57557877925,
          "y": 1193.6912408638407
        },
        "data": {
          "type": "AnthropicModel",
          "node": {
            "template": {
              "_type": "Component",
              "anthropic_api_key": {
                "load_from_db": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "",
                "name": "anthropic_api_key",
                "display_name": "Anthropic API Key",
                "advanced": false,
                "input_types": [],
                "dynamic": false,
                "info": "Your Anthropic API key.",
                "title_case": false,
                "password": true,
                "type": "str"
              },
              "anthropic_api_url": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "",
                "name": "anthropic_api_url",
                "display_name": "Anthropic API URL",
                "advanced": true,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Endpoint of the Anthropic API. Defaults to 'https://api.anthropic.com' if not specified.",
                "title_case": false,
                "type": "str"
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from langchain_anthropic.chat_models import ChatAnthropic\nfrom pydantic.v1 import SecretStr\n\nfrom axiestudio.base.constants import STREAM_INFO_TEXT\nfrom axiestudio.base.models.model import LCModelComponent\nfrom axiestudio.field_typing import LanguageModel\nfrom axiestudio.io import BoolInput, DropdownInput, FloatInput, IntInput, MessageTextInput, SecretStrInput\n\n\nclass AnthropicModelComponent(LCModelComponent):\n    display_name = \"Anthropic\"\n    description = \"Generate text using Anthropic Chat&Completion LLMs with prefill support.\"\n    icon = \"Anthropic\"\n\n    inputs = [\n        MessageTextInput(name=\"input_value\", display_name=\"Input\"),\n        IntInput(\n            name=\"max_tokens\",\n            display_name=\"Max Tokens\",\n            advanced=True,\n            value=4096,\n            info=\"The maximum number of tokens to generate. Set to 0 for unlimited tokens.\",\n        ),\n        DropdownInput(\n            name=\"model\",\n            display_name=\"Model Name\",\n            options=[\n                \"claude-3-5-sonnet-20240620\",\n                \"claude-3-opus-20240229\",\n                \"claude-3-sonnet-20240229\",\n                \"claude-3-haiku-20240307\",\n            ],\n            info=\"https://python.langchain.com/docs/integrations/chat/anthropic\",\n            value=\"claude-3-5-sonnet-20240620\",\n        ),\n        SecretStrInput(\n            name=\"anthropic_api_key\",\n            display_name=\"Anthropic API Key\",\n            info=\"Your Anthropic API key.\",\n        ),\n        FloatInput(name=\"temperature\", display_name=\"Temperature\", value=0.1),\n        MessageTextInput(\n            name=\"anthropic_api_url\",\n            display_name=\"Anthropic API URL\",\n            advanced=True,\n            info=\"Endpoint of the Anthropic API. Defaults to 'https://api.anthropic.com' if not specified.\",\n        ),\n        BoolInput(name=\"stream\", display_name=\"Stream\", info=STREAM_INFO_TEXT, advanced=True, value=False),\n        MessageTextInput(\n            name=\"system_message\",\n            display_name=\"System Message\",\n            info=\"System message to pass to the model.\",\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\"prefill\",\n            display_name=\"Prefill\",\n            info=\"Prefill text to guide the model's response.\",\n            advanced=True,\n        ),\n    ]\n\n    def build_model(self) -> LanguageModel:  # type: ignore[type-var]\n        model = self.model\n        anthropic_api_key = self.anthropic_api_key\n        max_tokens = self.max_tokens\n        temperature = self.temperature\n        anthropic_api_url = self.anthropic_api_url or \"https://api.anthropic.com\"\n\n        try:\n            output = ChatAnthropic(\n                model=model,\n                anthropic_api_key=(SecretStr(anthropic_api_key) if anthropic_api_key else None),\n                max_tokens_to_sample=max_tokens,  # type: ignore\n                temperature=temperature,\n                anthropic_api_url=anthropic_api_url,\n                streaming=self.stream,\n            )\n        except Exception as e:\n            raise ValueError(\"Could not connect to Anthropic API.\") from e\n\n        return output  # type: ignore\n\n    def _get_exception_message(self, exception: Exception) -> str | None:\n        \"\"\"\n        Get a message from an Anthropic exception.\n\n        Args:\n            exception (Exception): The exception to get the message from.\n\n        Returns:\n            str: The message from the exception.\n        \"\"\"\n        try:\n            from anthropic import BadRequestError\n        except ImportError:\n            return None\n        if isinstance(exception, BadRequestError):\n            message = exception.body.get(\"error\", {}).get(\"message\")  # type: ignore\n            if message:\n                return message\n        return None\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "input_value": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "",
                "name": "input_value",
                "display_name": "Input",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str"
              },
              "max_tokens": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": 4096,
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "advanced": true,
                "dynamic": false,
                "info": "The maximum number of tokens to generate. Set to 0 for unlimited tokens.",
                "title_case": false,
                "type": "int"
              },
              "model": {
                "trace_as_metadata": true,
                "options": [
                  "claude-3-5-sonnet-20240620",
                  "claude-3-opus-20240229",
                  "claude-3-sonnet-20240229",
                  "claude-3-haiku-20240307"
                ],
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "claude-3-5-sonnet-20240620",
                "name": "model",
                "display_name": "Model Name",
                "advanced": false,
                "dynamic": false,
                "info": "https://python.langchain.com/docs/integrations/chat/anthropic",
                "title_case": false,
                "type": "str"
              },
              "prefill": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "",
                "name": "prefill",
                "display_name": "Prefill",
                "advanced": true,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Prefill text to guide the model's response.",
                "title_case": false,
                "type": "str"
              },
              "stream": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": false,
                "name": "stream",
                "display_name": "Stream",
                "advanced": true,
                "dynamic": false,
                "info": "Stream the response from the model. Streaming works only in Chat.",
                "title_case": false,
                "type": "bool"
              },
              "system_message": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "",
                "name": "system_message",
                "display_name": "System Message",
                "advanced": true,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "System message to pass to the model.",
                "title_case": false,
                "type": "str"
              },
              "temperature": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": 0.1,
                "name": "temperature",
                "display_name": "Temperature",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "float"
              }
            },
            "description": "Generate text using Anthropic Chat&Completion LLMs with prefill support.",
            "icon": "Anthropic",
            "base_classes": [
              "LanguageModel",
              "Message"
            ],
            "display_name": "Anthropic",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "text_output",
                "display_name": "Text",
                "method": "text_response",
                "value": "__UNDEFINED__",
                "cache": true,
                "hidden": false
              },
              {
                "types": [
                  "LanguageModel"
                ],
                "selected": "LanguageModel",
                "name": "model_output",
                "display_name": "Language Model",
                "method": "build_model",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "input_value",
              "max_tokens",
              "model",
              "anthropic_api_key",
              "temperature",
              "anthropic_api_url",
              "stream",
              "system_message",
              "prefill"
            ],
            "beta": false,
            "edited": false
          },
          "id": "AnthropicModel-Tl7VR"
        },
        "selected": false,
        "width": 384,
        "height": 651,
        "positionAbsolute": {
          "x": -1998.57557877925,
          "y": 1193.6912408638407
        },
        "dragging": false
      },
      {
        "id": "TextInput-wSUYp",
        "type": "genericNode",
        "position": {
          "x": -2058.946145734739,
          "y": 661.8163733893899
        },
        "data": {
          "type": "TextInput",
          "node": {
            "template": {
              "_type": "Component",
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio.base.io.text import TextComponent\nfrom axiestudio.io import MessageTextInput, Output\nfrom axiestudio.schema.message import Message\n\n\nclass TextInputComponent(TextComponent):\n    display_name = \"Text Input\"\n    description = \"Get text inputs from the Playground.\"\n    icon = \"type\"\n\n    inputs = [\n        MessageTextInput(\n            name=\"input_value\",\n            display_name=\"Text\",\n            info=\"Text to be passed as input.\",\n        ),\n    ]\n    outputs = [\n        Output(display_name=\"Text\", name=\"text\", method=\"text_response\"),\n    ]\n\n    def text_response(self) -> Message:\n        message = Message(\n            text=self.input_value,\n        )\n        return message\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "input_value": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "social_media_urls_linkedin_id social_media_urls_linkedin_slug social_media_urls_linkedin_url domain enrichment_status headquarters_address employee_range_max year_founded industries name employee_range_min description type linkedin_headcount_qoq_absolute stock_exchange headquarters_country glassdoor_business_outlook_pct glassdoor_review_count_mom_pct job_openings_total website_traffic_source_search_pct website_traffic_visitor_qoq_pct glassdoor_ceo_approval_mom_pct logo social_media_urls_twitter_url linkedin_headcount_yoy_percent job_openings_mom_pct glassdoor_review_count_yoy_pct crunchbase_categories glassdoor_compensation_rating glassdoor_overall_rating glassdoor_senior_management_rating search_engine_performance_average_organic_rank funding_recent_round_amount_in_usd linkedin_headcount_total search_engine_performance_total_organic_results linkedin_headcount_mom_absolute website_traffic_monthly_visitors_max glassdoor_ceo_approval_pct job_openings_recent_openings_count g2_average_rating search_engine_performance_monthly_organic_clicks raw_crustdata_competitors funding_recent_round_name website_traffic_monthly_visitors_min glassdoor_ceo_approval_qoq_pct industry linkedin_headcount_mom_percent website_traffic_source_paid_referral_pct glassdoor_review_count_qoq_pct funding_total_funding_amount_in_usd website_traffic_visitor_mom_pct search_engine_performance_paid_competitors search_engine_performance_organic_competitors glassdoor_review_count search_engine_performance_lost_ranks website_traffic_source_social_pct g2_review_count job_openings_recent_openings_titles funding_investors job_openings_qoq_pct search_engine_performance_newly_ranked linkedin_headcount_yoy_absolute search_engine_performance_gained_ranks glassdoor_career_opportunities_rating search_engine_performance_monthly_organic_value linkedin_headcount_qoq_percent website_traffic_source_direct_pct website_traffic_source_referral_pct summary employee_count phone_numbers technology_used_categories linkedin_headcount_departments headquarters_postal_code headquarters_state headquarters_city revenue_amount_in_usd technology_used org_features last_enrichment_attempt_at api_docs_urls has_software_documentation social_media_urls keywords has_newsletters redirection_chain is_pricing_available has_reseller_program has_community_portal shows_customer_reviews specialties is_b2b user_signup_url careers_page_url is_analysis_complete has_api_docs newsletters_urls has_affiliate_program reseller_program_url online_store_url community_portal_url business_category business_sub_category meta_title is_user_signup_available status_page_url meta_description is_product_analysis_complete last_updated_at has_support_portal is_online_store has_status_page blog_url has_online_store usage_statistics startup_program_url products has_mobile_apps user_login_url is_demo_available has_careers_page partner_program_url has_partners_program pricing_page_url affiliate_program_url support_portal_url url is_user_login_available startup_program_available detected_third_party_scripts analysis_result is_free_trial_available has_desktop_apps software_documentation_urls has_blog",
                "name": "input_value",
                "display_name": "Text",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Text to be passed as input.",
                "title_case": false,
                "type": "str"
              }
            },
            "description": "Get text inputs from the Playground.",
            "icon": "type",
            "base_classes": [
              "Message"
            ],
            "display_name": "Text Input",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "text",
                "display_name": "Text",
                "method": "text_response",
                "value": "__UNDEFINED__",
                "cache": true,
                "hidden": false
              }
            ],
            "field_order": [
              "input_value"
            ],
            "beta": false,
            "edited": false
          },
          "id": "TextInput-wSUYp"
        },
        "selected": false,
        "width": 384,
        "height": 309,
        "positionAbsolute": {
          "x": -2058.946145734739,
          "y": 661.8163733893899
        },
        "dragging": false
      },
      {
        "id": "TextInput-UCk2a",
        "type": "genericNode",
        "position": {
          "x": -786.9966668419269,
          "y": 1836.9106034279919
        },
        "data": {
          "type": "TextInput",
          "node": {
            "template": {
              "_type": "Component",
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio.base.io.text import TextComponent\nfrom axiestudio.io import MessageTextInput, Output\nfrom axiestudio.schema.message import Message\n\n\nclass TextInputComponent(TextComponent):\n    display_name = \"Text Input\"\n    description = \"Get text inputs from the Playground.\"\n    icon = \"type\"\n\n    inputs = [\n        MessageTextInput(\n            name=\"input_value\",\n            display_name=\"Text\",\n            info=\"Text to be passed as input.\",\n        ),\n    ]\n    outputs = [\n        Output(display_name=\"Text\", name=\"text\", method=\"text_response\"),\n    ]\n\n    def text_response(self) -> Message:\n        message = Message(\n            text=self.input_value,\n        )\n        return message\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "input_value": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "[   {     \"Starter Suite\": [       \"employee_range_min\": \"Helps determine if the company is within the target size for Starter Suite. For smaller companies (e.g., <50 employees), emphasize the 'Simplified Sign-up' feature.\",       \"employee_range_max\": \"Helps determine if the company is within the target size for Starter Suite. For larger companies (e.g., >500 employees), focus on the 'Unified Business Suite' feature to address complex needs.\",       \"industries\": \"Allows tailoring the pitch to specific industry needs. Highlight how Starter Suite can address common pain points in that industry.\",       \"description\": \"Provides context about the company's focus. Use this to align Starter Suite's features with the company's goals and challenges.\",       \"website_traffic_monthly_visitors_max\": \"Indicates the company's online presence. For higher traffic, emphasize how Starter Suite can help manage and convert this traffic effectively.\",       \"technology_used\": \"Identifies current tech stack. Highlight how Starter Suite can integrate with or enhance existing technologies.\",       \"revenue_amount_in_usd\": \"Helps gauge the company's size and potential budget. Adjust the pricing discussion accordingly.\"     ],     \"Sales Cloud\": [       \"linkedin_headcount_total\": \"Indicates the size of the company. For larger headcounts, emphasize Sales Cloud's scalability and team collaboration features.\",       \"job_openings_total\": \"Suggests company growth. If high, highlight how Sales Cloud can help manage expanding sales teams and processes.\",       \"glassdoor_overall_rating\": \"Reflects employee satisfaction. If low, discuss how Sales Cloud's 'Guided Content and Training' can improve sales team morale and performance.\",       \"crunchbase_categories\": \"Provides insight into the company's market focus. Tailor the Sales Cloud pitch to address specific industry sales challenges.\",       \"funding_total_funding_amount_in_usd\": \"Indicates financial backing. For well-funded companies, emphasize how Sales Cloud can help scale sales operations efficiently.\",       \"g2_average_rating\": \"Shows customer satisfaction with current tools. If low, highlight Sales Cloud's user-friendly features and pre-configured processes.\",       \"website_traffic_source_search_pct\": \"Indicates reliance on search traffic. If high, discuss how Sales Cloud can help convert this traffic into sales leads.\"     ],     \"Marketing Cloud\": [       \"website_traffic_monthly_visitors_max\": \"Indicates potential marketing reach. For high traffic, emphasize Marketing Cloud's ability to segment and personalize at scale.\",       \"social_media_urls_linkedin_url\": \"Suggests B2B focus. Highlight Marketing Cloud's B2B Marketing Automation features.\",       \"social_media_urls_twitter_url\": \"Indicates social media presence. Discuss how Marketing Cloud can integrate social media into marketing strategies.\",       \"website_traffic_source_paid_referral_pct\": \"Shows investment in paid marketing. If high, emphasize Marketing Cloud's Marketing Analytics to optimize spend.\",       \"website_traffic_source_social_pct\": \"Indicates social media marketing effectiveness. If low, highlight Marketing Cloud's cross-channel personalization capabilities.\",       \"g2_review_count\": \"Reflects market presence. For high counts, discuss how Marketing Cloud can help maintain and improve market position.\",       \"technology_used_categories\": \"Identifies current martech stack. Show how Marketing Cloud can integrate with or enhance existing tools.\"     ],     \"Commerce Cloud\": [       \"website_traffic_monthly_visitors_max\": \"Indicates e-commerce potential. For high traffic, emphasize Commerce Cloud's scalability and personalization features.\",       \"industry\": \"Allows tailoring the Commerce Cloud pitch to industry-specific e-commerce needs.\",       \"website_traffic_source_direct_pct\": \"Shows brand recognition. If high, discuss how Commerce Cloud can enhance the direct-to-consumer experience.\",       \"website_traffic_source_search_pct\": \"Indicates reliance on search traffic. If high, highlight Commerce Cloud's SEO and SEM integration capabilities.\",       \"technology_used\": \"Identifies current e-commerce stack. Show how Commerce Cloud can integrate with or replace existing systems for improved efficiency.\",       \"is_online_store\": \"Confirms e-commerce presence. If true, discuss how Commerce Cloud can enhance existing operations; if false, present it as a solution to enter e-commerce.\",       \"business_category\": \"Helps understand the nature of products/services. Tailor the Commerce Cloud pitch to specific category needs (e.g., B2B vs. D2C features).\"     ],     \"Salesforce Artificial Intelligence\": [       \"employee_count\": \"Indicates company size and potential AI needs. For larger companies, emphasize AI's ability to handle complex, large-scale operations.\",       \"industries\": \"Allows tailoring AI use cases to specific industry needs and challenges.\",       \"technology_used_categories\": \"Identifies current tech stack. Highlight how Salesforce AI can enhance or integrate with existing technologies.\",       \"g2_average_rating\": \"Reflects satisfaction with current tools. If low, emphasize how AI can improve efficiency and user experience.\",       \"job_openings_total\": \"Suggests growth and potential pain points. If high, discuss how AI can help manage scaling challenges.\",       \"website_traffic_monthly_visitors_max\": \"Indicates digital presence. For high traffic, highlight AI's ability to personalize customer interactions at scale.\",       \"funding_total_funding_amount_in_usd\": \"Suggests investment capacity. For well-funded companies, present AI as a strategic investment for long-term growth.\"     ],     \"Salesforce Platform\": [       \"employee_count\": \"Indicates company size and potential platform needs. For larger companies, emphasize the platform's scalability and enterprise features.\",       \"technology_used_categories\": \"Identifies current tech stack. Highlight how Salesforce Platform can integrate with and enhance existing systems.\",       \"industries\": \"Allows tailoring the platform pitch to industry-specific needs and regulations.\",       \"funding_total_funding_amount_in_usd\": \"Suggests investment capacity. For well-funded companies, present the platform as a comprehensive solution for growth.\",       \"job_openings_total\": \"Indicates growth and potential scaling challenges. Highlight how the platform can support rapid expansion.\",       \"g2_average_rating\": \"Reflects satisfaction with current tools. If low, emphasize the platform's ability to streamline and improve operations.\",       \"is_api_docs\": \"Indicates technical sophistication. If true, highlight the platform's extensibility and API capabilities.\"     ],     \"Slack\": [       \"employee_count\": \"Indicates potential user base. For larger companies, emphasize Slack's enterprise-grade features and scalability.\",       \"linkedin_headcount_departments\": \"Shows organizational complexity. Highlight Slack's ability to streamline communication across various departments.\",       \"technology_used\": \"Identifies current tools. Emphasize Slack's integration capabilities with existing systems.\",       \"glassdoor_overall_rating\": \"Reflects employee satisfaction. If low, discuss how Slack can improve workplace communication and collaboration.\",       \"job_openings_total\": \"Suggests company growth. Highlight how Slack can help onboard and integrate new employees efficiently.\",       \"industries\": \"Allows tailoring Slack use cases to industry-specific communication needs.\",       \"g2_average_rating\": \"Indicates satisfaction with current tools. If low, emphasize Slack's user-friendly interface and productivity features.\"     ],     \"Tableau\": [       \"employee_count\": \"Indicates potential scale of data visualization needs. For larger companies, emphasize Tableau's enterprise-level capabilities.\",       \"industries\": \"Allows tailoring Tableau use cases to industry-specific data challenges and KPIs.\",       \"technology_used_categories\": \"Identifies current data stack. Highlight Tableau's integration capabilities with existing systems.\",       \"g2_average_rating\": \"Reflects satisfaction with current tools. If low, emphasize Tableau's user-friendly interface and powerful features.\",       \"job_openings_total\": \"Suggests growth and potential increase in data complexity. Discuss how Tableau can help manage and visualize growing datasets.\",       \"funding_total_funding_amount_in_usd\": \"Indicates investment capacity. For well-funded companies, present Tableau as a strategic investment in data-driven decision making.\",       \"glassdoor_overall_rating\": \"Reflects employee satisfaction. If low, discuss how Tableau can empower employees with data insights, potentially improving job satisfaction.\"     ],     \"MuleSoft\": [       \"technology_used_categories\": \"Identifies current tech stack. Highlight MuleSoft's ability to integrate with and enhance existing systems.\",       \"employee_count\": \"Indicates potential scale of integration needs. For larger companies, emphasize MuleSoft's enterprise-grade capabilities.\",       \"industries\": \"Allows tailoring MuleSoft use cases to industry-specific integration challenges.\",       \"g2_average_rating\": \"Reflects satisfaction with current tools. If low, emphasize MuleSoft's ability to streamline and improve data flow across the organization.\",       \"job_openings_total\": \"Suggests growth and potential increase in system complexity. Discuss how MuleSoft can help manage integrations as the company scales.\",       \"funding_total_funding_amount_in_usd\": \"Indicates investment capacity. For well-funded companies, present MuleSoft as a strategic investment in long-term system architecture.\",       \"is_api_docs\": \"Indicates API usage. If true, highlight MuleSoft's API management and integration capabilities.\"     ],     \"Heroku\": [       \"technology_used_categories\": \"Identifies current tech stack. Highlight Heroku's compatibility and integration with existing technologies.\",       \"employee_count\": \"Indicates potential scale of development needs. For larger companies, emphasize Heroku's enterprise-level features and support.\",       \"industries\": \"Allows tailoring Heroku use cases to industry-specific development and deployment challenges.\",       \"g2_average_rating\": \"Reflects satisfaction with current tools. If low, emphasize Heroku's ease of use and developer productivity features.\",       \"job_openings_total\": \"Suggests growth and potential increase in development needs. Discuss how Heroku can help scale applications and development processes.\",       \"funding_total_funding_amount_in_usd\": \"Indicates investment capacity. For well-funded companies, present Heroku as a strategic platform for rapid development and deployment.\",       \"is_api_docs\": \"Indicates API usage. If true, highlight Heroku's support for API-driven development and microservices architecture.\"     ]   } ]",
                "name": "input_value",
                "display_name": "Text",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Text to be passed as input.",
                "title_case": false,
                "type": "str"
              }
            },
            "description": "Get text inputs from the Playground.",
            "icon": "type",
            "base_classes": [
              "Message"
            ],
            "display_name": "Text Input",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "text",
                "display_name": "Text",
                "method": "text_response",
                "value": "__UNDEFINED__",
                "cache": true,
                "hidden": false
              }
            ],
            "field_order": [
              "input_value"
            ],
            "beta": false,
            "edited": false
          },
          "id": "TextInput-UCk2a"
        },
        "selected": false,
        "width": 384,
        "height": 309,
        "positionAbsolute": {
          "x": -786.9966668419269,
          "y": 1836.9106034279919
        },
        "dragging": false
      },
      {
        "id": "TextInput-G0gCt",
        "type": "genericNode",
        "position": {
          "x": -824.6357956590114,
          "y": 1397.160923277288
        },
        "data": {
          "type": "TextInput",
          "node": {
            "template": {
              "_type": "Component",
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio.base.io.text import TextComponent\nfrom axiestudio.io import MessageTextInput, Output\nfrom axiestudio.schema.message import Message\n\n\nclass TextInputComponent(TextComponent):\n    display_name = \"Text Input\"\n    description = \"Get text inputs from the Playground.\"\n    icon = \"type\"\n\n    inputs = [\n        MessageTextInput(\n            name=\"input_value\",\n            display_name=\"Text\",\n            info=\"Text to be passed as input.\",\n        ),\n    ]\n    outputs = [\n        Output(display_name=\"Text\", name=\"text\", method=\"text_response\"),\n    ]\n\n    def text_response(self) -> Message:\n        message = Message(\n            text=self.input_value,\n        )\n        return message\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "input_value": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "{   \"social_media_urls_linkedin_id\": 69088800,   \"social_media_urls_linkedin_slug\": \"devrev\",   \"social_media_urls_linkedin_url\": \"https://www.linkedin.com/company/devrev\",   \"domain\": \"devrev.ai\",   \"enrichment_status\": \"Completed\",   \"headquarters_address\": \"Palo Alto\",   \"employee_range_max\": 500,   \"year_founded\": 2020,   \"industries\": \"Computer Software\",   \"name\": \"DevRev\",   \"employee_range_min\": 201,   \"description\": \"DevRev’s AgentOS, purpose-built for SaaS companies, comprises three modern CRM apps for support, product, and growth teams. It connects end users, sellers, support, product people, and developers, reducing 9 business apps and converging 6 teams onto a common platform.\\n\\nUnlike horizontal CRMs, DevRev takes a blank canvas approach to collaboration, AI, and analytics, enabling SaaS companies to increase product velocity and reduce customer churn. DevRev is used by thousands of companies in search of low latency analytics and customizable LLMs to thrive in this era of GenAI.\\n\\nHeadquartered in Palo Alto, California, DevRev has offices in seven global locations. \\n\\nWe have raised $100 million in funding from investors like Khosla Ventures and Mayfield at a $1.1 billion valuation. We are also honored to be named on the Forbes 2024 list of America’s Best Startup Employers.\\n\\nFounded in October 2020 by Dheeraj Pandey, former co-founder and CEO of Nutanix, and Manoj Agarwal, former SVP of Engineering at Nutanix, DevRev continues to push the boundaries of innovation, helping thousands of companies thrive in the rapidly evolving landscape of AI-driven SaaS.\",   \"type\": \"Privately Held\",   \"linkedin_headcount_qoq_absolute\": 26,   \"stock_exchange\": \"PRIVATE\",   \"headquarters_country\": \"USA\",   \"glassdoor_business_outlook_pct\": 88,   \"glassdoor_review_count_mom_pct\": 1.15,   \"job_openings_total\": 25,   \"website_traffic_source_search_pct\": 24.694634514494737,   \"website_traffic_visitor_qoq_pct\": -9.8,   \"glassdoor_ceo_approval_mom_pct\": 1.03,   \"social_media_urls_twitter_url\": \"https://twitter.com/devrev\",   \"linkedin_headcount_yoy_percent\": 51.83,   \"job_openings_mom_pct\": 46.78,   \"glassdoor_review_count_yoy_pct\": -1.12,   \"crunchbase_categories\": [     \"Software\",     \"Developer APIs\",     \"CRM\",     \"Computer\",     \"Business Information Systems\",     \"Customer Service\",     \"Product Management\",     \"Artificial Intelligence (AI)\",     \"Developer Platform\"   ],   \"glassdoor_compensation_rating\": 4.65143,   \"glassdoor_overall_rating\": 4.7452,   \"glassdoor_senior_management_rating\": 4.68342,   \"search_engine_performance_average_organic_rank\": 62,   \"funding_recent_round_amount_in_usd\": 100825173,   \"linkedin_headcount_total\": 443,   \"search_engine_performance_total_organic_results\": 307,   \"linkedin_headcount_mom_absolute\": 17,   \"website_traffic_monthly_visitors_max\": 110480,   \"glassdoor_ceo_approval_pct\": 98,   \"job_openings_recent_openings_count\": 3,   \"g2_average_rating\": 8.9,   \"search_engine_performance_monthly_organic_clicks\": 858,   \"raw_crustdata_competitors\": \"devron.ai,devnest.ro,devtron.ai,welldev.io\",   \"funding_recent_round_name\": \"SERIES_A\",   \"website_traffic_monthly_visitors_min\": 110480,   \"glassdoor_ceo_approval_qoq_pct\": 1.03,   \"industry\": \"Software Development,Computer Software\",   \"linkedin_headcount_mom_percent\": 1.81,   \"website_traffic_source_paid_referral_pct\": 16.33360777161154,   \"glassdoor_review_count_qoq_pct\": -2.22,   \"funding_total_funding_amount_in_usd\": 150825173,   \"website_traffic_visitor_mom_pct\": 13.39,   \"search_engine_performance_paid_competitors\": [     \"easychator.com\",     \"launchnetworkla.com\",     \"webhelp.com\",     \"regdee.com\",     \"ometrics.com\"   ],   \"search_engine_performance_organic_competitors\": [     \"help-desk-migration.com\",     \"customerly.io\",     \"helpcrunch.com\",     \"proprofsdesk.com\",     \"botgate.ai\"   ],   \"glassdoor_review_count\": 143,   \"search_engine_performance_lost_ranks\": 920,   \"website_traffic_source_social_pct\": 6.42026646133143,   \"g2_review_count\": 103,   \"job_openings_recent_openings_titles\": [     \"Application Engineer\",     \"Design: Product Designer\",     \"Solutions Engineer\"   ],   \"funding_investors\": [     \"Dheeraj Pandey\",     \"m]x[v Capital\",     \"Firebolt Ventures\",     \"Param Hansa Values\",     \"Audeo Ventures\",     \"Vijay Shankar\",     \"Bradley Horowitz\",     \"Ballistic Ventures\",     \"Cloud Capital\",     \"Khosla Ventures\",     \"\",     \"2 | Twelve\",     \"Alumni Ventures\",     \"Mayfield Fund\"   ],   \"job_openings_qoq_pct\": 209.88,   \"search_engine_performance_newly_ranked\": 330,   \"linkedin_headcount_yoy_absolute\": 141,   \"search_engine_performance_gained_ranks\": 847,   \"glassdoor_career_opportunities_rating\": 4.67135,   \"search_engine_performance_monthly_organic_value\": 3741,   \"linkedin_headcount_qoq_percent\": 8.15,   \"website_traffic_source_direct_pct\": 47.153092930553804,   \"website_traffic_source_referral_pct\": 5.398398322008486,   \"summary\": \"Boost collaboration and efficiency with DevRev's cloud-based platform for customer support and software development. Native collaboration, analytics, and AI.\",   \"employee_count\": 460,   \"phone_numbers\": [     \"+16508673236\"   ],   \"linkedin_headcount_departments\": [     {       \"name\": \"Engineering\",       \"count\": 79     },     {       \"name\": \"Operations\",       \"count\": 20     },     {       \"name\": \"Information Technology\",       \"count\": 1     },     {       \"name\": \"Product Management\",       \"count\": 13     },     {       \"name\": \"Sales\",       \"count\": 17     },     {       \"name\": \"Business Development\",       \"count\": 2     },     {       \"name\": \"Marketing\",       \"count\": 19     },     {       \"name\": \"Support\",       \"count\": 11     },     {       \"name\": \"Education\",       \"count\": 1     },     {       \"name\": \"Finance\",       \"count\": 6     },     {       \"name\": \"Entrepreneurship\",       \"count\": 3     },     {       \"name\": \"Human Resources\",       \"count\": 4     },     {       \"name\": \"Arts And Design\",       \"count\": 7     },     {       \"name\": \"Legal\",       \"count\": 6     },     {       \"name\": \"Data Science\",       \"count\": 1     },     {       \"name\": \"Accounting\",       \"count\": 0     },     {       \"name\": \"Consulting\",       \"count\": 0     },     {       \"name\": \"Administrative\",       \"count\": 0     },     {       \"name\": \"Media And Commmunication\",       \"count\": 0     }   ],   \"headquarters_postal_code\": \"94303-3603\",   \"headquarters_state\": \"California\",   \"headquarters_city\": \"Palo Alto\",   \"revenue_amount_in_usd\": 4450000,   \"technology_used\": [     \"AI\",     \"Amadesa\",     \"Amazon AWS\",     \"Amazon SES\",     \"Appcues\",     \"Atlassian Cloud\",     \"Bootstrap Framework\",     \"DoubleClick\",     \"DoubleClick Conversion\",     \"Facebook Custom Audiences\",     \"Facebook Login (Connect)\",     \"Facebook Widget\",     \"FullStory\",     \"Gmail\",     \"GoToWebinar\",     \"Google Analytics\",     \"Google Apps\",     \"Google Dynamic Remarketing\",     \"Google Font API\",     \"Google Play\",     \"Google Tag Manager\",     \"Greenhouse.io\",     \"Helpscout\",     \"Hotjar\",     \"Linkedin Marketing Solutions\",     \"Microsoft Office 365\",     \"Mobile Friendly\",     \"Open AdStream (Appnexus)\",     \"Pardot\",     \"Qualtrics\",     \"React Redux\",     \"Route 53\",     \"Segment.io\",     \"Stripe\",     \"Tipalti\",     \"Twitter Advertising\",     \"Varnish\",     \"Vercel\",     \"Vimeo\",     \"Visual Website Optimizer\",     \"WordPress.org\",     \"YouTube\",     \"reCAPTCHA\"   ],   \"org_features\": {     \"api_docs_urls\": [],     \"has_software_documentation\": false,     \"social_media_urls\": [],     \"keywords\": [       \"AI\",       \"tech support\",       \"product management\",       \"analytics\",       \"CRM\"     ],     \"has_newsletters\": false,     \"is_pricing_available\": true,     \"has_reseller_program\": false,     \"has_community_portal\": false,     \"shows_customer_reviews\": true,     \"specialties\": [       \"AI-driven analytics\",       \"Customer feedback management\",       \"AI-powered CRM\",       \"Support automation\"     ],     \"is_b2b\": true,     \"user_signup_url\": \"https://app.devrev.ai/signup\",     \"careers_page_url\": \"https://devrev.ai/careers\",     \"is_analysis_complete\": true,     \"has_api_docs\": false,     \"newsletters_urls\": null,     \"has_affiliate_program\": false,     \"reseller_program_url\": null,     \"online_store_url\": null,     \"community_portal_url\": null,     \"business_category\": \"SaaS & Cloud\",     \"business_sub_category\": \"Professional Services\",     \"meta_title\": \"DevRev - AI-Powered Customer Experience & Support Platforms\",     \"is_user_signup_available\": true,     \"status_page_url\": null,     \"meta_description\": \"Join the 1000+ companies benefiting from an AI-first experience. DevRev delivers AI agents for product managers, support, and sales teams.\",     \"is_product_analysis_complete\": false,     \"last_updated_at\": \"2024-09-04T14:07:38.003Z\",     \"domain\": \"devrev.ai\",     \"input_url\": \"https://devrev.ai\",     \"has_support_portal\": true,     \"is_online_store\": false,     \"has_status_page\": false,     \"blog_url\": null,     \"has_online_store\": false,     \"usage_statistics\": {       \"input_prompt_usage\": 3949,       \"output_prompt_usage\": 760     },     \"startup_program_url\": \"https://app.devrev.ai/signup?utm_campaign=startup-program-application\",     \"products\": [       {         \"name\": \"Agent OS\",         \"link\": null       },       {         \"name\": \"Support App\",         \"link\": \"https://devrev.ai/support\"       },       {         \"name\": \"Build App\",         \"link\": \"https://devrev.ai/build\"       },       {         \"name\": \"Grow App\",         \"link\": null       },       {         \"name\": \"Analytics Engine\",         \"link\": null       },       {         \"name\": \"Automation Engine\",         \"link\": null       }     ],     \"has_mobile_apps\": true,     \"user_login_url\": null,     \"is_demo_available\": true,     \"has_careers_page\": true,     \"partner_program_url\": \"https://app.devrev.ai/signup?utm_campaign=startup-program-application\",     \"has_partners_program\": true,     \"pricing_page_url\": \"https://devrev.ai/#pricing\",     \"affiliate_program_url\": null,     \"support_portal_url\": \"https://devrev.ai/support\",     \"url\": \"https://devrev.ai/\",     \"is_user_login_available\": false,     \"startup_program_available\": true,     \"detected_third_party_scripts\": [],     \"analysis_result\": \"success\",     \"is_free_trial_available\": true,     \"has_desktop_apps\": false,     \"software_documentation_urls\": [],     \"has_blog\": false   } }",
                "name": "input_value",
                "display_name": "Text",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Text to be passed as input.",
                "title_case": false,
                "type": "str"
              }
            },
            "description": "Get text inputs from the Playground.",
            "icon": "type",
            "base_classes": [
              "Message"
            ],
            "display_name": "Text Input",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "text",
                "display_name": "Text",
                "method": "text_response",
                "value": "__UNDEFINED__",
                "cache": true,
                "hidden": false
              }
            ],
            "field_order": [
              "input_value"
            ],
            "beta": false,
            "edited": false
          },
          "id": "TextInput-G0gCt"
        },
        "selected": false,
        "width": 384,
        "height": 309,
        "positionAbsolute": {
          "x": -824.6357956590114,
          "y": 1397.160923277288
        },
        "dragging": false
      }
    ],
    "edges": [
      {
        "source": "Prompt-HTp3t",
        "sourceHandle": "{œdataTypeœ:œPromptœ,œidœ:œPrompt-HTp3tœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}",
        "target": "AnthropicModel-WHomq",
        "targetHandle": "{œfieldNameœ:œinput_valueœ,œidœ:œAnthropicModel-WHomqœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
        "data": {
          "targetHandle": {
            "fieldName": "input_value",
            "id": "AnthropicModel-WHomq",
            "inputTypes": [
              "Message"
            ],
            "type": "str"
          },
          "sourceHandle": {
            "dataType": "Prompt",
            "id": "Prompt-HTp3t",
            "name": "prompt",
            "output_types": [
              "Message"
            ]
          }
        },
        "id": "reactflow__edge-Prompt-HTp3t{œdataTypeœ:œPromptœ,œidœ:œPrompt-HTp3tœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}-AnthropicModel-WHomq{œfieldNameœ:œinput_valueœ,œidœ:œAnthropicModel-WHomqœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
        "className": ""
      },
      {
        "source": "TextInput-9osk1",
        "sourceHandle": "{œdataTypeœ:œTextInputœ,œidœ:œTextInput-9osk1œ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}",
        "target": "Prompt-HTp3t",
        "targetHandle": "{œfieldNameœ:œcustomer_organization_infoœ,œidœ:œPrompt-HTp3tœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
        "data": {
          "targetHandle": {
            "fieldName": "customer_organization_info",
            "id": "Prompt-HTp3t",
            "inputTypes": [
              "Message",
              "Text"
            ],
            "type": "str"
          },
          "sourceHandle": {
            "dataType": "TextInput",
            "id": "TextInput-9osk1",
            "name": "text",
            "output_types": [
              "Message"
            ]
          }
        },
        "id": "reactflow__edge-TextInput-9osk1{œdataTypeœ:œTextInputœ,œidœ:œTextInput-9osk1œ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}-Prompt-HTp3t{œfieldNameœ:œcustomer_organization_infoœ,œidœ:œPrompt-HTp3tœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
        "className": ""
      },
      {
        "source": "TextInput-Z5u1h",
        "sourceHandle": "{œdataTypeœ:œTextInputœ,œidœ:œTextInput-Z5u1hœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}",
        "target": "Prompt-UXSYo",
        "targetHandle": "{œfieldNameœ:œproduct_detailsœ,œidœ:œPrompt-UXSYoœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
        "data": {
          "targetHandle": {
            "fieldName": "product_details",
            "id": "Prompt-UXSYo",
            "inputTypes": [
              "Message",
              "Text"
            ],
            "type": "str"
          },
          "sourceHandle": {
            "dataType": "TextInput",
            "id": "TextInput-Z5u1h",
            "name": "text",
            "output_types": [
              "Message"
            ]
          }
        },
        "id": "reactflow__edge-TextInput-Z5u1h{œdataTypeœ:œTextInputœ,œidœ:œTextInput-Z5u1hœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}-Prompt-UXSYo{œfieldNameœ:œproduct_detailsœ,œidœ:œPrompt-UXSYoœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
        "className": ""
      },
      {
        "source": "Prompt-UXSYo",
        "sourceHandle": "{œdataTypeœ:œPromptœ,œidœ:œPrompt-UXSYoœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}",
        "target": "AnthropicModel-Tl7VR",
        "targetHandle": "{œfieldNameœ:œinput_valueœ,œidœ:œAnthropicModel-Tl7VRœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
        "data": {
          "targetHandle": {
            "fieldName": "input_value",
            "id": "AnthropicModel-Tl7VR",
            "inputTypes": [
              "Message"
            ],
            "type": "str"
          },
          "sourceHandle": {
            "dataType": "Prompt",
            "id": "Prompt-UXSYo",
            "name": "prompt",
            "output_types": [
              "Message"
            ]
          }
        },
        "id": "reactflow__edge-Prompt-UXSYo{œdataTypeœ:œPromptœ,œidœ:œPrompt-UXSYoœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}-AnthropicModel-Tl7VR{œfieldNameœ:œinput_valueœ,œidœ:œAnthropicModel-Tl7VRœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
        "className": ""
      },
      {
        "source": "AnthropicModel-Tl7VR",
        "sourceHandle": "{œdataTypeœ:œAnthropicModelœ,œidœ:œAnthropicModel-Tl7VRœ,œnameœ:œtext_outputœ,œoutput_typesœ:[œMessageœ]}",
        "target": "Prompt-HTp3t",
        "targetHandle": "{œfieldNameœ:œpainpoints_valuepropsœ,œidœ:œPrompt-HTp3tœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
        "data": {
          "targetHandle": {
            "fieldName": "painpoints_valueprops",
            "id": "Prompt-HTp3t",
            "inputTypes": [
              "Message",
              "Text"
            ],
            "type": "str"
          },
          "sourceHandle": {
            "dataType": "AnthropicModel",
            "id": "AnthropicModel-Tl7VR",
            "name": "text_output",
            "output_types": [
              "Message"
            ]
          }
        },
        "id": "reactflow__edge-AnthropicModel-Tl7VR{œdataTypeœ:œAnthropicModelœ,œidœ:œAnthropicModel-Tl7VRœ,œnameœ:œtext_outputœ,œoutput_typesœ:[œMessageœ]}-Prompt-HTp3t{œfieldNameœ:œpainpoints_valuepropsœ,œidœ:œPrompt-HTp3tœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
        "className": ""
      },
      {
        "source": "TextInput-Z5u1h",
        "sourceHandle": "{œdataTypeœ:œTextInputœ,œidœ:œTextInput-Z5u1hœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}",
        "target": "Prompt-HTp3t",
        "targetHandle": "{œfieldNameœ:œcustomer_product_infoœ,œidœ:œPrompt-HTp3tœ,œinputTypesœ:[œMessageœ,œTextœ],��typeœ:œstrœ}",
        "data": {
          "targetHandle": {
            "fieldName": "customer_product_info",
            "id": "Prompt-HTp3t",
            "inputTypes": [
              "Message",
              "Text"
            ],
            "type": "str"
          },
          "sourceHandle": {
            "dataType": "TextInput",
            "id": "TextInput-Z5u1h",
            "name": "text",
            "output_types": [
              "Message"
            ]
          }
        },
        "id": "reactflow__edge-TextInput-Z5u1h{œdataTypeœ:œTextInputœ,œidœ:œTextInput-Z5u1hœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}-Prompt-HTp3t{œfieldNameœ:œcustomer_product_infoœ,œidœ:œPrompt-HTp3tœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
        "className": ""
      },
      {
        "source": "TextInput-9osk1",
        "sourceHandle": "{œdataTypeœ:œTextInputœ,œidœ:œTextInput-9osk1œ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}",
        "target": "Prompt-7n6HR",
        "targetHandle": "{œfieldNameœ:œcustomer_organization_infoœ,œidœ:œPrompt-7n6HRœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
        "data": {
          "targetHandle": {
            "fieldName": "customer_organization_info",
            "id": "Prompt-7n6HR",
            "inputTypes": [
              "Message",
              "Text"
            ],
            "type": "str"
          },
          "sourceHandle": {
            "dataType": "TextInput",
            "id": "TextInput-9osk1",
            "name": "text",
            "output_types": [
              "Message"
            ]
          }
        },
        "id": "reactflow__edge-TextInput-9osk1{œdataTypeœ:œTextInputœ,œidœ:œTextInput-9osk1œ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}-Prompt-7n6HR{œfieldNameœ:œcustomer_organization_infoœ,œidœ:œPrompt-7n6HRœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
        "className": "",
        "selected": false
      },
      {
        "source": "TextInput-wSUYp",
        "sourceHandle": "{œdataTypeœ:œTextInputœ,œidœ:œTextInput-wSUYpœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}",
        "target": "Prompt-HTp3t",
        "targetHandle": "{œfieldNameœ:œdata_pointsœ,œidœ:œPrompt-HTp3tœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
        "data": {
          "targetHandle": {
            "fieldName": "data_points",
            "id": "Prompt-HTp3t",
            "inputTypes": [
              "Message",
              "Text"
            ],
            "type": "str"
          },
          "sourceHandle": {
            "dataType": "TextInput",
            "id": "TextInput-wSUYp",
            "name": "text",
            "output_types": [
              "Message"
            ]
          }
        },
        "id": "reactflow__edge-TextInput-wSUYp{œdataTypeœ:œTextInputœ,œidœ:œTextInput-wSUYpœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}-Prompt-HTp3t{œfieldNameœ:œdata_pointsœ,œidœ:œPrompt-HTp3tœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
        "className": ""
      },
      {
        "source": "TextInput-Z5u1h",
        "sourceHandle": "{œdataTypeœ:œTextInputœ,œidœ:œTextInput-Z5u1hœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}",
        "target": "Prompt-7n6HR",
        "targetHandle": "{œfieldNameœ:œcustomer_product_infoœ,œidœ:œPrompt-7n6HRœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
        "data": {
          "targetHandle": {
            "fieldName": "customer_product_info",
            "id": "Prompt-7n6HR",
            "inputTypes": [
              "Message",
              "Text"
            ],
            "type": "str"
          },
          "sourceHandle": {
            "dataType": "TextInput",
            "id": "TextInput-Z5u1h",
            "name": "text",
            "output_types": [
              "Message"
            ]
          }
        },
        "id": "reactflow__edge-TextInput-Z5u1h{œdataTypeœ:œTextInputœ,œidœ:œTextInput-Z5u1hœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}-Prompt-7n6HR{œfieldNameœ:œcustomer_product_infoœ,œidœ:œPrompt-7n6HRœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
        "selected": false,
        "className": ""
      },
      {
        "source": "Prompt-7n6HR",
        "sourceHandle": "{œdataTypeœ:œPromptœ,œidœ:œPrompt-7n6HRœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}",
        "target": "AnthropicModel-TZA59",
        "targetHandle": "{œfieldNameœ:œinput_valueœ,œidœ:œAnthropicModel-TZA59œ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
        "data": {
          "targetHandle": {
            "fieldName": "input_value",
            "id": "AnthropicModel-TZA59",
            "inputTypes": [
              "Message"
            ],
            "type": "str"
          },
          "sourceHandle": {
            "dataType": "Prompt",
            "id": "Prompt-7n6HR",
            "name": "prompt",
            "output_types": [
              "Message"
            ]
          }
        },
        "id": "reactflow__edge-Prompt-7n6HR{œdataTypeœ:œPromptœ,œidœ:œPrompt-7n6HRœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}-AnthropicModel-TZA59{œfieldNameœ:œinput_valueœ,œidœ:œAnthropicModel-TZA59œ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
        "className": ""
      },
      {
        "source": "TextInput-G0gCt",
        "sourceHandle": "{œdataTypeœ:œTextInputœ,œidœ:œTextInput-G0gCtœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}",
        "target": "Prompt-7n6HR",
        "targetHandle": "{œfieldNameœ:œprospect_infoœ,œidœ:œPrompt-7n6HRœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
        "data": {
          "targetHandle": {
            "fieldName": "prospect_info",
            "id": "Prompt-7n6HR",
            "inputTypes": [
              "Message",
              "Text"
            ],
            "type": "str"
          },
          "sourceHandle": {
            "dataType": "TextInput",
            "id": "TextInput-G0gCt",
            "name": "text",
            "output_types": [
              "Message"
            ]
          }
        },
        "id": "reactflow__edge-TextInput-G0gCt{œdataTypeœ:œTextInputœ,œidœ:œTextInput-G0gCtœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}-Prompt-7n6HR{œfieldNameœ:œprospect_infoœ,œidœ:œPrompt-7n6HRœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
        "className": ""
      },
      {
        "source": "AnthropicModel-WHomq",
        "sourceHandle": "{œdataTypeœ:œAnthropicModelœ,œidœ:œAnthropicModel-WHomqœ,œnameœ:œtext_outputœ,œoutput_typesœ:[œMessageœ]}",
        "target": "Prompt-7n6HR",
        "targetHandle": "{œfieldNameœ:œrelevant_datapointsœ,œidœ:œPrompt-7n6HRœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
        "data": {
          "targetHandle": {
            "fieldName": "relevant_datapoints",
            "id": "Prompt-7n6HR",
            "inputTypes": [
              "Message",
              "Text"
            ],
            "type": "str"
          },
          "sourceHandle": {
            "dataType": "AnthropicModel",
            "id": "AnthropicModel-WHomq",
            "name": "text_output",
            "output_types": [
              "Message"
            ]
          }
        },
        "id": "reactflow__edge-AnthropicModel-WHomq{œdataTypeœ:œAnthropicModelœ,œidœ:œAnthropicModel-WHomqœ,œnameœ:œtext_outputœ,œoutput_typesœ:[œMessageœ]}-Prompt-7n6HR{œfieldNameœ:œrelevant_datapointsœ,œidœ:œPrompt-7n6HRœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}"
      }
    ],
    "viewport": {
      "x": 2067.9466120440093,
      "y": -47.32236494774696,
      "zoom": 0.5245997206947874
    }
  },
  "metadata": {
    "Prompt": {
      "count": 3
    },
    "AnthropicModel": {
      "count": 3
    },
    "TextInput": {
      "count": 5
    },
    "total": 11
  },
  "original": {
    "id": "c2e53517-4817-41cd-936c-e3e1a8dcd986",
    "name": "Extract AI",
    "description": "Given an organization's firmographics, vision and products they are selling, this AI system tries to surface relevant insights for a prospecting company",
    "is_component": false,
    "liked_by_count": "0",
    "downloads_count": "0",
    "metadata": {
      "Prompt": {
        "count": 3
      },
      "AnthropicModel": {
        "count": 3
      },
      "TextInput": {
        "count": 5
      },
      "total": 11
    },
    "last_tested_version": "1.0.6",
    "private": true,
    "data": {
      "nodes": [
        {
          "id": "Prompt-HTp3t",
          "type": "genericNode",
          "position": {
            "x": -1486.5615718227568,
            "y": 673.8174761503055
          },
          "data": {
            "type": "Prompt",
            "node": {
              "template": {
                "_type": "Component",
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio.base.prompts.api_utils import process_prompt_template\nfrom axiestudio.custom import Component\nfrom axiestudio.io import Output, PromptInput\nfrom axiestudio.schema.message import Message\nfrom axiestudio.template.utils import update_template_values\n\n\nclass PromptComponent(Component):\n    display_name: str = \"Prompt\"\n    description: str = \"Create a prompt template with dynamic variables.\"\n    icon = \"prompts\"\n    trace_type = \"prompt\"\n\n    inputs = [\n        PromptInput(name=\"template\", display_name=\"Template\"),\n    ]\n\n    outputs = [\n        Output(display_name=\"Prompt Message\", name=\"prompt\", method=\"build_prompt\"),\n    ]\n\n    async def build_prompt(\n        self,\n    ) -> Message:\n        prompt = await Message.from_template_and_variables(**self._attributes)\n        self.status = prompt.text\n        return prompt\n\n    def post_code_processing(self, new_build_config: dict, current_build_config: dict):\n        \"\"\"\n        This function is called after the code validation is done.\n        \"\"\"\n        frontend_node = super().post_code_processing(new_build_config, current_build_config)\n        template = frontend_node[\"template\"][\"template\"][\"value\"]\n        _ = process_prompt_template(\n            template=template,\n            name=\"template\",\n            custom_fields=frontend_node[\"custom_fields\"],\n            frontend_node_template=frontend_node[\"template\"],\n        )\n        # Now that template is updated, we need to grab any values that were set in the current_build_config\n        # and update the frontend_node with those values\n        update_template_values(frontend_template=frontend_node, raw_template=current_build_config[\"template\"])\n        return frontend_node\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "template": {
                  "trace_as_input": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "You are a Senior Sales Leader whose job it is to analyze the current products your organization is selling to identify the data points that sales reps have to look at in order to qualify and pitch a product. You will be provided with information regarding your current company including industry, description as well as detailed product information including the pain points each product addresses and their value propositions. You will also be provided with a list of data points that sales reps have access to for a given prospect. Your output should be the data points that the sales reps have to look at for each product and how that data point helps them pitch/what action can the sales rep take. If the data point is numeric, also mention what a higher value and a lower value represents or a value above or below a certain threshold represents, if that is relevant.\n\nThe following is the information of the company you are analyzing:\n{customer_organization_info}\n\nThe following are the products you are analyzing:\n{customer_product_info}\n\nThe following are the pain points and value propositions for the above products:\n{painpoints_valueprops}\n\nThe following are the data points the sellers have access to for a given company:\n{data_points}\n\nYour output should be strictly in JSON format as follows:\n\n[\n     \"name\": [\n                     \"data_point: \"How this data point helps seller and what action can they take based on it\",\n                     \"data_point\": \"\"\n                     ],\n     \"name\": [\n                     \"data_point: \"How this data point helps seller and what action can they take based on it\",\n                     \"data_point\": \"\"\n                     ],\n]\n",
                  "name": "template",
                  "display_name": "Template",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "prompt"
                },
                "customer_organization_info": {
                  "field_type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "customer_organization_info",
                  "display_name": "customer_organization_info",
                  "advanced": false,
                  "input_types": [
                    "Message",
                    "Text"
                  ],
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "type": "str"
                },
                "customer_product_info": {
                  "field_type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "customer_product_info",
                  "display_name": "customer_product_info",
                  "advanced": false,
                  "input_types": [
                    "Message",
                    "Text"
                  ],
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "type": "str"
                },
                "painpoints_valueprops": {
                  "field_type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "painpoints_valueprops",
                  "display_name": "painpoints_valueprops",
                  "advanced": false,
                  "input_types": [
                    "Message",
                    "Text"
                  ],
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "type": "str"
                },
                "data_points": {
                  "field_type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "data_points",
                  "display_name": "data_points",
                  "advanced": false,
                  "input_types": [
                    "Message",
                    "Text"
                  ],
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "type": "str"
                }
              },
              "description": "Create a prompt template with dynamic variables.",
              "icon": "prompts",
              "is_input": null,
              "is_output": null,
              "is_composition": null,
              "base_classes": [
                "Message"
              ],
              "name": "",
              "display_name": "Prompt",
              "documentation": "",
              "custom_fields": {
                "template": [
                  "customer_organization_info",
                  "customer_product_info",
                  "painpoints_valueprops",
                  "data_points"
                ]
              },
              "output_types": [],
              "full_path": null,
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "prompt",
                  "hidden": false,
                  "display_name": "Prompt Message",
                  "method": "build_prompt",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "template"
              ],
              "beta": false,
              "error": null,
              "edited": false
            },
            "id": "Prompt-HTp3t",
            "description": "Create a prompt template with dynamic variables.",
            "display_name": "Prompt"
          },
          "selected": false,
          "width": 384,
          "height": 705,
          "positionAbsolute": {
            "x": -1486.5615718227568,
            "y": 673.8174761503055
          },
          "dragging": false
        },
        {
          "id": "AnthropicModel-WHomq",
          "type": "genericNode",
          "position": {
            "x": -980.7724556930953,
            "y": 624.6129160217743
          },
          "data": {
            "type": "AnthropicModel",
            "node": {
              "template": {
                "_type": "Component",
                "anthropic_api_key": {
                  "load_from_db": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "",
                  "name": "anthropic_api_key",
                  "display_name": "Anthropic API Key",
                  "advanced": false,
                  "input_types": [],
                  "dynamic": false,
                  "info": "Your Anthropic API key.",
                  "title_case": false,
                  "password": true,
                  "type": "str"
                },
                "anthropic_api_url": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "",
                  "name": "anthropic_api_url",
                  "display_name": "Anthropic API URL",
                  "advanced": true,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "Endpoint of the Anthropic API. Defaults to 'https://api.anthropic.com' if not specified.",
                  "title_case": false,
                  "type": "str"
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from langchain_anthropic.chat_models import ChatAnthropic\nfrom pydantic.v1 import SecretStr\n\nfrom axiestudio.base.constants import STREAM_INFO_TEXT\nfrom axiestudio.base.models.model import LCModelComponent\nfrom axiestudio.field_typing import LanguageModel\nfrom axiestudio.io import BoolInput, DropdownInput, FloatInput, IntInput, MessageTextInput, SecretStrInput\n\n\nclass AnthropicModelComponent(LCModelComponent):\n    display_name = \"Anthropic\"\n    description = \"Generate text using Anthropic Chat&Completion LLMs with prefill support.\"\n    icon = \"Anthropic\"\n\n    inputs = [\n        MessageTextInput(name=\"input_value\", display_name=\"Input\"),\n        IntInput(\n            name=\"max_tokens\",\n            display_name=\"Max Tokens\",\n            advanced=True,\n            value=4096,\n            info=\"The maximum number of tokens to generate. Set to 0 for unlimited tokens.\",\n        ),\n        DropdownInput(\n            name=\"model\",\n            display_name=\"Model Name\",\n            options=[\n                \"claude-3-5-sonnet-20240620\",\n                \"claude-3-opus-20240229\",\n                \"claude-3-sonnet-20240229\",\n                \"claude-3-haiku-20240307\",\n            ],\n            info=\"https://python.langchain.com/docs/integrations/chat/anthropic\",\n            value=\"claude-3-5-sonnet-20240620\",\n        ),\n        SecretStrInput(\n            name=\"anthropic_api_key\",\n            display_name=\"Anthropic API Key\",\n            info=\"Your Anthropic API key.\",\n        ),\n        FloatInput(name=\"temperature\", display_name=\"Temperature\", value=0.1),\n        MessageTextInput(\n            name=\"anthropic_api_url\",\n            display_name=\"Anthropic API URL\",\n            advanced=True,\n            info=\"Endpoint of the Anthropic API. Defaults to 'https://api.anthropic.com' if not specified.\",\n        ),\n        BoolInput(name=\"stream\", display_name=\"Stream\", info=STREAM_INFO_TEXT, advanced=True, value=False),\n        MessageTextInput(\n            name=\"system_message\",\n            display_name=\"System Message\",\n            info=\"System message to pass to the model.\",\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\"prefill\",\n            display_name=\"Prefill\",\n            info=\"Prefill text to guide the model's response.\",\n            advanced=True,\n        ),\n    ]\n\n    def build_model(self) -> LanguageModel:  # type: ignore[type-var]\n        model = self.model\n        anthropic_api_key = self.anthropic_api_key\n        max_tokens = self.max_tokens\n        temperature = self.temperature\n        anthropic_api_url = self.anthropic_api_url or \"https://api.anthropic.com\"\n\n        try:\n            output = ChatAnthropic(\n                model=model,\n                anthropic_api_key=(SecretStr(anthropic_api_key) if anthropic_api_key else None),\n                max_tokens_to_sample=max_tokens,  # type: ignore\n                temperature=temperature,\n                anthropic_api_url=anthropic_api_url,\n                streaming=self.stream,\n            )\n        except Exception as e:\n            raise ValueError(\"Could not connect to Anthropic API.\") from e\n\n        return output  # type: ignore\n\n    def _get_exception_message(self, exception: Exception) -> str | None:\n        \"\"\"\n        Get a message from an Anthropic exception.\n\n        Args:\n            exception (Exception): The exception to get the message from.\n\n        Returns:\n            str: The message from the exception.\n        \"\"\"\n        try:\n            from anthropic import BadRequestError\n        except ImportError:\n            return None\n        if isinstance(exception, BadRequestError):\n            message = exception.body.get(\"error\", {}).get(\"message\")  # type: ignore\n            if message:\n                return message\n        return None\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "input_value": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "",
                  "name": "input_value",
                  "display_name": "Input",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str"
                },
                "max_tokens": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": 4096,
                  "name": "max_tokens",
                  "display_name": "Max Tokens",
                  "advanced": true,
                  "dynamic": false,
                  "info": "The maximum number of tokens to generate. Set to 0 for unlimited tokens.",
                  "title_case": false,
                  "type": "int"
                },
                "model": {
                  "trace_as_metadata": true,
                  "options": [
                    "claude-3-5-sonnet-20240620",
                    "claude-3-opus-20240229",
                    "claude-3-sonnet-20240229",
                    "claude-3-haiku-20240307"
                  ],
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "claude-3-5-sonnet-20240620",
                  "name": "model",
                  "display_name": "Model Name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "https://python.langchain.com/docs/integrations/chat/anthropic",
                  "title_case": false,
                  "type": "str"
                },
                "prefill": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "",
                  "name": "prefill",
                  "display_name": "Prefill",
                  "advanced": true,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "Prefill text to guide the model's response.",
                  "title_case": false,
                  "type": "str"
                },
                "stream": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": false,
                  "name": "stream",
                  "display_name": "Stream",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Stream the response from the model. Streaming works only in Chat.",
                  "title_case": false,
                  "type": "bool"
                },
                "system_message": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "",
                  "name": "system_message",
                  "display_name": "System Message",
                  "advanced": true,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "System message to pass to the model.",
                  "title_case": false,
                  "type": "str"
                },
                "temperature": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": 0.1,
                  "name": "temperature",
                  "display_name": "Temperature",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "float"
                }
              },
              "description": "Generate text using Anthropic Chat&Completion LLMs with prefill support.",
              "icon": "Anthropic",
              "base_classes": [
                "LanguageModel",
                "Message"
              ],
              "display_name": "Anthropic",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "text_output",
                  "display_name": "Text",
                  "method": "text_response",
                  "value": "__UNDEFINED__",
                  "cache": true,
                  "hidden": false
                },
                {
                  "types": [
                    "LanguageModel"
                  ],
                  "selected": "LanguageModel",
                  "name": "model_output",
                  "display_name": "Language Model",
                  "method": "build_model",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "input_value",
                "max_tokens",
                "model",
                "anthropic_api_key",
                "temperature",
                "anthropic_api_url",
                "stream",
                "system_message",
                "prefill"
              ],
              "beta": false,
              "edited": false
            },
            "id": "AnthropicModel-WHomq"
          },
          "selected": false,
          "width": 384,
          "height": 651,
          "positionAbsolute": {
            "x": -980.7724556930953,
            "y": 624.6129160217743
          },
          "dragging": false
        },
        {
          "id": "Prompt-7n6HR",
          "type": "genericNode",
          "position": {
            "x": -167.813225146248,
            "y": 693.4619088064
          },
          "data": {
            "type": "Prompt",
            "node": {
              "template": {
                "_type": "Component",
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio.base.prompts.api_utils import process_prompt_template\nfrom axiestudio.custom import Component\nfrom axiestudio.io import Output, PromptInput\nfrom axiestudio.schema.message import Message\nfrom axiestudio.template.utils import update_template_values\n\n\nclass PromptComponent(Component):\n    display_name: str = \"Prompt\"\n    description: str = \"Create a prompt template with dynamic variables.\"\n    icon = \"prompts\"\n    trace_type = \"prompt\"\n\n    inputs = [\n        PromptInput(name=\"template\", display_name=\"Template\"),\n    ]\n\n    outputs = [\n        Output(display_name=\"Prompt Message\", name=\"prompt\", method=\"build_prompt\"),\n    ]\n\n    async def build_prompt(\n        self,\n    ) -> Message:\n        prompt = await Message.from_template_and_variables(**self._attributes)\n        self.status = prompt.text\n        return prompt\n\n    def post_code_processing(self, new_build_config: dict, current_build_config: dict):\n        \"\"\"\n        This function is called after the code validation is done.\n        \"\"\"\n        frontend_node = super().post_code_processing(new_build_config, current_build_config)\n        template = frontend_node[\"template\"][\"template\"][\"value\"]\n        _ = process_prompt_template(\n            template=template,\n            name=\"template\",\n            custom_fields=frontend_node[\"custom_fields\"],\n            frontend_node_template=frontend_node[\"template\"],\n        )\n        # Now that template is updated, we need to grab any values that were set in the current_build_config\n        # and update the frontend_node with those values\n        update_template_values(frontend_template=frontend_node, raw_template=current_build_config[\"template\"])\n        return frontend_node\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "template": {
                  "trace_as_input": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "You are a senior sales analyst who is an expert in analyzing fitment and sales strategy for a prospective company. You will be given information regarding your company and the products you are selling including their features,   information regarding the prospective company across a large number of data points and also a guide which tells you which data points to look into for each product. Your job is to generate actionable insights that helps your sales team sell your product.\n\nThe following is the information regarding your company:\n\n{customer_organization_info}\n\nThe following is the information regarding the products that your company is selling:\n{customer_product_info}\n\nThe following are the relevant data points that you should look at for each product:\n{relevant_datapoints}\n\nThe following is the data regarding a prospective company:\n{prospect_info}\n\nYour output should in the json format as below:\n\n[\n      \"product_name\" : [\"Actionable insight based on data point\" x n],\n      \"product_name\" : [\"Actionable insight based on data point\" x n],\n]",
                  "name": "template",
                  "display_name": "Template",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "prompt"
                },
                "customer_organization_info": {
                  "field_type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "customer_organization_info",
                  "display_name": "customer_organization_info",
                  "advanced": false,
                  "input_types": [
                    "Message",
                    "Text"
                  ],
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "type": "str"
                },
                "customer_product_info": {
                  "field_type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "customer_product_info",
                  "display_name": "customer_product_info",
                  "advanced": false,
                  "input_types": [
                    "Message",
                    "Text"
                  ],
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "type": "str"
                },
                "relevant_datapoints": {
                  "field_type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "relevant_datapoints",
                  "display_name": "relevant_datapoints",
                  "advanced": false,
                  "input_types": [
                    "Message",
                    "Text"
                  ],
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "type": "str"
                },
                "prospect_info": {
                  "field_type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "prospect_info",
                  "display_name": "prospect_info",
                  "advanced": false,
                  "input_types": [
                    "Message",
                    "Text"
                  ],
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "type": "str"
                }
              },
              "description": "Create a prompt template with dynamic variables.",
              "icon": "prompts",
              "is_input": null,
              "is_output": null,
              "is_composition": null,
              "base_classes": [
                "Message"
              ],
              "name": "",
              "display_name": "Prompt",
              "documentation": "",
              "custom_fields": {
                "template": [
                  "customer_organization_info",
                  "customer_product_info",
                  "relevant_datapoints",
                  "prospect_info"
                ]
              },
              "output_types": [],
              "full_path": null,
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "prompt",
                  "hidden": false,
                  "display_name": "Prompt Message",
                  "method": "build_prompt",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "template"
              ],
              "beta": false,
              "error": null,
              "edited": false
            },
            "id": "Prompt-7n6HR",
            "description": "Create a prompt template with dynamic variables.",
            "display_name": "Prompt"
          },
          "selected": false,
          "width": 384,
          "height": 705,
          "positionAbsolute": {
            "x": -167.813225146248,
            "y": 693.4619088064
          },
          "dragging": false
        },
        {
          "id": "AnthropicModel-TZA59",
          "type": "genericNode",
          "position": {
            "x": 474.8394582994789,
            "y": 707.0958253201857
          },
          "data": {
            "type": "AnthropicModel",
            "node": {
              "template": {
                "_type": "Component",
                "anthropic_api_key": {
                  "load_from_db": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "",
                  "name": "anthropic_api_key",
                  "display_name": "Anthropic API Key",
                  "advanced": false,
                  "input_types": [],
                  "dynamic": false,
                  "info": "Your Anthropic API key.",
                  "title_case": false,
                  "password": true,
                  "type": "str"
                },
                "anthropic_api_url": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "",
                  "name": "anthropic_api_url",
                  "display_name": "Anthropic API URL",
                  "advanced": true,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "Endpoint of the Anthropic API. Defaults to 'https://api.anthropic.com' if not specified.",
                  "title_case": false,
                  "type": "str"
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from langchain_anthropic.chat_models import ChatAnthropic\nfrom pydantic.v1 import SecretStr\n\nfrom axiestudio.base.constants import STREAM_INFO_TEXT\nfrom axiestudio.base.models.model import LCModelComponent\nfrom axiestudio.field_typing import LanguageModel\nfrom axiestudio.io import BoolInput, DropdownInput, FloatInput, IntInput, MessageTextInput, SecretStrInput\n\n\nclass AnthropicModelComponent(LCModelComponent):\n    display_name = \"Anthropic\"\n    description = \"Generate text using Anthropic Chat&Completion LLMs with prefill support.\"\n    icon = \"Anthropic\"\n\n    inputs = [\n        MessageTextInput(name=\"input_value\", display_name=\"Input\"),\n        IntInput(\n            name=\"max_tokens\",\n            display_name=\"Max Tokens\",\n            advanced=True,\n            value=4096,\n            info=\"The maximum number of tokens to generate. Set to 0 for unlimited tokens.\",\n        ),\n        DropdownInput(\n            name=\"model\",\n            display_name=\"Model Name\",\n            options=[\n                \"claude-3-5-sonnet-20240620\",\n                \"claude-3-opus-20240229\",\n                \"claude-3-sonnet-20240229\",\n                \"claude-3-haiku-20240307\",\n            ],\n            info=\"https://python.langchain.com/docs/integrations/chat/anthropic\",\n            value=\"claude-3-5-sonnet-20240620\",\n        ),\n        SecretStrInput(\n            name=\"anthropic_api_key\",\n            display_name=\"Anthropic API Key\",\n            info=\"Your Anthropic API key.\",\n        ),\n        FloatInput(name=\"temperature\", display_name=\"Temperature\", value=0.1),\n        MessageTextInput(\n            name=\"anthropic_api_url\",\n            display_name=\"Anthropic API URL\",\n            advanced=True,\n            info=\"Endpoint of the Anthropic API. Defaults to 'https://api.anthropic.com' if not specified.\",\n        ),\n        BoolInput(name=\"stream\", display_name=\"Stream\", info=STREAM_INFO_TEXT, advanced=True, value=False),\n        MessageTextInput(\n            name=\"system_message\",\n            display_name=\"System Message\",\n            info=\"System message to pass to the model.\",\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\"prefill\",\n            display_name=\"Prefill\",\n            info=\"Prefill text to guide the model's response.\",\n            advanced=True,\n        ),\n    ]\n\n    def build_model(self) -> LanguageModel:  # type: ignore[type-var]\n        model = self.model\n        anthropic_api_key = self.anthropic_api_key\n        max_tokens = self.max_tokens\n        temperature = self.temperature\n        anthropic_api_url = self.anthropic_api_url or \"https://api.anthropic.com\"\n\n        try:\n            output = ChatAnthropic(\n                model=model,\n                anthropic_api_key=(SecretStr(anthropic_api_key) if anthropic_api_key else None),\n                max_tokens_to_sample=max_tokens,  # type: ignore\n                temperature=temperature,\n                anthropic_api_url=anthropic_api_url,\n                streaming=self.stream,\n            )\n        except Exception as e:\n            raise ValueError(\"Could not connect to Anthropic API.\") from e\n\n        return output  # type: ignore\n\n    def _get_exception_message(self, exception: Exception) -> str | None:\n        \"\"\"\n        Get a message from an Anthropic exception.\n\n        Args:\n            exception (Exception): The exception to get the message from.\n\n        Returns:\n            str: The message from the exception.\n        \"\"\"\n        try:\n            from anthropic import BadRequestError\n        except ImportError:\n            return None\n        if isinstance(exception, BadRequestError):\n            message = exception.body.get(\"error\", {}).get(\"message\")  # type: ignore\n            if message:\n                return message\n        return None\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "input_value": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "",
                  "name": "input_value",
                  "display_name": "Input",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str"
                },
                "max_tokens": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": 4096,
                  "name": "max_tokens",
                  "display_name": "Max Tokens",
                  "advanced": true,
                  "dynamic": false,
                  "info": "The maximum number of tokens to generate. Set to 0 for unlimited tokens.",
                  "title_case": false,
                  "type": "int"
                },
                "model": {
                  "trace_as_metadata": true,
                  "options": [
                    "claude-3-5-sonnet-20240620",
                    "claude-3-opus-20240229",
                    "claude-3-sonnet-20240229",
                    "claude-3-haiku-20240307"
                  ],
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "claude-3-5-sonnet-20240620",
                  "name": "model",
                  "display_name": "Model Name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "https://python.langchain.com/docs/integrations/chat/anthropic",
                  "title_case": false,
                  "type": "str"
                },
                "prefill": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "",
                  "name": "prefill",
                  "display_name": "Prefill",
                  "advanced": true,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "Prefill text to guide the model's response.",
                  "title_case": false,
                  "type": "str"
                },
                "stream": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": false,
                  "name": "stream",
                  "display_name": "Stream",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Stream the response from the model. Streaming works only in Chat.",
                  "title_case": false,
                  "type": "bool"
                },
                "system_message": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "",
                  "name": "system_message",
                  "display_name": "System Message",
                  "advanced": true,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "System message to pass to the model.",
                  "title_case": false,
                  "type": "str"
                },
                "temperature": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": 0.1,
                  "name": "temperature",
                  "display_name": "Temperature",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "float"
                }
              },
              "description": "Generate text using Anthropic Chat&Completion LLMs with prefill support.",
              "icon": "Anthropic",
              "base_classes": [
                "LanguageModel",
                "Message"
              ],
              "display_name": "Anthropic",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "text_output",
                  "display_name": "Text",
                  "method": "text_response",
                  "value": "__UNDEFINED__",
                  "cache": true,
                  "hidden": true
                },
                {
                  "types": [
                    "LanguageModel"
                  ],
                  "selected": "LanguageModel",
                  "name": "model_output",
                  "display_name": "Language Model",
                  "method": "build_model",
                  "value": "__UNDEFINED__",
                  "cache": true,
                  "hidden": true
                }
              ],
              "field_order": [
                "input_value",
                "max_tokens",
                "model",
                "anthropic_api_key",
                "temperature",
                "anthropic_api_url",
                "stream",
                "system_message",
                "prefill"
              ],
              "beta": false,
              "edited": false
            },
            "id": "AnthropicModel-TZA59"
          },
          "selected": false,
          "width": 384,
          "height": 651,
          "positionAbsolute": {
            "x": 474.8394582994789,
            "y": 707.0958253201857
          },
          "dragging": false
        },
        {
          "id": "TextInput-9osk1",
          "type": "genericNode",
          "position": {
            "x": -2028.116826801363,
            "y": 275.5567701160394
          },
          "data": {
            "type": "TextInput",
            "node": {
              "template": {
                "_type": "Component",
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio.base.io.text import TextComponent\nfrom axiestudio.io import MessageTextInput, Output\nfrom axiestudio.schema.message import Message\n\n\nclass TextInputComponent(TextComponent):\n    display_name = \"Text Input\"\n    description = \"Get text inputs from the Playground.\"\n    icon = \"type\"\n\n    inputs = [\n        MessageTextInput(\n            name=\"input_value\",\n            display_name=\"Text\",\n            info=\"Text to be passed as input.\",\n        ),\n    ]\n    outputs = [\n        Output(display_name=\"Text\", name=\"text\", method=\"text_response\"),\n    ]\n\n    def text_response(self) -> Message:\n        message = Message(\n            text=self.input_value,\n        )\n        return message\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "input_value": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "{     \"company_name\": \"Salesforce\",     \"industry\": \"Computer Software and Internet\",     \"description\": \"Salesforce, the #1 AI CRM, enables companies to connect with customers through a unified Einstein 1 platform that combines CRM, AI, Data, and Trust.\" }",
                  "name": "input_value",
                  "display_name": "Text",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "Text to be passed as input.",
                  "title_case": false,
                  "type": "str"
                }
              },
              "description": "Get text inputs from the Playground.",
              "icon": "type",
              "base_classes": [
                "Message"
              ],
              "display_name": "Text Input",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "text",
                  "display_name": "Text",
                  "method": "text_response",
                  "value": "__UNDEFINED__",
                  "cache": true,
                  "hidden": false
                }
              ],
              "field_order": [
                "input_value"
              ],
              "beta": false,
              "edited": false
            },
            "id": "TextInput-9osk1"
          },
          "selected": false,
          "width": 384,
          "height": 309,
          "positionAbsolute": {
            "x": -2028.116826801363,
            "y": 275.5567701160394
          },
          "dragging": false
        },
        {
          "id": "TextInput-Z5u1h",
          "type": "genericNode",
          "position": {
            "x": -2990.8524501213674,
            "y": 1261.659533062335
          },
          "data": {
            "type": "TextInput",
            "node": {
              "template": {
                "_type": "Component",
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio.base.io.text import TextComponent\nfrom axiestudio.io import MessageTextInput, Output\nfrom axiestudio.schema.message import Message\n\n\nclass TextInputComponent(TextComponent):\n    display_name = \"Text Input\"\n    description = \"Get text inputs from the Playground.\"\n    icon = \"type\"\n\n    inputs = [\n        MessageTextInput(\n            name=\"input_value\",\n            display_name=\"Text\",\n            info=\"Text to be passed as input.\",\n        ),\n    ]\n    outputs = [\n        Output(display_name=\"Text\", name=\"text\", method=\"text_response\"),\n    ]\n\n    def text_response(self) -> Message:\n        message = Message(\n            text=self.input_value,\n        )\n        return message\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "input_value": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "\"products\": [     {       \"features\": [         {           \"feature_name\": \"Simplified Sign-up\",           \"feature_description\": \"Get started fast with easy onboarding.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Efficiency Enhancements\",           \"feature_description\": \"Drive efficiency with built-in guidance and best practices.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Unified Business Suite\",           \"feature_description\": \"Unlock multiple business functions in one suite.\",           \"feature_subpoints\": []         }       ],       \"name\": \"Starter Suite\",       \"link\": \"https://www.salesforce.com\",       \"customers\": [],       \"product_description\": \"Starter Suite is a comprehensive suite that unlocks marketing, sales, service, and commerce to accelerate your business growth.\",       \"pricing\": \"Starting at $25 per month.\"     },     {       \"features\": [         {           \"feature_name\": \"Pre-loaded Data\",           \"feature_description\": \"Access to pre-loaded data to help streamline sales processes.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Pre-configured Processes\",           \"feature_description\": \"Utilize pre-configured processes to speed up and optimize sales activities.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Reports and Dashboards\",           \"feature_description\": \"Generate and analyze sales reports with pre-configured dashboards.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Guided Content and Training\",           \"feature_description\": \"Access guided content, how-tos, and best practices for improving sales performance.\",           \"feature_subpoints\": [             \"Online training\",             \"Live onboarding webinars\"           ]         }       ],       \"name\": \"Sales Cloud\",       \"link\": \"https://www.salesforce.com/\",       \"customers\": [],       \"product_description\": \"Sales Cloud is a platform designed to manage sales processes, offering features like pre-loaded data, pre-configured reports, and online training.\",       \"pricing\": null     },     {       \"features\": [],       \"name\": \"Service\",       \"link\": \"http://www.salesforce.com/plus/experience/dreamforce_2024/broadcast/day-1-channel-1\",       \"customers\": [],       \"product_description\": \"Tune in for three days of epic innovation and announcements with Salesforce.\",       \"pricing\": null     },     {       \"features\": [         {           \"feature_name\": \"Customer Data Platform\",           \"feature_description\": \"Drive growth with faster access to centralized data that's seamlessly activated to any channel.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Marketing Analytics\",           \"feature_description\": \"Optimize campaigns and spend with unified marketing performance data and AI insights.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Marketing AI\",           \"feature_description\": \"Optimize every step of the campaign process with trusted, purpose-built AI.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Marketing Cloud Engagement\",           \"feature_description\": \"Increase conversion with relevant engagement across email, mobile, ads, and web.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"B2B Marketing Automation\",           \"feature_description\": \"Grow revenue by aligning marketing and sales around every account.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Personalization\",           \"feature_description\": \"Drive ROI across your marketing programs with cross-channel personalization.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Customer Loyalty\",           \"feature_description\": \"Increase profitability and loyalty with better engagement and personalized rewards.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Marketing for Small Business\",           \"feature_description\": \"Grow your small business faster with marketing automation on the world's #1 AI CRM.\",           \"feature_subpoints\": []         }       ],       \"name\": \"Marketing Cloud\",       \"link\": \"https://www.salesforce.com/marketing-cloud/\",       \"customers\": [         \"General Mills\",         \"Formula 1\",         \"Humana\",         \"Esquire Bank\",         \"William-Sonoma Inc\"       ],       \"product_description\": \"Salesforce Marketing Cloud is an AI-powered, cloud-based digital marketing platform that helps marketers segment their audience, deliver personalized messages, track campaign performance, and optimize strategies based on real-time insights.\",       \"pricing\": null     },     {       \"features\": [         {           \"feature_name\": \"Unified Commerce\",           \"feature_description\": \"The most comprehensive commerce platform that merges commerce with sales, service, and marketing on Salesforce.\",           \"feature_subpoints\": [             \"B2B and D2C storefronts\",             \"Order Management\",             \"Payments integration\"           ]         },         {           \"feature_name\": \"Agentforce\",           \"feature_description\": \"Autonomous applications providing ongoing support to merchants and customers, leveraging data for task execution.\",           \"feature_subpoints\": [             \"Agentforce Merchant for ecommerce site management\",             \"Agentforce Buyer for B2B purchasing experiences\",             \"Agentforce Personal Shopper for personalized customer interactions\"           ]         },         {           \"feature_name\": \"Inventory Insights\",           \"feature_description\": \"Real-time store-level inventory insights to enhance conversion and satisfaction.\",           \"feature_subpoints\": [             \"View available stock\",             \"Predict inventory management actions\",             \"Avoid surplus and sell-outs\"           ]         },         {           \"feature_name\": \"Buy with Prime\",           \"feature_description\": \"Integrate Prime capabilities into ecommerce experiences, engaging Amazon shoppers.\",           \"feature_subpoints\": [             \"Fast and free delivery\",             \"Amazon product reviews\",             \"Hassle-free returns\"           ]         },         {           \"feature_name\": \"Commerce for Marketing\",           \"feature_description\": \"Integrate marketing campaigns with commerce capabilities for personalized outreach.\",           \"feature_subpoints\": [             \"Engagement and purchase data utilization\",             \"Send targeted offers\",             \"Re-engage with abandoned cart notifications\"           ]         },         {           \"feature_name\": \"Commerce for Service\",           \"feature_description\": \"Seamless order management and customer service integration.\",           \"feature_subpoints\": [             \"Order processing and returns\",             \"Service agent order placement\",             \"Integrated service console\"           ]         },         {           \"feature_name\": \"Commerce for Sales\",           \"feature_description\": \"Boost sales with configurable products and bundled options.\",           \"feature_subpoints\": [             \"Manage digital contracts\",             \"Shared data model\",             \"Bundle creation\"           ]         },         {           \"feature_name\": \"Data Cloud\",           \"feature_description\": \"Unify all data sources for comprehensive business insights and automation.\",           \"feature_subpoints\": [             \"Create unified customer profiles\",             \"Automate tasks like alerts and recommendations\",             \"Drive data-driven decisions\"           ]         },         {           \"feature_name\": \"Personalized Carts\",           \"feature_description\": \"Enhanced cart experiences through connected data insights.\",           \"feature_subpoints\": [             \"Transform customer engagement\",             \"Provide advanced personalization\",             \"Utilize Cart Intelligence\"           ]         }       ],       \"name\": \"Commerce Cloud\",       \"link\": \"https://www.salesforce.com/products/commerce-cloud/overview/\",       \"customers\": [],       \"product_description\": \"Commerce Cloud is a comprehensive, configurable, AI-powered commerce platform that unifies B2B, D2C, order management, payments, and data with Salesforce Platform capabilities.\",       \"pricing\": null     },     {       \"features\": [         {           \"feature_name\": \"Sales AI\",           \"feature_description\": \"Sell faster with trusted AI for sales.\",           \"feature_subpoints\": [             \"Ask Einstein to write emails enriched with customer data\",             \"Generate concise summaries of sales calls\",             \"Use actionable insights to inform conversations\",             \"Real-time predictions to guide sellers to close deals\"           ]         },         {           \"feature_name\": \"Customer Service AI\",           \"feature_description\": \"Deliver more personalized and impactful customer service experiences.\",           \"feature_subpoints\": [             \"Leverage Salesforce Agentforce to surface relevant information during support interactions\",             \"Automatically summarize case resolutions\",             \"Build a knowledge base\",             \"Scale service operations and drive immediate value\"           ]         },         {           \"feature_name\": \"Marketing AI\",           \"feature_description\": \"Drive personalization and productivity at scale.\",           \"feature_subpoints\": [             \"Boost engagement with insights\",             \"Build personalized customer journeys\",             \"Automatically customize outreach\"           ]         },         {           \"feature_name\": \"Commerce AI\",           \"feature_description\": \"Personalize buyer and merchant experiences with ecommerce AI tools.\",           \"feature_subpoints\": [             \"Generate product descriptions automatically\",             \"Recommend relevant products\",             \"Create seamless buying experiences\"           ]         },         {           \"feature_name\": \"Einstein Trust Layer\",           \"feature_description\": \"Deploy AI with trust and security.\",           \"feature_subpoints\": [             \"Dynamic grounding to improve accuracy and relevancy\",             \"Sensitive data masking\",             \"Ethics and Inclusivity\"           ]         }       ],       \"name\": \"Salesforce Artificial Intelligence\",       \"link\": \"https://www.salesforce.com/products/secure-ai/\",       \"customers\": [         \"RBC US Wealth\",         \"General Mills\",         \"Uber Eats\",         \"Schneider Electric\"       ],       \"product_description\": \"Salesforce AI delivers trusted, extensible AI capabilities integrated into the Salesforce Platform to create customizable, predictive, and generative AI experiences for business needs.\",       \"pricing\": null     },     {       \"features\": [],       \"name\": \"Data Cloud\",       \"link\": \"https://trailhead.salesforce.com/users/dataclouddocs/trailmixes/data-cloud-quick-start-guide\",       \"customers\": [         \"Formula 1\",         \"General Mills\",         \"St. Jude's\",         \"Vodaphone Ziggo\",         \"Santander\"       ],       \"product_description\": \"Data Cloud helps data-driven teams build meaningful customer relationships through insights and analytics.\",       \"pricing\": null     },     {       \"features\": [         {           \"feature_name\": \"Agentforce\",           \"feature_description\": \"Build and customize autonomous Agents to support your employees and customers 24/7.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Data Cloud\",           \"feature_description\": \"Activate all your customer data across Salesforce applications at every touch point.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Einstein\",           \"feature_description\": \"Create customizable, predictive, and generative AI experiences to fit all your business needs.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Agentforce & AI App Development\",           \"feature_description\": \"Build, customize, and deploy your Agentforce and AI apps with no code, low code, and pro code tools.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Security & Privacy\",           \"feature_description\": \"Keep your data secure and protected to increase customer trust and navigate compliance.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Automation\",           \"feature_description\": \"Integrate and connect your systems and automate business processes securely.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Mulesoft\",           \"feature_description\": \"Connect any data, system, or AI model securely and align CRM apps with metadata integration.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Tableau\",           \"feature_description\": \"Make better decisions with an intuitive, AI-powered analytics platform.\",           \"feature_subpoints\": []         }       ],       \"name\": \"Salesforce Platform\",       \"link\": \"https://www.salesforce.com/platform/overview/\",       \"customers\": [         \"Vonage\"       ],       \"product_description\": \"The Salesforce Platform is an enterprise AI-powered platform that integrates data, AI, security, privacy, analytics, automation, integration, and low code development capabilities to enhance customer and employee experiences.\",       \"pricing\": \"Platform Starter starts at $25/user/month. Platform Plus starts at $100/user/month.\"     },     {       \"features\": [         {           \"feature_name\": \"Agent-Powered Productivity\",           \"feature_description\": \"Keeps teams in the flow of work with user-friendly and personalized experiences.\",           \"feature_subpoints\": [             \"Collaboration and purpose-built productivity tools\",             \"Intuitive and secure AI and agents\"           ]         },         {           \"feature_name\": \"Connected CRM Data\",           \"feature_description\": \"Enhances team conversations with customer insights.\",           \"feature_subpoints\": [             \"Native Salesforce solutions\",             \"Relevant CRM context\"           ]         },         {           \"feature_name\": \"Work Coordination\",           \"feature_description\": \"Brings work to Slack with integrations and workflow automation.\",           \"feature_subpoints\": [             \"2,600+ out-of-the-box integrations\",             \"No-code workflow automation\"           ]         },         {           \"feature_name\": \"Business Growth Support\",           \"feature_description\": \"Streamlines processes for all business functions within Slack.\",           \"feature_subpoints\": [             \"Use cases for sales, service, marketing, finance, IT, and HR\"           ]         }       ],       \"name\": \"Slack\",       \"link\": \"https://www.salesforce.com/sales/team-productivity/\",       \"customers\": [         \"Capital One\",         \"Rivian\",         \"IBM\",         \"OpenAI\",         \"Spotify Advertising\",         \"Box\",         \"Shipt\"       ],       \"product_description\": \"Slack is where humans meet data, workflows, and apps to deliver results in a unified conversational platform.\",       \"pricing\": null     },     {       \"features\": [         {           \"feature_name\": \"Data Visualization\",           \"feature_description\": \"Create, edit, and share visualizations in the cloud.\",           \"feature_subpoints\": [             \"Interactive dashboards\",             \"Comprehensive chart types\",             \"Customization options\"           ]         },         {           \"feature_name\": \"Data Preparation\",           \"feature_description\": \"Prepare, connect and manage your data anywhere.\",           \"feature_subpoints\": [             \"Data cleaning tools\",             \"Data transformation capabilities\",             \"Seamless data integration\"           ]         },         {           \"feature_name\": \"Collaboration\",           \"feature_description\": \"Analyze in collaboration with your team.\",           \"feature_subpoints\": [             \"Team sharing features\",             \"Collaborative dashboards\",             \"Real-time data updates\"           ]         }       ],       \"name\": \"Tableau\",       \"link\": \"https://www.tableau.com/\",       \"customers\": [],       \"product_description\": \"Tableau is a powerful data visualization tool that helps users transform raw data into meaningful insights through interactive dashboards and analytics.\",       \"pricing\": null     },     {       \"features\": [         {           \"feature_name\": \"Low-Code Integration\",           \"feature_description\": \"Enables admins to use out-of-the-box connectors to integrate data in workflows.\",           \"feature_subpoints\": [             \"Use org-to-org and third-party data securely in workflows\",             \"Build workflows for autonomous actions like creating invoices\"           ]         },         {           \"feature_name\": \"Salesforce API Catalog\",           \"feature_description\": \"Provides a single repository of APIs from Salesforce, MuleSoft, and Heroku.\",           \"feature_subpoints\": [             \"Create new topics and actions for AI Agents\",             \"Integrate with systems like SAP\"           ]         },         {           \"feature_name\": \"MuleSoft Direct for Data Cloud\",           \"feature_description\": \"Easily find and deploy pre-built integrations to connect information to Salesforce Data Cloud.\",           \"feature_subpoints\": [             \"Connect Google Drive, Microsoft SharePoint, and other sources\",             \"Use organizational knowledge for grounding AI prompts\"           ]         },         {           \"feature_name\": \"MuleSoft Topic Center\",           \"feature_description\": \"Allows developers to publish actionable agent topics using integrations.\",           \"feature_subpoints\": [             \"Create topics to assess hardware replacement needs\",             \"Enhance the effectiveness of Agentforce Agents\"           ]         },         {           \"feature_name\": \"MuleSoft AI Chain\",           \"feature_description\": \"An open-source initiative for seamless interaction with LLMs and APIs.\",           \"feature_subpoints\": [             \"Connect and orchestrate systems like Jira\",             \"Enhance bug diagnosis and sentiment analysis\"           ]         }       ],       \"name\": \"MuleSoft\",       \"link\": \"https://www.salesforce.com/mulesoft/?d=cta-body-promo-8\",       \"customers\": [         \"Aston Martin Lagonda Ltd.\"       ],       \"product_description\": \"MuleSoft provides integration solutions to help AI agents access and act on data across CRM and external systems, enabling personalized experiences and driving revenue.\",       \"pricing\": null     },     {       \"features\": [         {           \"feature_name\": \"Heroku Runtime\",           \"feature_description\": \"Applications run in smart containers within a fully managed runtime environment, handling critical production elements such as configuration, orchestration, load balancing, and security.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Heroku Postgres\",           \"feature_description\": \"Secure PostgreSQL as a service, featuring easy setup, encryption at rest, scalability, and database forking with continuous protection.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Heroku Data for Redis\",           \"feature_description\": \"Managed service for Redis, providing robust data types, substantial throughput, and support for major languages.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Scale\",           \"feature_description\": \"Immediate vertical and horizontal scaling capabilities for all types of projects, from hobby to enterprise-grade applications.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Add-ons\",           \"feature_description\": \"Extend application capabilities with pre-integrated services such as New Relic, MongoDB, and SendGrid.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Data Clips\",           \"feature_description\": \"Real-time data insights sharing through secure URL query results distribution.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Code and Data Rollback\",           \"feature_description\": \"Instant rollback to previous states for both code and databases.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"App Metrics\",           \"feature_description\": \"Inbuilt monitoring for application performance metrics like throughput, response times, and errors.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Continuous Delivery\",           \"feature_description\": \"Streamlined app building with Heroku Flow, leveraging Pipelines, Review Apps, and GitHub Integration.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"GitHub Integration\",           \"feature_description\": \"Automatic deployment support for repositories with pull requests generating testable Review Apps.\",           \"feature_subpoints\": []         },         {           \"feature_name\": \"Extensibility\",           \"feature_description\": \"Customizable stacks through community or custom-built Buildpacks.\",           \"feature_subpoints\": []         }       ],       \"name\": \"Heroku\",       \"link\": \"https://www.heroku.com\",       \"customers\": [         \"LitCharts\",         \"SHIFT Commerce\",         \"PensionBee\",         \"DrivenData\"       ],       \"product_description\": \"Heroku is a highly versatile and managed platform for running data-driven applications, offering modern architecture support, rapid scaling, and seamless integrations.\",       \"pricing\": null     }   ]",
                  "name": "input_value",
                  "display_name": "Text",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "Text to be passed as input.",
                  "title_case": false,
                  "type": "str"
                }
              },
              "description": "Get text inputs from the Playground.",
              "icon": "type",
              "base_classes": [
                "Message"
              ],
              "display_name": "Text Input",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "text",
                  "display_name": "Text",
                  "method": "text_response",
                  "value": "__UNDEFINED__",
                  "cache": true,
                  "hidden": false
                }
              ],
              "field_order": [
                "input_value"
              ],
              "beta": false,
              "edited": false
            },
            "id": "TextInput-Z5u1h"
          },
          "selected": false,
          "width": 384,
          "height": 309,
          "positionAbsolute": {
            "x": -2990.8524501213674,
            "y": 1261.659533062335
          },
          "dragging": false
        },
        {
          "id": "Prompt-UXSYo",
          "type": "genericNode",
          "position": {
            "x": -2456.780963872296,
            "y": 1239.039542969816
          },
          "data": {
            "type": "Prompt",
            "node": {
              "template": {
                "_type": "Component",
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio.base.prompts.api_utils import process_prompt_template\nfrom axiestudio.custom import Component\nfrom axiestudio.io import Output, PromptInput\nfrom axiestudio.schema.message import Message\nfrom axiestudio.template.utils import update_template_values\n\n\nclass PromptComponent(Component):\n    display_name: str = \"Prompt\"\n    description: str = \"Create a prompt template with dynamic variables.\"\n    icon = \"prompts\"\n    trace_type = \"prompt\"\n\n    inputs = [\n        PromptInput(name=\"template\", display_name=\"Template\"),\n    ]\n\n    outputs = [\n        Output(display_name=\"Prompt Message\", name=\"prompt\", method=\"build_prompt\"),\n    ]\n\n    async def build_prompt(\n        self,\n    ) -> Message:\n        prompt = await Message.from_template_and_variables(**self._attributes)\n        self.status = prompt.text\n        return prompt\n\n    def post_code_processing(self, new_build_config: dict, current_build_config: dict):\n        \"\"\"\n        This function is called after the code validation is done.\n        \"\"\"\n        frontend_node = super().post_code_processing(new_build_config, current_build_config)\n        template = frontend_node[\"template\"][\"template\"][\"value\"]\n        _ = process_prompt_template(\n            template=template,\n            name=\"template\",\n            custom_fields=frontend_node[\"custom_fields\"],\n            frontend_node_template=frontend_node[\"template\"],\n        )\n        # Now that template is updated, we need to grab any values that were set in the current_build_config\n        # and update the frontend_node with those values\n        update_template_values(frontend_template=frontend_node, raw_template=current_build_config[\"template\"])\n        return frontend_node\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "template": {
                  "trace_as_input": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "You are a senior product analyst with expertise in a broad range of industries and companies. Your job is to analyse a given company's products to understand the problems it is trying to solve and the value proposition of the products. You will be given detailed information about the company, the products that they are selling and the features of the product and your output will be the pain points each product aims to solve and its value proposition.\n\nThe following are the product details for the company you need to analyze:\n\n{product_details}\n\nThe output should strictly be in JSON and in the format:\n\n    [\"name\": \"\",\n    \"product_description\": \"\",\n     \"pain_points\": \"\".\n      \"value_proposition: \"\"],\n    [\"name\": \"\",\n    \"product_description\": \"\",\n     \"pain_points\": \"\",\n      \"value_proposition: '\"\"]",
                  "name": "template",
                  "display_name": "Template",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "prompt"
                },
                "product_details": {
                  "field_type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "product_details",
                  "display_name": "product_details",
                  "advanced": false,
                  "input_types": [
                    "Message",
                    "Text"
                  ],
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "type": "str"
                }
              },
              "description": "Create a prompt template with dynamic variables.",
              "icon": "prompts",
              "is_input": null,
              "is_output": null,
              "is_composition": null,
              "base_classes": [
                "Message"
              ],
              "name": "",
              "display_name": "Prompt",
              "documentation": "",
              "custom_fields": {
                "template": [
                  "product_details"
                ]
              },
              "output_types": [],
              "full_path": null,
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "prompt",
                  "hidden": false,
                  "display_name": "Prompt Message",
                  "method": "build_prompt",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "template"
              ],
              "beta": false,
              "error": null,
              "edited": false
            },
            "id": "Prompt-UXSYo",
            "description": "Create a prompt template with dynamic variables.",
            "display_name": "Prompt"
          },
          "selected": false,
          "width": 384,
          "height": 423,
          "positionAbsolute": {
            "x": -2456.780963872296,
            "y": 1239.039542969816
          },
          "dragging": false
        },
        {
          "id": "AnthropicModel-Tl7VR",
          "type": "genericNode",
          "position": {
            "x": -1998.57557877925,
            "y": 1193.6912408638407
          },
          "data": {
            "type": "AnthropicModel",
            "node": {
              "template": {
                "_type": "Component",
                "anthropic_api_key": {
                  "load_from_db": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "",
                  "name": "anthropic_api_key",
                  "display_name": "Anthropic API Key",
                  "advanced": false,
                  "input_types": [],
                  "dynamic": false,
                  "info": "Your Anthropic API key.",
                  "title_case": false,
                  "password": true,
                  "type": "str"
                },
                "anthropic_api_url": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "",
                  "name": "anthropic_api_url",
                  "display_name": "Anthropic API URL",
                  "advanced": true,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "Endpoint of the Anthropic API. Defaults to 'https://api.anthropic.com' if not specified.",
                  "title_case": false,
                  "type": "str"
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from langchain_anthropic.chat_models import ChatAnthropic\nfrom pydantic.v1 import SecretStr\n\nfrom axiestudio.base.constants import STREAM_INFO_TEXT\nfrom axiestudio.base.models.model import LCModelComponent\nfrom axiestudio.field_typing import LanguageModel\nfrom axiestudio.io import BoolInput, DropdownInput, FloatInput, IntInput, MessageTextInput, SecretStrInput\n\n\nclass AnthropicModelComponent(LCModelComponent):\n    display_name = \"Anthropic\"\n    description = \"Generate text using Anthropic Chat&Completion LLMs with prefill support.\"\n    icon = \"Anthropic\"\n\n    inputs = [\n        MessageTextInput(name=\"input_value\", display_name=\"Input\"),\n        IntInput(\n            name=\"max_tokens\",\n            display_name=\"Max Tokens\",\n            advanced=True,\n            value=4096,\n            info=\"The maximum number of tokens to generate. Set to 0 for unlimited tokens.\",\n        ),\n        DropdownInput(\n            name=\"model\",\n            display_name=\"Model Name\",\n            options=[\n                \"claude-3-5-sonnet-20240620\",\n                \"claude-3-opus-20240229\",\n                \"claude-3-sonnet-20240229\",\n                \"claude-3-haiku-20240307\",\n            ],\n            info=\"https://python.langchain.com/docs/integrations/chat/anthropic\",\n            value=\"claude-3-5-sonnet-20240620\",\n        ),\n        SecretStrInput(\n            name=\"anthropic_api_key\",\n            display_name=\"Anthropic API Key\",\n            info=\"Your Anthropic API key.\",\n        ),\n        FloatInput(name=\"temperature\", display_name=\"Temperature\", value=0.1),\n        MessageTextInput(\n            name=\"anthropic_api_url\",\n            display_name=\"Anthropic API URL\",\n            advanced=True,\n            info=\"Endpoint of the Anthropic API. Defaults to 'https://api.anthropic.com' if not specified.\",\n        ),\n        BoolInput(name=\"stream\", display_name=\"Stream\", info=STREAM_INFO_TEXT, advanced=True, value=False),\n        MessageTextInput(\n            name=\"system_message\",\n            display_name=\"System Message\",\n            info=\"System message to pass to the model.\",\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\"prefill\",\n            display_name=\"Prefill\",\n            info=\"Prefill text to guide the model's response.\",\n            advanced=True,\n        ),\n    ]\n\n    def build_model(self) -> LanguageModel:  # type: ignore[type-var]\n        model = self.model\n        anthropic_api_key = self.anthropic_api_key\n        max_tokens = self.max_tokens\n        temperature = self.temperature\n        anthropic_api_url = self.anthropic_api_url or \"https://api.anthropic.com\"\n\n        try:\n            output = ChatAnthropic(\n                model=model,\n                anthropic_api_key=(SecretStr(anthropic_api_key) if anthropic_api_key else None),\n                max_tokens_to_sample=max_tokens,  # type: ignore\n                temperature=temperature,\n                anthropic_api_url=anthropic_api_url,\n                streaming=self.stream,\n            )\n        except Exception as e:\n            raise ValueError(\"Could not connect to Anthropic API.\") from e\n\n        return output  # type: ignore\n\n    def _get_exception_message(self, exception: Exception) -> str | None:\n        \"\"\"\n        Get a message from an Anthropic exception.\n\n        Args:\n            exception (Exception): The exception to get the message from.\n\n        Returns:\n            str: The message from the exception.\n        \"\"\"\n        try:\n            from anthropic import BadRequestError\n        except ImportError:\n            return None\n        if isinstance(exception, BadRequestError):\n            message = exception.body.get(\"error\", {}).get(\"message\")  # type: ignore\n            if message:\n                return message\n        return None\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "input_value": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "",
                  "name": "input_value",
                  "display_name": "Input",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str"
                },
                "max_tokens": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": 4096,
                  "name": "max_tokens",
                  "display_name": "Max Tokens",
                  "advanced": true,
                  "dynamic": false,
                  "info": "The maximum number of tokens to generate. Set to 0 for unlimited tokens.",
                  "title_case": false,
                  "type": "int"
                },
                "model": {
                  "trace_as_metadata": true,
                  "options": [
                    "claude-3-5-sonnet-20240620",
                    "claude-3-opus-20240229",
                    "claude-3-sonnet-20240229",
                    "claude-3-haiku-20240307"
                  ],
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "claude-3-5-sonnet-20240620",
                  "name": "model",
                  "display_name": "Model Name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "https://python.langchain.com/docs/integrations/chat/anthropic",
                  "title_case": false,
                  "type": "str"
                },
                "prefill": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "",
                  "name": "prefill",
                  "display_name": "Prefill",
                  "advanced": true,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "Prefill text to guide the model's response.",
                  "title_case": false,
                  "type": "str"
                },
                "stream": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": false,
                  "name": "stream",
                  "display_name": "Stream",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Stream the response from the model. Streaming works only in Chat.",
                  "title_case": false,
                  "type": "bool"
                },
                "system_message": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "",
                  "name": "system_message",
                  "display_name": "System Message",
                  "advanced": true,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "System message to pass to the model.",
                  "title_case": false,
                  "type": "str"
                },
                "temperature": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": 0.1,
                  "name": "temperature",
                  "display_name": "Temperature",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "float"
                }
              },
              "description": "Generate text using Anthropic Chat&Completion LLMs with prefill support.",
              "icon": "Anthropic",
              "base_classes": [
                "LanguageModel",
                "Message"
              ],
              "display_name": "Anthropic",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "text_output",
                  "display_name": "Text",
                  "method": "text_response",
                  "value": "__UNDEFINED__",
                  "cache": true,
                  "hidden": false
                },
                {
                  "types": [
                    "LanguageModel"
                  ],
                  "selected": "LanguageModel",
                  "name": "model_output",
                  "display_name": "Language Model",
                  "method": "build_model",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "input_value",
                "max_tokens",
                "model",
                "anthropic_api_key",
                "temperature",
                "anthropic_api_url",
                "stream",
                "system_message",
                "prefill"
              ],
              "beta": false,
              "edited": false
            },
            "id": "AnthropicModel-Tl7VR"
          },
          "selected": false,
          "width": 384,
          "height": 651,
          "positionAbsolute": {
            "x": -1998.57557877925,
            "y": 1193.6912408638407
          },
          "dragging": false
        },
        {
          "id": "TextInput-wSUYp",
          "type": "genericNode",
          "position": {
            "x": -2058.946145734739,
            "y": 661.8163733893899
          },
          "data": {
            "type": "TextInput",
            "node": {
              "template": {
                "_type": "Component",
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio.base.io.text import TextComponent\nfrom axiestudio.io import MessageTextInput, Output\nfrom axiestudio.schema.message import Message\n\n\nclass TextInputComponent(TextComponent):\n    display_name = \"Text Input\"\n    description = \"Get text inputs from the Playground.\"\n    icon = \"type\"\n\n    inputs = [\n        MessageTextInput(\n            name=\"input_value\",\n            display_name=\"Text\",\n            info=\"Text to be passed as input.\",\n        ),\n    ]\n    outputs = [\n        Output(display_name=\"Text\", name=\"text\", method=\"text_response\"),\n    ]\n\n    def text_response(self) -> Message:\n        message = Message(\n            text=self.input_value,\n        )\n        return message\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "input_value": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "social_media_urls_linkedin_id social_media_urls_linkedin_slug social_media_urls_linkedin_url domain enrichment_status headquarters_address employee_range_max year_founded industries name employee_range_min description type linkedin_headcount_qoq_absolute stock_exchange headquarters_country glassdoor_business_outlook_pct glassdoor_review_count_mom_pct job_openings_total website_traffic_source_search_pct website_traffic_visitor_qoq_pct glassdoor_ceo_approval_mom_pct logo social_media_urls_twitter_url linkedin_headcount_yoy_percent job_openings_mom_pct glassdoor_review_count_yoy_pct crunchbase_categories glassdoor_compensation_rating glassdoor_overall_rating glassdoor_senior_management_rating search_engine_performance_average_organic_rank funding_recent_round_amount_in_usd linkedin_headcount_total search_engine_performance_total_organic_results linkedin_headcount_mom_absolute website_traffic_monthly_visitors_max glassdoor_ceo_approval_pct job_openings_recent_openings_count g2_average_rating search_engine_performance_monthly_organic_clicks raw_crustdata_competitors funding_recent_round_name website_traffic_monthly_visitors_min glassdoor_ceo_approval_qoq_pct industry linkedin_headcount_mom_percent website_traffic_source_paid_referral_pct glassdoor_review_count_qoq_pct funding_total_funding_amount_in_usd website_traffic_visitor_mom_pct search_engine_performance_paid_competitors search_engine_performance_organic_competitors glassdoor_review_count search_engine_performance_lost_ranks website_traffic_source_social_pct g2_review_count job_openings_recent_openings_titles funding_investors job_openings_qoq_pct search_engine_performance_newly_ranked linkedin_headcount_yoy_absolute search_engine_performance_gained_ranks glassdoor_career_opportunities_rating search_engine_performance_monthly_organic_value linkedin_headcount_qoq_percent website_traffic_source_direct_pct website_traffic_source_referral_pct summary employee_count phone_numbers technology_used_categories linkedin_headcount_departments headquarters_postal_code headquarters_state headquarters_city revenue_amount_in_usd technology_used org_features last_enrichment_attempt_at api_docs_urls has_software_documentation social_media_urls keywords has_newsletters redirection_chain is_pricing_available has_reseller_program has_community_portal shows_customer_reviews specialties is_b2b user_signup_url careers_page_url is_analysis_complete has_api_docs newsletters_urls has_affiliate_program reseller_program_url online_store_url community_portal_url business_category business_sub_category meta_title is_user_signup_available status_page_url meta_description is_product_analysis_complete last_updated_at has_support_portal is_online_store has_status_page blog_url has_online_store usage_statistics startup_program_url products has_mobile_apps user_login_url is_demo_available has_careers_page partner_program_url has_partners_program pricing_page_url affiliate_program_url support_portal_url url is_user_login_available startup_program_available detected_third_party_scripts analysis_result is_free_trial_available has_desktop_apps software_documentation_urls has_blog",
                  "name": "input_value",
                  "display_name": "Text",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "Text to be passed as input.",
                  "title_case": false,
                  "type": "str"
                }
              },
              "description": "Get text inputs from the Playground.",
              "icon": "type",
              "base_classes": [
                "Message"
              ],
              "display_name": "Text Input",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "text",
                  "display_name": "Text",
                  "method": "text_response",
                  "value": "__UNDEFINED__",
                  "cache": true,
                  "hidden": false
                }
              ],
              "field_order": [
                "input_value"
              ],
              "beta": false,
              "edited": false
            },
            "id": "TextInput-wSUYp"
          },
          "selected": false,
          "width": 384,
          "height": 309,
          "positionAbsolute": {
            "x": -2058.946145734739,
            "y": 661.8163733893899
          },
          "dragging": false
        },
        {
          "id": "TextInput-UCk2a",
          "type": "genericNode",
          "position": {
            "x": -786.9966668419269,
            "y": 1836.9106034279919
          },
          "data": {
            "type": "TextInput",
            "node": {
              "template": {
                "_type": "Component",
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio.base.io.text import TextComponent\nfrom axiestudio.io import MessageTextInput, Output\nfrom axiestudio.schema.message import Message\n\n\nclass TextInputComponent(TextComponent):\n    display_name = \"Text Input\"\n    description = \"Get text inputs from the Playground.\"\n    icon = \"type\"\n\n    inputs = [\n        MessageTextInput(\n            name=\"input_value\",\n            display_name=\"Text\",\n            info=\"Text to be passed as input.\",\n        ),\n    ]\n    outputs = [\n        Output(display_name=\"Text\", name=\"text\", method=\"text_response\"),\n    ]\n\n    def text_response(self) -> Message:\n        message = Message(\n            text=self.input_value,\n        )\n        return message\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "input_value": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "[   {     \"Starter Suite\": [       \"employee_range_min\": \"Helps determine if the company is within the target size for Starter Suite. For smaller companies (e.g., <50 employees), emphasize the 'Simplified Sign-up' feature.\",       \"employee_range_max\": \"Helps determine if the company is within the target size for Starter Suite. For larger companies (e.g., >500 employees), focus on the 'Unified Business Suite' feature to address complex needs.\",       \"industries\": \"Allows tailoring the pitch to specific industry needs. Highlight how Starter Suite can address common pain points in that industry.\",       \"description\": \"Provides context about the company's focus. Use this to align Starter Suite's features with the company's goals and challenges.\",       \"website_traffic_monthly_visitors_max\": \"Indicates the company's online presence. For higher traffic, emphasize how Starter Suite can help manage and convert this traffic effectively.\",       \"technology_used\": \"Identifies current tech stack. Highlight how Starter Suite can integrate with or enhance existing technologies.\",       \"revenue_amount_in_usd\": \"Helps gauge the company's size and potential budget. Adjust the pricing discussion accordingly.\"     ],     \"Sales Cloud\": [       \"linkedin_headcount_total\": \"Indicates the size of the company. For larger headcounts, emphasize Sales Cloud's scalability and team collaboration features.\",       \"job_openings_total\": \"Suggests company growth. If high, highlight how Sales Cloud can help manage expanding sales teams and processes.\",       \"glassdoor_overall_rating\": \"Reflects employee satisfaction. If low, discuss how Sales Cloud's 'Guided Content and Training' can improve sales team morale and performance.\",       \"crunchbase_categories\": \"Provides insight into the company's market focus. Tailor the Sales Cloud pitch to address specific industry sales challenges.\",       \"funding_total_funding_amount_in_usd\": \"Indicates financial backing. For well-funded companies, emphasize how Sales Cloud can help scale sales operations efficiently.\",       \"g2_average_rating\": \"Shows customer satisfaction with current tools. If low, highlight Sales Cloud's user-friendly features and pre-configured processes.\",       \"website_traffic_source_search_pct\": \"Indicates reliance on search traffic. If high, discuss how Sales Cloud can help convert this traffic into sales leads.\"     ],     \"Marketing Cloud\": [       \"website_traffic_monthly_visitors_max\": \"Indicates potential marketing reach. For high traffic, emphasize Marketing Cloud's ability to segment and personalize at scale.\",       \"social_media_urls_linkedin_url\": \"Suggests B2B focus. Highlight Marketing Cloud's B2B Marketing Automation features.\",       \"social_media_urls_twitter_url\": \"Indicates social media presence. Discuss how Marketing Cloud can integrate social media into marketing strategies.\",       \"website_traffic_source_paid_referral_pct\": \"Shows investment in paid marketing. If high, emphasize Marketing Cloud's Marketing Analytics to optimize spend.\",       \"website_traffic_source_social_pct\": \"Indicates social media marketing effectiveness. If low, highlight Marketing Cloud's cross-channel personalization capabilities.\",       \"g2_review_count\": \"Reflects market presence. For high counts, discuss how Marketing Cloud can help maintain and improve market position.\",       \"technology_used_categories\": \"Identifies current martech stack. Show how Marketing Cloud can integrate with or enhance existing tools.\"     ],     \"Commerce Cloud\": [       \"website_traffic_monthly_visitors_max\": \"Indicates e-commerce potential. For high traffic, emphasize Commerce Cloud's scalability and personalization features.\",       \"industry\": \"Allows tailoring the Commerce Cloud pitch to industry-specific e-commerce needs.\",       \"website_traffic_source_direct_pct\": \"Shows brand recognition. If high, discuss how Commerce Cloud can enhance the direct-to-consumer experience.\",       \"website_traffic_source_search_pct\": \"Indicates reliance on search traffic. If high, highlight Commerce Cloud's SEO and SEM integration capabilities.\",       \"technology_used\": \"Identifies current e-commerce stack. Show how Commerce Cloud can integrate with or replace existing systems for improved efficiency.\",       \"is_online_store\": \"Confirms e-commerce presence. If true, discuss how Commerce Cloud can enhance existing operations; if false, present it as a solution to enter e-commerce.\",       \"business_category\": \"Helps understand the nature of products/services. Tailor the Commerce Cloud pitch to specific category needs (e.g., B2B vs. D2C features).\"     ],     \"Salesforce Artificial Intelligence\": [       \"employee_count\": \"Indicates company size and potential AI needs. For larger companies, emphasize AI's ability to handle complex, large-scale operations.\",       \"industries\": \"Allows tailoring AI use cases to specific industry needs and challenges.\",       \"technology_used_categories\": \"Identifies current tech stack. Highlight how Salesforce AI can enhance or integrate with existing technologies.\",       \"g2_average_rating\": \"Reflects satisfaction with current tools. If low, emphasize how AI can improve efficiency and user experience.\",       \"job_openings_total\": \"Suggests growth and potential pain points. If high, discuss how AI can help manage scaling challenges.\",       \"website_traffic_monthly_visitors_max\": \"Indicates digital presence. For high traffic, highlight AI's ability to personalize customer interactions at scale.\",       \"funding_total_funding_amount_in_usd\": \"Suggests investment capacity. For well-funded companies, present AI as a strategic investment for long-term growth.\"     ],     \"Salesforce Platform\": [       \"employee_count\": \"Indicates company size and potential platform needs. For larger companies, emphasize the platform's scalability and enterprise features.\",       \"technology_used_categories\": \"Identifies current tech stack. Highlight how Salesforce Platform can integrate with and enhance existing systems.\",       \"industries\": \"Allows tailoring the platform pitch to industry-specific needs and regulations.\",       \"funding_total_funding_amount_in_usd\": \"Suggests investment capacity. For well-funded companies, present the platform as a comprehensive solution for growth.\",       \"job_openings_total\": \"Indicates growth and potential scaling challenges. Highlight how the platform can support rapid expansion.\",       \"g2_average_rating\": \"Reflects satisfaction with current tools. If low, emphasize the platform's ability to streamline and improve operations.\",       \"is_api_docs\": \"Indicates technical sophistication. If true, highlight the platform's extensibility and API capabilities.\"     ],     \"Slack\": [       \"employee_count\": \"Indicates potential user base. For larger companies, emphasize Slack's enterprise-grade features and scalability.\",       \"linkedin_headcount_departments\": \"Shows organizational complexity. Highlight Slack's ability to streamline communication across various departments.\",       \"technology_used\": \"Identifies current tools. Emphasize Slack's integration capabilities with existing systems.\",       \"glassdoor_overall_rating\": \"Reflects employee satisfaction. If low, discuss how Slack can improve workplace communication and collaboration.\",       \"job_openings_total\": \"Suggests company growth. Highlight how Slack can help onboard and integrate new employees efficiently.\",       \"industries\": \"Allows tailoring Slack use cases to industry-specific communication needs.\",       \"g2_average_rating\": \"Indicates satisfaction with current tools. If low, emphasize Slack's user-friendly interface and productivity features.\"     ],     \"Tableau\": [       \"employee_count\": \"Indicates potential scale of data visualization needs. For larger companies, emphasize Tableau's enterprise-level capabilities.\",       \"industries\": \"Allows tailoring Tableau use cases to industry-specific data challenges and KPIs.\",       \"technology_used_categories\": \"Identifies current data stack. Highlight Tableau's integration capabilities with existing systems.\",       \"g2_average_rating\": \"Reflects satisfaction with current tools. If low, emphasize Tableau's user-friendly interface and powerful features.\",       \"job_openings_total\": \"Suggests growth and potential increase in data complexity. Discuss how Tableau can help manage and visualize growing datasets.\",       \"funding_total_funding_amount_in_usd\": \"Indicates investment capacity. For well-funded companies, present Tableau as a strategic investment in data-driven decision making.\",       \"glassdoor_overall_rating\": \"Reflects employee satisfaction. If low, discuss how Tableau can empower employees with data insights, potentially improving job satisfaction.\"     ],     \"MuleSoft\": [       \"technology_used_categories\": \"Identifies current tech stack. Highlight MuleSoft's ability to integrate with and enhance existing systems.\",       \"employee_count\": \"Indicates potential scale of integration needs. For larger companies, emphasize MuleSoft's enterprise-grade capabilities.\",       \"industries\": \"Allows tailoring MuleSoft use cases to industry-specific integration challenges.\",       \"g2_average_rating\": \"Reflects satisfaction with current tools. If low, emphasize MuleSoft's ability to streamline and improve data flow across the organization.\",       \"job_openings_total\": \"Suggests growth and potential increase in system complexity. Discuss how MuleSoft can help manage integrations as the company scales.\",       \"funding_total_funding_amount_in_usd\": \"Indicates investment capacity. For well-funded companies, present MuleSoft as a strategic investment in long-term system architecture.\",       \"is_api_docs\": \"Indicates API usage. If true, highlight MuleSoft's API management and integration capabilities.\"     ],     \"Heroku\": [       \"technology_used_categories\": \"Identifies current tech stack. Highlight Heroku's compatibility and integration with existing technologies.\",       \"employee_count\": \"Indicates potential scale of development needs. For larger companies, emphasize Heroku's enterprise-level features and support.\",       \"industries\": \"Allows tailoring Heroku use cases to industry-specific development and deployment challenges.\",       \"g2_average_rating\": \"Reflects satisfaction with current tools. If low, emphasize Heroku's ease of use and developer productivity features.\",       \"job_openings_total\": \"Suggests growth and potential increase in development needs. Discuss how Heroku can help scale applications and development processes.\",       \"funding_total_funding_amount_in_usd\": \"Indicates investment capacity. For well-funded companies, present Heroku as a strategic platform for rapid development and deployment.\",       \"is_api_docs\": \"Indicates API usage. If true, highlight Heroku's support for API-driven development and microservices architecture.\"     ]   } ]",
                  "name": "input_value",
                  "display_name": "Text",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "Text to be passed as input.",
                  "title_case": false,
                  "type": "str"
                }
              },
              "description": "Get text inputs from the Playground.",
              "icon": "type",
              "base_classes": [
                "Message"
              ],
              "display_name": "Text Input",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "text",
                  "display_name": "Text",
                  "method": "text_response",
                  "value": "__UNDEFINED__",
                  "cache": true,
                  "hidden": false
                }
              ],
              "field_order": [
                "input_value"
              ],
              "beta": false,
              "edited": false
            },
            "id": "TextInput-UCk2a"
          },
          "selected": false,
          "width": 384,
          "height": 309,
          "positionAbsolute": {
            "x": -786.9966668419269,
            "y": 1836.9106034279919
          },
          "dragging": false
        },
        {
          "id": "TextInput-G0gCt",
          "type": "genericNode",
          "position": {
            "x": -824.6357956590114,
            "y": 1397.160923277288
          },
          "data": {
            "type": "TextInput",
            "node": {
              "template": {
                "_type": "Component",
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio.base.io.text import TextComponent\nfrom axiestudio.io import MessageTextInput, Output\nfrom axiestudio.schema.message import Message\n\n\nclass TextInputComponent(TextComponent):\n    display_name = \"Text Input\"\n    description = \"Get text inputs from the Playground.\"\n    icon = \"type\"\n\n    inputs = [\n        MessageTextInput(\n            name=\"input_value\",\n            display_name=\"Text\",\n            info=\"Text to be passed as input.\",\n        ),\n    ]\n    outputs = [\n        Output(display_name=\"Text\", name=\"text\", method=\"text_response\"),\n    ]\n\n    def text_response(self) -> Message:\n        message = Message(\n            text=self.input_value,\n        )\n        return message\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "input_value": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "{   \"social_media_urls_linkedin_id\": 69088800,   \"social_media_urls_linkedin_slug\": \"devrev\",   \"social_media_urls_linkedin_url\": \"https://www.linkedin.com/company/devrev\",   \"domain\": \"devrev.ai\",   \"enrichment_status\": \"Completed\",   \"headquarters_address\": \"Palo Alto\",   \"employee_range_max\": 500,   \"year_founded\": 2020,   \"industries\": \"Computer Software\",   \"name\": \"DevRev\",   \"employee_range_min\": 201,   \"description\": \"DevRev’s AgentOS, purpose-built for SaaS companies, comprises three modern CRM apps for support, product, and growth teams. It connects end users, sellers, support, product people, and developers, reducing 9 business apps and converging 6 teams onto a common platform.\\n\\nUnlike horizontal CRMs, DevRev takes a blank canvas approach to collaboration, AI, and analytics, enabling SaaS companies to increase product velocity and reduce customer churn. DevRev is used by thousands of companies in search of low latency analytics and customizable LLMs to thrive in this era of GenAI.\\n\\nHeadquartered in Palo Alto, California, DevRev has offices in seven global locations. \\n\\nWe have raised $100 million in funding from investors like Khosla Ventures and Mayfield at a $1.1 billion valuation. We are also honored to be named on the Forbes 2024 list of America’s Best Startup Employers.\\n\\nFounded in October 2020 by Dheeraj Pandey, former co-founder and CEO of Nutanix, and Manoj Agarwal, former SVP of Engineering at Nutanix, DevRev continues to push the boundaries of innovation, helping thousands of companies thrive in the rapidly evolving landscape of AI-driven SaaS.\",   \"type\": \"Privately Held\",   \"linkedin_headcount_qoq_absolute\": 26,   \"stock_exchange\": \"PRIVATE\",   \"headquarters_country\": \"USA\",   \"glassdoor_business_outlook_pct\": 88,   \"glassdoor_review_count_mom_pct\": 1.15,   \"job_openings_total\": 25,   \"website_traffic_source_search_pct\": 24.694634514494737,   \"website_traffic_visitor_qoq_pct\": -9.8,   \"glassdoor_ceo_approval_mom_pct\": 1.03,   \"social_media_urls_twitter_url\": \"https://twitter.com/devrev\",   \"linkedin_headcount_yoy_percent\": 51.83,   \"job_openings_mom_pct\": 46.78,   \"glassdoor_review_count_yoy_pct\": -1.12,   \"crunchbase_categories\": [     \"Software\",     \"Developer APIs\",     \"CRM\",     \"Computer\",     \"Business Information Systems\",     \"Customer Service\",     \"Product Management\",     \"Artificial Intelligence (AI)\",     \"Developer Platform\"   ],   \"glassdoor_compensation_rating\": 4.65143,   \"glassdoor_overall_rating\": 4.7452,   \"glassdoor_senior_management_rating\": 4.68342,   \"search_engine_performance_average_organic_rank\": 62,   \"funding_recent_round_amount_in_usd\": 100825173,   \"linkedin_headcount_total\": 443,   \"search_engine_performance_total_organic_results\": 307,   \"linkedin_headcount_mom_absolute\": 17,   \"website_traffic_monthly_visitors_max\": 110480,   \"glassdoor_ceo_approval_pct\": 98,   \"job_openings_recent_openings_count\": 3,   \"g2_average_rating\": 8.9,   \"search_engine_performance_monthly_organic_clicks\": 858,   \"raw_crustdata_competitors\": \"devron.ai,devnest.ro,devtron.ai,welldev.io\",   \"funding_recent_round_name\": \"SERIES_A\",   \"website_traffic_monthly_visitors_min\": 110480,   \"glassdoor_ceo_approval_qoq_pct\": 1.03,   \"industry\": \"Software Development,Computer Software\",   \"linkedin_headcount_mom_percent\": 1.81,   \"website_traffic_source_paid_referral_pct\": 16.33360777161154,   \"glassdoor_review_count_qoq_pct\": -2.22,   \"funding_total_funding_amount_in_usd\": 150825173,   \"website_traffic_visitor_mom_pct\": 13.39,   \"search_engine_performance_paid_competitors\": [     \"easychator.com\",     \"launchnetworkla.com\",     \"webhelp.com\",     \"regdee.com\",     \"ometrics.com\"   ],   \"search_engine_performance_organic_competitors\": [     \"help-desk-migration.com\",     \"customerly.io\",     \"helpcrunch.com\",     \"proprofsdesk.com\",     \"botgate.ai\"   ],   \"glassdoor_review_count\": 143,   \"search_engine_performance_lost_ranks\": 920,   \"website_traffic_source_social_pct\": 6.42026646133143,   \"g2_review_count\": 103,   \"job_openings_recent_openings_titles\": [     \"Application Engineer\",     \"Design: Product Designer\",     \"Solutions Engineer\"   ],   \"funding_investors\": [     \"Dheeraj Pandey\",     \"m]x[v Capital\",     \"Firebolt Ventures\",     \"Param Hansa Values\",     \"Audeo Ventures\",     \"Vijay Shankar\",     \"Bradley Horowitz\",     \"Ballistic Ventures\",     \"Cloud Capital\",     \"Khosla Ventures\",     \"\",     \"2 | Twelve\",     \"Alumni Ventures\",     \"Mayfield Fund\"   ],   \"job_openings_qoq_pct\": 209.88,   \"search_engine_performance_newly_ranked\": 330,   \"linkedin_headcount_yoy_absolute\": 141,   \"search_engine_performance_gained_ranks\": 847,   \"glassdoor_career_opportunities_rating\": 4.67135,   \"search_engine_performance_monthly_organic_value\": 3741,   \"linkedin_headcount_qoq_percent\": 8.15,   \"website_traffic_source_direct_pct\": 47.153092930553804,   \"website_traffic_source_referral_pct\": 5.398398322008486,   \"summary\": \"Boost collaboration and efficiency with DevRev's cloud-based platform for customer support and software development. Native collaboration, analytics, and AI.\",   \"employee_count\": 460,   \"phone_numbers\": [     \"+16508673236\"   ],   \"linkedin_headcount_departments\": [     {       \"name\": \"Engineering\",       \"count\": 79     },     {       \"name\": \"Operations\",       \"count\": 20     },     {       \"name\": \"Information Technology\",       \"count\": 1     },     {       \"name\": \"Product Management\",       \"count\": 13     },     {       \"name\": \"Sales\",       \"count\": 17     },     {       \"name\": \"Business Development\",       \"count\": 2     },     {       \"name\": \"Marketing\",       \"count\": 19     },     {       \"name\": \"Support\",       \"count\": 11     },     {       \"name\": \"Education\",       \"count\": 1     },     {       \"name\": \"Finance\",       \"count\": 6     },     {       \"name\": \"Entrepreneurship\",       \"count\": 3     },     {       \"name\": \"Human Resources\",       \"count\": 4     },     {       \"name\": \"Arts And Design\",       \"count\": 7     },     {       \"name\": \"Legal\",       \"count\": 6     },     {       \"name\": \"Data Science\",       \"count\": 1     },     {       \"name\": \"Accounting\",       \"count\": 0     },     {       \"name\": \"Consulting\",       \"count\": 0     },     {       \"name\": \"Administrative\",       \"count\": 0     },     {       \"name\": \"Media And Commmunication\",       \"count\": 0     }   ],   \"headquarters_postal_code\": \"94303-3603\",   \"headquarters_state\": \"California\",   \"headquarters_city\": \"Palo Alto\",   \"revenue_amount_in_usd\": 4450000,   \"technology_used\": [     \"AI\",     \"Amadesa\",     \"Amazon AWS\",     \"Amazon SES\",     \"Appcues\",     \"Atlassian Cloud\",     \"Bootstrap Framework\",     \"DoubleClick\",     \"DoubleClick Conversion\",     \"Facebook Custom Audiences\",     \"Facebook Login (Connect)\",     \"Facebook Widget\",     \"FullStory\",     \"Gmail\",     \"GoToWebinar\",     \"Google Analytics\",     \"Google Apps\",     \"Google Dynamic Remarketing\",     \"Google Font API\",     \"Google Play\",     \"Google Tag Manager\",     \"Greenhouse.io\",     \"Helpscout\",     \"Hotjar\",     \"Linkedin Marketing Solutions\",     \"Microsoft Office 365\",     \"Mobile Friendly\",     \"Open AdStream (Appnexus)\",     \"Pardot\",     \"Qualtrics\",     \"React Redux\",     \"Route 53\",     \"Segment.io\",     \"Stripe\",     \"Tipalti\",     \"Twitter Advertising\",     \"Varnish\",     \"Vercel\",     \"Vimeo\",     \"Visual Website Optimizer\",     \"WordPress.org\",     \"YouTube\",     \"reCAPTCHA\"   ],   \"org_features\": {     \"api_docs_urls\": [],     \"has_software_documentation\": false,     \"social_media_urls\": [],     \"keywords\": [       \"AI\",       \"tech support\",       \"product management\",       \"analytics\",       \"CRM\"     ],     \"has_newsletters\": false,     \"is_pricing_available\": true,     \"has_reseller_program\": false,     \"has_community_portal\": false,     \"shows_customer_reviews\": true,     \"specialties\": [       \"AI-driven analytics\",       \"Customer feedback management\",       \"AI-powered CRM\",       \"Support automation\"     ],     \"is_b2b\": true,     \"user_signup_url\": \"https://app.devrev.ai/signup\",     \"careers_page_url\": \"https://devrev.ai/careers\",     \"is_analysis_complete\": true,     \"has_api_docs\": false,     \"newsletters_urls\": null,     \"has_affiliate_program\": false,     \"reseller_program_url\": null,     \"online_store_url\": null,     \"community_portal_url\": null,     \"business_category\": \"SaaS & Cloud\",     \"business_sub_category\": \"Professional Services\",     \"meta_title\": \"DevRev - AI-Powered Customer Experience & Support Platforms\",     \"is_user_signup_available\": true,     \"status_page_url\": null,     \"meta_description\": \"Join the 1000+ companies benefiting from an AI-first experience. DevRev delivers AI agents for product managers, support, and sales teams.\",     \"is_product_analysis_complete\": false,     \"last_updated_at\": \"2024-09-04T14:07:38.003Z\",     \"domain\": \"devrev.ai\",     \"input_url\": \"https://devrev.ai\",     \"has_support_portal\": true,     \"is_online_store\": false,     \"has_status_page\": false,     \"blog_url\": null,     \"has_online_store\": false,     \"usage_statistics\": {       \"input_prompt_usage\": 3949,       \"output_prompt_usage\": 760     },     \"startup_program_url\": \"https://app.devrev.ai/signup?utm_campaign=startup-program-application\",     \"products\": [       {         \"name\": \"Agent OS\",         \"link\": null       },       {         \"name\": \"Support App\",         \"link\": \"https://devrev.ai/support\"       },       {         \"name\": \"Build App\",         \"link\": \"https://devrev.ai/build\"       },       {         \"name\": \"Grow App\",         \"link\": null       },       {         \"name\": \"Analytics Engine\",         \"link\": null       },       {         \"name\": \"Automation Engine\",         \"link\": null       }     ],     \"has_mobile_apps\": true,     \"user_login_url\": null,     \"is_demo_available\": true,     \"has_careers_page\": true,     \"partner_program_url\": \"https://app.devrev.ai/signup?utm_campaign=startup-program-application\",     \"has_partners_program\": true,     \"pricing_page_url\": \"https://devrev.ai/#pricing\",     \"affiliate_program_url\": null,     \"support_portal_url\": \"https://devrev.ai/support\",     \"url\": \"https://devrev.ai/\",     \"is_user_login_available\": false,     \"startup_program_available\": true,     \"detected_third_party_scripts\": [],     \"analysis_result\": \"success\",     \"is_free_trial_available\": true,     \"has_desktop_apps\": false,     \"software_documentation_urls\": [],     \"has_blog\": false   } }",
                  "name": "input_value",
                  "display_name": "Text",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "Text to be passed as input.",
                  "title_case": false,
                  "type": "str"
                }
              },
              "description": "Get text inputs from the Playground.",
              "icon": "type",
              "base_classes": [
                "Message"
              ],
              "display_name": "Text Input",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "text",
                  "display_name": "Text",
                  "method": "text_response",
                  "value": "__UNDEFINED__",
                  "cache": true,
                  "hidden": false
                }
              ],
              "field_order": [
                "input_value"
              ],
              "beta": false,
              "edited": false
            },
            "id": "TextInput-G0gCt"
          },
          "selected": false,
          "width": 384,
          "height": 309,
          "positionAbsolute": {
            "x": -824.6357956590114,
            "y": 1397.160923277288
          },
          "dragging": false
        }
      ],
      "edges": [
        {
          "source": "Prompt-HTp3t",
          "sourceHandle": "{œdataTypeœ:œPromptœ,œidœ:œPrompt-HTp3tœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}",
          "target": "AnthropicModel-WHomq",
          "targetHandle": "{œfieldNameœ:œinput_valueœ,œidœ:œAnthropicModel-WHomqœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
          "data": {
            "targetHandle": {
              "fieldName": "input_value",
              "id": "AnthropicModel-WHomq",
              "inputTypes": [
                "Message"
              ],
              "type": "str"
            },
            "sourceHandle": {
              "dataType": "Prompt",
              "id": "Prompt-HTp3t",
              "name": "prompt",
              "output_types": [
                "Message"
              ]
            }
          },
          "id": "reactflow__edge-Prompt-HTp3t{œdataTypeœ:œPromptœ,œidœ:œPrompt-HTp3tœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}-AnthropicModel-WHomq{œfieldNameœ:œinput_valueœ,œidœ:œAnthropicModel-WHomqœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
          "className": ""
        },
        {
          "source": "TextInput-9osk1",
          "sourceHandle": "{œdataTypeœ:œTextInputœ,œidœ:œTextInput-9osk1œ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}",
          "target": "Prompt-HTp3t",
          "targetHandle": "{œfieldNameœ:œcustomer_organization_infoœ,œidœ:œPrompt-HTp3tœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
          "data": {
            "targetHandle": {
              "fieldName": "customer_organization_info",
              "id": "Prompt-HTp3t",
              "inputTypes": [
                "Message",
                "Text"
              ],
              "type": "str"
            },
            "sourceHandle": {
              "dataType": "TextInput",
              "id": "TextInput-9osk1",
              "name": "text",
              "output_types": [
                "Message"
              ]
            }
          },
          "id": "reactflow__edge-TextInput-9osk1{œdataTypeœ:œTextInputœ,œidœ:œTextInput-9osk1œ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}-Prompt-HTp3t{œfieldNameœ:œcustomer_organization_infoœ,œidœ:œPrompt-HTp3tœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
          "className": ""
        },
        {
          "source": "TextInput-Z5u1h",
          "sourceHandle": "{œdataTypeœ:œTextInputœ,œidœ:œTextInput-Z5u1hœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}",
          "target": "Prompt-UXSYo",
          "targetHandle": "{œfieldNameœ:œproduct_detailsœ,œidœ:œPrompt-UXSYoœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
          "data": {
            "targetHandle": {
              "fieldName": "product_details",
              "id": "Prompt-UXSYo",
              "inputTypes": [
                "Message",
                "Text"
              ],
              "type": "str"
            },
            "sourceHandle": {
              "dataType": "TextInput",
              "id": "TextInput-Z5u1h",
              "name": "text",
              "output_types": [
                "Message"
              ]
            }
          },
          "id": "reactflow__edge-TextInput-Z5u1h{œdataTypeœ:œTextInputœ,œidœ:œTextInput-Z5u1hœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}-Prompt-UXSYo{œfieldNameœ:œproduct_detailsœ,œidœ:œPrompt-UXSYoœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
          "className": ""
        },
        {
          "source": "Prompt-UXSYo",
          "sourceHandle": "{œdataTypeœ:œPromptœ,œidœ:œPrompt-UXSYoœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}",
          "target": "AnthropicModel-Tl7VR",
          "targetHandle": "{œfieldNameœ:œinput_valueœ,œidœ:œAnthropicModel-Tl7VRœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
          "data": {
            "targetHandle": {
              "fieldName": "input_value",
              "id": "AnthropicModel-Tl7VR",
              "inputTypes": [
                "Message"
              ],
              "type": "str"
            },
            "sourceHandle": {
              "dataType": "Prompt",
              "id": "Prompt-UXSYo",
              "name": "prompt",
              "output_types": [
                "Message"
              ]
            }
          },
          "id": "reactflow__edge-Prompt-UXSYo{œdataTypeœ:œPromptœ,œidœ:œPrompt-UXSYoœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}-AnthropicModel-Tl7VR{œfieldNameœ:œinput_valueœ,œidœ:œAnthropicModel-Tl7VRœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
          "className": ""
        },
        {
          "source": "AnthropicModel-Tl7VR",
          "sourceHandle": "{œdataTypeœ:œAnthropicModelœ,œidœ:œAnthropicModel-Tl7VRœ,œnameœ:œtext_outputœ,œoutput_typesœ:[œMessageœ]}",
          "target": "Prompt-HTp3t",
          "targetHandle": "{œfieldNameœ:œpainpoints_valuepropsœ,œidœ:œPrompt-HTp3tœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
          "data": {
            "targetHandle": {
              "fieldName": "painpoints_valueprops",
              "id": "Prompt-HTp3t",
              "inputTypes": [
                "Message",
                "Text"
              ],
              "type": "str"
            },
            "sourceHandle": {
              "dataType": "AnthropicModel",
              "id": "AnthropicModel-Tl7VR",
              "name": "text_output",
              "output_types": [
                "Message"
              ]
            }
          },
          "id": "reactflow__edge-AnthropicModel-Tl7VR{œdataTypeœ:œAnthropicModelœ,œidœ:œAnthropicModel-Tl7VRœ,œnameœ:œtext_outputœ,œoutput_typesœ:[œMessageœ]}-Prompt-HTp3t{œfieldNameœ:œpainpoints_valuepropsœ,œidœ:œPrompt-HTp3tœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
          "className": ""
        },
        {
          "source": "TextInput-Z5u1h",
          "sourceHandle": "{œdataTypeœ:œTextInputœ,œidœ:œTextInput-Z5u1hœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}",
          "target": "Prompt-HTp3t",
          "targetHandle": "{œfieldNameœ:œcustomer_product_infoœ,œidœ:œPrompt-HTp3tœ,œinputTypesœ:[œMessageœ,œTextœ],��typeœ:œstrœ}",
          "data": {
            "targetHandle": {
              "fieldName": "customer_product_info",
              "id": "Prompt-HTp3t",
              "inputTypes": [
                "Message",
                "Text"
              ],
              "type": "str"
            },
            "sourceHandle": {
              "dataType": "TextInput",
              "id": "TextInput-Z5u1h",
              "name": "text",
              "output_types": [
                "Message"
              ]
            }
          },
          "id": "reactflow__edge-TextInput-Z5u1h{œdataTypeœ:œTextInputœ,œidœ:œTextInput-Z5u1hœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}-Prompt-HTp3t{œfieldNameœ:œcustomer_product_infoœ,œidœ:œPrompt-HTp3tœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
          "className": ""
        },
        {
          "source": "TextInput-9osk1",
          "sourceHandle": "{œdataTypeœ:œTextInputœ,œidœ:œTextInput-9osk1œ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}",
          "target": "Prompt-7n6HR",
          "targetHandle": "{œfieldNameœ:œcustomer_organization_infoœ,œidœ:œPrompt-7n6HRœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
          "data": {
            "targetHandle": {
              "fieldName": "customer_organization_info",
              "id": "Prompt-7n6HR",
              "inputTypes": [
                "Message",
                "Text"
              ],
              "type": "str"
            },
            "sourceHandle": {
              "dataType": "TextInput",
              "id": "TextInput-9osk1",
              "name": "text",
              "output_types": [
                "Message"
              ]
            }
          },
          "id": "reactflow__edge-TextInput-9osk1{œdataTypeœ:œTextInputœ,œidœ:œTextInput-9osk1œ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}-Prompt-7n6HR{œfieldNameœ:œcustomer_organization_infoœ,œidœ:œPrompt-7n6HRœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
          "className": "",
          "selected": false
        },
        {
          "source": "TextInput-wSUYp",
          "sourceHandle": "{œdataTypeœ:œTextInputœ,œidœ:œTextInput-wSUYpœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}",
          "target": "Prompt-HTp3t",
          "targetHandle": "{œfieldNameœ:œdata_pointsœ,œidœ:œPrompt-HTp3tœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
          "data": {
            "targetHandle": {
              "fieldName": "data_points",
              "id": "Prompt-HTp3t",
              "inputTypes": [
                "Message",
                "Text"
              ],
              "type": "str"
            },
            "sourceHandle": {
              "dataType": "TextInput",
              "id": "TextInput-wSUYp",
              "name": "text",
              "output_types": [
                "Message"
              ]
            }
          },
          "id": "reactflow__edge-TextInput-wSUYp{œdataTypeœ:œTextInputœ,œidœ:œTextInput-wSUYpœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}-Prompt-HTp3t{œfieldNameœ:œdata_pointsœ,œidœ:œPrompt-HTp3tœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
          "className": ""
        },
        {
          "source": "TextInput-Z5u1h",
          "sourceHandle": "{œdataTypeœ:œTextInputœ,œidœ:œTextInput-Z5u1hœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}",
          "target": "Prompt-7n6HR",
          "targetHandle": "{œfieldNameœ:œcustomer_product_infoœ,œidœ:œPrompt-7n6HRœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
          "data": {
            "targetHandle": {
              "fieldName": "customer_product_info",
              "id": "Prompt-7n6HR",
              "inputTypes": [
                "Message",
                "Text"
              ],
              "type": "str"
            },
            "sourceHandle": {
              "dataType": "TextInput",
              "id": "TextInput-Z5u1h",
              "name": "text",
              "output_types": [
                "Message"
              ]
            }
          },
          "id": "reactflow__edge-TextInput-Z5u1h{œdataTypeœ:œTextInputœ,œidœ:œTextInput-Z5u1hœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}-Prompt-7n6HR{œfieldNameœ:œcustomer_product_infoœ,œidœ:œPrompt-7n6HRœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
          "selected": false,
          "className": ""
        },
        {
          "source": "Prompt-7n6HR",
          "sourceHandle": "{œdataTypeœ:œPromptœ,œidœ:œPrompt-7n6HRœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}",
          "target": "AnthropicModel-TZA59",
          "targetHandle": "{œfieldNameœ:œinput_valueœ,œidœ:œAnthropicModel-TZA59œ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
          "data": {
            "targetHandle": {
              "fieldName": "input_value",
              "id": "AnthropicModel-TZA59",
              "inputTypes": [
                "Message"
              ],
              "type": "str"
            },
            "sourceHandle": {
              "dataType": "Prompt",
              "id": "Prompt-7n6HR",
              "name": "prompt",
              "output_types": [
                "Message"
              ]
            }
          },
          "id": "reactflow__edge-Prompt-7n6HR{œdataTypeœ:œPromptœ,œidœ:œPrompt-7n6HRœ,œnameœ:œpromptœ,œoutput_typesœ:[œMessageœ]}-AnthropicModel-TZA59{œfieldNameœ:œinput_valueœ,œidœ:œAnthropicModel-TZA59œ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
          "className": ""
        },
        {
          "source": "TextInput-G0gCt",
          "sourceHandle": "{œdataTypeœ:œTextInputœ,œidœ:œTextInput-G0gCtœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}",
          "target": "Prompt-7n6HR",
          "targetHandle": "{œfieldNameœ:œprospect_infoœ,œidœ:œPrompt-7n6HRœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
          "data": {
            "targetHandle": {
              "fieldName": "prospect_info",
              "id": "Prompt-7n6HR",
              "inputTypes": [
                "Message",
                "Text"
              ],
              "type": "str"
            },
            "sourceHandle": {
              "dataType": "TextInput",
              "id": "TextInput-G0gCt",
              "name": "text",
              "output_types": [
                "Message"
              ]
            }
          },
          "id": "reactflow__edge-TextInput-G0gCt{œdataTypeœ:œTextInputœ,œidœ:œTextInput-G0gCtœ,œnameœ:œtextœ,œoutput_typesœ:[œMessageœ]}-Prompt-7n6HR{œfieldNameœ:œprospect_infoœ,œidœ:œPrompt-7n6HRœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
          "className": ""
        },
        {
          "source": "AnthropicModel-WHomq",
          "sourceHandle": "{œdataTypeœ:œAnthropicModelœ,œidœ:œAnthropicModel-WHomqœ,œnameœ:œtext_outputœ,œoutput_typesœ:[œMessageœ]}",
          "target": "Prompt-7n6HR",
          "targetHandle": "{œfieldNameœ:œrelevant_datapointsœ,œidœ:œPrompt-7n6HRœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}",
          "data": {
            "targetHandle": {
              "fieldName": "relevant_datapoints",
              "id": "Prompt-7n6HR",
              "inputTypes": [
                "Message",
                "Text"
              ],
              "type": "str"
            },
            "sourceHandle": {
              "dataType": "AnthropicModel",
              "id": "AnthropicModel-WHomq",
              "name": "text_output",
              "output_types": [
                "Message"
              ]
            }
          },
          "id": "reactflow__edge-AnthropicModel-WHomq{œdataTypeœ:œAnthropicModelœ,œidœ:œAnthropicModel-WHomqœ,œnameœ:œtext_outputœ,œoutput_typesœ:[œMessageœ]}-Prompt-7n6HR{œfieldNameœ:œrelevant_datapointsœ,œidœ:œPrompt-7n6HRœ,œinputTypesœ:[œMessageœ,œTextœ],œtypeœ:œstrœ}"
        }
      ],
      "viewport": {
        "x": 2067.9466120440093,
        "y": -47.32236494774696,
        "zoom": 0.5245997206947874
      }
    },
    "date_created": "2024-09-22T13:07:00.695Z",
    "date_updated": "2024-09-22T13:07:00.784Z",
    "status": "Public",
    "sort": null,
    "user_updated": "483d0756-96ef-4822-9900-ff764ce3f4c2",
    "user_created": {
      "username": "rasput1n",
      "first_name": "Krishna",
      "last_name": "Kaipa",
      "id": "483d0756-96ef-4822-9900-ff764ce3f4c2"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:05.077Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 84,
    "converter_version": "1.0.0"
  }
}