{
  "id": "45b96420-6795-4d59-97a8-69c6c73060e3",
  "name": "PDF Generator by Sandeco",
  "description": "Generates a PDF from a given text and saves it in the Downloads folder. (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "COMPONENT",
  "is_component": true,
  "author": {
    "username": "sandeco",
    "first_name": "Sandeco",
    "last_name": "Macedo",
    "id": "3cc35c46-41f0-4f85-9e94-82fbf6a538d5",
    "full_name": "Sandeco Macedo"
  },
  "store_url": "https://www.langflow.store/store/component/45b96420-6795-4d59-97a8-69c6c73060e3",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-09-26T01:16:34.293Z",
    "updated": "2024-09-26T01:16:34.338Z",
    "downloaded": "2025-08-19T17:50:07.259Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "1.0.18",
    "private": false,
    "status": "Public"
  },
  "data": {
    "edges": [],
    "nodes": [
      {
        "data": {
          "type": "PDFGeneratorComponent",
          "node": {
            "template": {
              "_type": "Component",
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "\"\"\"\r\nCriando por Professor Sandeco\r\n\r\nhttps://www.youtube.com/@canalsandeco\r\n\r\n\"\"\"\r\n\r\n\r\n\r\n\r\n\r\nfrom axiestudio.custom import Component  # Importação correta de Component\r\nfrom axiestudio.io import MessageTextInput, Output  # Importação correta para MessageTextInput e Output\r\nfrom axiestudio.schema import Data\r\nfrom fpdf import FPDF  # Usando FPDF para gerar o PDF\r\nimport os\r\n\r\nclass PDFGeneratorComponent(Component):\r\n    display_name = \"PDF Generator\"\r\n    description = \"Generates a PDF from a given text and saves it in the Downloads folder.\"\r\n    icon = \"custom_components\"\r\n    \r\n    inputs = [\r\n        MessageTextInput(\r\n            name=\"pdf_title\",\r\n            display_name=\"PDF Title\",\r\n            info=\"Title of the generated PDF.\",\r\n        ),\r\n        MessageTextInput(\r\n            name=\"text_content\",\r\n            display_name=\"Text Content\",\r\n            info=\"The text content to be included in the PDF.\",\r\n        ),\r\n    ]\r\n\r\n    outputs = [\r\n        Output(display_name=\"PDF Creation Status\", name=\"pdf_status\", method=\"create_pdf\"),\r\n    ]\r\n\r\n    def create_pdf(self) -> Data:\r\n        # Obter inputs: título e conteúdo de texto\r\n        pdf_title = self._attributes.get(\"pdf_title\", \"Untitled\")\r\n        text_content = self._attributes.get(\"text_content\", \"\")\r\n\r\n        # Obter o caminho da pasta Downloads no Windows\r\n        downloads_folder = os.path.join(os.path.expanduser(\"~\"), \"Downloads\")\r\n        pdf_filename = f\"{pdf_title.replace(' ', '_')}.pdf\"\r\n        pdf_path = os.path.join(downloads_folder, pdf_filename)\r\n\r\n        # Criar o PDF usando FPDF com margens ajustadas\r\n        pdf = FPDF()\r\n        pdf.set_left_margin(15)  # Definir a margem esquerda\r\n        pdf.set_right_margin(15)  # Definir a margem direita\r\n        pdf.add_page()\r\n\r\n        # Adicionar título ao PDF\r\n        pdf.set_font(\"Arial\", 'B', 16)\r\n        pdf.cell(0, 10, txt=pdf_title, ln=True, align='C')\r\n\r\n        # Adicionar conteúdo de texto ao PDF com multi_cell para respeitar margens e quebra de linha\r\n        pdf.set_font(\"Arial\", size=12)\r\n        pdf.ln(10)  # Espaçamento entre o título e o texto\r\n\r\n        # Usar multi_cell para quebra de linha automática e ajustar espaçamento entre linhas\r\n        pdf.multi_cell(0, 10, txt=text_content)  # O valor '10' ajusta o espaçamento entre linhas\r\n\r\n        # Salvar o arquivo PDF\r\n        pdf.output(pdf_path)\r\n\r\n        # Abrir o PDF automaticamente no Windows\r\n        try:\r\n            os.startfile(pdf_path)  # Apenas no Windows\r\n        except Exception as e:\r\n            return Data(data={\"status\": f\"Error: {str(e)}\"})\r\n\r\n        # Retornar o status da criação do PDF\r\n        return Data(data={\"status\": f\"PDF created successfully and opened: {pdf_path}\"})\r\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "pdf_title": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "pdf_title",
                "value": "",
                "display_name": "PDF Title",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Title of the generated PDF.",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              },
              "text_content": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "text_content",
                "value": "",
                "display_name": "Text Content",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "The text content to be included in the PDF.",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              }
            },
            "description": "Generates a PDF from a given text and saves it in the Downloads folder.",
            "icon": "custom_components",
            "base_classes": [
              "Data"
            ],
            "display_name": "PDF Generator by Sandeco",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Data"
                ],
                "selected": "Data",
                "name": "pdf_status",
                "display_name": "PDF Creation Status",
                "method": "create_pdf",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "pdf_title",
              "text_content"
            ],
            "beta": false,
            "edited": true,
            "official": false
          },
          "id": "CustomComponent-6g5gl"
        },
        "id": "CustomComponent-6g5gl",
        "position": {
          "x": 0,
          "y": 0
        },
        "type": "genericNode"
      }
    ],
    "viewport": {
      "x": 1,
      "y": 1,
      "zoom": 1
    }
  },
  "metadata": {
    "CustomComponent": {
      "count": 1
    },
    "total": 1
  },
  "original": {
    "id": "45b96420-6795-4d59-97a8-69c6c73060e3",
    "name": "PDF Generator by Sandeco",
    "description": "Generates a PDF from a given text and saves it in the Downloads folder.",
    "is_component": true,
    "liked_by_count": "38",
    "downloads_count": "160",
    "metadata": {
      "CustomComponent": {
        "count": 1
      },
      "total": 1
    },
    "last_tested_version": "1.0.18",
    "private": false,
    "data": {
      "edges": [],
      "nodes": [
        {
          "data": {
            "type": "PDFGeneratorComponent",
            "node": {
              "template": {
                "_type": "Component",
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "\"\"\"\r\nCriando por Professor Sandeco\r\n\r\nhttps://www.youtube.com/@canalsandeco\r\n\r\n\"\"\"\r\n\r\n\r\n\r\n\r\n\r\nfrom axiestudio.custom import Component  # Importação correta de Component\r\nfrom axiestudio.io import MessageTextInput, Output  # Importação correta para MessageTextInput e Output\r\nfrom axiestudio.schema import Data\r\nfrom fpdf import FPDF  # Usando FPDF para gerar o PDF\r\nimport os\r\n\r\nclass PDFGeneratorComponent(Component):\r\n    display_name = \"PDF Generator\"\r\n    description = \"Generates a PDF from a given text and saves it in the Downloads folder.\"\r\n    icon = \"custom_components\"\r\n    \r\n    inputs = [\r\n        MessageTextInput(\r\n            name=\"pdf_title\",\r\n            display_name=\"PDF Title\",\r\n            info=\"Title of the generated PDF.\",\r\n        ),\r\n        MessageTextInput(\r\n            name=\"text_content\",\r\n            display_name=\"Text Content\",\r\n            info=\"The text content to be included in the PDF.\",\r\n        ),\r\n    ]\r\n\r\n    outputs = [\r\n        Output(display_name=\"PDF Creation Status\", name=\"pdf_status\", method=\"create_pdf\"),\r\n    ]\r\n\r\n    def create_pdf(self) -> Data:\r\n        # Obter inputs: título e conteúdo de texto\r\n        pdf_title = self._attributes.get(\"pdf_title\", \"Untitled\")\r\n        text_content = self._attributes.get(\"text_content\", \"\")\r\n\r\n        # Obter o caminho da pasta Downloads no Windows\r\n        downloads_folder = os.path.join(os.path.expanduser(\"~\"), \"Downloads\")\r\n        pdf_filename = f\"{pdf_title.replace(' ', '_')}.pdf\"\r\n        pdf_path = os.path.join(downloads_folder, pdf_filename)\r\n\r\n        # Criar o PDF usando FPDF com margens ajustadas\r\n        pdf = FPDF()\r\n        pdf.set_left_margin(15)  # Definir a margem esquerda\r\n        pdf.set_right_margin(15)  # Definir a margem direita\r\n        pdf.add_page()\r\n\r\n        # Adicionar título ao PDF\r\n        pdf.set_font(\"Arial\", 'B', 16)\r\n        pdf.cell(0, 10, txt=pdf_title, ln=True, align='C')\r\n\r\n        # Adicionar conteúdo de texto ao PDF com multi_cell para respeitar margens e quebra de linha\r\n        pdf.set_font(\"Arial\", size=12)\r\n        pdf.ln(10)  # Espaçamento entre o título e o texto\r\n\r\n        # Usar multi_cell para quebra de linha automática e ajustar espaçamento entre linhas\r\n        pdf.multi_cell(0, 10, txt=text_content)  # O valor '10' ajusta o espaçamento entre linhas\r\n\r\n        # Salvar o arquivo PDF\r\n        pdf.output(pdf_path)\r\n\r\n        # Abrir o PDF automaticamente no Windows\r\n        try:\r\n            os.startfile(pdf_path)  # Apenas no Windows\r\n        except Exception as e:\r\n            return Data(data={\"status\": f\"Error: {str(e)}\"})\r\n\r\n        # Retornar o status da criação do PDF\r\n        return Data(data={\"status\": f\"PDF created successfully and opened: {pdf_path}\"})\r\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "pdf_title": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "pdf_title",
                  "value": "",
                  "display_name": "PDF Title",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "Title of the generated PDF.",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MessageTextInput"
                },
                "text_content": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "text_content",
                  "value": "",
                  "display_name": "Text Content",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "The text content to be included in the PDF.",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MessageTextInput"
                }
              },
              "description": "Generates a PDF from a given text and saves it in the Downloads folder.",
              "icon": "custom_components",
              "base_classes": [
                "Data"
              ],
              "display_name": "PDF Generator by Sandeco",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Data"
                  ],
                  "selected": "Data",
                  "name": "pdf_status",
                  "display_name": "PDF Creation Status",
                  "method": "create_pdf",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "pdf_title",
                "text_content"
              ],
              "beta": false,
              "edited": true,
              "official": false
            },
            "id": "CustomComponent-6g5gl"
          },
          "id": "CustomComponent-6g5gl",
          "position": {
            "x": 0,
            "y": 0
          },
          "type": "genericNode"
        }
      ],
      "viewport": {
        "x": 1,
        "y": 1,
        "zoom": 1
      }
    },
    "date_created": "2024-09-26T01:16:34.293Z",
    "date_updated": "2024-09-26T01:16:34.338Z",
    "status": "Public",
    "sort": null,
    "user_updated": "3cc35c46-41f0-4f85-9e94-82fbf6a538d5",
    "user_created": {
      "username": "sandeco",
      "first_name": "Sandeco",
      "last_name": "Macedo",
      "id": "3cc35c46-41f0-4f85-9e94-82fbf6a538d5"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:09.869Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 6,
    "converter_version": "1.0.0"
  }
}