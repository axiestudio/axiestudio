{
  "id": "663cc030-4292-4019-a0e8-55f5106cca16",
  "name": "Image-Generator",
  "description": "Generate image from text.\n\nFollow instructions:\n\nhttps://github.com/Rhogger/Image-Generator (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "COMPONENT",
  "is_component": true,
  "author": {
    "username": "Rhogger",
    "first_name": "Rhogger",
    "last_name": "FS",
    "id": "106ba015-f09e-45b6-aac7-79fd909d4564",
    "full_name": "Rhogger FS"
  },
  "store_url": "https://www.langflow.store/store/component/663cc030-4292-4019-a0e8-55f5106cca16",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-09-28T03:53:21.934Z",
    "updated": "2024-09-28T03:56:43.472Z",
    "downloaded": "2025-08-19T17:50:07.021Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "1.0.18",
    "private": false,
    "status": "Public"
  },
  "data": {
    "edges": [],
    "nodes": [
      {
        "data": {
          "type": "ImageGeneratorComponent",
          "node": {
            "template": {
              "_type": "Component",
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio.custom import Component\r\nfrom axiestudio.inputs import MessageTextInput, IntInput\r\nfrom axiestudio.template import Output\r\nfrom axiestudio.schema.message import Message  # Retorno padrão do Langflow\r\nfrom diffusers import StableDiffusionPipeline\r\nimport torch\r\nfrom io import BytesIO\r\nimport base64\r\n\r\nclass ImageGeneratorComponent(Component):\r\n    display_name = \"Image Generator\"\r\n    description = \"Generate image from text.\"\r\n    icon = \"image\"\r\n\r\n    inputs = [\r\n        MessageTextInput(\r\n            name=\"prompt\",\r\n            display_name=\"Prompt\",\r\n            info=\"Text input for generate image.\",\r\n        ),\r\n        IntInput(\r\n            name=\"width\",\r\n            display_name=\"Image Width\",\r\n            info=\"Defaults = 512\",\r\n        ),\r\n        IntInput(\r\n            name=\"height\",\r\n            display_name=\"Image Height\",\r\n            info=\"Defaults = 512\",\r\n        ),\r\n    ]\r\n\r\n    outputs = [\r\n        Output(display_name=\"Base64 Image\", name=\"base64_image\", method=\"generate_image\"),\r\n    ]\r\n\r\n    def load_model(self):\r\n        if not hasattr(self, 'pipe'):\r\n            model_id = \"CompVis/stable-diffusion-v1-4\"\r\n            self.pipe = StableDiffusionPipeline.from_pretrained(\r\n                model_id,\r\n                torch_dtype=torch.float16\r\n            )\r\n            device = \"cuda\" if torch.cuda.is_available() else \"cpu\"\r\n            self.pipe.to(device)\r\n            self.device = device\r\n\r\n    def generate_image(self) -> Message:\r\n        prompt = self.prompt\r\n        width = self.width or 512\r\n        height = self.height or 512\r\n\r\n        self.load_model()\r\n\r\n        with torch.autocast(self.device):\r\n            image = self.pipe(prompt, height=height, width=width).images[0]\r\n\r\n        buffered = BytesIO()\r\n        image.save(buffered, format=\"PNG\")\r\n\r\n        image_base64 = base64.b64encode(buffered.getvalue()).decode('utf-8')\r\n\r\n        return Message(text=image_base64)\r\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "height": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "height",
                "value": "",
                "display_name": "Image Height",
                "advanced": false,
                "dynamic": false,
                "info": "Defaults = 512",
                "title_case": false,
                "type": "int",
                "_input_type": "IntInput"
              },
              "prompt": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "prompt",
                "value": "Uma espada cravada em uma pedra em um penhasco cheio de cactos",
                "display_name": "Prompt",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Text input for generate image.",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              },
              "width": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "width",
                "value": "",
                "display_name": "Image Width",
                "advanced": false,
                "dynamic": false,
                "info": "Defaults = 512",
                "title_case": false,
                "type": "int",
                "_input_type": "IntInput"
              }
            },
            "description": "Generate image from text.\n\nFollow instructions:\n\nhttps://github.com/Rhogger/Image-Generator",
            "icon": "image",
            "base_classes": [
              "Message"
            ],
            "display_name": "Image-Generator",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "base64_image",
                "display_name": "Base64 Image",
                "method": "generate_image",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "prompt",
              "width",
              "height"
            ],
            "beta": false,
            "edited": true,
            "lf_version": "1.0.18",
            "official": false
          },
          "id": "CustomComponent-aQYKv"
        },
        "id": "CustomComponent-aQYKv",
        "position": {
          "x": 0,
          "y": 0
        },
        "type": "genericNode"
      }
    ],
    "viewport": {
      "x": 1,
      "y": 1,
      "zoom": 1
    }
  },
  "metadata": {
    "CustomComponent": {
      "count": 1
    },
    "total": 1
  },
  "original": {
    "id": "663cc030-4292-4019-a0e8-55f5106cca16",
    "name": "Image-Generator",
    "description": "Generate image from text.\n\nFollow instructions:\n\nhttps://github.com/Rhogger/Image-Generator",
    "is_component": true,
    "liked_by_count": "10",
    "downloads_count": "101",
    "metadata": {
      "CustomComponent": {
        "count": 1
      },
      "total": 1
    },
    "last_tested_version": "1.0.18",
    "private": false,
    "data": {
      "edges": [],
      "nodes": [
        {
          "data": {
            "type": "ImageGeneratorComponent",
            "node": {
              "template": {
                "_type": "Component",
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio.custom import Component\r\nfrom axiestudio.inputs import MessageTextInput, IntInput\r\nfrom axiestudio.template import Output\r\nfrom axiestudio.schema.message import Message  # Retorno padrão do Langflow\r\nfrom diffusers import StableDiffusionPipeline\r\nimport torch\r\nfrom io import BytesIO\r\nimport base64\r\n\r\nclass ImageGeneratorComponent(Component):\r\n    display_name = \"Image Generator\"\r\n    description = \"Generate image from text.\"\r\n    icon = \"image\"\r\n\r\n    inputs = [\r\n        MessageTextInput(\r\n            name=\"prompt\",\r\n            display_name=\"Prompt\",\r\n            info=\"Text input for generate image.\",\r\n        ),\r\n        IntInput(\r\n            name=\"width\",\r\n            display_name=\"Image Width\",\r\n            info=\"Defaults = 512\",\r\n        ),\r\n        IntInput(\r\n            name=\"height\",\r\n            display_name=\"Image Height\",\r\n            info=\"Defaults = 512\",\r\n        ),\r\n    ]\r\n\r\n    outputs = [\r\n        Output(display_name=\"Base64 Image\", name=\"base64_image\", method=\"generate_image\"),\r\n    ]\r\n\r\n    def load_model(self):\r\n        if not hasattr(self, 'pipe'):\r\n            model_id = \"CompVis/stable-diffusion-v1-4\"\r\n            self.pipe = StableDiffusionPipeline.from_pretrained(\r\n                model_id,\r\n                torch_dtype=torch.float16\r\n            )\r\n            device = \"cuda\" if torch.cuda.is_available() else \"cpu\"\r\n            self.pipe.to(device)\r\n            self.device = device\r\n\r\n    def generate_image(self) -> Message:\r\n        prompt = self.prompt\r\n        width = self.width or 512\r\n        height = self.height or 512\r\n\r\n        self.load_model()\r\n\r\n        with torch.autocast(self.device):\r\n            image = self.pipe(prompt, height=height, width=width).images[0]\r\n\r\n        buffered = BytesIO()\r\n        image.save(buffered, format=\"PNG\")\r\n\r\n        image_base64 = base64.b64encode(buffered.getvalue()).decode('utf-8')\r\n\r\n        return Message(text=image_base64)\r\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "height": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "height",
                  "value": "",
                  "display_name": "Image Height",
                  "advanced": false,
                  "dynamic": false,
                  "info": "Defaults = 512",
                  "title_case": false,
                  "type": "int",
                  "_input_type": "IntInput"
                },
                "prompt": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "prompt",
                  "value": "Uma espada cravada em uma pedra em um penhasco cheio de cactos",
                  "display_name": "Prompt",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "Text input for generate image.",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MessageTextInput"
                },
                "width": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "width",
                  "value": "",
                  "display_name": "Image Width",
                  "advanced": false,
                  "dynamic": false,
                  "info": "Defaults = 512",
                  "title_case": false,
                  "type": "int",
                  "_input_type": "IntInput"
                }
              },
              "description": "Generate image from text.\n\nFollow instructions:\n\nhttps://github.com/Rhogger/Image-Generator",
              "icon": "image",
              "base_classes": [
                "Message"
              ],
              "display_name": "Image-Generator",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "base64_image",
                  "display_name": "Base64 Image",
                  "method": "generate_image",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "prompt",
                "width",
                "height"
              ],
              "beta": false,
              "edited": true,
              "lf_version": "1.0.18",
              "official": false
            },
            "id": "CustomComponent-aQYKv"
          },
          "id": "CustomComponent-aQYKv",
          "position": {
            "x": 0,
            "y": 0
          },
          "type": "genericNode"
        }
      ],
      "viewport": {
        "x": 1,
        "y": 1,
        "zoom": 1
      }
    },
    "date_created": "2024-09-28T03:53:21.934Z",
    "date_updated": "2024-09-28T03:56:43.472Z",
    "status": "Public",
    "sort": null,
    "user_updated": "106ba015-f09e-45b6-aac7-79fd909d4564",
    "user_created": {
      "username": "Rhogger",
      "first_name": "Rhogger",
      "last_name": "FS",
      "id": "106ba015-f09e-45b6-aac7-79fd909d4564"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:10.399Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 8,
    "converter_version": "1.0.0"
  }
}