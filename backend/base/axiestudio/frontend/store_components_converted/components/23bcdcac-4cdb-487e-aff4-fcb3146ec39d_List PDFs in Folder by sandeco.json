{
  "id": "23bcdcac-4cdb-487e-aff4-fcb3146ec39d",
  "name": "List PDFs in Folder by sandeco",
  "description": "Lists all PDF files in a specified folder. (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "COMPONENT",
  "is_component": true,
  "author": {
    "username": "sandeco",
    "first_name": "Sandeco",
    "last_name": "Macedo",
    "id": "3cc35c46-41f0-4f85-9e94-82fbf6a538d5",
    "full_name": "Sandeco Macedo"
  },
  "store_url": "https://www.langflow.store/store/component/23bcdcac-4cdb-487e-aff4-fcb3146ec39d",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-09-26T22:17:18.089Z",
    "updated": "2024-09-26T22:17:18.117Z",
    "downloaded": "2025-08-19T17:50:06.990Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "1.0.18",
    "private": false,
    "status": "Public"
  },
  "data": {
    "edges": [],
    "nodes": [
      {
        "data": {
          "type": "ListPDFsComponent",
          "node": {
            "template": {
              "_type": "Component",
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio.custom import Component\r\nfrom axiestudio.inputs import StrInput, MultilineInput, SecretStrInput, IntInput, DropdownInput\r\nfrom axiestudio.template import Output, Input\r\nfrom axiestudio.schema.message import Message\r\n\r\nclass ListPDFsComponent(Component):\r\n    display_name = \"List PDF Files\"\r\n    description = \"Lists all PDF files in a specified folder.\"\r\n    icon = \"folder\"\r\n\r\n    inputs = [\r\n\r\n        MultilineInput(\r\n            name=\"folder_path\",\r\n            display_name=\"Folder Path\",\r\n            info=\"Path of the folder to scan for PDF files.\",\r\n\r\n        ),\r\n    ]\r\n\r\n\r\n\r\n    outputs = [\r\n        Output(display_name=\"PDF Files\", name=\"pdf_files_output\", method=\"list_pdfs\"),\r\n    ]\r\n\r\n    def list_pdfs(self) -> Message:\r\n        \"\"\"\r\n        Process the user inputs and return a Message object.\r\n\r\n        Returns:\r\n            Message: A Message object containing the processed information.\r\n        \"\"\"\r\n        \r\n        folder_path = self.folder_path\r\n        \r\n        # Verifica se o caminho da pasta existe\r\n        if not os.path.exists(folder_path):\r\n            return Message(content=\"Error: The folder does not exist.\")\r\n        \r\n        # Lista todos os arquivos na pasta e filtra os PDFs\r\n        \r\n        pdf_files_string = \"\"\r\n        try:\r\n            pdf_files = [f for f in os.listdir(folder_path) if f.endswith(\".pdf\")]\r\n            \r\n            # Converte a lista de PDFs para uma string, separada por novas linhas\r\n            pdf_files_string = \"\\n\".join(pdf_files)  # Juntar a lista de PDFs com quebras de linha\r\n            \r\n            # Retorna a saída como um Message encapsulado\r\n            processed_text = pdf_files_string\r\n            return Message(text=processed_text)\r\n        except AttributeError as e:\r\n            return Message(text=f\"Error processing inputs: {str(e)}\")\r\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "folder_path": {
                "trace_as_input": true,
                "multiline": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "folder_path",
                "value": "c:\\pdf",
                "display_name": "Folder Path",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Path of the folder to scan for PDF files.",
                "title_case": false,
                "type": "str",
                "_input_type": "MultilineInput"
              }
            },
            "description": "Lists all PDF files in a specified folder.",
            "icon": "folder",
            "base_classes": [
              "Message"
            ],
            "display_name": "List PDFs in Folder by sandeco",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "pdf_files_output",
                "display_name": "PDF Files",
                "method": "list_pdfs",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "folder_path"
            ],
            "beta": false,
            "edited": true,
            "lf_version": "1.0.18",
            "official": false
          },
          "id": "CustomComponent-pjQAZ"
        },
        "id": "CustomComponent-pjQAZ",
        "position": {
          "x": 0,
          "y": 0
        },
        "type": "genericNode"
      }
    ],
    "viewport": {
      "x": 1,
      "y": 1,
      "zoom": 1
    }
  },
  "metadata": {
    "CustomComponent": {
      "count": 1
    },
    "total": 1
  },
  "original": {
    "id": "23bcdcac-4cdb-487e-aff4-fcb3146ec39d",
    "name": "List PDFs in Folder by sandeco",
    "description": "Lists all PDF files in a specified folder.",
    "is_component": true,
    "liked_by_count": "4",
    "downloads_count": "44",
    "metadata": {
      "CustomComponent": {
        "count": 1
      },
      "total": 1
    },
    "last_tested_version": "1.0.18",
    "private": false,
    "data": {
      "edges": [],
      "nodes": [
        {
          "data": {
            "type": "ListPDFsComponent",
            "node": {
              "template": {
                "_type": "Component",
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio.custom import Component\r\nfrom axiestudio.inputs import StrInput, MultilineInput, SecretStrInput, IntInput, DropdownInput\r\nfrom axiestudio.template import Output, Input\r\nfrom axiestudio.schema.message import Message\r\n\r\nclass ListPDFsComponent(Component):\r\n    display_name = \"List PDF Files\"\r\n    description = \"Lists all PDF files in a specified folder.\"\r\n    icon = \"folder\"\r\n\r\n    inputs = [\r\n\r\n        MultilineInput(\r\n            name=\"folder_path\",\r\n            display_name=\"Folder Path\",\r\n            info=\"Path of the folder to scan for PDF files.\",\r\n\r\n        ),\r\n    ]\r\n\r\n\r\n\r\n    outputs = [\r\n        Output(display_name=\"PDF Files\", name=\"pdf_files_output\", method=\"list_pdfs\"),\r\n    ]\r\n\r\n    def list_pdfs(self) -> Message:\r\n        \"\"\"\r\n        Process the user inputs and return a Message object.\r\n\r\n        Returns:\r\n            Message: A Message object containing the processed information.\r\n        \"\"\"\r\n        \r\n        folder_path = self.folder_path\r\n        \r\n        # Verifica se o caminho da pasta existe\r\n        if not os.path.exists(folder_path):\r\n            return Message(content=\"Error: The folder does not exist.\")\r\n        \r\n        # Lista todos os arquivos na pasta e filtra os PDFs\r\n        \r\n        pdf_files_string = \"\"\r\n        try:\r\n            pdf_files = [f for f in os.listdir(folder_path) if f.endswith(\".pdf\")]\r\n            \r\n            # Converte a lista de PDFs para uma string, separada por novas linhas\r\n            pdf_files_string = \"\\n\".join(pdf_files)  # Juntar a lista de PDFs com quebras de linha\r\n            \r\n            # Retorna a saída como um Message encapsulado\r\n            processed_text = pdf_files_string\r\n            return Message(text=processed_text)\r\n        except AttributeError as e:\r\n            return Message(text=f\"Error processing inputs: {str(e)}\")\r\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "folder_path": {
                  "trace_as_input": true,
                  "multiline": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "folder_path",
                  "value": "c:\\pdf",
                  "display_name": "Folder Path",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "Path of the folder to scan for PDF files.",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MultilineInput"
                }
              },
              "description": "Lists all PDF files in a specified folder.",
              "icon": "folder",
              "base_classes": [
                "Message"
              ],
              "display_name": "List PDFs in Folder by sandeco",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "pdf_files_output",
                  "display_name": "PDF Files",
                  "method": "list_pdfs",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "folder_path"
              ],
              "beta": false,
              "edited": true,
              "lf_version": "1.0.18",
              "official": false
            },
            "id": "CustomComponent-pjQAZ"
          },
          "id": "CustomComponent-pjQAZ",
          "position": {
            "x": 0,
            "y": 0
          },
          "type": "genericNode"
        }
      ],
      "viewport": {
        "x": 1,
        "y": 1,
        "zoom": 1
      }
    },
    "date_created": "2024-09-26T22:17:18.089Z",
    "date_updated": "2024-09-26T22:17:18.117Z",
    "status": "Public",
    "sort": null,
    "user_updated": "3cc35c46-41f0-4f85-9e94-82fbf6a538d5",
    "user_created": {
      "username": "sandeco",
      "first_name": "Sandeco",
      "last_name": "Macedo",
      "id": "3cc35c46-41f0-4f85-9e94-82fbf6a538d5"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:09.276Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 8,
    "converter_version": "1.0.0"
  }
}