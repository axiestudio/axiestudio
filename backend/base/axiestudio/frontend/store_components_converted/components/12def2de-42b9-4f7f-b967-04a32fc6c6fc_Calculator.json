{
  "id": "12def2de-42b9-4f7f-b967-04a32fc6c6fc",
  "name": "Calculator",
  "description": "A Calculator Tool that parses mathematical expressions, performs calculations, and returns the calculated values. (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "COMPONENT",
  "is_component": true,
  "author": {
    "username": "viniciossilva3",
    "first_name": "Vinicios",
    "last_name": "Batista Da Silva",
    "id": "6a3a88e2-cc6b-4f37-aebb-a747c97c7489",
    "full_name": "Vinicios Batista Da Silva"
  },
  "store_url": "https://www.langflow.store/store/component/12def2de-42b9-4f7f-b967-04a32fc6c6fc",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-09-02T15:45:23.949Z",
    "updated": "2024-09-13T19:43:39.883Z",
    "downloaded": "2025-08-19T17:50:06.639Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "1.0.18",
    "private": false,
    "status": "Public"
  },
  "data": {
    "edges": [],
    "nodes": [
      {
        "data": {
          "type": "CalculatorComponent",
          "node": {
            "template": {
              "_type": "Component",
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from langchain_core.tools import Tool\nfrom axiestudio.base.langchain_utilities.model import LCToolComponent\nfrom axiestudio.inputs import MultilineInput\nfrom axiestudio.schema import Data\nimport sympy as sp\n\nclass CalculatorComponent(LCToolComponent):\n    display_name = \"CalculatorComponent\"\n    description = \"A Calculator Tool that parses mathematical expressions, performs calculations, and returns the calculated values.\"\n    name = \"CalculatorComponent\"\n    icon = \"calculator\"\n\n    inputs = [\n        MultilineInput(\n         name=\"input_value\",\n         display_name=\"Input\",\n         value=\"1 + 1\"\n        ),\n    ]\n    \n    outputs = [\n        Output(name=\"calculator_output_data\", display_name=\"Data\", method=\"run_model\"),\n        Output(name=\"calculator_output_tool\", display_name=\"Tool\", method=\"build_tool\"),\n    ]\n\n    def run_model(self) -> list[Data]:\n        \"\"\"\n        Run model and execute the functions and return the output.\n        \"\"\"\n        result = self.calc_math_expressions(self.input_value)\n        # self.status = result\n        return Data(data={\n         \"Result\": result,\n        })\n\n    def build_tool(self) -> Tool | Sequence[Tool]:\n        \"\"\"\n        Build the tool.\n        \"\"\"\n        return Tool(\n         name=\"calculator_tool\",\n         func=self.calc_math_expressions,\n         description=\"Answers all mathematical questions.\" \n        )    \n\n    def calc_math_expressions(self, expression: str) -> str:\n        \"\"\"\n        Calculate the expressions using sympy.\n        \"\"\"\n        try:\n         result = sp.sympify(expression)\n         return str(f\"\\nCalculation performed: {expression}\\nResult: {result}\\n\")\n        except sp.SympifyError as e:\n         raise ValueError(\"Error while calculating the expression: \" + str(e))",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "input_value": {
                "trace_as_input": true,
                "multiline": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "input_value",
                "value": "1+1",
                "display_name": "Input",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str",
                "_input_type": "MultilineInput"
              }
            },
            "description": "A Calculator Tool that parses mathematical expressions, performs calculations, and returns the calculated values.",
            "icon": "calculator",
            "base_classes": [
              "Data",
              "Tool"
            ],
            "display_name": "Calculator",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Data"
                ],
                "selected": "Data",
                "name": "calculator_output_data",
                "display_name": "Data",
                "method": "run_model",
                "value": "__UNDEFINED__",
                "cache": true
              },
              {
                "types": [
                  "Tool"
                ],
                "selected": "Tool",
                "name": "calculator_output_tool",
                "display_name": "Tool",
                "method": "build_tool",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "input_value"
            ],
            "beta": false,
            "edited": true,
            "official": false,
            "lf_version": "1.0.18"
          },
          "id": "CalculatorComponent-zs7LY"
        },
        "id": "CalculatorComponent-zs7LY",
        "position": {
          "x": 0,
          "y": 0
        },
        "type": "genericNode"
      }
    ],
    "viewport": {
      "x": 1,
      "y": 1,
      "zoom": 1
    }
  },
  "metadata": {
    "CalculatorComponent": {
      "count": 1
    },
    "total": 1
  },
  "original": {
    "id": "12def2de-42b9-4f7f-b967-04a32fc6c6fc",
    "name": "Calculator",
    "description": "A Calculator Tool that parses mathematical expressions, performs calculations, and returns the calculated values.",
    "is_component": true,
    "liked_by_count": "3",
    "downloads_count": "65",
    "metadata": {
      "CalculatorComponent": {
        "count": 1
      },
      "total": 1
    },
    "last_tested_version": "1.0.18",
    "private": false,
    "data": {
      "edges": [],
      "nodes": [
        {
          "data": {
            "type": "CalculatorComponent",
            "node": {
              "template": {
                "_type": "Component",
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from langchain_core.tools import Tool\nfrom axiestudio.base.langchain_utilities.model import LCToolComponent\nfrom axiestudio.inputs import MultilineInput\nfrom axiestudio.schema import Data\nimport sympy as sp\n\nclass CalculatorComponent(LCToolComponent):\n    display_name = \"CalculatorComponent\"\n    description = \"A Calculator Tool that parses mathematical expressions, performs calculations, and returns the calculated values.\"\n    name = \"CalculatorComponent\"\n    icon = \"calculator\"\n\n    inputs = [\n        MultilineInput(\n         name=\"input_value\",\n         display_name=\"Input\",\n         value=\"1 + 1\"\n        ),\n    ]\n    \n    outputs = [\n        Output(name=\"calculator_output_data\", display_name=\"Data\", method=\"run_model\"),\n        Output(name=\"calculator_output_tool\", display_name=\"Tool\", method=\"build_tool\"),\n    ]\n\n    def run_model(self) -> list[Data]:\n        \"\"\"\n        Run model and execute the functions and return the output.\n        \"\"\"\n        result = self.calc_math_expressions(self.input_value)\n        # self.status = result\n        return Data(data={\n         \"Result\": result,\n        })\n\n    def build_tool(self) -> Tool | Sequence[Tool]:\n        \"\"\"\n        Build the tool.\n        \"\"\"\n        return Tool(\n         name=\"calculator_tool\",\n         func=self.calc_math_expressions,\n         description=\"Answers all mathematical questions.\" \n        )    \n\n    def calc_math_expressions(self, expression: str) -> str:\n        \"\"\"\n        Calculate the expressions using sympy.\n        \"\"\"\n        try:\n         result = sp.sympify(expression)\n         return str(f\"\\nCalculation performed: {expression}\\nResult: {result}\\n\")\n        except sp.SympifyError as e:\n         raise ValueError(\"Error while calculating the expression: \" + str(e))",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "input_value": {
                  "trace_as_input": true,
                  "multiline": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "input_value",
                  "value": "1+1",
                  "display_name": "Input",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MultilineInput"
                }
              },
              "description": "A Calculator Tool that parses mathematical expressions, performs calculations, and returns the calculated values.",
              "icon": "calculator",
              "base_classes": [
                "Data",
                "Tool"
              ],
              "display_name": "Calculator",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Data"
                  ],
                  "selected": "Data",
                  "name": "calculator_output_data",
                  "display_name": "Data",
                  "method": "run_model",
                  "value": "__UNDEFINED__",
                  "cache": true
                },
                {
                  "types": [
                    "Tool"
                  ],
                  "selected": "Tool",
                  "name": "calculator_output_tool",
                  "display_name": "Tool",
                  "method": "build_tool",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "input_value"
              ],
              "beta": false,
              "edited": true,
              "official": false,
              "lf_version": "1.0.18"
            },
            "id": "CalculatorComponent-zs7LY"
          },
          "id": "CalculatorComponent-zs7LY",
          "position": {
            "x": 0,
            "y": 0
          },
          "type": "genericNode"
        }
      ],
      "viewport": {
        "x": 1,
        "y": 1,
        "zoom": 1
      }
    },
    "date_created": "2024-09-02T15:45:23.949Z",
    "date_updated": "2024-09-13T19:43:39.883Z",
    "status": "Public",
    "sort": null,
    "user_updated": "6a3a88e2-cc6b-4f37-aebb-a747c97c7489",
    "user_created": {
      "username": "viniciossilva3",
      "first_name": "Vinicios",
      "last_name": "Batista Da Silva",
      "id": "6a3a88e2-cc6b-4f37-aebb-a747c97c7489"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:08.984Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 6,
    "converter_version": "1.0.0"
  }
}