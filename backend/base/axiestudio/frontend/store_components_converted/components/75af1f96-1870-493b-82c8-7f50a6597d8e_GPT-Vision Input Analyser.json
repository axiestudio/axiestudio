{
  "id": "75af1f96-1870-493b-82c8-7f50a6597d8e",
  "name": "GPT-Vision Input Analyser",
  "description": "This component process an image with a prompt by the user to produce information about the input image. (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "COMPONENT",
  "is_component": true,
  "author": {
    "username": "joaoguilhermeS",
    "first_name": "João",
    "last_name": "Oliveira",
    "id": "94b2e207-1a44-4905-856c-4f5a69c168ce",
    "full_name": "João Oliveira"
  },
  "store_url": "https://www.langflow.store/store/component/75af1f96-1870-493b-82c8-7f50a6597d8e",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-03-16T03:15:17.397Z",
    "updated": "2024-06-05T19:44:14.791Z",
    "downloaded": "2025-08-19T17:50:05.199Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "1.0.0a45",
    "private": false,
    "status": "Public"
  },
  "data": {
    "edges": [],
    "nodes": [
      {
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "uploaded_file": {
                "type": "file",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [
                  ".jpg",
                  ".png",
                  ".jpeg"
                ],
                "file_path": "",
                "password": false,
                "name": "uploaded_file",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "value": ""
              },
              "MaxTokens": {
                "type": "int",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "MaxTokens",
                "display_name": "MaxTokens",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "value": "300"
              },
              "OpenAIKey": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": true,
                "name": "OpenAIKey",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": ""
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio import CustomComponent\nfrom axiestudio.field_typing import Data\n\nfrom axiestudio import CustomComponent\nimport subprocess\nimport sys\nimport base64\nfrom tempfile import NamedTemporaryFile\nimport requests\n\ndef install(package):\n    subprocess.check_call([sys.executable, \"-m\", \"pip\", \"install\", package])\n    return 1\n    \ninstall(\"openai\")\n\nclass FileUploadComponent(CustomComponent):\n    display_name = \"GPT-Vision Input Analyser\"\n    description = \"This component process an image with a prompt by the user to produce information about the input image.\"\n    import assemblyai as aai\n    \n    def build_config(self):\n        return {\n            'uploaded_file': {\n                \"suffixes\": ['.jpg', '.png', '.jpeg'],\n                'field_type': 'file', \n                'file_types': ['jpg', 'png', 'jpeg'],\n                'required': True\n            },\n            \"model\": {\n                \"display_name\": \"model\",\n                \"advanced\": False,\n                \"required\": True,\n                \"options\": [\n                    \"gpt-4-vision-preview\",\n                ],\n            },\n            \"MaxTokens\": {\n                \"display_name\": \"MaxTokens\",\n                \"advanced\": False,\n                \"required\": True,\n                \"default\": 300,\n            },\n            \"OpenAIKey\":{\n                \"password\": True\n            }\n        }\n    \n    def build(self, uploaded_file: bytes, model: str, prompt: str, OpenAIKey: str, MaxTokens: int) -> str:\n        from openai import OpenAI\n        client = OpenAI(\n            api_key=OpenAIKey\n        )\n        \n        with open(uploaded_file, 'rb') as file:\n            file_contents = file.read()\n        b64_contents = base64.b64encode(file_contents).decode('utf-8')\n        \n        \n        headers = {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": f\"Bearer {OpenAIKey}\"\n        }\n        \n        payload = {\n        \"model\": model,\n        \"messages\": [\n            {\n              \"role\": \"user\",\n              \"content\": [\n                {\n                  \"type\": \"text\",\n                  \"text\": prompt\n                },\n                {\n                  \"type\": \"image_url\",\n                  \"image_url\": {\n                    \"url\": f\"data:image/jpeg;base64,{b64_contents}\"\n                  }\n                }\n              ]\n            }\n          ],\n          \"max_tokens\": MaxTokens\n        }\n\n        response = requests.post(\"https://api.openai.com/v1/chat/completions\", headers=headers, json=payload)\n        return str(response.json()['choices'][0]['message']['content'])",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "model": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "options": [
                  "gpt-4-vision-preview"
                ],
                "name": "model",
                "display_name": "model",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "gpt-4-vision-preview"
              },
              "prompt": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "prompt",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "Quantos camarões tem na imagem?"
              },
              "_type": "CustomComponent"
            },
            "description": "This component process an image with a prompt by the user to produce information about the input image.",
            "base_classes": [
              "object",
              "str",
              "Text"
            ],
            "display_name": "GPT-Vision Input Analyser",
            "documentation": "",
            "custom_fields": {
              "uploaded_file": null,
              "model": null,
              "prompt": null,
              "OpenAIKey": null,
              "MaxTokens": null
            },
            "output_types": [
              "Text"
            ],
            "field_formatters": {},
            "frozen": false,
            "field_order": [],
            "beta": false,
            "official": false
          },
          "id": "CustomComponent-UAL6e",
          "description": "This component process an image with a prompt by the user to produce information about the input image.",
          "display_name": "GPT-Vision Input Analyser"
        },
        "id": "CustomComponent-UAL6e",
        "position": {
          "x": 0,
          "y": 0
        },
        "type": "genericNode"
      }
    ],
    "viewport": {
      "x": 1,
      "y": 1,
      "zoom": 1
    }
  },
  "metadata": {
    "CustomComponent": {
      "count": 1
    },
    "total": 1
  },
  "original": {
    "id": "75af1f96-1870-493b-82c8-7f50a6597d8e",
    "name": "GPT-Vision Input Analyser",
    "description": "This component process an image with a prompt by the user to produce information about the input image.",
    "is_component": true,
    "liked_by_count": "86",
    "downloads_count": "609",
    "metadata": {
      "CustomComponent": {
        "count": 1
      },
      "total": 1
    },
    "last_tested_version": "1.0.0a45",
    "private": false,
    "data": {
      "edges": [],
      "nodes": [
        {
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "uploaded_file": {
                  "type": "file",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [
                    ".jpg",
                    ".png",
                    ".jpeg"
                  ],
                  "file_path": "",
                  "password": false,
                  "name": "uploaded_file",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "value": ""
                },
                "MaxTokens": {
                  "type": "int",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "MaxTokens",
                  "display_name": "MaxTokens",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "value": "300"
                },
                "OpenAIKey": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": true,
                  "name": "OpenAIKey",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": ""
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio import CustomComponent\nfrom axiestudio.field_typing import Data\n\nfrom axiestudio import CustomComponent\nimport subprocess\nimport sys\nimport base64\nfrom tempfile import NamedTemporaryFile\nimport requests\n\ndef install(package):\n    subprocess.check_call([sys.executable, \"-m\", \"pip\", \"install\", package])\n    return 1\n    \ninstall(\"openai\")\n\nclass FileUploadComponent(CustomComponent):\n    display_name = \"GPT-Vision Input Analyser\"\n    description = \"This component process an image with a prompt by the user to produce information about the input image.\"\n    import assemblyai as aai\n    \n    def build_config(self):\n        return {\n            'uploaded_file': {\n                \"suffixes\": ['.jpg', '.png', '.jpeg'],\n                'field_type': 'file', \n                'file_types': ['jpg', 'png', 'jpeg'],\n                'required': True\n            },\n            \"model\": {\n                \"display_name\": \"model\",\n                \"advanced\": False,\n                \"required\": True,\n                \"options\": [\n                    \"gpt-4-vision-preview\",\n                ],\n            },\n            \"MaxTokens\": {\n                \"display_name\": \"MaxTokens\",\n                \"advanced\": False,\n                \"required\": True,\n                \"default\": 300,\n            },\n            \"OpenAIKey\":{\n                \"password\": True\n            }\n        }\n    \n    def build(self, uploaded_file: bytes, model: str, prompt: str, OpenAIKey: str, MaxTokens: int) -> str:\n        from openai import OpenAI\n        client = OpenAI(\n            api_key=OpenAIKey\n        )\n        \n        with open(uploaded_file, 'rb') as file:\n            file_contents = file.read()\n        b64_contents = base64.b64encode(file_contents).decode('utf-8')\n        \n        \n        headers = {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": f\"Bearer {OpenAIKey}\"\n        }\n        \n        payload = {\n        \"model\": model,\n        \"messages\": [\n            {\n              \"role\": \"user\",\n              \"content\": [\n                {\n                  \"type\": \"text\",\n                  \"text\": prompt\n                },\n                {\n                  \"type\": \"image_url\",\n                  \"image_url\": {\n                    \"url\": f\"data:image/jpeg;base64,{b64_contents}\"\n                  }\n                }\n              ]\n            }\n          ],\n          \"max_tokens\": MaxTokens\n        }\n\n        response = requests.post(\"https://api.openai.com/v1/chat/completions\", headers=headers, json=payload)\n        return str(response.json()['choices'][0]['message']['content'])",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "model": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "options": [
                    "gpt-4-vision-preview"
                  ],
                  "name": "model",
                  "display_name": "model",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "gpt-4-vision-preview"
                },
                "prompt": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "prompt",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "Quantos camarões tem na imagem?"
                },
                "_type": "CustomComponent"
              },
              "description": "This component process an image with a prompt by the user to produce information about the input image.",
              "base_classes": [
                "object",
                "str",
                "Text"
              ],
              "display_name": "GPT-Vision Input Analyser",
              "documentation": "",
              "custom_fields": {
                "uploaded_file": null,
                "model": null,
                "prompt": null,
                "OpenAIKey": null,
                "MaxTokens": null
              },
              "output_types": [
                "Text"
              ],
              "field_formatters": {},
              "frozen": false,
              "field_order": [],
              "beta": false,
              "official": false
            },
            "id": "CustomComponent-UAL6e",
            "description": "This component process an image with a prompt by the user to produce information about the input image.",
            "display_name": "GPT-Vision Input Analyser"
          },
          "id": "CustomComponent-UAL6e",
          "position": {
            "x": 0,
            "y": 0
          },
          "type": "genericNode"
        }
      ],
      "viewport": {
        "x": 1,
        "y": 1,
        "zoom": 1
      }
    },
    "date_created": "2024-03-16T03:15:17.397Z",
    "date_updated": "2024-06-05T19:44:14.791Z",
    "status": "Public",
    "sort": null,
    "user_updated": "94b2e207-1a44-4905-856c-4f5a69c168ce",
    "user_created": {
      "username": "joaoguilhermeS",
      "first_name": "João",
      "last_name": "Oliveira",
      "id": "94b2e207-1a44-4905-856c-4f5a69c168ce"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:10.633Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 6,
    "converter_version": "1.0.0"
  }
}