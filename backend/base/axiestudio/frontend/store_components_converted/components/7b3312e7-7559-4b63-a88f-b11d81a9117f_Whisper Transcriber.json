{
  "id": "7b3312e7-7559-4b63-a88f-b11d81a9117f",
  "name": "Whisper Transcriber",
  "description": "Converts audio to text using OpenAI's Whisper. (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "COMPONENT",
  "is_component": true,
  "author": {
    "username": "vazz",
    "first_name": "Otavio",
    "last_name": "anovazzi",
    "id": "df79cc28-cdfd-4e37-aef0-3d497501efc1",
    "full_name": "Otavio anovazzi"
  },
  "store_url": "https://www.langflow.store/store/component/7b3312e7-7559-4b63-a88f-b11d81a9117f",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2023-11-30T19:42:16.408Z",
    "updated": "2023-12-08T19:12:13.326Z",
    "downloaded": "2025-08-19T17:50:05.439Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "0.6.0a0",
    "private": false,
    "status": "Public"
  },
  "data": {
    "edges": [],
    "nodes": [
      {
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "code": {
                "dynamic": true,
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": true,
                "value": "from axiestudio import CustomComponent\nfrom typing import Optional, List, Dict, Union\nfrom axiestudio.field_typing import (\n    AgentExecutor,\n    BaseChatMemory,\n    BaseLanguageModel,\n    BaseLLM,\n    BaseLoader,\n    BaseMemory,\n    BaseOutputParser,\n    BasePromptTemplate,\n    BaseRetriever,\n    Callable,\n    Chain,\n    ChatPromptTemplate,\n    Data,\n    Document,\n    Embeddings,\n    NestedDict,\n    Object,\n    PromptTemplate,\n    TextSplitter,\n    Tool,\n    VectorStore,\n)\n\nfrom openai import OpenAI\nclass Component(CustomComponent):\n    display_name: str = \"Whisper Transcriber\"\n    description: str = \"Converts audio to text using OpenAI's Whisper.\"\n\n    def build_config(self):\n        return {\"audio\":{\"field_type\":\"file\",\"suffixes\":[\".mp3\", \".mp4\", \".m4a\"]},\"OpenAIKey\":{\"field_type\":\"str\",\"password\":True}}\n\n    def build(self, audio:str, OpenAIKey:str) -> str:\n        \n        #  TODO: if output path, persist & load it instead\n        \n        client = OpenAI(api_key=OpenAIKey)\n        \n        audio_file= open(audio, \"rb\")\n        transcript = client.audio.transcriptions.create(\n          model=\"whisper-1\", \n          file=audio_file,\n          response_format=\"text\"\n        )\n        \n        \n        self.status = transcript\n        return transcript\n\n",
                "password": false,
                "name": "code",
                "advanced": false,
                "type": "code",
                "list": false
              },
              "_type": "CustomComponent",
              "OpenAIKey": {
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": true,
                "name": "OpenAIKey",
                "display_name": "OpenAIKey",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false,
                "value": ""
              },
              "audio": {
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "suffixes": [
                  ".mp3",
                  ".mp4",
                  ".m4a"
                ],
                "password": false,
                "name": "audio",
                "display_name": "audio",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "file",
                "list": false,
                "file_path": "/Users/rodrigonader/Library/Caches/axiestudio/19b3e1c9-90bf-405f-898a-e982f47adf76/a3308ce7e9b10088fcd985aabb6d17b012c6b6e81ff8806356574474c9d10229.m4a",
                "value": ""
              }
            },
            "description": "Converts audio to text using OpenAI's Whisper.",
            "base_classes": [
              "str"
            ],
            "display_name": "Whisper Transcriber",
            "custom_fields": {
              "OpenAIKey": null,
              "audio": null
            },
            "output_types": [
              "str"
            ],
            "documentation": "",
            "beta": true,
            "error": null,
            "official": false
          },
          "id": "CustomComponent-H9nww"
        },
        "id": "CustomComponent-H9nww",
        "position": {
          "x": 0,
          "y": 0
        },
        "type": "genericNode"
      }
    ],
    "viewport": {
      "x": 1,
      "y": 1,
      "zoom": 1
    }
  },
  "metadata": {
    "CustomComponent": {
      "count": 1
    },
    "total": 1
  },
  "original": {
    "id": "7b3312e7-7559-4b63-a88f-b11d81a9117f",
    "name": "Whisper Transcriber",
    "description": "Converts audio to text using OpenAI's Whisper.",
    "is_component": true,
    "liked_by_count": "158",
    "downloads_count": "1364",
    "metadata": {
      "CustomComponent": {
        "count": 1
      },
      "total": 1
    },
    "last_tested_version": "0.6.0a0",
    "private": false,
    "data": {
      "edges": [],
      "nodes": [
        {
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "code": {
                  "dynamic": true,
                  "required": true,
                  "placeholder": "",
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio import CustomComponent\nfrom typing import Optional, List, Dict, Union\nfrom axiestudio.field_typing import (\n    AgentExecutor,\n    BaseChatMemory,\n    BaseLanguageModel,\n    BaseLLM,\n    BaseLoader,\n    BaseMemory,\n    BaseOutputParser,\n    BasePromptTemplate,\n    BaseRetriever,\n    Callable,\n    Chain,\n    ChatPromptTemplate,\n    Data,\n    Document,\n    Embeddings,\n    NestedDict,\n    Object,\n    PromptTemplate,\n    TextSplitter,\n    Tool,\n    VectorStore,\n)\n\nfrom openai import OpenAI\nclass Component(CustomComponent):\n    display_name: str = \"Whisper Transcriber\"\n    description: str = \"Converts audio to text using OpenAI's Whisper.\"\n\n    def build_config(self):\n        return {\"audio\":{\"field_type\":\"file\",\"suffixes\":[\".mp3\", \".mp4\", \".m4a\"]},\"OpenAIKey\":{\"field_type\":\"str\",\"password\":True}}\n\n    def build(self, audio:str, OpenAIKey:str) -> str:\n        \n        #  TODO: if output path, persist & load it instead\n        \n        client = OpenAI(api_key=OpenAIKey)\n        \n        audio_file= open(audio, \"rb\")\n        transcript = client.audio.transcriptions.create(\n          model=\"whisper-1\", \n          file=audio_file,\n          response_format=\"text\"\n        )\n        \n        \n        self.status = transcript\n        return transcript\n\n",
                  "password": false,
                  "name": "code",
                  "advanced": false,
                  "type": "code",
                  "list": false
                },
                "_type": "CustomComponent",
                "OpenAIKey": {
                  "required": true,
                  "placeholder": "",
                  "show": true,
                  "multiline": false,
                  "password": true,
                  "name": "OpenAIKey",
                  "display_name": "OpenAIKey",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "str",
                  "list": false,
                  "value": ""
                },
                "audio": {
                  "required": true,
                  "placeholder": "",
                  "show": true,
                  "multiline": false,
                  "suffixes": [
                    ".mp3",
                    ".mp4",
                    ".m4a"
                  ],
                  "password": false,
                  "name": "audio",
                  "display_name": "audio",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "file",
                  "list": false,
                  "file_path": "/Users/rodrigonader/Library/Caches/axiestudio/19b3e1c9-90bf-405f-898a-e982f47adf76/a3308ce7e9b10088fcd985aabb6d17b012c6b6e81ff8806356574474c9d10229.m4a",
                  "value": ""
                }
              },
              "description": "Converts audio to text using OpenAI's Whisper.",
              "base_classes": [
                "str"
              ],
              "display_name": "Whisper Transcriber",
              "custom_fields": {
                "OpenAIKey": null,
                "audio": null
              },
              "output_types": [
                "str"
              ],
              "documentation": "",
              "beta": true,
              "error": null,
              "official": false
            },
            "id": "CustomComponent-H9nww"
          },
          "id": "CustomComponent-H9nww",
          "position": {
            "x": 0,
            "y": 0
          },
          "type": "genericNode"
        }
      ],
      "viewport": {
        "x": 1,
        "y": 1,
        "zoom": 1
      }
    },
    "date_created": "2023-11-30T19:42:16.408Z",
    "date_updated": "2023-12-08T19:12:13.326Z",
    "status": "Public",
    "sort": null,
    "user_updated": "1ee87861-6124-4533-837b-7c4ee69f822f",
    "user_created": {
      "username": "vazz",
      "first_name": "Otavio",
      "last_name": "anovazzi",
      "id": "df79cc28-cdfd-4e37-aef0-3d497501efc1"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:10.701Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 6,
    "converter_version": "1.0.0"
  }
}