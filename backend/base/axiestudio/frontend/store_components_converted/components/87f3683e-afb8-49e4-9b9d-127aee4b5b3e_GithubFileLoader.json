{
  "id": "87f3683e-afb8-49e4-9b9d-127aee4b5b3e",
  "name": "GithubFileLoader",
  "description": "Load specific files from a GitHub repository. (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "COMPONENT",
  "is_component": true,
  "author": {
    "username": "sdilio",
    "first_name": "Salvador",
    "last_name": "Dilio",
    "id": "0d8e18b7-91c1-4313-a8b9-13f05ef35bbd",
    "full_name": "Salvador Dilio"
  },
  "store_url": "https://www.langflow.store/store/component/87f3683e-afb8-49e4-9b9d-127aee4b5b3e",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-07-10T17:21:08.349Z",
    "updated": "2024-07-10T17:21:08.416Z",
    "downloaded": "2025-08-19T17:50:05.726Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "1.0.6",
    "private": false,
    "status": "Public"
  },
  "data": {
    "edges": [],
    "nodes": [
      {
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "_type": "Component",
              "access_token": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "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",
                "name": "access_token",
                "display_name": "Access Token",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str"
              },
              "branch": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "master",
                "name": "branch",
                "display_name": "Branch",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str"
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from langchain.document_loaders import GithubFileLoader\r\nfrom axiestudio.field_typing import Data\r\nfrom axiestudio.custom import Component\r\nfrom axiestudio.io import MessageTextInput, Output\r\nfrom axiestudio.schema import Data\r\nimport requests\r\n\r\n\r\nclass GitHubFileLoaderComponent(Component):\r\n    display_name = \"GitHub File Loader\"\r\n    description = \"Load specific files from a GitHub repository.\"\r\n    documentation: str = \"http://docs.axiestudio.org/components/custom\"\r\n    icon = \"custom_components\"\r\n\r\n    inputs = [\r\n        MessageTextInput(name=\"repo\", display_name=\"Repository Name\", value=\"seu-usuario/seu-repositorio\"),\r\n        MessageTextInput(name=\"access_token\", display_name=\"Access Token\", value=\"\"),\r\n        MessageTextInput(name=\"github_api_url\", display_name=\"GitHub API URL\", value=\"https://api.github.com\"),\r\n        MessageTextInput(name=\"branch\", display_name=\"Branch\", value=\"main\"),\r\n        MessageTextInput(name=\"file_filter\", display_name=\"File Filter\", value=\"lambda file_path: file_path.endswith('.md')\")\r\n    ]\r\n\r\n    outputs = [\r\n        Output(display_name=\"Output\", name=\"output\", method=\"build_output\"),\r\n    ]\r\n\r\n    def build_output(self) -> Data:\r\n        repo = self.repo\r\n        access_token = self.access_token\r\n        github_api_url = self.github_api_url\r\n        branch = self.branch\r\n        file_filter = eval(self.file_filter)\r\n\r\n        try:\r\n            # Test the repository URL to ensure it exists\r\n            response = requests.get(f\"{github_api_url}/repos/{repo}\", headers={\"Authorization\": f\"token {access_token}\"})\r\n            response.raise_for_status()\r\n\r\n            loader = GithubFileLoader(\r\n                repo=repo,\r\n                access_token=access_token,\r\n                github_api_url=github_api_url,\r\n                branch=branch,\r\n                file_filter=file_filter\r\n            )\r\n            documents = loader.load()\r\n            \r\n            # Concatenando o conte√∫do dos documentos em uma string\r\n            content = \"\\n\".join([doc.page_content for doc in documents])\r\n            \r\n            data = Data(value=content)\r\n            self.status = data\r\n            return data\r\n        except requests.exceptions.HTTPError as e:\r\n            error_message = f\"HTTP error occurred: {e}\"\r\n            print(error_message)\r\n            data = Data(value=error_message)\r\n            self.status = data\r\n            return data\r\n        except Exception as e:\r\n            error_message = f\"An error occurred: {e}\"\r\n            print(error_message)\r\n            data = Data(value=error_message)\r\n            self.status = data\r\n            return data\r\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "file_filter": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "lambda file_path: file_path.endswith('.md')",
                "name": "file_filter",
                "display_name": "File Filter",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str"
              },
              "github_api_url": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "https://api.github.com",
                "name": "github_api_url",
                "display_name": "GitHub API URL",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str"
              },
              "repo": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "OWASP/wstg",
                "name": "repo",
                "display_name": "Repository Name",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str"
              }
            },
            "description": "Load specific files from a GitHub repository.",
            "icon": "custom_components",
            "base_classes": [
              "Data"
            ],
            "display_name": "GithubFileLoader",
            "documentation": "http://docs.axiestudio.org/components/custom",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Data"
                ],
                "selected": "Data",
                "name": "output",
                "display_name": "Output",
                "method": "build_output",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "repo",
              "access_token",
              "github_api_url",
              "branch",
              "file_filter"
            ],
            "beta": false,
            "edited": false,
            "official": false
          },
          "id": "CustomComponent-ouoPQ",
          "description": "Load specific files from a GitHub repository.",
          "display_name": "GithubFileLoader"
        },
        "id": "CustomComponent-ouoPQ",
        "position": {
          "x": 0,
          "y": 0
        },
        "type": "genericNode"
      }
    ],
    "viewport": {
      "x": 1,
      "y": 1,
      "zoom": 1
    }
  },
  "metadata": {
    "CustomComponent": {
      "count": 1
    },
    "total": 1
  },
  "original": {
    "id": "87f3683e-afb8-49e4-9b9d-127aee4b5b3e",
    "name": "GithubFileLoader",
    "description": "Load specific files from a GitHub repository.",
    "is_component": true,
    "liked_by_count": "12",
    "downloads_count": "93",
    "metadata": {
      "CustomComponent": {
        "count": 1
      },
      "total": 1
    },
    "last_tested_version": "1.0.6",
    "private": false,
    "data": {
      "edges": [],
      "nodes": [
        {
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "_type": "Component",
                "access_token": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "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",
                  "name": "access_token",
                  "display_name": "Access Token",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str"
                },
                "branch": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "master",
                  "name": "branch",
                  "display_name": "Branch",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str"
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from langchain.document_loaders import GithubFileLoader\r\nfrom axiestudio.field_typing import Data\r\nfrom axiestudio.custom import Component\r\nfrom axiestudio.io import MessageTextInput, Output\r\nfrom axiestudio.schema import Data\r\nimport requests\r\n\r\n\r\nclass GitHubFileLoaderComponent(Component):\r\n    display_name = \"GitHub File Loader\"\r\n    description = \"Load specific files from a GitHub repository.\"\r\n    documentation: str = \"http://docs.axiestudio.org/components/custom\"\r\n    icon = \"custom_components\"\r\n\r\n    inputs = [\r\n        MessageTextInput(name=\"repo\", display_name=\"Repository Name\", value=\"seu-usuario/seu-repositorio\"),\r\n        MessageTextInput(name=\"access_token\", display_name=\"Access Token\", value=\"\"),\r\n        MessageTextInput(name=\"github_api_url\", display_name=\"GitHub API URL\", value=\"https://api.github.com\"),\r\n        MessageTextInput(name=\"branch\", display_name=\"Branch\", value=\"main\"),\r\n        MessageTextInput(name=\"file_filter\", display_name=\"File Filter\", value=\"lambda file_path: file_path.endswith('.md')\")\r\n    ]\r\n\r\n    outputs = [\r\n        Output(display_name=\"Output\", name=\"output\", method=\"build_output\"),\r\n    ]\r\n\r\n    def build_output(self) -> Data:\r\n        repo = self.repo\r\n        access_token = self.access_token\r\n        github_api_url = self.github_api_url\r\n        branch = self.branch\r\n        file_filter = eval(self.file_filter)\r\n\r\n        try:\r\n            # Test the repository URL to ensure it exists\r\n            response = requests.get(f\"{github_api_url}/repos/{repo}\", headers={\"Authorization\": f\"token {access_token}\"})\r\n            response.raise_for_status()\r\n\r\n            loader = GithubFileLoader(\r\n                repo=repo,\r\n                access_token=access_token,\r\n                github_api_url=github_api_url,\r\n                branch=branch,\r\n                file_filter=file_filter\r\n            )\r\n            documents = loader.load()\r\n            \r\n            # Concatenando o conte√∫do dos documentos em uma string\r\n            content = \"\\n\".join([doc.page_content for doc in documents])\r\n            \r\n            data = Data(value=content)\r\n            self.status = data\r\n            return data\r\n        except requests.exceptions.HTTPError as e:\r\n            error_message = f\"HTTP error occurred: {e}\"\r\n            print(error_message)\r\n            data = Data(value=error_message)\r\n            self.status = data\r\n            return data\r\n        except Exception as e:\r\n            error_message = f\"An error occurred: {e}\"\r\n            print(error_message)\r\n            data = Data(value=error_message)\r\n            self.status = data\r\n            return data\r\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "file_filter": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "lambda file_path: file_path.endswith('.md')",
                  "name": "file_filter",
                  "display_name": "File Filter",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str"
                },
                "github_api_url": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "https://api.github.com",
                  "name": "github_api_url",
                  "display_name": "GitHub API URL",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str"
                },
                "repo": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "OWASP/wstg",
                  "name": "repo",
                  "display_name": "Repository Name",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str"
                }
              },
              "description": "Load specific files from a GitHub repository.",
              "icon": "custom_components",
              "base_classes": [
                "Data"
              ],
              "display_name": "GithubFileLoader",
              "documentation": "http://docs.axiestudio.org/components/custom",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Data"
                  ],
                  "selected": "Data",
                  "name": "output",
                  "display_name": "Output",
                  "method": "build_output",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "repo",
                "access_token",
                "github_api_url",
                "branch",
                "file_filter"
              ],
              "beta": false,
              "edited": false,
              "official": false
            },
            "id": "CustomComponent-ouoPQ",
            "description": "Load specific files from a GitHub repository.",
            "display_name": "GithubFileLoader"
          },
          "id": "CustomComponent-ouoPQ",
          "position": {
            "x": 0,
            "y": 0
          },
          "type": "genericNode"
        }
      ],
      "viewport": {
        "x": 1,
        "y": 1,
        "zoom": 1
      }
    },
    "date_created": "2024-07-10T17:21:08.349Z",
    "date_updated": "2024-07-10T17:21:08.416Z",
    "status": "Public",
    "sort": null,
    "user_updated": "0d8e18b7-91c1-4313-a8b9-13f05ef35bbd",
    "user_created": {
      "username": "sdilio",
      "first_name": "Salvador",
      "last_name": "Dilio",
      "id": "0d8e18b7-91c1-4313-a8b9-13f05ef35bbd"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:10.907Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 12,
    "converter_version": "1.0.0"
  }
}