name: 🌐 Frontend Build

on:
  push:
    branches: [ main, mainbackup ]
    paths:
      - 'src/frontend/**'
      - 'axiestudio/src/frontend/**'
      - 'package.json'
      - 'package-lock.json'
  pull_request:
    branches: [ main, mainbackup ]
    paths:
      - 'src/frontend/**'
      - 'axiestudio/src/frontend/**'
  workflow_dispatch:

env:
  NODE_VERSION: '22'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-frontend

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'src/frontend/package-lock.json'
        
    - name: 📦 Install dependencies
      working-directory: ./src/frontend
      run: |
        npm ci
        
    - name: 🔍 Lint frontend code
      working-directory: ./src/frontend
      run: |
        npm run lint || true
        
    - name: 🧪 Run frontend tests
      working-directory: ./src/frontend
      run: |
        npm run test:ci || true
        
    - name: 🏗️ Build frontend
      working-directory: ./src/frontend
      run: |
        npm run build
        
    - name: 📊 Build size analysis
      working-directory: ./src/frontend
      run: |
        echo "## 📊 Frontend Build Analysis" >> $GITHUB_STEP_SUMMARY
        echo "### Build Output:" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        du -sh build/* 2>/dev/null || echo "Build directory analysis not available" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        
    - name: 🐳 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: 🔐 Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: 🔐 Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: 🏷️ Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          ${{ secrets.DOCKER_USERNAME }}/axiestudio-frontend
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value=frontend-latest
          
    - name: 🏗️ Build and push Frontend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./src/frontend
        file: ./src/frontend/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64
        
    - name: 📊 Frontend Build Summary
      run: |
        echo "## 🌐 Frontend Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Swedish AxieStudio Frontend built successfully" >> $GITHUB_STEP_SUMMARY
        echo "- 🐳 Docker image: \`${{ secrets.DOCKER_USERNAME }}/axiestudio-frontend:frontend-latest\`" >> $GITHUB_STEP_SUMMARY
        echo "- 🌍 Multi-platform: linux/amd64, linux/arm64" >> $GITHUB_STEP_SUMMARY
        echo "- 📦 Registry: GitHub Container Registry + Docker Hub" >> $GITHUB_STEP_SUMMARY
        echo "- 🇸🇪 Language: Swedish translations included" >> $GITHUB_STEP_SUMMARY
