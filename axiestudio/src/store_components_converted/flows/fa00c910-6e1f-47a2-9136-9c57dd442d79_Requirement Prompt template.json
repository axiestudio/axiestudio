{
  "id": "fa00c910-6e1f-47a2-9136-9c57dd442d79",
  "name": "Requirement Prompt template",
  "description": "Craft Language Connections Here. (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "FLOW",
  "is_component": false,
  "author": {
    "username": "vinu_lang",
    "first_name": "Vineeth",
    "last_name": "Aravindakshan",
    "id": "dbb5e9af-0c67-41e1-bbdb-2f5857c516f6",
    "full_name": "Vineeth Aravindakshan"
  },
  "store_url": "https://www.langflow.store/store/component/fa00c910-6e1f-47a2-9136-9c57dd442d79",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-05-01T12:36:22.765Z",
    "updated": "2024-05-01T12:36:22.801Z",
    "downloaded": "2025-08-19T17:50:05.358Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "0.6.17",
    "private": true,
    "status": "Public"
  },
  "data": {
    "nodes": [
      {
        "id": "ChatOpenAI-o1HwC",
        "type": "genericNode",
        "position": {
          "x": 466.2263489721015,
          "y": 669.3890533005252
        },
        "data": {
          "type": "ChatOpenAI",
          "node": {
            "template": {
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from typing import Optional, Union\n\nfrom langchain.llms import BaseLLM\nfrom langchain_community.chat_models.openai import ChatOpenAI\n\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import BaseLanguageModel, NestedDict\n\n\nclass ChatOpenAIComponent(CustomComponent):\n    display_name = \"ChatOpenAI\"\n    description = \"`OpenAI` Chat large language models API.\"\n\n    def build_config(self):\n        return {\n            \"max_tokens\": {\n                \"display_name\": \"Max Tokens\",\n                \"field_type\": \"int\",\n                \"advanced\": False,\n                \"required\": False,\n            },\n            \"model_kwargs\": {\n                \"display_name\": \"Model Kwargs\",\n                \"field_type\": \"NestedDict\",\n                \"advanced\": True,\n                \"required\": False,\n            },\n            \"model_name\": {\n                \"display_name\": \"Model Name\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"options\": [\n                    \"gpt-4-turbo-preview\",\n                    \"gpt-4-0125-preview\",\n                    \"gpt-4-1106-preview\",\n                    \"gpt-4-vision-preview\",\n                    \"gpt-3.5-turbo-0125\",\n                    \"gpt-3.5-turbo-1106\",\n                ],\n            },\n            \"openai_api_base\": {\n                \"display_name\": \"OpenAI API Base\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"info\": (\n                    \"The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\\n\\n\"\n                    \"You can change this to use other APIs like JinaChat, LocalAI and Prem.\"\n                ),\n            },\n            \"openai_api_key\": {\n                \"display_name\": \"OpenAI API Key\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"password\": True,\n            },\n            \"temperature\": {\n                \"display_name\": \"Temperature\",\n                \"field_type\": \"float\",\n                \"advanced\": False,\n                \"required\": False,\n                \"value\": 0.7,\n            },\n        }\n\n    def build(\n        self,\n        max_tokens: Optional[int] = 256,\n        model_kwargs: NestedDict = {},\n        model_name: str = \"gpt-4-1106-preview\",\n        openai_api_base: Optional[str] = None,\n        openai_api_key: Optional[str] = None,\n        temperature: float = 0.7,\n    ) -> Union[BaseLanguageModel, BaseLLM]:\n        if not openai_api_base:\n            openai_api_base = \"https://api.openai.com/v1\"\n        return ChatOpenAI(\n            max_tokens=max_tokens,\n            model_kwargs=model_kwargs,\n            model=model_name,\n            base_url=openai_api_base,\n            api_key=openai_api_key,\n            temperature=temperature,\n        )\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "max_tokens": {
                "type": "int",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "1500",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "model_kwargs": {
                "type": "NestedDict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": {},
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "model_kwargs",
                "display_name": "Model Kwargs",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "model_name": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "gpt-4-vision-preview",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "options": [
                  "gpt-4-turbo-preview",
                  "gpt-4-0125-preview",
                  "gpt-4-1106-preview",
                  "gpt-4-vision-preview",
                  "gpt-3.5-turbo-0125",
                  "gpt-3.5-turbo-1106"
                ],
                "name": "model_name",
                "display_name": "Model Name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "openai_api_base": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "openai_api_base",
                "display_name": "OpenAI API Base",
                "advanced": false,
                "dynamic": false,
                "info": "The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.",
                "title_case": true
              },
              "openai_api_key": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": true,
                "name": "openai_api_key",
                "display_name": "OpenAI API Key",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "value": ""
              },
              "temperature": {
                "type": "float",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "0.2",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "temperature",
                "display_name": "Temperature",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "rangeSpec": {
                  "min": -1,
                  "max": 1,
                  "step": 0.1
                },
                "title_case": true
              },
              "_type": "CustomComponent"
            },
            "description": "`OpenAI` Chat large language models API.",
            "base_classes": [
              "BaseLanguageModel",
              "BaseLLM",
              "BaseLanguageModel"
            ],
            "display_name": "ChatOpenAI",
            "documentation": "",
            "custom_fields": {
              "max_tokens": null,
              "model_kwargs": null,
              "model_name": null,
              "openai_api_base": null,
              "openai_api_key": null,
              "temperature": null
            },
            "output_types": [
              "BaseLanguageModel",
              "BaseLLM"
            ],
            "field_formatters": {},
            "beta": true
          },
          "id": "ChatOpenAI-o1HwC",
          "description": "`OpenAI` Chat large language models API.",
          "display_name": "ChatOpenAI"
        },
        "selected": false,
        "width": 384,
        "height": 731,
        "dragging": false,
        "positionAbsolute": {
          "x": 466.2263489721015,
          "y": 669.3890533005252
        }
      },
      {
        "id": "PromptTemplate-DLkHD",
        "type": "genericNode",
        "position": {
          "x": 311.5822988287341,
          "y": -381.3867057978627
        },
        "data": {
          "type": "PromptTemplate",
          "node": {
            "template": {
              "output_parser": {
                "type": "BaseOutputParser",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "output_parser",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "input_types": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "input_types",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "input_variables": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "input_variables",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true,
                "value": [
                  "context",
                  "chat_history",
                  "text"
                ]
              },
              "metadata": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "metadata",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "name": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "name",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "partial_variables": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "partial_variables",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "tags": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": true,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "tags",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "template": {
                "type": "prompt",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "fileTypes": [],
                "password": false,
                "name": "template",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true,
                "value": "You are a Business Analyst, gathering requirements for an integration project. Your goal is to document all necessary requirements based on the conversation. The conversation will involve a series of questions and answers.\n\nFollow the below steps to have a conversation:\n1.Initiate the conversation with a polite greeting , then enquire for user's name with a statement \"Hello,May I know your name, please?\"\n2.CRITICAL: After user responds with the name, greet back and ask how he/she is doing ?    \n3.CRITICAL:Once the user responds, thank them ,mention you are a bot and briefly explain the purpose of this session.\n4. CRITICAL:Ask the user if they are ready to begin with the requirement gathering. If they are not ready, end the session gracefully.\n5. CRITICAL:If the user is ready, proceed with the first question from the {context} document.\n6. CRITICAL:Wait for the user's response to each question before moving on to the next.Never assume any answer yourself.\n7. CRITICAL:Continue this process until all questions are addressed. Make sure you ask only one question at a time.\n8. CRITICAL:Summarize the responses once all questions are answered and confirm with the user if everything is correct.\n9. Conclude the conversation by thanking the user for their time and providing next steps or follow-up information.\n\nCRITICAL:Ensure to maintain a polite and professional tone throughout the session. Your role is to capture all necessary details to facilitate the effective planning and implementation of the project. Remember, each interaction is critical and should be handled with patience and attention to detail.And don't use the word human/user when waiting for a response from the user, use it something else gracefully. \n\n\n\nCurrent conversation:\n{chat_history}\nUser:{text}\nBusiness Analyst:"
              },
              "template_format": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": "f-string",
                "fileTypes": [],
                "password": false,
                "name": "template_format",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "validate_template": {
                "type": "bool",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": false,
                "fileTypes": [],
                "password": false,
                "name": "validate_template",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "_type": "PromptTemplate",
              "context": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "context",
                "display_name": "context",
                "advanced": false,
                "input_types": [
                  "Document",
                  "BaseOutputParser"
                ],
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "text": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "text",
                "display_name": "text",
                "advanced": false,
                "input_types": [
                  "Document",
                  "BaseOutputParser"
                ],
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "chat_history": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "chat_history",
                "display_name": "chat_history",
                "advanced": false,
                "input_types": [
                  "Document",
                  "BaseOutputParser"
                ],
                "dynamic": false,
                "info": "",
                "title_case": true
              }
            },
            "description": "A prompt template for a language model.",
            "icon": null,
            "base_classes": [
              "StringPromptTemplate",
              "BasePromptTemplate",
              "PromptTemplate"
            ],
            "name": "",
            "display_name": "PromptTemplate",
            "documentation": "https://python.langchain.com/docs/modules/model_io/prompts/prompt_templates/",
            "custom_fields": {
              "": [
                "context",
                "chat_history",
                "text"
              ]
            },
            "output_types": [],
            "full_path": null,
            "field_formatters": {},
            "beta": false,
            "error": null
          },
          "id": "PromptTemplate-DLkHD",
          "description": "A prompt template for a language model.",
          "display_name": "PromptTemplate"
        },
        "selected": false,
        "width": 384,
        "height": 563,
        "dragging": false,
        "positionAbsolute": {
          "x": 311.5822988287341,
          "y": -381.3867057978627
        }
      },
      {
        "id": "Data-EAsG6",
        "type": "genericNode",
        "position": {
          "x": 2276.605282953966,
          "y": -366.04286453996826
        },
        "data": {
          "type": "Data",
          "node": {
            "template": {
              "conversationBufferMemory": {
                "type": "ConversationBufferMemory",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "conversationBufferMemory",
                "display_name": "ConversationBufferMemory",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "llm": {
                "type": "BaseLanguageModel",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "llm",
                "display_name": "LLM",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio import CustomComponent\nfrom langchain_core.documents import Document\nfrom langchain.memory import ConversationBufferMemory\nfrom langchain_openai import OpenAI\nfrom axiestudio.field_typing import BaseLanguageModel\n\nclass Component(CustomComponent):\n    documentation: str = \"http://docs.axiestudio.org/components/custom\"\n\n    def build_config(self):\n        # Configuration parameters for the component\n        return {\"conversationBufferMemory\": {\"display_name\": \"ConversationBufferMemory\"},\n            \"llm\": {\"display_name\": \"LLM\"},\n        }\n\n    def build(self, conversationBufferMemory: ConversationBufferMemory,llm:BaseLanguageModel) -> Document:\n        # Fetch the summary from the conversation memory\n        # Assuming conversationSummaryMemory is a predefined variable storing the summary\n        # memory = ConversationBufferMemory(llm=llm)\n        #memory.save_context({\"input\": \"hi\"},{\"output\": \"hi again\"})\n        # summary_data = memory.load_memory_variables({})\n        \n        # Process the summary data if needed (here we directly use it as it is)\n        \n        # Create a Document object with the summary data\n        # Assuming Document constructor accepts the summary directly or processes it as needed\n        document_output = Document(page_content=str(conversationBufferMemory.load_memory_variables({})))\n        \n        # Return the formatted document\n        return document_output\n\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "_type": "CustomComponent"
            },
            "base_classes": [
              "Document"
            ],
            "display_name": "CustomComponent",
            "documentation": "http://docs.axiestudio.org/components/custom",
            "custom_fields": {
              "conversationBufferMemory": null,
              "llm": null
            },
            "output_types": [
              "Document"
            ],
            "field_formatters": {},
            "beta": true
          },
          "id": "Data-EAsG6",
          "display_name": "CustomComponent"
        },
        "selected": true,
        "width": 384,
        "height": 357,
        "dragging": false,
        "positionAbsolute": {
          "x": 2276.605282953966,
          "y": -366.04286453996826
        }
      },
      {
        "id": "PostgresChatMessageHistory-DmjO9",
        "type": "genericNode",
        "position": {
          "x": 662.3555138198959,
          "y": -884.0031564949768
        },
        "data": {
          "type": "PostgresChatMessageHistory",
          "node": {
            "template": {
              "connection_string": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "postgresql://postgres:postgres@127.0.0.1:5432/postgres",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "connection_string",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "session_id": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "chat1",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "session_id",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "table_name": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "chat_summary1",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "table_name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "_type": "PostgresChatMessageHistory"
            },
            "description": "Memory store with Postgres",
            "base_classes": [
              "PostgresChatMessageHistory",
              "BaseChatMessageHistory"
            ],
            "display_name": "PostgresChatMessageHistory",
            "documentation": "https://python.langchain.com/docs/modules/memory/integrations/postgres_chat_message_history",
            "custom_fields": {},
            "output_types": [],
            "field_formatters": {},
            "beta": false
          },
          "id": "PostgresChatMessageHistory-DmjO9"
        },
        "selected": false,
        "width": 384,
        "height": 477,
        "positionAbsolute": {
          "x": 662.3555138198959,
          "y": -884.0031564949768
        },
        "dragging": false
      },
      {
        "id": "LLMChain-W1wOD",
        "type": "genericNode",
        "position": {
          "x": 1967.9782284662308,
          "y": 575.6026026905972
        },
        "data": {
          "type": "LLMChain",
          "node": {
            "template": {
              "llm": {
                "type": "BaseLanguageModel",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "llm",
                "display_name": "LLM",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "memory": {
                "type": "BaseMemory",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "memory",
                "display_name": "Memory",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "prompt": {
                "type": "BasePromptTemplate",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "prompt",
                "display_name": "Prompt",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from typing import Callable, Optional, Union\n\nfrom langchain.chains import LLMChain\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import (\n    BaseLanguageModel,\n    BaseMemory,\n    BasePromptTemplate,\n    Chain,\n)\n\n\nclass LLMChainComponent(CustomComponent):\n    display_name = \"LLMChain\"\n    description = \"Chain to run queries against LLMs\"\n\n    def build_config(self):\n        return {\n            \"prompt\": {\"display_name\": \"Prompt\"},\n            \"llm\": {\"display_name\": \"LLM\"},\n            \"memory\": {\"display_name\": \"Memory\"},\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        prompt: BasePromptTemplate,\n        llm: BaseLanguageModel,\n        memory: Optional[BaseMemory] = None,\n    ) -> Union[Chain, Callable, LLMChain]:\n        return LLMChain(prompt=prompt, llm=llm, memory=memory)\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "_type": "CustomComponent"
            },
            "description": "Chain to run queries against LLMs",
            "base_classes": [
              "Chain",
              "Callable",
              "LLMChain",
              "Chain"
            ],
            "display_name": "LLMChain",
            "documentation": "",
            "custom_fields": {
              "prompt": null,
              "llm": null,
              "memory": null
            },
            "output_types": [
              "Chain",
              "Callable",
              "LLMChain"
            ],
            "field_formatters": {},
            "beta": true
          },
          "id": "LLMChain-W1wOD",
          "description": "Chain to run queries against LLMs",
          "display_name": "LLMChain"
        },
        "selected": false,
        "width": 384,
        "height": 425,
        "positionAbsolute": {
          "x": 1967.9782284662308,
          "y": 575.6026026905972
        },
        "dragging": false
      },
      {
        "id": "TextLoader-pakFf",
        "type": "genericNode",
        "position": {
          "x": -255.92556591310463,
          "y": -329.63606345078006
        },
        "data": {
          "type": "TextLoader",
          "node": {
            "template": {
              "file_path": {
                "type": "file",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "",
                "fileTypes": [
                  ".txt"
                ],
                "file_path": "/Users/viaravindakshan/Library/Caches/axiestudio/83e63165-1edd-4140-8c99-c16806d87a8b/2114d9cf07b59773e0145667e2ba73c15aa2001bff4b8e0901ec617a9578bc77.txt",
                "password": false,
                "name": "file_path",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "metadata": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": [
                  {
                    "": ""
                  }
                ],
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "metadata",
                "display_name": "Metadata",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "_type": "TextLoader"
            },
            "description": "Load text file.",
            "base_classes": [
              "Document"
            ],
            "display_name": "TextLoader",
            "documentation": "https://python.langchain.com/docs/modules/data_connection/document_loaders/",
            "custom_fields": {},
            "output_types": [
              "Document"
            ],
            "field_formatters": {},
            "beta": false
          },
          "id": "TextLoader-pakFf"
        },
        "selected": false,
        "width": 384,
        "height": 367,
        "positionAbsolute": {
          "x": -255.92556591310463,
          "y": -329.63606345078006
        },
        "dragging": false
      },
      {
        "id": "ConversationBufferMemory-mkmdQ",
        "type": "genericNode",
        "position": {
          "x": 1285.1496076180724,
          "y": -1148.6769566328064
        },
        "data": {
          "type": "ConversationBufferMemory",
          "node": {
            "template": {
              "chat_memory": {
                "type": "BaseChatMessageHistory",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "chat_memory",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "ai_prefix": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": "AI",
                "fileTypes": [],
                "password": false,
                "name": "ai_prefix",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "human_prefix": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": "Human",
                "fileTypes": [],
                "password": false,
                "name": "human_prefix",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "input_key": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "input_key",
                "advanced": false,
                "dynamic": false,
                "info": "The variable to be used as Chat Input when more than one variable is available.",
                "title_case": true
              },
              "memory_key": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "chat_history",
                "fileTypes": [],
                "password": false,
                "name": "memory_key",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "output_key": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "output_key",
                "advanced": false,
                "dynamic": false,
                "info": "The variable to be used as Chat Output (e.g. answer in a ConversationalRetrievalChain)",
                "title_case": true
              },
              "return_messages": {
                "type": "bool",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "return_messages",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "value": false
              },
              "_type": "ConversationBufferMemory"
            },
            "description": "Buffer for storing conversation memory.",
            "base_classes": [
              "BaseMemory",
              "BaseChatMemory",
              "ConversationBufferMemory"
            ],
            "display_name": "ConversationBufferMemory",
            "documentation": "https://python.langchain.com/docs/modules/memory/how_to/buffer",
            "custom_fields": {},
            "output_types": [],
            "field_formatters": {},
            "beta": false
          },
          "id": "ConversationBufferMemory-mkmdQ"
        },
        "selected": false,
        "width": 384,
        "height": 601,
        "positionAbsolute": {
          "x": 1285.1496076180724,
          "y": -1148.6769566328064
        },
        "dragging": false
      },
      {
        "id": "Document-n47EP",
        "type": "genericNode",
        "position": {
          "x": 2842.1305139566093,
          "y": 248.1387924052543
        },
        "data": {
          "type": "Document",
          "node": {
            "template": {
              "document": {
                "type": "Document",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "document",
                "display_name": "Document",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from typing import Optional\n\nimport requests\nfrom langchain_core.documents import Document\nfrom axiestudio import CustomComponent\nfrom axiestudio.services.database.models.base import orjson_dumps\n\n\nclass PostRequest(CustomComponent):\n    display_name: str = \"POST Request\"\n    description: str = \"Make a POST request to the given URL.\"\n    output_types: list[str] = [\"Document\"]\n    documentation: str = \"https://docs.axiestudio.org/components/utilities#post-request\"\n    beta: bool = True\n    field_config = {\n        \"url\": {\"display_name\": \"URL\", \"info\": \"The URL to make the request to.\"},\n        \"headers\": {\n            \"display_name\": \"Headers\",\n            \"info\": \"The headers to send with the request.\",\n        },\n        \"code\": {\"show\": False},\n        \"document\": {\"display_name\": \"Document\"},\n    }\n\n    def post_document(\n        self,\n        session: requests.Session,\n        document: Document,\n        url: str,\n        headers: Optional[dict] = None,\n    ) -> Document:\n        try:\n            response = session.post(url, headers=headers, data=document.page_content)\n            try:\n                response_json = response.json()\n                result = orjson_dumps(response_json, indent_2=False)\n            except Exception:\n                result = response.text\n            self.repr_value = result\n            return Document(\n                page_content=result,\n                metadata={\n                    \"source\": url,\n                    \"headers\": headers,\n                    \"status_code\": response,\n                },\n            )\n        except Exception as exc:\n            return Document(\n                page_content=str(exc),\n                metadata={\n                    \"source\": url,\n                    \"headers\": headers,\n                    \"status_code\": 500,\n                },\n            )\n\n    def build(\n        self,\n        document: Document,\n        url: str,\n        headers: Optional[dict] = None,\n    ) -> list[Document]:\n        if headers is None:\n            headers = {}\n\n        if not isinstance(document, list) and isinstance(document, Document):\n            documents: list[Document] = [document]\n        elif isinstance(document, list) and all(isinstance(doc, Document) for doc in document):\n            documents = document\n        else:\n            raise ValueError(\"document must be a Document or a list of Documents\")\n\n        with requests.Session() as session:\n            documents = [self.post_document(session, doc, url, headers) for doc in documents]\n            self.repr_value = documents\n        return documents\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "headers": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "headers",
                "display_name": "Headers",
                "advanced": false,
                "dynamic": false,
                "info": "The headers to send with the request.",
                "title_case": true,
                "value": [
                  {
                    "Content-Type": "text/plain"
                  },
                  {
                    "": ""
                  }
                ]
              },
              "url": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "url",
                "display_name": "URL",
                "advanced": false,
                "dynamic": false,
                "info": "The URL to make the request to.",
                "title_case": true,
                "value": "http://localhost:3001/test"
              },
              "_type": "CustomComponent"
            },
            "description": "Make a POST request to the given URL.",
            "base_classes": [
              "Document"
            ],
            "display_name": "POST Request",
            "documentation": "https://docs.axiestudio.org/components/utilities#post-request",
            "custom_fields": {
              "document": null,
              "url": null,
              "headers": null
            },
            "output_types": [
              "Document"
            ],
            "field_formatters": {},
            "beta": true
          },
          "id": "Document-n47EP"
        },
        "selected": false,
        "width": 384,
        "height": 559,
        "dragging": false
      }
    ],
    "edges": [
      {
        "source": "PromptTemplate-DLkHD",
        "sourceHandle": "{œbaseClassesœ:[œStringPromptTemplateœ,œBasePromptTemplateœ,œPromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-DLkHDœ}",
        "target": "LLMChain-W1wOD",
        "targetHandle": "{œfieldNameœ:œpromptœ,œidœ:œLLMChain-W1wODœ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}",
        "data": {
          "targetHandle": {
            "fieldName": "prompt",
            "id": "LLMChain-W1wOD",
            "inputTypes": null,
            "type": "BasePromptTemplate"
          },
          "sourceHandle": {
            "baseClasses": [
              "StringPromptTemplate",
              "BasePromptTemplate",
              "PromptTemplate"
            ],
            "dataType": "PromptTemplate",
            "id": "PromptTemplate-DLkHD"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-gray-900  stroke-connection",
        "animated": false,
        "id": "reactflow__edge-PromptTemplate-DLkHD{œbaseClassesœ:[œStringPromptTemplateœ,œBasePromptTemplateœ,œPromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-DLkHDœ}-LLMChain-W1wOD{œfieldNameœ:œpromptœ,œidœ:œLLMChain-W1wODœ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}"
      },
      {
        "source": "TextLoader-pakFf",
        "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œTextLoaderœ,œidœ:œTextLoader-pakFfœ}",
        "target": "PromptTemplate-DLkHD",
        "targetHandle": "{œfieldNameœ:œcontextœ,œidœ:œPromptTemplate-DLkHDœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}",
        "data": {
          "targetHandle": {
            "fieldName": "context",
            "id": "PromptTemplate-DLkHD",
            "inputTypes": [
              "Document",
              "BaseOutputParser"
            ],
            "type": "str"
          },
          "sourceHandle": {
            "baseClasses": [
              "Document"
            ],
            "dataType": "TextLoader",
            "id": "TextLoader-pakFf"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-gray-900  stroke-connection",
        "animated": false,
        "id": "reactflow__edge-TextLoader-pakFf{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œTextLoaderœ,œidœ:œTextLoader-pakFfœ}-PromptTemplate-DLkHD{œfieldNameœ:œcontextœ,œidœ:œPromptTemplate-DLkHDœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}"
      },
      {
        "source": "PostgresChatMessageHistory-DmjO9",
        "sourceHandle": "{œbaseClassesœ:[œPostgresChatMessageHistoryœ,œBaseChatMessageHistoryœ],œdataTypeœ:œPostgresChatMessageHistoryœ,œidœ:œPostgresChatMessageHistory-DmjO9œ}",
        "target": "ConversationBufferMemory-mkmdQ",
        "targetHandle": "{œfieldNameœ:œchat_memoryœ,œidœ:œConversationBufferMemory-mkmdQœ,œinputTypesœ:null,œtypeœ:œBaseChatMessageHistoryœ}",
        "data": {
          "targetHandle": {
            "fieldName": "chat_memory",
            "id": "ConversationBufferMemory-mkmdQ",
            "inputTypes": null,
            "type": "BaseChatMessageHistory"
          },
          "sourceHandle": {
            "baseClasses": [
              "PostgresChatMessageHistory",
              "BaseChatMessageHistory"
            ],
            "dataType": "PostgresChatMessageHistory",
            "id": "PostgresChatMessageHistory-DmjO9"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-gray-900  stroke-connection",
        "animated": false,
        "id": "reactflow__edge-PostgresChatMessageHistory-DmjO9{œbaseClassesœ:[œPostgresChatMessageHistoryœ,œBaseChatMessageHistoryœ],œdataTypeœ:œPostgresChatMessageHistoryœ,œidœ:œPostgresChatMessageHistory-DmjO9œ}-ConversationBufferMemory-mkmdQ{œfieldNameœ:œchat_memoryœ,œidœ:œConversationBufferMemory-mkmdQœ,œinputTypesœ:null,œtypeœ:œBaseChatMessageHistoryœ}"
      },
      {
        "source": "ConversationBufferMemory-mkmdQ",
        "sourceHandle": "{œbaseClassesœ:[œBaseMemoryœ,œBaseChatMemoryœ,œConversationBufferMemoryœ],œdataTypeœ:œConversationBufferMemoryœ,œidœ:œConversationBufferMemory-mkmdQœ}",
        "target": "LLMChain-W1wOD",
        "targetHandle": "{œfieldNameœ:œmemoryœ,œidœ:œLLMChain-W1wODœ,œinputTypesœ:null,œtypeœ:œBaseMemoryœ}",
        "data": {
          "targetHandle": {
            "fieldName": "memory",
            "id": "LLMChain-W1wOD",
            "inputTypes": null,
            "type": "BaseMemory"
          },
          "sourceHandle": {
            "baseClasses": [
              "BaseMemory",
              "BaseChatMemory",
              "ConversationBufferMemory"
            ],
            "dataType": "ConversationBufferMemory",
            "id": "ConversationBufferMemory-mkmdQ"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-gray-900  stroke-connection",
        "animated": false,
        "id": "reactflow__edge-ConversationBufferMemory-mkmdQ{œbaseClassesœ:[œBaseMemoryœ,œBaseChatMemoryœ,œConversationBufferMemoryœ],œdataTypeœ:œConversationBufferMemoryœ,œidœ:œConversationBufferMemory-mkmdQœ}-LLMChain-W1wOD{œfieldNameœ:œmemoryœ,œidœ:œLLMChain-W1wODœ,œinputTypesœ:null,œtypeœ:œBaseMemoryœ}"
      },
      {
        "source": "ChatOpenAI-o1HwC",
        "sourceHandle": "{œbaseClassesœ:[œBaseLanguageModelœ,œBaseLLMœ,œBaseLanguageModelœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-o1HwCœ}",
        "target": "LLMChain-W1wOD",
        "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œLLMChain-W1wODœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}",
        "data": {
          "targetHandle": {
            "fieldName": "llm",
            "id": "LLMChain-W1wOD",
            "inputTypes": null,
            "type": "BaseLanguageModel"
          },
          "sourceHandle": {
            "baseClasses": [
              "BaseLanguageModel",
              "BaseLLM",
              "BaseLanguageModel"
            ],
            "dataType": "ChatOpenAI",
            "id": "ChatOpenAI-o1HwC"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-gray-900  stroke-connection",
        "animated": false,
        "id": "reactflow__edge-ChatOpenAI-o1HwC{œbaseClassesœ:[œBaseLanguageModelœ,œBaseLLMœ,œBaseLanguageModelœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-o1HwCœ}-LLMChain-W1wOD{œfieldNameœ:œllmœ,œidœ:œLLMChain-W1wODœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}"
      },
      {
        "source": "ChatOpenAI-o1HwC",
        "sourceHandle": "{œbaseClassesœ:[œBaseLanguageModelœ,œBaseLLMœ,œBaseLanguageModelœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-o1HwCœ}",
        "target": "Data-EAsG6",
        "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œData-EAsG6œ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}",
        "data": {
          "targetHandle": {
            "fieldName": "llm",
            "id": "Data-EAsG6",
            "inputTypes": null,
            "type": "BaseLanguageModel"
          },
          "sourceHandle": {
            "baseClasses": [
              "BaseLanguageModel",
              "BaseLLM",
              "BaseLanguageModel"
            ],
            "dataType": "ChatOpenAI",
            "id": "ChatOpenAI-o1HwC"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-gray-900  stroke-connection",
        "animated": false,
        "id": "reactflow__edge-ChatOpenAI-o1HwC{œbaseClassesœ:[œBaseLanguageModelœ,œBaseLLMœ,œBaseLanguageModelœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-o1HwCœ}-Data-EAsG6{œfieldNameœ:œllmœ,œidœ:œData-EAsG6œ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}"
      },
      {
        "source": "ConversationBufferMemory-mkmdQ",
        "sourceHandle": "{œbaseClassesœ:[œBaseMemoryœ,œBaseChatMemoryœ,œConversationBufferMemoryœ],œdataTypeœ:œConversationBufferMemoryœ,œidœ:œConversationBufferMemory-mkmdQœ}",
        "target": "Data-EAsG6",
        "targetHandle": "{œfieldNameœ:œconversationBufferMemoryœ,œidœ:œData-EAsG6œ,œinputTypesœ:null,œtypeœ:œConversationBufferMemoryœ}",
        "data": {
          "targetHandle": {
            "fieldName": "conversationBufferMemory",
            "id": "Data-EAsG6",
            "inputTypes": null,
            "type": "ConversationBufferMemory"
          },
          "sourceHandle": {
            "baseClasses": [
              "BaseMemory",
              "BaseChatMemory",
              "ConversationBufferMemory"
            ],
            "dataType": "ConversationBufferMemory",
            "id": "ConversationBufferMemory-mkmdQ"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-gray-900  stroke-connection",
        "animated": false,
        "id": "reactflow__edge-ConversationBufferMemory-mkmdQ{œbaseClassesœ:[œBaseMemoryœ,œBaseChatMemoryœ,œConversationBufferMemoryœ],œdataTypeœ:œConversationBufferMemoryœ,œidœ:œConversationBufferMemory-mkmdQœ}-Data-EAsG6{œfieldNameœ:œconversationBufferMemoryœ,œidœ:œData-EAsG6œ,œinputTypesœ:null,œtypeœ:œConversationBufferMemoryœ}"
      },
      {
        "source": "Data-EAsG6",
        "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œDataœ,œidœ:œData-EAsG6œ}",
        "target": "Document-n47EP",
        "targetHandle": "{œfieldNameœ:œdocumentœ,œidœ:œDocument-n47EPœ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
        "data": {
          "targetHandle": {
            "fieldName": "document",
            "id": "Document-n47EP",
            "inputTypes": null,
            "type": "Document"
          },
          "sourceHandle": {
            "baseClasses": [
              "Document"
            ],
            "dataType": "Data",
            "id": "Data-EAsG6"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-gray-900  stroke-connection",
        "animated": false,
        "id": "reactflow__edge-Data-EAsG6{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œDataœ,œidœ:œData-EAsG6œ}-Document-n47EP{œfieldNameœ:œdocumentœ,œidœ:œDocument-n47EPœ,œinputTypesœ:null,œtypeœ:œDocumentœ}"
      }
    ],
    "viewport": {
      "x": -300.3571048319902,
      "y": 486.880473933547,
      "zoom": 0.6020943444866795
    }
  },
  "metadata": {
    "ChatOpenAI": {
      "count": 1
    },
    "PromptTemplate": {
      "count": 1
    },
    "Data": {
      "count": 1
    },
    "PostgresChatMessageHistory": {
      "count": 1
    },
    "LLMChain": {
      "count": 1
    },
    "TextLoader": {
      "count": 1
    },
    "ConversationBufferMemory": {
      "count": 1
    },
    "Document": {
      "count": 1
    },
    "total": 8
  },
  "original": {
    "id": "fa00c910-6e1f-47a2-9136-9c57dd442d79",
    "name": "Requirement Prompt template",
    "description": "Craft Language Connections Here.",
    "is_component": false,
    "liked_by_count": "0",
    "downloads_count": "0",
    "metadata": {
      "ChatOpenAI": {
        "count": 1
      },
      "PromptTemplate": {
        "count": 1
      },
      "Data": {
        "count": 1
      },
      "PostgresChatMessageHistory": {
        "count": 1
      },
      "LLMChain": {
        "count": 1
      },
      "TextLoader": {
        "count": 1
      },
      "ConversationBufferMemory": {
        "count": 1
      },
      "Document": {
        "count": 1
      },
      "total": 8
    },
    "last_tested_version": "0.6.17",
    "private": true,
    "data": {
      "nodes": [
        {
          "id": "ChatOpenAI-o1HwC",
          "type": "genericNode",
          "position": {
            "x": 466.2263489721015,
            "y": 669.3890533005252
          },
          "data": {
            "type": "ChatOpenAI",
            "node": {
              "template": {
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from typing import Optional, Union\n\nfrom langchain.llms import BaseLLM\nfrom langchain_community.chat_models.openai import ChatOpenAI\n\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import BaseLanguageModel, NestedDict\n\n\nclass ChatOpenAIComponent(CustomComponent):\n    display_name = \"ChatOpenAI\"\n    description = \"`OpenAI` Chat large language models API.\"\n\n    def build_config(self):\n        return {\n            \"max_tokens\": {\n                \"display_name\": \"Max Tokens\",\n                \"field_type\": \"int\",\n                \"advanced\": False,\n                \"required\": False,\n            },\n            \"model_kwargs\": {\n                \"display_name\": \"Model Kwargs\",\n                \"field_type\": \"NestedDict\",\n                \"advanced\": True,\n                \"required\": False,\n            },\n            \"model_name\": {\n                \"display_name\": \"Model Name\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"options\": [\n                    \"gpt-4-turbo-preview\",\n                    \"gpt-4-0125-preview\",\n                    \"gpt-4-1106-preview\",\n                    \"gpt-4-vision-preview\",\n                    \"gpt-3.5-turbo-0125\",\n                    \"gpt-3.5-turbo-1106\",\n                ],\n            },\n            \"openai_api_base\": {\n                \"display_name\": \"OpenAI API Base\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"info\": (\n                    \"The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\\n\\n\"\n                    \"You can change this to use other APIs like JinaChat, LocalAI and Prem.\"\n                ),\n            },\n            \"openai_api_key\": {\n                \"display_name\": \"OpenAI API Key\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"password\": True,\n            },\n            \"temperature\": {\n                \"display_name\": \"Temperature\",\n                \"field_type\": \"float\",\n                \"advanced\": False,\n                \"required\": False,\n                \"value\": 0.7,\n            },\n        }\n\n    def build(\n        self,\n        max_tokens: Optional[int] = 256,\n        model_kwargs: NestedDict = {},\n        model_name: str = \"gpt-4-1106-preview\",\n        openai_api_base: Optional[str] = None,\n        openai_api_key: Optional[str] = None,\n        temperature: float = 0.7,\n    ) -> Union[BaseLanguageModel, BaseLLM]:\n        if not openai_api_base:\n            openai_api_base = \"https://api.openai.com/v1\"\n        return ChatOpenAI(\n            max_tokens=max_tokens,\n            model_kwargs=model_kwargs,\n            model=model_name,\n            base_url=openai_api_base,\n            api_key=openai_api_key,\n            temperature=temperature,\n        )\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "max_tokens": {
                  "type": "int",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "1500",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "max_tokens",
                  "display_name": "Max Tokens",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "model_kwargs": {
                  "type": "NestedDict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": {},
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "model_kwargs",
                  "display_name": "Model Kwargs",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "model_name": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "gpt-4-vision-preview",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "options": [
                    "gpt-4-turbo-preview",
                    "gpt-4-0125-preview",
                    "gpt-4-1106-preview",
                    "gpt-4-vision-preview",
                    "gpt-3.5-turbo-0125",
                    "gpt-3.5-turbo-1106"
                  ],
                  "name": "model_name",
                  "display_name": "Model Name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "openai_api_base": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "openai_api_base",
                  "display_name": "OpenAI API Base",
                  "advanced": false,
                  "dynamic": false,
                  "info": "The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.",
                  "title_case": true
                },
                "openai_api_key": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": true,
                  "name": "openai_api_key",
                  "display_name": "OpenAI API Key",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "value": ""
                },
                "temperature": {
                  "type": "float",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "0.2",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "temperature",
                  "display_name": "Temperature",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "rangeSpec": {
                    "min": -1,
                    "max": 1,
                    "step": 0.1
                  },
                  "title_case": true
                },
                "_type": "CustomComponent"
              },
              "description": "`OpenAI` Chat large language models API.",
              "base_classes": [
                "BaseLanguageModel",
                "BaseLLM",
                "BaseLanguageModel"
              ],
              "display_name": "ChatOpenAI",
              "documentation": "",
              "custom_fields": {
                "max_tokens": null,
                "model_kwargs": null,
                "model_name": null,
                "openai_api_base": null,
                "openai_api_key": null,
                "temperature": null
              },
              "output_types": [
                "BaseLanguageModel",
                "BaseLLM"
              ],
              "field_formatters": {},
              "beta": true
            },
            "id": "ChatOpenAI-o1HwC",
            "description": "`OpenAI` Chat large language models API.",
            "display_name": "ChatOpenAI"
          },
          "selected": false,
          "width": 384,
          "height": 731,
          "dragging": false,
          "positionAbsolute": {
            "x": 466.2263489721015,
            "y": 669.3890533005252
          }
        },
        {
          "id": "PromptTemplate-DLkHD",
          "type": "genericNode",
          "position": {
            "x": 311.5822988287341,
            "y": -381.3867057978627
          },
          "data": {
            "type": "PromptTemplate",
            "node": {
              "template": {
                "output_parser": {
                  "type": "BaseOutputParser",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "output_parser",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "input_types": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "input_types",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "input_variables": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "input_variables",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true,
                  "value": [
                    "context",
                    "chat_history",
                    "text"
                  ]
                },
                "metadata": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "metadata",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "name": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "name",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "partial_variables": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "partial_variables",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "tags": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": true,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "tags",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "template": {
                  "type": "prompt",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "fileTypes": [],
                  "password": false,
                  "name": "template",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true,
                  "value": "You are a Business Analyst, gathering requirements for an integration project. Your goal is to document all necessary requirements based on the conversation. The conversation will involve a series of questions and answers.\n\nFollow the below steps to have a conversation:\n1.Initiate the conversation with a polite greeting , then enquire for user's name with a statement \"Hello,May I know your name, please?\"\n2.CRITICAL: After user responds with the name, greet back and ask how he/she is doing ?    \n3.CRITICAL:Once the user responds, thank them ,mention you are a bot and briefly explain the purpose of this session.\n4. CRITICAL:Ask the user if they are ready to begin with the requirement gathering. If they are not ready, end the session gracefully.\n5. CRITICAL:If the user is ready, proceed with the first question from the {context} document.\n6. CRITICAL:Wait for the user's response to each question before moving on to the next.Never assume any answer yourself.\n7. CRITICAL:Continue this process until all questions are addressed. Make sure you ask only one question at a time.\n8. CRITICAL:Summarize the responses once all questions are answered and confirm with the user if everything is correct.\n9. Conclude the conversation by thanking the user for their time and providing next steps or follow-up information.\n\nCRITICAL:Ensure to maintain a polite and professional tone throughout the session. Your role is to capture all necessary details to facilitate the effective planning and implementation of the project. Remember, each interaction is critical and should be handled with patience and attention to detail.And don't use the word human/user when waiting for a response from the user, use it something else gracefully. \n\n\n\nCurrent conversation:\n{chat_history}\nUser:{text}\nBusiness Analyst:"
                },
                "template_format": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": "f-string",
                  "fileTypes": [],
                  "password": false,
                  "name": "template_format",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "validate_template": {
                  "type": "bool",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "validate_template",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "_type": "PromptTemplate",
                "context": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "context",
                  "display_name": "context",
                  "advanced": false,
                  "input_types": [
                    "Document",
                    "BaseOutputParser"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "text": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "text",
                  "display_name": "text",
                  "advanced": false,
                  "input_types": [
                    "Document",
                    "BaseOutputParser"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "chat_history": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "chat_history",
                  "display_name": "chat_history",
                  "advanced": false,
                  "input_types": [
                    "Document",
                    "BaseOutputParser"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                }
              },
              "description": "A prompt template for a language model.",
              "icon": null,
              "base_classes": [
                "StringPromptTemplate",
                "BasePromptTemplate",
                "PromptTemplate"
              ],
              "name": "",
              "display_name": "PromptTemplate",
              "documentation": "https://python.langchain.com/docs/modules/model_io/prompts/prompt_templates/",
              "custom_fields": {
                "": [
                  "context",
                  "chat_history",
                  "text"
                ]
              },
              "output_types": [],
              "full_path": null,
              "field_formatters": {},
              "beta": false,
              "error": null
            },
            "id": "PromptTemplate-DLkHD",
            "description": "A prompt template for a language model.",
            "display_name": "PromptTemplate"
          },
          "selected": false,
          "width": 384,
          "height": 563,
          "dragging": false,
          "positionAbsolute": {
            "x": 311.5822988287341,
            "y": -381.3867057978627
          }
        },
        {
          "id": "Data-EAsG6",
          "type": "genericNode",
          "position": {
            "x": 2276.605282953966,
            "y": -366.04286453996826
          },
          "data": {
            "type": "Data",
            "node": {
              "template": {
                "conversationBufferMemory": {
                  "type": "ConversationBufferMemory",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "conversationBufferMemory",
                  "display_name": "ConversationBufferMemory",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "llm": {
                  "type": "BaseLanguageModel",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "llm",
                  "display_name": "LLM",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio import CustomComponent\nfrom langchain_core.documents import Document\nfrom langchain.memory import ConversationBufferMemory\nfrom langchain_openai import OpenAI\nfrom axiestudio.field_typing import BaseLanguageModel\n\nclass Component(CustomComponent):\n    documentation: str = \"http://docs.axiestudio.org/components/custom\"\n\n    def build_config(self):\n        # Configuration parameters for the component\n        return {\"conversationBufferMemory\": {\"display_name\": \"ConversationBufferMemory\"},\n            \"llm\": {\"display_name\": \"LLM\"},\n        }\n\n    def build(self, conversationBufferMemory: ConversationBufferMemory,llm:BaseLanguageModel) -> Document:\n        # Fetch the summary from the conversation memory\n        # Assuming conversationSummaryMemory is a predefined variable storing the summary\n        # memory = ConversationBufferMemory(llm=llm)\n        #memory.save_context({\"input\": \"hi\"},{\"output\": \"hi again\"})\n        # summary_data = memory.load_memory_variables({})\n        \n        # Process the summary data if needed (here we directly use it as it is)\n        \n        # Create a Document object with the summary data\n        # Assuming Document constructor accepts the summary directly or processes it as needed\n        document_output = Document(page_content=str(conversationBufferMemory.load_memory_variables({})))\n        \n        # Return the formatted document\n        return document_output\n\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "_type": "CustomComponent"
              },
              "base_classes": [
                "Document"
              ],
              "display_name": "CustomComponent",
              "documentation": "http://docs.axiestudio.org/components/custom",
              "custom_fields": {
                "conversationBufferMemory": null,
                "llm": null
              },
              "output_types": [
                "Document"
              ],
              "field_formatters": {},
              "beta": true
            },
            "id": "Data-EAsG6",
            "display_name": "CustomComponent"
          },
          "selected": true,
          "width": 384,
          "height": 357,
          "dragging": false,
          "positionAbsolute": {
            "x": 2276.605282953966,
            "y": -366.04286453996826
          }
        },
        {
          "id": "PostgresChatMessageHistory-DmjO9",
          "type": "genericNode",
          "position": {
            "x": 662.3555138198959,
            "y": -884.0031564949768
          },
          "data": {
            "type": "PostgresChatMessageHistory",
            "node": {
              "template": {
                "connection_string": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "postgresql://postgres:postgres@127.0.0.1:5432/postgres",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "connection_string",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "session_id": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "chat1",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "session_id",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "table_name": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "chat_summary1",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "table_name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "_type": "PostgresChatMessageHistory"
              },
              "description": "Memory store with Postgres",
              "base_classes": [
                "PostgresChatMessageHistory",
                "BaseChatMessageHistory"
              ],
              "display_name": "PostgresChatMessageHistory",
              "documentation": "https://python.langchain.com/docs/modules/memory/integrations/postgres_chat_message_history",
              "custom_fields": {},
              "output_types": [],
              "field_formatters": {},
              "beta": false
            },
            "id": "PostgresChatMessageHistory-DmjO9"
          },
          "selected": false,
          "width": 384,
          "height": 477,
          "positionAbsolute": {
            "x": 662.3555138198959,
            "y": -884.0031564949768
          },
          "dragging": false
        },
        {
          "id": "LLMChain-W1wOD",
          "type": "genericNode",
          "position": {
            "x": 1967.9782284662308,
            "y": 575.6026026905972
          },
          "data": {
            "type": "LLMChain",
            "node": {
              "template": {
                "llm": {
                  "type": "BaseLanguageModel",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "llm",
                  "display_name": "LLM",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "memory": {
                  "type": "BaseMemory",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "memory",
                  "display_name": "Memory",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "prompt": {
                  "type": "BasePromptTemplate",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "prompt",
                  "display_name": "Prompt",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from typing import Callable, Optional, Union\n\nfrom langchain.chains import LLMChain\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import (\n    BaseLanguageModel,\n    BaseMemory,\n    BasePromptTemplate,\n    Chain,\n)\n\n\nclass LLMChainComponent(CustomComponent):\n    display_name = \"LLMChain\"\n    description = \"Chain to run queries against LLMs\"\n\n    def build_config(self):\n        return {\n            \"prompt\": {\"display_name\": \"Prompt\"},\n            \"llm\": {\"display_name\": \"LLM\"},\n            \"memory\": {\"display_name\": \"Memory\"},\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        prompt: BasePromptTemplate,\n        llm: BaseLanguageModel,\n        memory: Optional[BaseMemory] = None,\n    ) -> Union[Chain, Callable, LLMChain]:\n        return LLMChain(prompt=prompt, llm=llm, memory=memory)\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "_type": "CustomComponent"
              },
              "description": "Chain to run queries against LLMs",
              "base_classes": [
                "Chain",
                "Callable",
                "LLMChain",
                "Chain"
              ],
              "display_name": "LLMChain",
              "documentation": "",
              "custom_fields": {
                "prompt": null,
                "llm": null,
                "memory": null
              },
              "output_types": [
                "Chain",
                "Callable",
                "LLMChain"
              ],
              "field_formatters": {},
              "beta": true
            },
            "id": "LLMChain-W1wOD",
            "description": "Chain to run queries against LLMs",
            "display_name": "LLMChain"
          },
          "selected": false,
          "width": 384,
          "height": 425,
          "positionAbsolute": {
            "x": 1967.9782284662308,
            "y": 575.6026026905972
          },
          "dragging": false
        },
        {
          "id": "TextLoader-pakFf",
          "type": "genericNode",
          "position": {
            "x": -255.92556591310463,
            "y": -329.63606345078006
          },
          "data": {
            "type": "TextLoader",
            "node": {
              "template": {
                "file_path": {
                  "type": "file",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "",
                  "fileTypes": [
                    ".txt"
                  ],
                  "file_path": "/Users/viaravindakshan/Library/Caches/axiestudio/83e63165-1edd-4140-8c99-c16806d87a8b/2114d9cf07b59773e0145667e2ba73c15aa2001bff4b8e0901ec617a9578bc77.txt",
                  "password": false,
                  "name": "file_path",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "metadata": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": [
                    {
                      "": ""
                    }
                  ],
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "metadata",
                  "display_name": "Metadata",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "_type": "TextLoader"
              },
              "description": "Load text file.",
              "base_classes": [
                "Document"
              ],
              "display_name": "TextLoader",
              "documentation": "https://python.langchain.com/docs/modules/data_connection/document_loaders/",
              "custom_fields": {},
              "output_types": [
                "Document"
              ],
              "field_formatters": {},
              "beta": false
            },
            "id": "TextLoader-pakFf"
          },
          "selected": false,
          "width": 384,
          "height": 367,
          "positionAbsolute": {
            "x": -255.92556591310463,
            "y": -329.63606345078006
          },
          "dragging": false
        },
        {
          "id": "ConversationBufferMemory-mkmdQ",
          "type": "genericNode",
          "position": {
            "x": 1285.1496076180724,
            "y": -1148.6769566328064
          },
          "data": {
            "type": "ConversationBufferMemory",
            "node": {
              "template": {
                "chat_memory": {
                  "type": "BaseChatMessageHistory",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "chat_memory",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "ai_prefix": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": "AI",
                  "fileTypes": [],
                  "password": false,
                  "name": "ai_prefix",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "human_prefix": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": "Human",
                  "fileTypes": [],
                  "password": false,
                  "name": "human_prefix",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "input_key": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "input_key",
                  "advanced": false,
                  "dynamic": false,
                  "info": "The variable to be used as Chat Input when more than one variable is available.",
                  "title_case": true
                },
                "memory_key": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "chat_history",
                  "fileTypes": [],
                  "password": false,
                  "name": "memory_key",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "output_key": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "output_key",
                  "advanced": false,
                  "dynamic": false,
                  "info": "The variable to be used as Chat Output (e.g. answer in a ConversationalRetrievalChain)",
                  "title_case": true
                },
                "return_messages": {
                  "type": "bool",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "return_messages",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "value": false
                },
                "_type": "ConversationBufferMemory"
              },
              "description": "Buffer for storing conversation memory.",
              "base_classes": [
                "BaseMemory",
                "BaseChatMemory",
                "ConversationBufferMemory"
              ],
              "display_name": "ConversationBufferMemory",
              "documentation": "https://python.langchain.com/docs/modules/memory/how_to/buffer",
              "custom_fields": {},
              "output_types": [],
              "field_formatters": {},
              "beta": false
            },
            "id": "ConversationBufferMemory-mkmdQ"
          },
          "selected": false,
          "width": 384,
          "height": 601,
          "positionAbsolute": {
            "x": 1285.1496076180724,
            "y": -1148.6769566328064
          },
          "dragging": false
        },
        {
          "id": "Document-n47EP",
          "type": "genericNode",
          "position": {
            "x": 2842.1305139566093,
            "y": 248.1387924052543
          },
          "data": {
            "type": "Document",
            "node": {
              "template": {
                "document": {
                  "type": "Document",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "document",
                  "display_name": "Document",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from typing import Optional\n\nimport requests\nfrom langchain_core.documents import Document\nfrom axiestudio import CustomComponent\nfrom axiestudio.services.database.models.base import orjson_dumps\n\n\nclass PostRequest(CustomComponent):\n    display_name: str = \"POST Request\"\n    description: str = \"Make a POST request to the given URL.\"\n    output_types: list[str] = [\"Document\"]\n    documentation: str = \"https://docs.axiestudio.org/components/utilities#post-request\"\n    beta: bool = True\n    field_config = {\n        \"url\": {\"display_name\": \"URL\", \"info\": \"The URL to make the request to.\"},\n        \"headers\": {\n            \"display_name\": \"Headers\",\n            \"info\": \"The headers to send with the request.\",\n        },\n        \"code\": {\"show\": False},\n        \"document\": {\"display_name\": \"Document\"},\n    }\n\n    def post_document(\n        self,\n        session: requests.Session,\n        document: Document,\n        url: str,\n        headers: Optional[dict] = None,\n    ) -> Document:\n        try:\n            response = session.post(url, headers=headers, data=document.page_content)\n            try:\n                response_json = response.json()\n                result = orjson_dumps(response_json, indent_2=False)\n            except Exception:\n                result = response.text\n            self.repr_value = result\n            return Document(\n                page_content=result,\n                metadata={\n                    \"source\": url,\n                    \"headers\": headers,\n                    \"status_code\": response,\n                },\n            )\n        except Exception as exc:\n            return Document(\n                page_content=str(exc),\n                metadata={\n                    \"source\": url,\n                    \"headers\": headers,\n                    \"status_code\": 500,\n                },\n            )\n\n    def build(\n        self,\n        document: Document,\n        url: str,\n        headers: Optional[dict] = None,\n    ) -> list[Document]:\n        if headers is None:\n            headers = {}\n\n        if not isinstance(document, list) and isinstance(document, Document):\n            documents: list[Document] = [document]\n        elif isinstance(document, list) and all(isinstance(doc, Document) for doc in document):\n            documents = document\n        else:\n            raise ValueError(\"document must be a Document or a list of Documents\")\n\n        with requests.Session() as session:\n            documents = [self.post_document(session, doc, url, headers) for doc in documents]\n            self.repr_value = documents\n        return documents\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "headers": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "headers",
                  "display_name": "Headers",
                  "advanced": false,
                  "dynamic": false,
                  "info": "The headers to send with the request.",
                  "title_case": true,
                  "value": [
                    {
                      "Content-Type": "text/plain"
                    },
                    {
                      "": ""
                    }
                  ]
                },
                "url": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "url",
                  "display_name": "URL",
                  "advanced": false,
                  "dynamic": false,
                  "info": "The URL to make the request to.",
                  "title_case": true,
                  "value": "http://localhost:3001/test"
                },
                "_type": "CustomComponent"
              },
              "description": "Make a POST request to the given URL.",
              "base_classes": [
                "Document"
              ],
              "display_name": "POST Request",
              "documentation": "https://docs.axiestudio.org/components/utilities#post-request",
              "custom_fields": {
                "document": null,
                "url": null,
                "headers": null
              },
              "output_types": [
                "Document"
              ],
              "field_formatters": {},
              "beta": true
            },
            "id": "Document-n47EP"
          },
          "selected": false,
          "width": 384,
          "height": 559,
          "dragging": false
        }
      ],
      "edges": [
        {
          "source": "PromptTemplate-DLkHD",
          "sourceHandle": "{œbaseClassesœ:[œStringPromptTemplateœ,œBasePromptTemplateœ,œPromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-DLkHDœ}",
          "target": "LLMChain-W1wOD",
          "targetHandle": "{œfieldNameœ:œpromptœ,œidœ:œLLMChain-W1wODœ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}",
          "data": {
            "targetHandle": {
              "fieldName": "prompt",
              "id": "LLMChain-W1wOD",
              "inputTypes": null,
              "type": "BasePromptTemplate"
            },
            "sourceHandle": {
              "baseClasses": [
                "StringPromptTemplate",
                "BasePromptTemplate",
                "PromptTemplate"
              ],
              "dataType": "PromptTemplate",
              "id": "PromptTemplate-DLkHD"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-gray-900  stroke-connection",
          "animated": false,
          "id": "reactflow__edge-PromptTemplate-DLkHD{œbaseClassesœ:[œStringPromptTemplateœ,œBasePromptTemplateœ,œPromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-DLkHDœ}-LLMChain-W1wOD{œfieldNameœ:œpromptœ,œidœ:œLLMChain-W1wODœ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}"
        },
        {
          "source": "TextLoader-pakFf",
          "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œTextLoaderœ,œidœ:œTextLoader-pakFfœ}",
          "target": "PromptTemplate-DLkHD",
          "targetHandle": "{œfieldNameœ:œcontextœ,œidœ:œPromptTemplate-DLkHDœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}",
          "data": {
            "targetHandle": {
              "fieldName": "context",
              "id": "PromptTemplate-DLkHD",
              "inputTypes": [
                "Document",
                "BaseOutputParser"
              ],
              "type": "str"
            },
            "sourceHandle": {
              "baseClasses": [
                "Document"
              ],
              "dataType": "TextLoader",
              "id": "TextLoader-pakFf"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-gray-900  stroke-connection",
          "animated": false,
          "id": "reactflow__edge-TextLoader-pakFf{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œTextLoaderœ,œidœ:œTextLoader-pakFfœ}-PromptTemplate-DLkHD{œfieldNameœ:œcontextœ,œidœ:œPromptTemplate-DLkHDœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}"
        },
        {
          "source": "PostgresChatMessageHistory-DmjO9",
          "sourceHandle": "{œbaseClassesœ:[œPostgresChatMessageHistoryœ,œBaseChatMessageHistoryœ],œdataTypeœ:œPostgresChatMessageHistoryœ,œidœ:œPostgresChatMessageHistory-DmjO9œ}",
          "target": "ConversationBufferMemory-mkmdQ",
          "targetHandle": "{œfieldNameœ:œchat_memoryœ,œidœ:œConversationBufferMemory-mkmdQœ,œinputTypesœ:null,œtypeœ:œBaseChatMessageHistoryœ}",
          "data": {
            "targetHandle": {
              "fieldName": "chat_memory",
              "id": "ConversationBufferMemory-mkmdQ",
              "inputTypes": null,
              "type": "BaseChatMessageHistory"
            },
            "sourceHandle": {
              "baseClasses": [
                "PostgresChatMessageHistory",
                "BaseChatMessageHistory"
              ],
              "dataType": "PostgresChatMessageHistory",
              "id": "PostgresChatMessageHistory-DmjO9"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-gray-900  stroke-connection",
          "animated": false,
          "id": "reactflow__edge-PostgresChatMessageHistory-DmjO9{œbaseClassesœ:[œPostgresChatMessageHistoryœ,œBaseChatMessageHistoryœ],œdataTypeœ:œPostgresChatMessageHistoryœ,œidœ:œPostgresChatMessageHistory-DmjO9œ}-ConversationBufferMemory-mkmdQ{œfieldNameœ:œchat_memoryœ,œidœ:œConversationBufferMemory-mkmdQœ,œinputTypesœ:null,œtypeœ:œBaseChatMessageHistoryœ}"
        },
        {
          "source": "ConversationBufferMemory-mkmdQ",
          "sourceHandle": "{œbaseClassesœ:[œBaseMemoryœ,œBaseChatMemoryœ,œConversationBufferMemoryœ],œdataTypeœ:œConversationBufferMemoryœ,œidœ:œConversationBufferMemory-mkmdQœ}",
          "target": "LLMChain-W1wOD",
          "targetHandle": "{œfieldNameœ:œmemoryœ,œidœ:œLLMChain-W1wODœ,œinputTypesœ:null,œtypeœ:œBaseMemoryœ}",
          "data": {
            "targetHandle": {
              "fieldName": "memory",
              "id": "LLMChain-W1wOD",
              "inputTypes": null,
              "type": "BaseMemory"
            },
            "sourceHandle": {
              "baseClasses": [
                "BaseMemory",
                "BaseChatMemory",
                "ConversationBufferMemory"
              ],
              "dataType": "ConversationBufferMemory",
              "id": "ConversationBufferMemory-mkmdQ"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-gray-900  stroke-connection",
          "animated": false,
          "id": "reactflow__edge-ConversationBufferMemory-mkmdQ{œbaseClassesœ:[œBaseMemoryœ,œBaseChatMemoryœ,œConversationBufferMemoryœ],œdataTypeœ:œConversationBufferMemoryœ,œidœ:œConversationBufferMemory-mkmdQœ}-LLMChain-W1wOD{œfieldNameœ:œmemoryœ,œidœ:œLLMChain-W1wODœ,œinputTypesœ:null,œtypeœ:œBaseMemoryœ}"
        },
        {
          "source": "ChatOpenAI-o1HwC",
          "sourceHandle": "{œbaseClassesœ:[œBaseLanguageModelœ,œBaseLLMœ,œBaseLanguageModelœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-o1HwCœ}",
          "target": "LLMChain-W1wOD",
          "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œLLMChain-W1wODœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}",
          "data": {
            "targetHandle": {
              "fieldName": "llm",
              "id": "LLMChain-W1wOD",
              "inputTypes": null,
              "type": "BaseLanguageModel"
            },
            "sourceHandle": {
              "baseClasses": [
                "BaseLanguageModel",
                "BaseLLM",
                "BaseLanguageModel"
              ],
              "dataType": "ChatOpenAI",
              "id": "ChatOpenAI-o1HwC"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-gray-900  stroke-connection",
          "animated": false,
          "id": "reactflow__edge-ChatOpenAI-o1HwC{œbaseClassesœ:[œBaseLanguageModelœ,œBaseLLMœ,œBaseLanguageModelœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-o1HwCœ}-LLMChain-W1wOD{œfieldNameœ:œllmœ,œidœ:œLLMChain-W1wODœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}"
        },
        {
          "source": "ChatOpenAI-o1HwC",
          "sourceHandle": "{œbaseClassesœ:[œBaseLanguageModelœ,œBaseLLMœ,œBaseLanguageModelœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-o1HwCœ}",
          "target": "Data-EAsG6",
          "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œData-EAsG6œ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}",
          "data": {
            "targetHandle": {
              "fieldName": "llm",
              "id": "Data-EAsG6",
              "inputTypes": null,
              "type": "BaseLanguageModel"
            },
            "sourceHandle": {
              "baseClasses": [
                "BaseLanguageModel",
                "BaseLLM",
                "BaseLanguageModel"
              ],
              "dataType": "ChatOpenAI",
              "id": "ChatOpenAI-o1HwC"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-gray-900  stroke-connection",
          "animated": false,
          "id": "reactflow__edge-ChatOpenAI-o1HwC{œbaseClassesœ:[œBaseLanguageModelœ,œBaseLLMœ,œBaseLanguageModelœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-o1HwCœ}-Data-EAsG6{œfieldNameœ:œllmœ,œidœ:œData-EAsG6œ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}"
        },
        {
          "source": "ConversationBufferMemory-mkmdQ",
          "sourceHandle": "{œbaseClassesœ:[œBaseMemoryœ,œBaseChatMemoryœ,œConversationBufferMemoryœ],œdataTypeœ:œConversationBufferMemoryœ,œidœ:œConversationBufferMemory-mkmdQœ}",
          "target": "Data-EAsG6",
          "targetHandle": "{œfieldNameœ:œconversationBufferMemoryœ,œidœ:œData-EAsG6œ,œinputTypesœ:null,œtypeœ:œConversationBufferMemoryœ}",
          "data": {
            "targetHandle": {
              "fieldName": "conversationBufferMemory",
              "id": "Data-EAsG6",
              "inputTypes": null,
              "type": "ConversationBufferMemory"
            },
            "sourceHandle": {
              "baseClasses": [
                "BaseMemory",
                "BaseChatMemory",
                "ConversationBufferMemory"
              ],
              "dataType": "ConversationBufferMemory",
              "id": "ConversationBufferMemory-mkmdQ"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-gray-900  stroke-connection",
          "animated": false,
          "id": "reactflow__edge-ConversationBufferMemory-mkmdQ{œbaseClassesœ:[œBaseMemoryœ,œBaseChatMemoryœ,œConversationBufferMemoryœ],œdataTypeœ:œConversationBufferMemoryœ,œidœ:œConversationBufferMemory-mkmdQœ}-Data-EAsG6{œfieldNameœ:œconversationBufferMemoryœ,œidœ:œData-EAsG6œ,œinputTypesœ:null,œtypeœ:œConversationBufferMemoryœ}"
        },
        {
          "source": "Data-EAsG6",
          "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œDataœ,œidœ:œData-EAsG6œ}",
          "target": "Document-n47EP",
          "targetHandle": "{œfieldNameœ:œdocumentœ,œidœ:œDocument-n47EPœ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
          "data": {
            "targetHandle": {
              "fieldName": "document",
              "id": "Document-n47EP",
              "inputTypes": null,
              "type": "Document"
            },
            "sourceHandle": {
              "baseClasses": [
                "Document"
              ],
              "dataType": "Data",
              "id": "Data-EAsG6"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-gray-900  stroke-connection",
          "animated": false,
          "id": "reactflow__edge-Data-EAsG6{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œDataœ,œidœ:œData-EAsG6œ}-Document-n47EP{œfieldNameœ:œdocumentœ,œidœ:œDocument-n47EPœ,œinputTypesœ:null,œtypeœ:œDocumentœ}"
        }
      ],
      "viewport": {
        "x": -300.3571048319902,
        "y": 486.880473933547,
        "zoom": 0.6020943444866795
      }
    },
    "date_created": "2024-05-01T12:36:22.765Z",
    "date_updated": "2024-05-01T12:36:22.801Z",
    "status": "Public",
    "sort": null,
    "user_updated": "dbb5e9af-0c67-41e1-bbdb-2f5857c516f6",
    "user_created": {
      "username": "vinu_lang",
      "first_name": "Vineeth",
      "last_name": "Aravindakshan",
      "id": "dbb5e9af-0c67-41e1-bbdb-2f5857c516f6"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:08.326Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 26,
    "converter_version": "1.0.0"
  }
}