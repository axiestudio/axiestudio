{
  "id": "3de01311-5e02-4c5a-afa2-fcaec5a8be50",
  "name": "CrewAi",
  "description": "This component initializes a crew to execute tasks with multiple agents. (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "COMPONENT",
  "is_component": true,
  "author": {
    "username": "jinliuxi",
    "first_name": "liuxi",
    "last_name": "jin",
    "id": "646ee822-f1c3-42da-ab6d-6ebe17c03e60",
    "full_name": "liuxi jin"
  },
  "store_url": "https://www.langflow.store/store/component/3de01311-5e02-4c5a-afa2-fcaec5a8be50",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-08-16T13:43:57.360Z",
    "updated": "2024-08-16T13:43:57.410Z",
    "downloaded": "2025-08-19T17:50:06.361Z"
  },
  "tags": [
    {
      "tags_id": {
        "name": "Chain",
        "id": "d442c88b-f8d0-4010-8752-16a644c7ac8e"
      }
    }
  ],
  "technical": {
    "last_tested_version": "1.0.15",
    "private": false,
    "status": "Public"
  },
  "data": {
    "edges": [],
    "nodes": [
      {
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "agents": {
                "type": "Agent",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "agents",
                "display_name": "Agents",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "tasks": {
                "type": "Task",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "tasks",
                "display_name": "Tasks",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio import CustomComponent\r\nfrom crewai import Crew, Task, Agent\r\nfrom typing import List, Optional\r\nfrom axiestudio.field_typing import Text\r\n\r\nclass CrewComponent(CustomComponent):\r\n    display_name: str = \"Initialize Crew\"\r\n    description: str = \"This component initializes a crew to execute tasks with multiple agents.\"\r\n\r\n    def build_config(self):\r\n        return {\r\n            \"agents\": {\"display_name\": \"Agents\", \"type\": \"list\", \"item_type\": \"Agent\"},  # Define a entrada como lista de Agent\r\n            \"tasks\": {\"display_name\": \"Tasks\", \"type\": \"list\", \"item_type\": \"Task\"},  # Define a entrada como lista de Task\r\n            \"topic\": {\"display_name\": \"Topic\", \"type\": \"str\", \"required\": False, \"value\": \"\"},  # New topic field\r\n            \"verbose\": {\"display_name\": \"Verbose Level\", \"value\": 2},\r\n            \"max_iterations\": {\"display_name\": \"Max Iterations\", \"value\": 10},\r\n        }\r\n\r\n    def build(self, agents: List[Agent], tasks: List[Task], topic: Optional[str], verbose: int, max_iterations: int) -> Text:\r\n        \"\"\"Constr√≥i o objeto Crew e executa as tarefas com os agentes coletados.\"\"\"\r\n        if not agents or not tasks:\r\n            raise ValueError(\"No agents or tasks have been added.\")\r\n        \r\n        inputs = {\r\n            'topic':topic\r\n        }\r\n        # Use the topic to guide the tasks or modify task execution context here if necessary\r\n        response = Crew(\r\n            agents=agents,\r\n            tasks=tasks,\r\n            verbose=verbose,\r\n            max_iterations=max_iterations\r\n        )\r\n        return response.kickoff(inputs=inputs)  # Assuming kickoff returns Text type or adjust accordingly\r\n\r\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "max_iterations": {
                "type": "int",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "2",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "max_iterations",
                "display_name": "Max Iterations",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "topic": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "topic",
                "display_name": "Topic",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              },
              "verbose": {
                "type": "int",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": 2,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "verbose",
                "display_name": "Verbose Level",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "_type": "CustomComponent"
            },
            "description": "This component initializes a crew to execute tasks with multiple agents.",
            "base_classes": [
              "object",
              "str",
              "Text"
            ],
            "display_name": "CrewAi",
            "documentation": "",
            "custom_fields": {
              "agents": null,
              "tasks": null,
              "topic": null,
              "verbose": null,
              "max_iterations": null
            },
            "output_types": [
              "Text"
            ],
            "field_formatters": {},
            "frozen": false,
            "field_order": [],
            "beta": false,
            "official": false,
            "outputs": [
              {
                "types": [
                  "Text"
                ],
                "selected": "Text",
                "name": "Text",
                "display_name": "Text"
              }
            ]
          },
          "id": "CustomComponent-c1MyX"
        },
        "id": "CustomComponent-c1MyX",
        "position": {
          "x": 0,
          "y": 0
        },
        "type": "genericNode"
      }
    ],
    "viewport": {
      "x": 1,
      "y": 1,
      "zoom": 1
    }
  },
  "metadata": {
    "CustomComponent": {
      "count": 1
    },
    "total": 1
  },
  "original": {
    "id": "3de01311-5e02-4c5a-afa2-fcaec5a8be50",
    "name": "CrewAi",
    "description": "This component initializes a crew to execute tasks with multiple agents.",
    "is_component": true,
    "liked_by_count": "30",
    "downloads_count": "263",
    "metadata": {
      "CustomComponent": {
        "count": 1
      },
      "total": 1
    },
    "last_tested_version": "1.0.15",
    "private": false,
    "data": {
      "edges": [],
      "nodes": [
        {
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "agents": {
                  "type": "Agent",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "agents",
                  "display_name": "Agents",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "tasks": {
                  "type": "Task",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "tasks",
                  "display_name": "Tasks",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio import CustomComponent\r\nfrom crewai import Crew, Task, Agent\r\nfrom typing import List, Optional\r\nfrom axiestudio.field_typing import Text\r\n\r\nclass CrewComponent(CustomComponent):\r\n    display_name: str = \"Initialize Crew\"\r\n    description: str = \"This component initializes a crew to execute tasks with multiple agents.\"\r\n\r\n    def build_config(self):\r\n        return {\r\n            \"agents\": {\"display_name\": \"Agents\", \"type\": \"list\", \"item_type\": \"Agent\"},  # Define a entrada como lista de Agent\r\n            \"tasks\": {\"display_name\": \"Tasks\", \"type\": \"list\", \"item_type\": \"Task\"},  # Define a entrada como lista de Task\r\n            \"topic\": {\"display_name\": \"Topic\", \"type\": \"str\", \"required\": False, \"value\": \"\"},  # New topic field\r\n            \"verbose\": {\"display_name\": \"Verbose Level\", \"value\": 2},\r\n            \"max_iterations\": {\"display_name\": \"Max Iterations\", \"value\": 10},\r\n        }\r\n\r\n    def build(self, agents: List[Agent], tasks: List[Task], topic: Optional[str], verbose: int, max_iterations: int) -> Text:\r\n        \"\"\"Constr√≥i o objeto Crew e executa as tarefas com os agentes coletados.\"\"\"\r\n        if not agents or not tasks:\r\n            raise ValueError(\"No agents or tasks have been added.\")\r\n        \r\n        inputs = {\r\n            'topic':topic\r\n        }\r\n        # Use the topic to guide the tasks or modify task execution context here if necessary\r\n        response = Crew(\r\n            agents=agents,\r\n            tasks=tasks,\r\n            verbose=verbose,\r\n            max_iterations=max_iterations\r\n        )\r\n        return response.kickoff(inputs=inputs)  # Assuming kickoff returns Text type or adjust accordingly\r\n\r\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "max_iterations": {
                  "type": "int",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "2",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "max_iterations",
                  "display_name": "Max Iterations",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "topic": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "topic",
                  "display_name": "Topic",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                },
                "verbose": {
                  "type": "int",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": 2,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "verbose",
                  "display_name": "Verbose Level",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "_type": "CustomComponent"
              },
              "description": "This component initializes a crew to execute tasks with multiple agents.",
              "base_classes": [
                "object",
                "str",
                "Text"
              ],
              "display_name": "CrewAi",
              "documentation": "",
              "custom_fields": {
                "agents": null,
                "tasks": null,
                "topic": null,
                "verbose": null,
                "max_iterations": null
              },
              "output_types": [
                "Text"
              ],
              "field_formatters": {},
              "frozen": false,
              "field_order": [],
              "beta": false,
              "official": false,
              "outputs": [
                {
                  "types": [
                    "Text"
                  ],
                  "selected": "Text",
                  "name": "Text",
                  "display_name": "Text"
                }
              ]
            },
            "id": "CustomComponent-c1MyX"
          },
          "id": "CustomComponent-c1MyX",
          "position": {
            "x": 0,
            "y": 0
          },
          "type": "genericNode"
        }
      ],
      "viewport": {
        "x": 1,
        "y": 1,
        "zoom": 1
      }
    },
    "date_created": "2024-08-16T13:43:57.360Z",
    "date_updated": "2024-08-16T13:43:57.410Z",
    "status": "Public",
    "sort": null,
    "user_updated": "646ee822-f1c3-42da-ab6d-6ebe17c03e60",
    "user_created": {
      "username": "jinliuxi",
      "first_name": "liuxi",
      "last_name": "jin",
      "id": "646ee822-f1c3-42da-ab6d-6ebe17c03e60"
    },
    "tags": [
      {
        "tags_id": {
          "name": "Chain",
          "id": "d442c88b-f8d0-4010-8752-16a644c7ac8e"
        }
      }
    ]
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:09.753Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 4,
    "converter_version": "1.0.0"
  }
}