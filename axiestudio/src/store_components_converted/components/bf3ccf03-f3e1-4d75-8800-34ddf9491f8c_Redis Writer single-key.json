{
  "id": "bf3ccf03-f3e1-4d75-8800-34ddf9491f8c",
  "name": "Redis Writer (single-key)",
  "description": "Writes key-value pair to a Redis store. (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "COMPONENT",
  "is_component": true,
  "author": {
    "username": "appoks",
    "first_name": "Johnathan Rad端nz",
    "last_name": "Rad端nz",
    "id": "91fd1e9c-c965-4845-a8ce-b81d962e690b",
    "full_name": "Johnathan Rad端nz Rad端nz"
  },
  "store_url": "https://www.langflow.store/store/component/bf3ccf03-f3e1-4d75-8800-34ddf9491f8c",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-08-04T15:45:33.918Z",
    "updated": "2024-08-04T22:57:03.293Z",
    "downloaded": "2025-08-19T17:50:04.982Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "1.0.14",
    "private": false,
    "status": "Public"
  },
  "data": {
    "edges": [],
    "nodes": [
      {
        "data": {
          "type": "RdnzRedisWriterSingle",
          "node": {
            "template": {
              "_type": "Component",
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "import redis\nfrom axiestudio.custom import Component\nfrom axiestudio.io import MessageTextInput, BoolInput, Output\nfrom axiestudio.schema import Data\n\nclass RedisWriterComponent(Component):\n    name = \"RdnzRedisWriterSingle\"\n    icon = \"layers-3\"\n    display_name = \"Redis Writer (single-key)\"\n    description = \"Writes key-value pair to a Redis store.\"\n\n    inputs = [\n        MessageTextInput(\n            name=\"key\",\n            display_name=\"Key\",\n            info=\"The key to store in Redis.\",\n        ),\n        MessageTextInput(\n            name=\"value\",\n            display_name=\"Value\",\n            info=\"The value to store in Redis.\",\n        ),\n        MessageTextInput(\n            name=\"redis_url\",\n            display_name=\"Redis URL\",\n            info=\"The URL for the Redis connection.\",\n            value=\"redis://localhost:6379\",\n            advanced=True,\n        ),\n        BoolInput(\n            name=\"override\",\n            display_name=\"Override Existing\",\n            info=\"Whether to override the key if it already exists.\",\n            advanced=True,\n        ),\n    ]\n\n    outputs = [\n        Output(display_name=\"Redis Response\", name=\"redis_response\", method=\"write_to_redis\"),\n    ]\n\n    def write_to_redis(self) -> Data:\n        key = self.key\n        value = self.value\n        redis_url = self.redis_url\n        override = self.override\n\n        try:\n            # Connect to Redis\n            r = redis.from_url(redis_url)\n\n            # Check if the key exists and if we should override\n            if not override and r.exists(key):\n                result = \"Key already exists. Set 'Override Existing' to True to overwrite.\"\n            else:\n                # Write to Redis\n                result = r.set(key, value, nx=not override)\n                if result:\n                    result = \"OK\"  # Mimic Redis SET response\n                else:\n                    result = \"Failed to set value\"\n\n            self.status = f\"Write operation completed: {result}\"\n            return Data(data={\"result\": result})\n        except redis.RedisError as e:\n            self.status = f\"Redis error: {str(e)}\"\n            raise\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "key": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "",
                "name": "key",
                "display_name": "Key",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "The key to store in Redis.",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              },
              "override": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": false,
                "name": "override",
                "display_name": "Override Existing",
                "advanced": false,
                "dynamic": false,
                "info": "Whether to override the key if it already exists.",
                "title_case": false,
                "type": "bool",
                "_input_type": "BoolInput",
                "load_from_db": false
              },
              "redis_url": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "redis://localhost:6379",
                "name": "redis_url",
                "display_name": "Redis URL",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "The URL for the Redis connection.",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              },
              "value": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "",
                "name": "value",
                "display_name": "Value",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "The value to store in Redis.",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              }
            },
            "description": "Writes key-value pair to a Redis store.",
            "icon": "layers-3",
            "base_classes": [
              "Data"
            ],
            "display_name": "Redis Writer (single-key)",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Data"
                ],
                "selected": "Data",
                "name": "redis_response",
                "display_name": "Redis Response",
                "method": "write_to_redis",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "key",
              "value",
              "redis_url",
              "override"
            ],
            "beta": false,
            "edited": true,
            "official": false
          },
          "id": "RedisWriter-VsW4c"
        },
        "id": "RedisWriter-VsW4c",
        "position": {
          "x": 0,
          "y": 0
        },
        "type": "genericNode"
      }
    ],
    "viewport": {
      "x": 1,
      "y": 1,
      "zoom": 1
    }
  },
  "metadata": {
    "RedisWriter": {
      "count": 1
    },
    "total": 1
  },
  "original": {
    "id": "bf3ccf03-f3e1-4d75-8800-34ddf9491f8c",
    "name": "Redis Writer (single-key)",
    "description": "Writes key-value pair to a Redis store.",
    "is_component": true,
    "liked_by_count": "5",
    "downloads_count": "45",
    "metadata": {
      "RedisWriter": {
        "count": 1
      },
      "total": 1
    },
    "last_tested_version": "1.0.14",
    "private": false,
    "data": {
      "edges": [],
      "nodes": [
        {
          "data": {
            "type": "RdnzRedisWriterSingle",
            "node": {
              "template": {
                "_type": "Component",
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "import redis\nfrom axiestudio.custom import Component\nfrom axiestudio.io import MessageTextInput, BoolInput, Output\nfrom axiestudio.schema import Data\n\nclass RedisWriterComponent(Component):\n    name = \"RdnzRedisWriterSingle\"\n    icon = \"layers-3\"\n    display_name = \"Redis Writer (single-key)\"\n    description = \"Writes key-value pair to a Redis store.\"\n\n    inputs = [\n        MessageTextInput(\n            name=\"key\",\n            display_name=\"Key\",\n            info=\"The key to store in Redis.\",\n        ),\n        MessageTextInput(\n            name=\"value\",\n            display_name=\"Value\",\n            info=\"The value to store in Redis.\",\n        ),\n        MessageTextInput(\n            name=\"redis_url\",\n            display_name=\"Redis URL\",\n            info=\"The URL for the Redis connection.\",\n            value=\"redis://localhost:6379\",\n            advanced=True,\n        ),\n        BoolInput(\n            name=\"override\",\n            display_name=\"Override Existing\",\n            info=\"Whether to override the key if it already exists.\",\n            advanced=True,\n        ),\n    ]\n\n    outputs = [\n        Output(display_name=\"Redis Response\", name=\"redis_response\", method=\"write_to_redis\"),\n    ]\n\n    def write_to_redis(self) -> Data:\n        key = self.key\n        value = self.value\n        redis_url = self.redis_url\n        override = self.override\n\n        try:\n            # Connect to Redis\n            r = redis.from_url(redis_url)\n\n            # Check if the key exists and if we should override\n            if not override and r.exists(key):\n                result = \"Key already exists. Set 'Override Existing' to True to overwrite.\"\n            else:\n                # Write to Redis\n                result = r.set(key, value, nx=not override)\n                if result:\n                    result = \"OK\"  # Mimic Redis SET response\n                else:\n                    result = \"Failed to set value\"\n\n            self.status = f\"Write operation completed: {result}\"\n            return Data(data={\"result\": result})\n        except redis.RedisError as e:\n            self.status = f\"Redis error: {str(e)}\"\n            raise\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "key": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "",
                  "name": "key",
                  "display_name": "Key",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "The key to store in Redis.",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MessageTextInput"
                },
                "override": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": false,
                  "name": "override",
                  "display_name": "Override Existing",
                  "advanced": false,
                  "dynamic": false,
                  "info": "Whether to override the key if it already exists.",
                  "title_case": false,
                  "type": "bool",
                  "_input_type": "BoolInput",
                  "load_from_db": false
                },
                "redis_url": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "redis://localhost:6379",
                  "name": "redis_url",
                  "display_name": "Redis URL",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "The URL for the Redis connection.",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MessageTextInput"
                },
                "value": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "",
                  "name": "value",
                  "display_name": "Value",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "The value to store in Redis.",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MessageTextInput"
                }
              },
              "description": "Writes key-value pair to a Redis store.",
              "icon": "layers-3",
              "base_classes": [
                "Data"
              ],
              "display_name": "Redis Writer (single-key)",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Data"
                  ],
                  "selected": "Data",
                  "name": "redis_response",
                  "display_name": "Redis Response",
                  "method": "write_to_redis",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "key",
                "value",
                "redis_url",
                "override"
              ],
              "beta": false,
              "edited": true,
              "official": false
            },
            "id": "RedisWriter-VsW4c"
          },
          "id": "RedisWriter-VsW4c",
          "position": {
            "x": 0,
            "y": 0
          },
          "type": "genericNode"
        }
      ],
      "viewport": {
        "x": 1,
        "y": 1,
        "zoom": 1
      }
    },
    "date_created": "2024-08-04T15:45:33.918Z",
    "date_updated": "2024-08-04T22:57:03.293Z",
    "status": "Public",
    "sort": null,
    "user_updated": "91fd1e9c-c965-4845-a8ce-b81d962e690b",
    "user_created": {
      "username": "appoks",
      "first_name": "Johnathan Rad端nz",
      "last_name": "Rad端nz",
      "id": "91fd1e9c-c965-4845-a8ce-b81d962e690b"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:11.634Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 6,
    "converter_version": "1.0.0"
  }
}