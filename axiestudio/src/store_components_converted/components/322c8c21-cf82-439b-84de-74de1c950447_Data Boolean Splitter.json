{
  "id": "322c8c21-cf82-439b-84de-74de1c950447",
  "name": "Data Boolean Splitter",
  "description": "Split flow based on a boolean key in the input Data.\n\nAny of: `'true', '1', 'yes', 'y', 'on'` is True (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "COMPONENT",
  "is_component": true,
  "author": {
    "username": "NamastexLabs",
    "first_name": "Felipe",
    "last_name": "Rosa",
    "id": "37095b75-b1f7-4e35-aea6-bcc9bbf1e2c7",
    "full_name": "Felipe Rosa"
  },
  "store_url": "https://www.langflow.store/store/component/322c8c21-cf82-439b-84de-74de1c950447",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-09-05T03:10:18.701Z",
    "updated": "2024-09-05T03:10:18.722Z",
    "downloaded": "2025-08-19T17:50:06.957Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "1.0.17",
    "private": false,
    "status": "Public"
  },
  "data": {
    "edges": [],
    "nodes": [
      {
        "data": {
          "type": "DataBooleanSplitterComponent",
          "node": {
            "template": {
              "_type": "Component",
              "data_input": {
                "trace_as_metadata": true,
                "list": false,
                "trace_as_input": true,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "data_input",
                "value": "",
                "display_name": "Data Input",
                "advanced": false,
                "input_types": [
                  "Data"
                ],
                "dynamic": false,
                "info": "The Data object to process",
                "title_case": false,
                "type": "other",
                "_input_type": "DataInput"
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio.custom import Component\r\nfrom axiestudio.io import DataInput, MessageTextInput, Output\r\nfrom axiestudio.schema import Data\r\n\r\nclass DataBooleanSplitterComponent(Component):\r\n    display_name = \"Data Boolean Splitter\"\r\n    description = \"Split flow based on a boolean key in the input Data\"\r\n    icon = \"split\"\r\n\r\n    inputs = [\r\n        DataInput(\r\n            name=\"data_input\",\r\n            display_name=\"Data Input\",\r\n            info=\"The Data object to process\",\r\n        ),\r\n        MessageTextInput(\r\n            name=\"key_name\",\r\n            display_name=\"Key Name\",\r\n            info=\"The name of the key in the Data object to check for boolean value\",\r\n        ),\r\n    ]\r\n\r\n    outputs = [\r\n        Output(display_name=\"True Output\", name=\"true_output\", method=\"process_data\"),\r\n        Output(display_name=\"False Output\", name=\"false_output\", method=\"process_data\"),\r\n    ]\r\n\r\n    def parse_boolean(self, value):\r\n        if isinstance(value, bool):\r\n            return value\r\n        if isinstance(value, str):\r\n            return value.lower() in ['true', '1', 'yes', 'y', 'on']\r\n        return bool(value)\r\n\r\n    def validate_input(self):\r\n        if not isinstance(self.data_input, Data):\r\n            self.status = \"Input is not a Data object\"\r\n            return False\r\n\r\n        if self.key_name not in self.data_input.data:\r\n            self.status = f\"Key '{self.key_name}' not found in Data\"\r\n            return False\r\n\r\n        return True\r\n\r\n    def process_data(self) -> Data:\r\n        if not self.validate_input():\r\n            return Data(data={\"error\": self.status})\r\n\r\n        boolean_value = self.parse_boolean(self.data_input.data[self.key_name])\r\n        \r\n        if boolean_value:\r\n            self.status = f\"Key '{self.key_name}' evaluated to True\"\r\n            return self.data_input\r\n        else:\r\n            self.status = f\"Key '{self.key_name}' evaluated to False\"\r\n            self.stop()\r\n            return None",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "key_name": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "key_name",
                "value": "",
                "display_name": "Key Name",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "The name of the key in the Data object to check for boolean value",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              }
            },
            "description": "Split flow based on a boolean key in the input Data.\n\nAny of: `'true', '1', 'yes', 'y', 'on'` is True",
            "icon": "split",
            "base_classes": [
              "Data"
            ],
            "display_name": "Data Boolean Splitter",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Data"
                ],
                "selected": "Data",
                "name": "true_output",
                "display_name": "True Output",
                "method": "process_data",
                "value": "__UNDEFINED__",
                "cache": true
              },
              {
                "types": [
                  "Data"
                ],
                "selected": "Data",
                "name": "false_output",
                "display_name": "False Output",
                "method": "process_data",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "data_input",
              "key_name"
            ],
            "beta": false,
            "edited": true,
            "official": false
          },
          "id": "AnthropicModel-wj24v"
        },
        "id": "AnthropicModel-wj24v",
        "position": {
          "x": 0,
          "y": 0
        },
        "type": "genericNode"
      }
    ],
    "viewport": {
      "x": 1,
      "y": 1,
      "zoom": 1
    }
  },
  "metadata": {
    "AnthropicModel": {
      "count": 1
    },
    "total": 1
  },
  "original": {
    "id": "322c8c21-cf82-439b-84de-74de1c950447",
    "name": "Data Boolean Splitter",
    "description": "Split flow based on a boolean key in the input Data.\n\nAny of: `'true', '1', 'yes', 'y', 'on'` is True",
    "is_component": true,
    "liked_by_count": "4",
    "downloads_count": "37",
    "metadata": {
      "AnthropicModel": {
        "count": 1
      },
      "total": 1
    },
    "last_tested_version": "1.0.17",
    "private": false,
    "data": {
      "edges": [],
      "nodes": [
        {
          "data": {
            "type": "DataBooleanSplitterComponent",
            "node": {
              "template": {
                "_type": "Component",
                "data_input": {
                  "trace_as_metadata": true,
                  "list": false,
                  "trace_as_input": true,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "data_input",
                  "value": "",
                  "display_name": "Data Input",
                  "advanced": false,
                  "input_types": [
                    "Data"
                  ],
                  "dynamic": false,
                  "info": "The Data object to process",
                  "title_case": false,
                  "type": "other",
                  "_input_type": "DataInput"
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio.custom import Component\r\nfrom axiestudio.io import DataInput, MessageTextInput, Output\r\nfrom axiestudio.schema import Data\r\n\r\nclass DataBooleanSplitterComponent(Component):\r\n    display_name = \"Data Boolean Splitter\"\r\n    description = \"Split flow based on a boolean key in the input Data\"\r\n    icon = \"split\"\r\n\r\n    inputs = [\r\n        DataInput(\r\n            name=\"data_input\",\r\n            display_name=\"Data Input\",\r\n            info=\"The Data object to process\",\r\n        ),\r\n        MessageTextInput(\r\n            name=\"key_name\",\r\n            display_name=\"Key Name\",\r\n            info=\"The name of the key in the Data object to check for boolean value\",\r\n        ),\r\n    ]\r\n\r\n    outputs = [\r\n        Output(display_name=\"True Output\", name=\"true_output\", method=\"process_data\"),\r\n        Output(display_name=\"False Output\", name=\"false_output\", method=\"process_data\"),\r\n    ]\r\n\r\n    def parse_boolean(self, value):\r\n        if isinstance(value, bool):\r\n            return value\r\n        if isinstance(value, str):\r\n            return value.lower() in ['true', '1', 'yes', 'y', 'on']\r\n        return bool(value)\r\n\r\n    def validate_input(self):\r\n        if not isinstance(self.data_input, Data):\r\n            self.status = \"Input is not a Data object\"\r\n            return False\r\n\r\n        if self.key_name not in self.data_input.data:\r\n            self.status = f\"Key '{self.key_name}' not found in Data\"\r\n            return False\r\n\r\n        return True\r\n\r\n    def process_data(self) -> Data:\r\n        if not self.validate_input():\r\n            return Data(data={\"error\": self.status})\r\n\r\n        boolean_value = self.parse_boolean(self.data_input.data[self.key_name])\r\n        \r\n        if boolean_value:\r\n            self.status = f\"Key '{self.key_name}' evaluated to True\"\r\n            return self.data_input\r\n        else:\r\n            self.status = f\"Key '{self.key_name}' evaluated to False\"\r\n            self.stop()\r\n            return None",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "key_name": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "key_name",
                  "value": "",
                  "display_name": "Key Name",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "The name of the key in the Data object to check for boolean value",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MessageTextInput"
                }
              },
              "description": "Split flow based on a boolean key in the input Data.\n\nAny of: `'true', '1', 'yes', 'y', 'on'` is True",
              "icon": "split",
              "base_classes": [
                "Data"
              ],
              "display_name": "Data Boolean Splitter",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Data"
                  ],
                  "selected": "Data",
                  "name": "true_output",
                  "display_name": "True Output",
                  "method": "process_data",
                  "value": "__UNDEFINED__",
                  "cache": true
                },
                {
                  "types": [
                    "Data"
                  ],
                  "selected": "Data",
                  "name": "false_output",
                  "display_name": "False Output",
                  "method": "process_data",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "data_input",
                "key_name"
              ],
              "beta": false,
              "edited": true,
              "official": false
            },
            "id": "AnthropicModel-wj24v"
          },
          "id": "AnthropicModel-wj24v",
          "position": {
            "x": 0,
            "y": 0
          },
          "type": "genericNode"
        }
      ],
      "viewport": {
        "x": 1,
        "y": 1,
        "zoom": 1
      }
    },
    "date_created": "2024-09-05T03:10:18.701Z",
    "date_updated": "2024-09-05T03:10:18.722Z",
    "status": "Public",
    "sort": null,
    "user_updated": "37095b75-b1f7-4e35-aea6-bcc9bbf1e2c7",
    "user_created": {
      "username": "NamastexLabs",
      "first_name": "Felipe",
      "last_name": "Rosa",
      "id": "37095b75-b1f7-4e35-aea6-bcc9bbf1e2c7"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:09.489Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 6,
    "converter_version": "1.0.0"
  }
}