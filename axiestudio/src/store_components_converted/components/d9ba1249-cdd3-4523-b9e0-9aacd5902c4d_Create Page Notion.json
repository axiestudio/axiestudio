{
  "id": "d9ba1249-cdd3-4523-b9e0-9aacd5902c4d",
  "name": "Create Page [Notion] ",
  "description": "A component for creating Notion pages. (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "COMPONENT",
  "is_component": true,
  "author": {
    "username": "NamastexLabs",
    "first_name": "Felipe",
    "last_name": "Rosa",
    "id": "37095b75-b1f7-4e35-aea6-bcc9bbf1e2c7",
    "full_name": "Felipe Rosa"
  },
  "store_url": "https://www.langflow.store/store/component/d9ba1249-cdd3-4523-b9e0-9aacd5902c4d",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-05-20T23:58:37.365Z",
    "updated": "2024-05-23T21:00:49.784Z",
    "downloaded": "2025-08-19T17:50:05.789Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "1.0.0a36",
    "private": false,
    "status": "Public"
  },
  "data": {
    "edges": [],
    "nodes": [
      {
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "import json\r\nfrom typing import Optional\r\n\r\nimport requests\r\nfrom axiestudio.custom import CustomComponent\r\n\r\n\r\nclass NotionPageCreator(CustomComponent):\r\n    display_name = \"Create Page [Notion]\"\r\n    description = \"A component for creating Notion pages.\"\r\n    documentation: str = \"https://docs.axiestudio.org/integrations/notion/page-create\"\r\n    icon = \"NotionDirectoryLoader\"\r\n\r\n    def build_config(self):\r\n        return {\r\n            \"database_id\": {\r\n                \"display_name\": \"Database ID\",\r\n                \"field_type\": \"str\",\r\n                \"info\": \"The ID of the Notion database.\",\r\n            },\r\n            \"notion_secret\": {\r\n                \"display_name\": \"Notion Secret\",\r\n                \"field_type\": \"str\",\r\n                \"info\": \"The Notion integration token.\",\r\n                \"password\": True,\r\n            },\r\n            \"properties\": {\r\n                \"display_name\": \"Properties\",\r\n                \"field_type\": \"str\",\r\n                \"info\": \"The properties of the new page. Depending on your database setup, this can change. E.G: {'Task name': {'id': 'title', 'type': 'title', 'title': [{'type': 'text', 'text': {'content': 'Send Notion Components to LF', 'link': null}}]}}\",\r\n            },\r\n        }\r\n\r\n    def build(\r\n        self,\r\n        database_id: str,\r\n        notion_secret: str,\r\n        properties: str = '{\"Task name\": {\"id\": \"title\", \"type\": \"title\", \"title\": [{\"type\": \"text\", \"text\": {\"content\": \"Send Notion Components to LF\", \"link\": null}}]}}',\r\n    ) -> str:\r\n        if not database_id or not properties:\r\n            raise ValueError(\"Invalid input. Please provide 'database_id' and 'properties'.\")\r\n\r\n        headers = {\r\n            \"Authorization\": f\"Bearer {notion_secret}\",\r\n            \"Content-Type\": \"application/json\",\r\n            \"Notion-Version\": \"2022-06-28\",\r\n        }\r\n\r\n        data = {\r\n            \"parent\": {\"database_id\": database_id},\r\n            \"properties\": json.loads(properties),\r\n        }\r\n\r\n        response = requests.post(\"https://api.notion.com/v1/pages\", headers=headers, json=data)\r\n\r\n        if response.status_code == 200:\r\n            page_id = response.json()[\"id\"]\r\n            self.status = f\"Successfully created Notion page with ID: {page_id}\\n {str(response.json())}\"\r\n            return response.json()\r\n        else:\r\n            error_message = f\"Failed to create Notion page. Status code: {response.status_code}, Error: {response.text}\"\r\n            self.status = error_message\r\n            raise Exception(error_message)",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "database_id": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "database_id",
                "display_name": "Database ID",
                "advanced": false,
                "dynamic": false,
                "info": "The ID of the Notion database.",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              },
              "notion_secret": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": true,
                "name": "notion_secret",
                "display_name": "Notion Secret",
                "advanced": false,
                "dynamic": false,
                "info": "The Notion integration token.",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": ""
              },
              "properties": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "{\"Task name\": {\"id\": \"title\", \"type\": \"title\", \"title\": [{\"type\": \"text\", \"text\": {\"content\": \"Send Notion Components to LF\", \"link\": null}}]}}",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "properties",
                "display_name": "Properties",
                "advanced": false,
                "dynamic": false,
                "info": "The properties of the new page. Depending on your database setup, this can change. E.G: {'Task name': {'id': 'title', 'type': 'title', 'title': [{'type': 'text', 'text': {'content': 'Send Notion Components to LF', 'link': null}}]}}",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              },
              "_type": "CustomComponent"
            },
            "description": "A component for creating Notion pages.",
            "icon": "NotionDirectoryLoader",
            "base_classes": [
              "object",
              "str",
              "Text"
            ],
            "display_name": "Create Page [Notion] ",
            "documentation": "https://docs.axiestudio.org/integrations/notion/page-create",
            "custom_fields": {
              "database_id": null,
              "notion_secret": null,
              "properties": null
            },
            "output_types": [
              "Text"
            ],
            "field_formatters": {},
            "frozen": false,
            "field_order": [],
            "beta": false,
            "official": false
          },
          "id": "CustomComponent-PU0K5",
          "description": "A component for creating Notion pages.",
          "display_name": "Create Page [Notion] "
        },
        "id": "CustomComponent-PU0K5",
        "position": {
          "x": 0,
          "y": 0
        },
        "type": "genericNode"
      }
    ],
    "viewport": {
      "x": 1,
      "y": 1,
      "zoom": 1
    }
  },
  "metadata": {
    "CustomComponent": {
      "count": 1
    },
    "total": 1
  },
  "original": {
    "id": "d9ba1249-cdd3-4523-b9e0-9aacd5902c4d",
    "name": "Create Page [Notion] ",
    "description": "A component for creating Notion pages.",
    "is_component": true,
    "liked_by_count": "14",
    "downloads_count": "53",
    "metadata": {
      "CustomComponent": {
        "count": 1
      },
      "total": 1
    },
    "last_tested_version": "1.0.0a36",
    "private": false,
    "data": {
      "edges": [],
      "nodes": [
        {
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "import json\r\nfrom typing import Optional\r\n\r\nimport requests\r\nfrom axiestudio.custom import CustomComponent\r\n\r\n\r\nclass NotionPageCreator(CustomComponent):\r\n    display_name = \"Create Page [Notion]\"\r\n    description = \"A component for creating Notion pages.\"\r\n    documentation: str = \"https://docs.axiestudio.org/integrations/notion/page-create\"\r\n    icon = \"NotionDirectoryLoader\"\r\n\r\n    def build_config(self):\r\n        return {\r\n            \"database_id\": {\r\n                \"display_name\": \"Database ID\",\r\n                \"field_type\": \"str\",\r\n                \"info\": \"The ID of the Notion database.\",\r\n            },\r\n            \"notion_secret\": {\r\n                \"display_name\": \"Notion Secret\",\r\n                \"field_type\": \"str\",\r\n                \"info\": \"The Notion integration token.\",\r\n                \"password\": True,\r\n            },\r\n            \"properties\": {\r\n                \"display_name\": \"Properties\",\r\n                \"field_type\": \"str\",\r\n                \"info\": \"The properties of the new page. Depending on your database setup, this can change. E.G: {'Task name': {'id': 'title', 'type': 'title', 'title': [{'type': 'text', 'text': {'content': 'Send Notion Components to LF', 'link': null}}]}}\",\r\n            },\r\n        }\r\n\r\n    def build(\r\n        self,\r\n        database_id: str,\r\n        notion_secret: str,\r\n        properties: str = '{\"Task name\": {\"id\": \"title\", \"type\": \"title\", \"title\": [{\"type\": \"text\", \"text\": {\"content\": \"Send Notion Components to LF\", \"link\": null}}]}}',\r\n    ) -> str:\r\n        if not database_id or not properties:\r\n            raise ValueError(\"Invalid input. Please provide 'database_id' and 'properties'.\")\r\n\r\n        headers = {\r\n            \"Authorization\": f\"Bearer {notion_secret}\",\r\n            \"Content-Type\": \"application/json\",\r\n            \"Notion-Version\": \"2022-06-28\",\r\n        }\r\n\r\n        data = {\r\n            \"parent\": {\"database_id\": database_id},\r\n            \"properties\": json.loads(properties),\r\n        }\r\n\r\n        response = requests.post(\"https://api.notion.com/v1/pages\", headers=headers, json=data)\r\n\r\n        if response.status_code == 200:\r\n            page_id = response.json()[\"id\"]\r\n            self.status = f\"Successfully created Notion page with ID: {page_id}\\n {str(response.json())}\"\r\n            return response.json()\r\n        else:\r\n            error_message = f\"Failed to create Notion page. Status code: {response.status_code}, Error: {response.text}\"\r\n            self.status = error_message\r\n            raise Exception(error_message)",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "database_id": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "database_id",
                  "display_name": "Database ID",
                  "advanced": false,
                  "dynamic": false,
                  "info": "The ID of the Notion database.",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                },
                "notion_secret": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": true,
                  "name": "notion_secret",
                  "display_name": "Notion Secret",
                  "advanced": false,
                  "dynamic": false,
                  "info": "The Notion integration token.",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": ""
                },
                "properties": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "{\"Task name\": {\"id\": \"title\", \"type\": \"title\", \"title\": [{\"type\": \"text\", \"text\": {\"content\": \"Send Notion Components to LF\", \"link\": null}}]}}",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "properties",
                  "display_name": "Properties",
                  "advanced": false,
                  "dynamic": false,
                  "info": "The properties of the new page. Depending on your database setup, this can change. E.G: {'Task name': {'id': 'title', 'type': 'title', 'title': [{'type': 'text', 'text': {'content': 'Send Notion Components to LF', 'link': null}}]}}",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                },
                "_type": "CustomComponent"
              },
              "description": "A component for creating Notion pages.",
              "icon": "NotionDirectoryLoader",
              "base_classes": [
                "object",
                "str",
                "Text"
              ],
              "display_name": "Create Page [Notion] ",
              "documentation": "https://docs.axiestudio.org/integrations/notion/page-create",
              "custom_fields": {
                "database_id": null,
                "notion_secret": null,
                "properties": null
              },
              "output_types": [
                "Text"
              ],
              "field_formatters": {},
              "frozen": false,
              "field_order": [],
              "beta": false,
              "official": false
            },
            "id": "CustomComponent-PU0K5",
            "description": "A component for creating Notion pages.",
            "display_name": "Create Page [Notion] "
          },
          "id": "CustomComponent-PU0K5",
          "position": {
            "x": 0,
            "y": 0
          },
          "type": "genericNode"
        }
      ],
      "viewport": {
        "x": 1,
        "y": 1,
        "zoom": 1
      }
    },
    "date_created": "2024-05-20T23:58:37.365Z",
    "date_updated": "2024-05-23T21:00:49.784Z",
    "status": "Public",
    "sort": null,
    "user_updated": "37095b75-b1f7-4e35-aea6-bcc9bbf1e2c7",
    "user_created": {
      "username": "NamastexLabs",
      "first_name": "Felipe",
      "last_name": "Rosa",
      "id": "37095b75-b1f7-4e35-aea6-bcc9bbf1e2c7"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:12.068Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 6,
    "converter_version": "1.0.0"
  }
}