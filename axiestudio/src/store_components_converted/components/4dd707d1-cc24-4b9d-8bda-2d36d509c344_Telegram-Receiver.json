{
  "id": "4dd707d1-cc24-4b9d-8bda-2d36d509c344",
  "name": "Telegram-Receiver",
  "description": "Receives messages from a specific chat on Telegram. (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "COMPONENT",
  "is_component": true,
  "author": {
    "username": "Ueric",
    "first_name": "Ueric",
    "last_name": "Melo",
    "id": "90d2a1ff-f93c-4e58-a9c7-3937b72aa131",
    "full_name": "Ueric Melo"
  },
  "store_url": "https://www.langflow.store/store/component/4dd707d1-cc24-4b9d-8bda-2d36d509c344",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-10-20T06:06:16.667Z",
    "updated": "2024-10-20T06:06:16.753Z",
    "downloaded": "2025-08-19T17:50:07.629Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "1.0.18",
    "private": false,
    "status": "Public"
  },
  "data": {
    "edges": [],
    "nodes": [
      {
        "data": {
          "type": "TelegramMessageReceiver",
          "node": {
            "template": {
              "_type": "Component",
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "import requests\r\nfrom axiestudio.custom import Component\r\nfrom axiestudio.inputs import MessageTextInput\r\nfrom axiestudio.template import Output\r\nfrom axiestudio.schema.message import Message\r\n\r\nclass TelegramMessageReceiver(Component):\r\n    display_name = \"Telegram Message Receiver\"\r\n    description = \"Receives messages from a specific chat on Telegram.\"\r\n    icon = \"telegram\"\r\n\r\n    inputs = [\r\n        MessageTextInput(\r\n            name=\"telegram_token\",\r\n            display_name=\"Telegram Bot Token\",\r\n            info=\"Telegram bot Token.\",\r\n        ),\r\n        MessageTextInput(\r\n            name=\"offset\",\r\n            display_name=\"Offset\",\r\n            info=\"The ID of the last message received, to avoid processing the same message multiple times.\",\r\n            value=\"0\",\r\n            advanced=True,\r\n        ),\r\n    ]\r\n\r\n    outputs = [\r\n        Output(display_name=\"Received Message\", name=\"received_message\", method=\"receive_message\"),\r\n        Output(display_name=\"Chat ID\", name=\"chat_id\", method=\"get_chat_id\"),\r\n    ]\r\n\r\n    def receive_message(self) -> Message:\r\n        token = self.telegram_token\r\n        offset = int(self.offset)\r\n\r\n        url = f\"https://api.telegram.org/bot{token}/getUpdates\"\r\n        params = {\"offset\": offset + 1, \"timeout\": 10}\r\n\r\n        response = requests.get(url, params=params)\r\n        if response.status_code == 200:\r\n            updates = response.json().get(\"result\", [])\r\n            if updates:\r\n                # Obtém a última mensagem recebida\r\n                last_update = updates[-1]\r\n                message_text = last_update[\"message\"][\"text\"]\r\n                self.chat_id = last_update[\"message\"][\"chat\"][\"id\"]\r\n\r\n                # Atualiza o offset para evitar mensagens duplicadas\r\n                self.offset = str(last_update[\"update_id\"])\r\n\r\n                return Message(text=message_text, metadata={\"chat_id\": self.chat_id})\r\n            else:\r\n                return Message(text=\"\", metadata={})\r\n        else:\r\n            return Message(text=f\"Failed to retrieve messages: {response.text}\")\r\n\r\n    def get_chat_id(self) -> Message:\r\n        # Retorna o chat ID como uma mensagem\r\n        chat_id = getattr(self, 'chat_id', '')\r\n        return Message(text=str(chat_id))\r\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "offset": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "offset",
                "value": "0",
                "display_name": "Offset",
                "advanced": true,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "The ID of the last message received, to avoid processing the same message multiple times.",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              },
              "telegram_token": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "telegram_token",
                "value": "",
                "display_name": "Telegram Bot Token",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Telegram bot Token.",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              }
            },
            "description": "Receives messages from a specific chat on Telegram.",
            "icon": "telegram",
            "base_classes": [
              "Message"
            ],
            "display_name": "Telegram-Receiver",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "received_message",
                "display_name": "Received Message",
                "method": "receive_message",
                "value": "__UNDEFINED__",
                "cache": true
              },
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "chat_id",
                "display_name": "Chat ID",
                "method": "get_chat_id",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "telegram_token",
              "offset"
            ],
            "beta": false,
            "edited": true,
            "lf_version": "1.0.18",
            "official": false
          },
          "id": "CustomComponent-0d29N"
        },
        "id": "CustomComponent-0d29N",
        "position": {
          "x": 0,
          "y": 0
        },
        "type": "genericNode"
      }
    ],
    "viewport": {
      "x": 1,
      "y": 1,
      "zoom": 1
    }
  },
  "metadata": {
    "CustomComponent": {
      "count": 1
    },
    "total": 1
  },
  "original": {
    "id": "4dd707d1-cc24-4b9d-8bda-2d36d509c344",
    "name": "Telegram-Receiver",
    "description": "Receives messages from a specific chat on Telegram.",
    "is_component": true,
    "liked_by_count": "23",
    "downloads_count": "193",
    "metadata": {
      "CustomComponent": {
        "count": 1
      },
      "total": 1
    },
    "last_tested_version": "1.0.18",
    "private": false,
    "data": {
      "edges": [],
      "nodes": [
        {
          "data": {
            "type": "TelegramMessageReceiver",
            "node": {
              "template": {
                "_type": "Component",
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "import requests\r\nfrom axiestudio.custom import Component\r\nfrom axiestudio.inputs import MessageTextInput\r\nfrom axiestudio.template import Output\r\nfrom axiestudio.schema.message import Message\r\n\r\nclass TelegramMessageReceiver(Component):\r\n    display_name = \"Telegram Message Receiver\"\r\n    description = \"Receives messages from a specific chat on Telegram.\"\r\n    icon = \"telegram\"\r\n\r\n    inputs = [\r\n        MessageTextInput(\r\n            name=\"telegram_token\",\r\n            display_name=\"Telegram Bot Token\",\r\n            info=\"Telegram bot Token.\",\r\n        ),\r\n        MessageTextInput(\r\n            name=\"offset\",\r\n            display_name=\"Offset\",\r\n            info=\"The ID of the last message received, to avoid processing the same message multiple times.\",\r\n            value=\"0\",\r\n            advanced=True,\r\n        ),\r\n    ]\r\n\r\n    outputs = [\r\n        Output(display_name=\"Received Message\", name=\"received_message\", method=\"receive_message\"),\r\n        Output(display_name=\"Chat ID\", name=\"chat_id\", method=\"get_chat_id\"),\r\n    ]\r\n\r\n    def receive_message(self) -> Message:\r\n        token = self.telegram_token\r\n        offset = int(self.offset)\r\n\r\n        url = f\"https://api.telegram.org/bot{token}/getUpdates\"\r\n        params = {\"offset\": offset + 1, \"timeout\": 10}\r\n\r\n        response = requests.get(url, params=params)\r\n        if response.status_code == 200:\r\n            updates = response.json().get(\"result\", [])\r\n            if updates:\r\n                # Obtém a última mensagem recebida\r\n                last_update = updates[-1]\r\n                message_text = last_update[\"message\"][\"text\"]\r\n                self.chat_id = last_update[\"message\"][\"chat\"][\"id\"]\r\n\r\n                # Atualiza o offset para evitar mensagens duplicadas\r\n                self.offset = str(last_update[\"update_id\"])\r\n\r\n                return Message(text=message_text, metadata={\"chat_id\": self.chat_id})\r\n            else:\r\n                return Message(text=\"\", metadata={})\r\n        else:\r\n            return Message(text=f\"Failed to retrieve messages: {response.text}\")\r\n\r\n    def get_chat_id(self) -> Message:\r\n        # Retorna o chat ID como uma mensagem\r\n        chat_id = getattr(self, 'chat_id', '')\r\n        return Message(text=str(chat_id))\r\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "offset": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "offset",
                  "value": "0",
                  "display_name": "Offset",
                  "advanced": true,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "The ID of the last message received, to avoid processing the same message multiple times.",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MessageTextInput"
                },
                "telegram_token": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "telegram_token",
                  "value": "",
                  "display_name": "Telegram Bot Token",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "Telegram bot Token.",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MessageTextInput"
                }
              },
              "description": "Receives messages from a specific chat on Telegram.",
              "icon": "telegram",
              "base_classes": [
                "Message"
              ],
              "display_name": "Telegram-Receiver",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "received_message",
                  "display_name": "Received Message",
                  "method": "receive_message",
                  "value": "__UNDEFINED__",
                  "cache": true
                },
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "chat_id",
                  "display_name": "Chat ID",
                  "method": "get_chat_id",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "telegram_token",
                "offset"
              ],
              "beta": false,
              "edited": true,
              "lf_version": "1.0.18",
              "official": false
            },
            "id": "CustomComponent-0d29N"
          },
          "id": "CustomComponent-0d29N",
          "position": {
            "x": 0,
            "y": 0
          },
          "type": "genericNode"
        }
      ],
      "viewport": {
        "x": 1,
        "y": 1,
        "zoom": 1
      }
    },
    "date_created": "2024-10-20T06:06:16.667Z",
    "date_updated": "2024-10-20T06:06:16.753Z",
    "status": "Public",
    "sort": null,
    "user_updated": "90d2a1ff-f93c-4e58-a9c7-3937b72aa131",
    "user_created": {
      "username": "Ueric",
      "first_name": "Ueric",
      "last_name": "Melo",
      "id": "90d2a1ff-f93c-4e58-a9c7-3937b72aa131"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:09.962Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 8,
    "converter_version": "1.0.0"
  }
}