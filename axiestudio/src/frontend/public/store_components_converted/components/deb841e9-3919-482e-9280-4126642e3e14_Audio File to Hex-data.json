{
  "id": "deb841e9-3919-482e-9280-4126642e3e14",
  "name": "Audio File to Hex-data",
  "description": "Load and converts an audio file (wav, mp3 or flac) to its raw WAV data in hexadecimal format. (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "COMPONENT",
  "is_component": true,
  "author": {
    "username": "arthurkaromm",
    "first_name": "Arthur",
    "last_name": "Quet",
    "id": "8741fbb0-5283-442f-beb7-895feea9ec4a",
    "full_name": "Arthur Quet"
  },
  "store_url": "https://www.langflow.store/store/component/deb841e9-3919-482e-9280-4126642e3e14",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-12-04T01:57:49.371Z",
    "updated": "2024-12-04T01:57:49.426Z",
    "downloaded": "2025-08-19T17:50:07.361Z"
  },
  "tags": [
    {
      "tags_id": {
        "name": "Chain",
        "id": "d442c88b-f8d0-4010-8752-16a644c7ac8e"
      }
    }
  ],
  "technical": {
    "last_tested_version": "1.1.1",
    "private": false,
    "status": "Public"
  },
  "data": {
    "edges": [],
    "nodes": [
      {
        "data": {
          "node": {
            "template": {
              "_type": "Component",
              "path": {
                "trace_as_metadata": true,
                "file_path": "",
                "fileTypes": [
                  "mp3",
                  "wav",
                  "flac"
                ],
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "path",
                "value": "",
                "display_name": "Path",
                "advanced": false,
                "dynamic": false,
                "info": "Supported file types: mp3, wav, flac",
                "title_case": false,
                "type": "file",
                "_input_type": "FileInput",
                "load_from_db": false
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from pathlib import Path\r\nfrom tempfile import NamedTemporaryFile\r\nfrom pydub import AudioSegment\r\nfrom axiestudio.custom import Component\r\nfrom axiestudio.io import BoolInput, FileInput, Output\r\nfrom axiestudio.schema import Message\r\nfrom axiestudio.custom import Component\r\nfrom axiestudio.io import MessageTextInput, Output\r\nfrom axiestudio.schema.message import Message\r\n\r\nclass AudioFileToHexComponent(Component):\r\n    display_name = \"Audio to Hexadecimal\"\r\n    description = \"Load and converts an audio file (wav, mp3 or flac) to its raw WAV data in hexadecimal format.\"\r\n    icon = \"file-audio\"\r\n    name = \"AudioToHex\"\r\n    beta = True\r\n\r\n    inputs = [\r\n        FileInput(\r\n            name=\"path\",\r\n            display_name=\"Path\",\r\n            file_types=[\"mp3\", \"wav\", \"flac\"],\r\n            info=\"Supported file types: mp3, wav, flac\",\r\n        ),\r\n        BoolInput(\r\n            name=\"silent_errors\",\r\n            display_name=\"Silent Errors\",\r\n            advanced=True,\r\n            info=\"If true, errors will not raise an exception.\",\r\n        ),\r\n    ]\r\n\r\n    outputs = [Output(display_name=\"Hexadecimal Data\", name=\"hex_data\", method=\"convert_to_hex\")]\r\n\r\n    def convert_to_hex(self) -> Message:\r\n        \"\"\"Convert audio file to hexadecimal representation of WAV data.\"\"\"\r\n        if not self.path:\r\n            self.log(\"File path is missing.\")\r\n            raise ValueError(\"Please upload a file for processing.\")\r\n\r\n        resolved_path = Path(self.resolve_path(self.path))\r\n        try:\r\n            # Load the audio file\r\n            audio = AudioSegment.from_file(resolved_path)\r\n\r\n            # Convert to WAV and export to binary\r\n            with NamedTemporaryFile(delete=False, suffix=\".wav\") as temp_wav:\r\n                audio.export(temp_wav.name, format=\"wav\")\r\n                temp_wav.seek(0)  # Move to the start of the file\r\n                wav_binary_data = temp_wav.read()\r\n\r\n            # Convert binary to hexadecimal\r\n            hex_data = wav_binary_data.hex()\r\n\r\n            # Return as a Message object\r\n            return Message(text=hex_data)\r\n        except Exception as e:\r\n            self.log(f\"Error processing file {resolved_path.name}: {e}\")\r\n            if not self.silent_errors:\r\n                raise\r\n            return Message(text=\"\")\r\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "silent_errors": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "silent_errors",
                "value": false,
                "display_name": "Silent Errors",
                "advanced": true,
                "dynamic": false,
                "info": "If true, errors will not raise an exception.",
                "title_case": false,
                "type": "bool",
                "_input_type": "BoolInput"
              }
            },
            "description": "Load and converts an audio file (wav, mp3 or flac) to its raw WAV data in hexadecimal format.",
            "icon": "file-audio",
            "base_classes": [
              "Message"
            ],
            "display_name": "Audio File to Hex-data",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "hex_data",
                "display_name": "Hexadecimal Data",
                "method": "convert_to_hex",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "path",
              "silent_errors"
            ],
            "beta": true,
            "legacy": false,
            "edited": true,
            "metadata": {},
            "tool_mode": false,
            "official": false
          },
          "type": "File",
          "id": "File-vRRZP"
        },
        "id": "File-vRRZP",
        "position": {
          "x": 0,
          "y": 0
        },
        "type": "genericNode"
      }
    ],
    "viewport": {
      "x": 1,
      "y": 1,
      "zoom": 1
    }
  },
  "metadata": {
    "File": {
      "count": 1
    },
    "total": 1
  },
  "original": {
    "id": "deb841e9-3919-482e-9280-4126642e3e14",
    "name": "Audio File to Hex-data",
    "description": "Load and converts an audio file (wav, mp3 or flac) to its raw WAV data in hexadecimal format.",
    "is_component": true,
    "liked_by_count": "5",
    "downloads_count": "20",
    "metadata": {
      "File": {
        "count": 1
      },
      "total": 1
    },
    "last_tested_version": "1.1.1",
    "private": false,
    "data": {
      "edges": [],
      "nodes": [
        {
          "data": {
            "node": {
              "template": {
                "_type": "Component",
                "path": {
                  "trace_as_metadata": true,
                  "file_path": "",
                  "fileTypes": [
                    "mp3",
                    "wav",
                    "flac"
                  ],
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "path",
                  "value": "",
                  "display_name": "Path",
                  "advanced": false,
                  "dynamic": false,
                  "info": "Supported file types: mp3, wav, flac",
                  "title_case": false,
                  "type": "file",
                  "_input_type": "FileInput",
                  "load_from_db": false
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from pathlib import Path\r\nfrom tempfile import NamedTemporaryFile\r\nfrom pydub import AudioSegment\r\nfrom axiestudio.custom import Component\r\nfrom axiestudio.io import BoolInput, FileInput, Output\r\nfrom axiestudio.schema import Message\r\nfrom axiestudio.custom import Component\r\nfrom axiestudio.io import MessageTextInput, Output\r\nfrom axiestudio.schema.message import Message\r\n\r\nclass AudioFileToHexComponent(Component):\r\n    display_name = \"Audio to Hexadecimal\"\r\n    description = \"Load and converts an audio file (wav, mp3 or flac) to its raw WAV data in hexadecimal format.\"\r\n    icon = \"file-audio\"\r\n    name = \"AudioToHex\"\r\n    beta = True\r\n\r\n    inputs = [\r\n        FileInput(\r\n            name=\"path\",\r\n            display_name=\"Path\",\r\n            file_types=[\"mp3\", \"wav\", \"flac\"],\r\n            info=\"Supported file types: mp3, wav, flac\",\r\n        ),\r\n        BoolInput(\r\n            name=\"silent_errors\",\r\n            display_name=\"Silent Errors\",\r\n            advanced=True,\r\n            info=\"If true, errors will not raise an exception.\",\r\n        ),\r\n    ]\r\n\r\n    outputs = [Output(display_name=\"Hexadecimal Data\", name=\"hex_data\", method=\"convert_to_hex\")]\r\n\r\n    def convert_to_hex(self) -> Message:\r\n        \"\"\"Convert audio file to hexadecimal representation of WAV data.\"\"\"\r\n        if not self.path:\r\n            self.log(\"File path is missing.\")\r\n            raise ValueError(\"Please upload a file for processing.\")\r\n\r\n        resolved_path = Path(self.resolve_path(self.path))\r\n        try:\r\n            # Load the audio file\r\n            audio = AudioSegment.from_file(resolved_path)\r\n\r\n            # Convert to WAV and export to binary\r\n            with NamedTemporaryFile(delete=False, suffix=\".wav\") as temp_wav:\r\n                audio.export(temp_wav.name, format=\"wav\")\r\n                temp_wav.seek(0)  # Move to the start of the file\r\n                wav_binary_data = temp_wav.read()\r\n\r\n            # Convert binary to hexadecimal\r\n            hex_data = wav_binary_data.hex()\r\n\r\n            # Return as a Message object\r\n            return Message(text=hex_data)\r\n        except Exception as e:\r\n            self.log(f\"Error processing file {resolved_path.name}: {e}\")\r\n            if not self.silent_errors:\r\n                raise\r\n            return Message(text=\"\")\r\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "silent_errors": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "silent_errors",
                  "value": false,
                  "display_name": "Silent Errors",
                  "advanced": true,
                  "dynamic": false,
                  "info": "If true, errors will not raise an exception.",
                  "title_case": false,
                  "type": "bool",
                  "_input_type": "BoolInput"
                }
              },
              "description": "Load and converts an audio file (wav, mp3 or flac) to its raw WAV data in hexadecimal format.",
              "icon": "file-audio",
              "base_classes": [
                "Message"
              ],
              "display_name": "Audio File to Hex-data",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "hex_data",
                  "display_name": "Hexadecimal Data",
                  "method": "convert_to_hex",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "path",
                "silent_errors"
              ],
              "beta": true,
              "legacy": false,
              "edited": true,
              "metadata": {},
              "tool_mode": false,
              "official": false
            },
            "type": "File",
            "id": "File-vRRZP"
          },
          "id": "File-vRRZP",
          "position": {
            "x": 0,
            "y": 0
          },
          "type": "genericNode"
        }
      ],
      "viewport": {
        "x": 1,
        "y": 1,
        "zoom": 1
      }
    },
    "date_created": "2024-12-04T01:57:49.371Z",
    "date_updated": "2024-12-04T01:57:49.426Z",
    "status": "Public",
    "sort": null,
    "user_updated": "8741fbb0-5283-442f-beb7-895feea9ec4a",
    "user_created": {
      "username": "arthurkaromm",
      "first_name": "Arthur",
      "last_name": "Quet",
      "id": "8741fbb0-5283-442f-beb7-895feea9ec4a"
    },
    "tags": [
      {
        "tags_id": {
          "name": "Chain",
          "id": "d442c88b-f8d0-4010-8752-16a644c7ac8e"
        }
      }
    ]
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:12.151Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 12,
    "converter_version": "1.0.0"
  }
}