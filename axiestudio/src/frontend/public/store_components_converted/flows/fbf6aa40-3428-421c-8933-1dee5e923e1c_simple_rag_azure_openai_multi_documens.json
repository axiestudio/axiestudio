{
  "id": "fbf6aa40-3428-421c-8933-1dee5e923e1c",
  "name": "simple_rag_azure_openai_multi_documens",
  "description": "Simple RAG Azure OpenAI Multi-Documents (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "FLOW",
  "is_component": false,
  "author": {
    "username": "JayDoubleu",
    "first_name": "Jay",
    "last_name": "Walaszek",
    "id": "b8445dc7-4758-4354-ac36-62cb3797828c",
    "full_name": "Jay Walaszek"
  },
  "store_url": "https://www.langflow.store/store/component/fbf6aa40-3428-421c-8933-1dee5e923e1c",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-06-10T21:26:41.336Z",
    "updated": "2024-06-10T21:26:41.373Z",
    "downloaded": "2025-08-19T17:50:05.306Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "0.6.19",
    "private": false,
    "status": "Public"
  },
  "data": {
    "nodes": [
      {
        "id": "PyPDFLoader-SJG1M",
        "type": "genericNode",
        "position": {
          "x": -222,
          "y": 472.8338137604999
        },
        "data": {
          "type": "PyPDFLoader",
          "node": {
            "template": {
              "file_path": {
                "type": "file",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "",
                "fileTypes": [
                  ".pdf"
                ],
                "file_path": "",
                "password": false,
                "name": "file_path",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "metadata": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": [
                  {
                    "": ""
                  }
                ],
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "metadata",
                "display_name": "Metadata",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "_type": "PyPDFLoader"
            },
            "description": "Load PDF using pypdf into list of documents.",
            "base_classes": [
              "Document"
            ],
            "display_name": "PyPDFLoader",
            "documentation": "https://python.langchain.com/docs/modules/data_connection/document_loaders/how_to/pdf",
            "custom_fields": {},
            "output_types": [
              "Document"
            ],
            "field_formatters": {},
            "beta": false
          },
          "id": "PyPDFLoader-SJG1M"
        },
        "selected": false,
        "width": 384,
        "height": 366
      },
      {
        "id": "RecursiveCharacterTextSplitter-0Ho62",
        "type": "genericNode",
        "position": {
          "x": 530.0171851298708,
          "y": 670.039075215416
        },
        "data": {
          "type": "RecursiveCharacterTextSplitter",
          "node": {
            "template": {
              "documents": {
                "type": "Document",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "documents",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "chunk_overlap": {
                "type": "int",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "100",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "chunk_overlap",
                "display_name": "Chunk Overlap",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "chunk_size": {
                "type": "int",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": 1000,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "chunk_size",
                "display_name": "Chunk Size",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "separator_type": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "Text",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "options": [
                  "Text",
                  "c",
                  "cobol",
                  "cpp",
                  "csharp",
                  "go",
                  "html",
                  "java",
                  "js",
                  "kotlin",
                  "latex",
                  "lua",
                  "markdown",
                  "perl",
                  "php",
                  "proto",
                  "python",
                  "rst",
                  "ruby",
                  "rust",
                  "scala",
                  "sol",
                  "swift",
                  "ts"
                ],
                "name": "separator_type",
                "display_name": "Separator Type",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "separators": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": ",",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "separators",
                "display_name": "Separator",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "_type": "RecursiveCharacterTextSplitter"
            },
            "description": "Splitting text by recursively look at characters.",
            "base_classes": [
              "Document"
            ],
            "display_name": "RecursiveCharacterTextSplitter",
            "documentation": "https://python.langchain.com/docs/modules/data_connection/document_transformers/recursive_text_splitter",
            "custom_fields": {},
            "output_types": [
              "Document"
            ],
            "field_formatters": {},
            "beta": false
          },
          "id": "RecursiveCharacterTextSplitter-0Ho62"
        },
        "selected": false,
        "width": 384,
        "height": 597
      },
      {
        "id": "ConversationBufferMemory-JOLmS",
        "type": "genericNode",
        "position": {
          "x": 1096.963456043704,
          "y": 156.1502369351184
        },
        "data": {
          "type": "ConversationBufferMemory",
          "node": {
            "template": {
              "chat_memory": {
                "type": "BaseChatMessageHistory",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "chat_memory",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "ai_prefix": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": "AI",
                "fileTypes": [],
                "password": false,
                "name": "ai_prefix",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "human_prefix": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": "Human",
                "fileTypes": [],
                "password": false,
                "name": "human_prefix",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "input_key": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "question",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "input_key",
                "advanced": false,
                "dynamic": false,
                "info": "The variable to be used as Chat Input when more than one variable is available.",
                "title_case": true
              },
              "memory_key": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "chat_history",
                "fileTypes": [],
                "password": false,
                "name": "memory_key",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "output_key": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "answer",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "output_key",
                "advanced": false,
                "dynamic": false,
                "info": "The variable to be used as Chat Output (e.g. answer in a ConversationalRetrievalChain)",
                "title_case": true
              },
              "return_messages": {
                "type": "bool",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "return_messages",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "value": true
              },
              "_type": "ConversationBufferMemory"
            },
            "description": "Buffer for storing conversation memory.",
            "base_classes": [
              "BaseMemory",
              "ConversationBufferMemory",
              "BaseChatMemory"
            ],
            "display_name": "ConversationBufferMemory",
            "documentation": "https://python.langchain.com/docs/modules/memory/how_to/buffer",
            "custom_fields": {},
            "output_types": [],
            "field_formatters": {},
            "beta": false
          },
          "id": "ConversationBufferMemory-JOLmS"
        },
        "selected": false,
        "width": 384,
        "height": 599
      },
      {
        "id": "ConversationalRetrievalChain-UDboB",
        "type": "genericNode",
        "position": {
          "x": 2176.8024754004077,
          "y": 883.3652023964636
        },
        "data": {
          "type": "ConversationalRetrievalChain",
          "node": {
            "template": {
              "callbacks": {
                "type": "Callbacks",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "callbacks",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "condense_question_llm": {
                "type": "BaseLanguageModel",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "condense_question_llm",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "condense_question_prompt": {
                "type": "BasePromptTemplate",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": {
                  "name": null,
                  "input_variables": [
                    "chat_history",
                    "question"
                  ],
                  "input_types": {},
                  "output_parser": null,
                  "partial_variables": {},
                  "metadata": null,
                  "tags": null,
                  "template": "Given the following conversation and a follow up question, rephrase the follow up question to be a standalone question, in its original language.\n\nChat History:\n{chat_history}\nFollow Up Input: {question}\nStandalone question:",
                  "template_format": "f-string",
                  "validate_template": false
                },
                "fileTypes": [],
                "password": false,
                "name": "condense_question_prompt",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "llm": {
                "type": "BaseLanguageModel",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "llm",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "memory": {
                "type": "BaseChatMemory",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "memory",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "retriever": {
                "type": "BaseRetriever",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "retriever",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "chain_type": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "stuff",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "options": [
                  "stuff",
                  "map_reduce",
                  "map_rerank",
                  "refine"
                ],
                "name": "chain_type",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "combine_docs_chain_kwargs": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "combine_docs_chain_kwargs",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "return_source_documents": {
                "type": "bool",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": true,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "return_source_documents",
                "display_name": "Return source documents",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "verbose": {
                "type": "bool",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": false,
                "fileTypes": [],
                "password": false,
                "name": "verbose",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "_type": "ConversationalRetrievalChain"
            },
            "description": "Convenience method to load chain from LLM and retriever.",
            "base_classes": [
              "Chain",
              "BaseConversationalRetrievalChain",
              "ConversationalRetrievalChain",
              "Callable"
            ],
            "display_name": "ConversationalRetrievalChain",
            "documentation": "https://python.langchain.com/docs/modules/chains/popular/chat_vector_db",
            "custom_fields": {},
            "output_types": [],
            "field_formatters": {},
            "beta": false
          },
          "id": "ConversationalRetrievalChain-UDboB"
        },
        "selected": false,
        "width": 384,
        "height": 448
      },
      {
        "id": "FAISS-C8n1A",
        "type": "genericNode",
        "position": {
          "x": 1262.8544453017344,
          "y": 1179.4930944975808
        },
        "data": {
          "type": "FAISS",
          "node": {
            "template": {
              "documents": {
                "type": "Document",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "documents",
                "display_name": "Documents",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "embedding": {
                "type": "Embeddings",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "embedding",
                "display_name": "Embedding",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from typing import List, Union\n\nfrom langchain.schema import BaseRetriever\nfrom langchain_community.vectorstores import VectorStore\nfrom langchain_community.vectorstores.faiss import FAISS\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import Document, Embeddings\n\n\nclass FAISSComponent(CustomComponent):\n    display_name = \"FAISS\"\n    description = \"Construct FAISS wrapper from raw documents.\"\n    documentation = \"https://python.langchain.com/docs/modules/data_connection/vectorstores/integrations/faiss\"\n\n    def build_config(self):\n        return {\n            \"documents\": {\"display_name\": \"Documents\"},\n            \"embedding\": {\"display_name\": \"Embedding\"},\n        }\n\n    def build(\n        self,\n        embedding: Embeddings,\n        documents: List[Document],\n    ) -> Union[VectorStore, FAISS, BaseRetriever]:\n        return FAISS.from_documents(documents=documents, embedding=embedding)\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "_type": "CustomComponent"
            },
            "description": "Construct FAISS wrapper from raw documents.",
            "base_classes": [
              "VectorStore",
              "VectorStore",
              "FAISS",
              "BaseRetriever"
            ],
            "display_name": "FAISS",
            "documentation": "https://python.langchain.com/docs/modules/data_connection/vectorstores/integrations/faiss",
            "custom_fields": {
              "embedding": null,
              "documents": null
            },
            "output_types": [
              "VectorStore",
              "FAISS",
              "BaseRetriever"
            ],
            "field_formatters": {},
            "beta": true
          },
          "id": "FAISS-C8n1A"
        },
        "selected": false,
        "width": 384,
        "height": 376
      },
      {
        "id": "AzureChatOpenAI-PWgAO",
        "type": "genericNode",
        "position": {
          "x": 1639.8634536107943,
          "y": -35.587501525878906
        },
        "data": {
          "type": "AzureChatOpenAI",
          "node": {
            "template": {
              "api_key": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": true,
                "name": "api_key",
                "display_name": "API Key",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "value": ""
              },
              "api_version": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "2023-12-01-preview",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "options": [
                  "2023-03-15-preview",
                  "2023-05-15",
                  "2023-06-01-preview",
                  "2023-07-01-preview",
                  "2023-08-01-preview",
                  "2023-09-01-preview",
                  "2023-12-01-preview"
                ],
                "name": "api_version",
                "display_name": "API Version",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "azure_deployment": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "azure_deployment",
                "display_name": "Deployment Name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "value": "gpt-4-32K"
              },
              "azure_endpoint": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "azure_endpoint",
                "display_name": "Azure Endpoint",
                "advanced": false,
                "dynamic": false,
                "info": "Your Azure endpoint, including the resource.. Example: `https://example-resource.azure.openai.com/`",
                "title_case": true,
                "value": ""
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from typing import Optional\nfrom axiestudio import CustomComponent\nfrom langchain.llms.base import BaseLanguageModel\nfrom langchain_community.chat_models.azure_openai import AzureChatOpenAI\n\n\nclass AzureChatOpenAIComponent(CustomComponent):\n    display_name: str = \"AzureChatOpenAI\"\n    description: str = \"LLM model from Azure OpenAI.\"\n    documentation: str = \"https://python.langchain.com/docs/integrations/llms/azure_openai\"\n    beta = False\n\n    AZURE_OPENAI_MODELS = [\n        \"gpt-35-turbo\",\n        \"gpt-35-turbo-16k\",\n        \"gpt-35-turbo-instruct\",\n        \"gpt-4\",\n        \"gpt-4-32k\",\n        \"gpt-4-vision\",\n    ]\n\n    AZURE_OPENAI_API_VERSIONS = [\n        \"2023-03-15-preview\",\n        \"2023-05-15\",\n        \"2023-06-01-preview\",\n        \"2023-07-01-preview\",\n        \"2023-08-01-preview\",\n        \"2023-09-01-preview\",\n        \"2023-12-01-preview\",\n    ]\n\n    def build_config(self):\n        return {\n            \"model\": {\n                \"display_name\": \"Model Name\",\n                \"value\": self.AZURE_OPENAI_MODELS[0],\n                \"options\": self.AZURE_OPENAI_MODELS,\n                \"required\": True,\n            },\n            \"azure_endpoint\": {\n                \"display_name\": \"Azure Endpoint\",\n                \"required\": True,\n                \"info\": \"Your Azure endpoint, including the resource.. Example: `https://example-resource.azure.openai.com/`\",\n            },\n            \"azure_deployment\": {\n                \"display_name\": \"Deployment Name\",\n                \"required\": True,\n            },\n            \"api_version\": {\n                \"display_name\": \"API Version\",\n                \"options\": self.AZURE_OPENAI_API_VERSIONS,\n                \"value\": self.AZURE_OPENAI_API_VERSIONS[-1],\n                \"required\": True,\n                \"advanced\": True,\n            },\n            \"api_key\": {\"display_name\": \"API Key\", \"required\": True, \"password\": True},\n            \"temperature\": {\n                \"display_name\": \"Temperature\",\n                \"value\": 0.7,\n                \"field_type\": \"float\",\n                \"required\": False,\n            },\n            \"max_tokens\": {\n                \"display_name\": \"Max Tokens\",\n                \"value\": 1000,\n                \"required\": False,\n                \"field_type\": \"int\",\n                \"advanced\": True,\n                \"info\": \"Maximum number of tokens to generate.\",\n            },\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        model: str,\n        azure_endpoint: str,\n        azure_deployment: str,\n        api_key: str,\n        api_version: str,\n        temperature: float = 0.7,\n        max_tokens: Optional[int] = 1000,\n    ) -> BaseLanguageModel:\n        try:\n            llm = AzureChatOpenAI(\n                model=model,\n                azure_endpoint=azure_endpoint,\n                azure_deployment=azure_deployment,\n                api_version=api_version,\n                api_key=api_key,\n                temperature=temperature,\n                max_tokens=max_tokens,\n            )\n        except Exception as e:\n            raise ValueError(\"Could not connect to AzureOpenAI API.\") from e\n        return llm\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "max_tokens": {
                "type": "int",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": 1000,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "advanced": true,
                "dynamic": false,
                "info": "Maximum number of tokens to generate.",
                "title_case": true
              },
              "model": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "gpt-4-32k",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "options": [
                  "gpt-35-turbo",
                  "gpt-35-turbo-16k",
                  "gpt-35-turbo-instruct",
                  "gpt-4",
                  "gpt-4-32k",
                  "gpt-4-vision"
                ],
                "name": "model",
                "display_name": "Model Name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "temperature": {
                "type": "float",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": 0.7,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "temperature",
                "display_name": "Temperature",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "rangeSpec": {
                  "min": -1,
                  "max": 1,
                  "step": 0.1
                },
                "title_case": true
              },
              "_type": "CustomComponent"
            },
            "description": "LLM model from Azure OpenAI.",
            "base_classes": [
              "BaseLanguageModel"
            ],
            "display_name": "AzureChatOpenAI",
            "documentation": "https://python.langchain.com/docs/integrations/llms/azure_openai",
            "custom_fields": {
              "model": null,
              "azure_endpoint": null,
              "azure_deployment": null,
              "api_key": null,
              "api_version": null,
              "temperature": null,
              "max_tokens": null
            },
            "output_types": [
              "BaseLanguageModel"
            ],
            "field_formatters": {},
            "beta": false
          },
          "id": "AzureChatOpenAI-PWgAO"
        },
        "selected": false,
        "width": 384,
        "height": 736
      },
      {
        "id": "AzureOpenAIEmbeddings-M77ou",
        "type": "genericNode",
        "position": {
          "x": 616.8829066719679,
          "y": 1428.0038057216202
        },
        "data": {
          "type": "AzureOpenAIEmbeddings",
          "node": {
            "template": {
              "api_key": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": true,
                "name": "api_key",
                "display_name": "API Key",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "value": ""
              },
              "api_version": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "2023-08-01-preview",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "options": [
                  "2022-12-01",
                  "2023-03-15-preview",
                  "2023-05-15",
                  "2023-06-01-preview",
                  "2023-07-01-preview",
                  "2023-08-01-preview"
                ],
                "name": "api_version",
                "display_name": "API Version",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "azure_deployment": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "azure_deployment",
                "display_name": "Deployment Name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "value": "text-embedding-ada-002"
              },
              "azure_endpoint": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "azure_endpoint",
                "display_name": "Azure Endpoint",
                "advanced": false,
                "dynamic": false,
                "info": "Your Azure endpoint, including the resource.. Example: `https://example-resource.azure.openai.com/`",
                "title_case": true,
                "value": ""
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from langchain.embeddings.base import Embeddings\nfrom langchain_community.embeddings import AzureOpenAIEmbeddings\n\nfrom axiestudio import CustomComponent\n\n\nclass AzureOpenAIEmbeddingsComponent(CustomComponent):\n    display_name: str = \"AzureOpenAIEmbeddings\"\n    description: str = \"Embeddings model from Azure OpenAI.\"\n    documentation: str = \"https://python.langchain.com/docs/integrations/text_embedding/azureopenai\"\n    beta = False\n\n    API_VERSION_OPTIONS = [\n        \"2022-12-01\",\n        \"2023-03-15-preview\",\n        \"2023-05-15\",\n        \"2023-06-01-preview\",\n        \"2023-07-01-preview\",\n        \"2023-08-01-preview\",\n    ]\n\n    def build_config(self):\n        return {\n            \"azure_endpoint\": {\n                \"display_name\": \"Azure Endpoint\",\n                \"required\": True,\n                \"info\": \"Your Azure endpoint, including the resource.. Example: `https://example-resource.azure.openai.com/`\",\n            },\n            \"azure_deployment\": {\n                \"display_name\": \"Deployment Name\",\n                \"required\": True,\n            },\n            \"api_version\": {\n                \"display_name\": \"API Version\",\n                \"options\": self.API_VERSION_OPTIONS,\n                \"value\": self.API_VERSION_OPTIONS[-1],\n                \"advanced\": True,\n            },\n            \"api_key\": {\n                \"display_name\": \"API Key\",\n                \"required\": True,\n                \"password\": True,\n            },\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        azure_endpoint: str,\n        azure_deployment: str,\n        api_version: str,\n        api_key: str,\n    ) -> Embeddings:\n        try:\n            embeddings = AzureOpenAIEmbeddings(\n                azure_endpoint=azure_endpoint,\n                azure_deployment=azure_deployment,\n                api_version=api_version,\n                api_key=api_key,\n            )\n\n        except Exception as e:\n            raise ValueError(\"Could not connect to AzureOpenAIEmbeddings API.\") from e\n\n        return embeddings\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "_type": "CustomComponent"
            },
            "description": "Embeddings model from Azure OpenAI.",
            "base_classes": [
              "Embeddings"
            ],
            "display_name": "AzureOpenAIEmbeddings",
            "documentation": "https://python.langchain.com/docs/integrations/text_embedding/azureopenai",
            "custom_fields": {
              "azure_endpoint": null,
              "azure_deployment": null,
              "api_version": null,
              "api_key": null
            },
            "output_types": [
              "Embeddings"
            ],
            "field_formatters": {},
            "beta": false
          },
          "id": "AzureOpenAIEmbeddings-M77ou"
        },
        "selected": false,
        "width": 384,
        "height": 561
      }
    ],
    "edges": [
      {
        "source": "PyPDFLoader-SJG1M",
        "target": "RecursiveCharacterTextSplitter-0Ho62",
        "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œPyPDFLoaderœ,œidœ:œPyPDFLoader-SJG1Mœ}",
        "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œRecursiveCharacterTextSplitter-0Ho62œ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
        "id": "reactflow__edge-PyPDFLoader-SJG1M{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œPyPDFLoaderœ,œidœ:œPyPDFLoader-SJG1Mœ}-RecursiveCharacterTextSplitter-0Ho62{œfieldNameœ:œdocumentsœ,œidœ:œRecursiveCharacterTextSplitter-0Ho62œ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
        "data": {
          "targetHandle": {
            "fieldName": "documents",
            "id": "RecursiveCharacterTextSplitter-0Ho62",
            "inputTypes": null,
            "type": "Document"
          },
          "sourceHandle": {
            "baseClasses": [
              "Document"
            ],
            "dataType": "PyPDFLoader",
            "id": "PyPDFLoader-SJG1M"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-gray-900 ",
        "animated": false,
        "selected": false
      },
      {
        "source": "ConversationBufferMemory-JOLmS",
        "target": "ConversationalRetrievalChain-UDboB",
        "sourceHandle": "{œbaseClassesœ:[œBaseMemoryœ,œConversationBufferMemoryœ,œBaseChatMemoryœ],œdataTypeœ:œConversationBufferMemoryœ,œidœ:œConversationBufferMemory-JOLmSœ}",
        "targetHandle": "{œfieldNameœ:œmemoryœ,œidœ:œConversationalRetrievalChain-UDboBœ,œinputTypesœ:null,œtypeœ:œBaseChatMemoryœ}",
        "id": "reactflow__edge-ConversationBufferMemory-JOLmS{œbaseClassesœ:[œBaseMemoryœ,œConversationBufferMemoryœ,œBaseChatMemoryœ],œdataTypeœ:œConversationBufferMemoryœ,œidœ:œConversationBufferMemory-JOLmSœ}-ConversationalRetrievalChain-UDboB{œfieldNameœ:œmemoryœ,œidœ:œConversationalRetrievalChain-UDboBœ,œinputTypesœ:null,œtypeœ:œBaseChatMemoryœ}",
        "data": {
          "targetHandle": {
            "fieldName": "memory",
            "id": "ConversationalRetrievalChain-UDboB",
            "inputTypes": null,
            "type": "BaseChatMemory"
          },
          "sourceHandle": {
            "baseClasses": [
              "BaseMemory",
              "ConversationBufferMemory",
              "BaseChatMemory"
            ],
            "dataType": "ConversationBufferMemory",
            "id": "ConversationBufferMemory-JOLmS"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-gray-900 ",
        "animated": false,
        "selected": false
      },
      {
        "source": "RecursiveCharacterTextSplitter-0Ho62",
        "target": "FAISS-C8n1A",
        "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œRecursiveCharacterTextSplitterœ,œidœ:œRecursiveCharacterTextSplitter-0Ho62œ}",
        "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œFAISS-C8n1Aœ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
        "id": "reactflow__edge-RecursiveCharacterTextSplitter-0Ho62{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œRecursiveCharacterTextSplitterœ,œidœ:œRecursiveCharacterTextSplitter-0Ho62œ}-FAISS-C8n1A{œfieldNameœ:œdocumentsœ,œidœ:œFAISS-C8n1Aœ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
        "data": {
          "targetHandle": {
            "fieldName": "documents",
            "id": "FAISS-C8n1A",
            "inputTypes": null,
            "type": "Document"
          },
          "sourceHandle": {
            "baseClasses": [
              "Document"
            ],
            "dataType": "RecursiveCharacterTextSplitter",
            "id": "RecursiveCharacterTextSplitter-0Ho62"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-gray-900 ",
        "animated": false,
        "selected": false
      },
      {
        "source": "FAISS-C8n1A",
        "target": "ConversationalRetrievalChain-UDboB",
        "sourceHandle": "{œbaseClassesœ:[œVectorStoreœ,œVectorStoreœ,œFAISSœ,œBaseRetrieverœ],œdataTypeœ:œFAISSœ,œidœ:œFAISS-C8n1Aœ}",
        "targetHandle": "{œfieldNameœ:œretrieverœ,œidœ:œConversationalRetrievalChain-UDboBœ,œinputTypesœ:null,œtypeœ:œBaseRetrieverœ}",
        "id": "reactflow__edge-FAISS-C8n1A{œbaseClassesœ:[œVectorStoreœ,œVectorStoreœ,œFAISSœ,œBaseRetrieverœ],œdataTypeœ:œFAISSœ,œidœ:œFAISS-C8n1Aœ}-ConversationalRetrievalChain-UDboB{œfieldNameœ:œretrieverœ,œidœ:œConversationalRetrievalChain-UDboBœ,œinputTypesœ:null,œtypeœ:œBaseRetrieverœ}",
        "data": {
          "targetHandle": {
            "fieldName": "retriever",
            "id": "ConversationalRetrievalChain-UDboB",
            "inputTypes": null,
            "type": "BaseRetriever"
          },
          "sourceHandle": {
            "baseClasses": [
              "VectorStore",
              "VectorStore",
              "FAISS",
              "BaseRetriever"
            ],
            "dataType": "FAISS",
            "id": "FAISS-C8n1A"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-gray-900 ",
        "animated": false,
        "selected": false
      },
      {
        "source": "AzureChatOpenAI-PWgAO",
        "target": "ConversationalRetrievalChain-UDboB",
        "sourceHandle": "{œbaseClassesœ:[œBaseLanguageModelœ],œdataTypeœ:œAzureChatOpenAIœ,œidœ:œAzureChatOpenAI-PWgAOœ}",
        "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œConversationalRetrievalChain-UDboBœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}",
        "id": "reactflow__edge-AzureChatOpenAI-PWgAO{œbaseClassesœ:[œBaseLanguageModelœ],œdataTypeœ:œAzureChatOpenAIœ,œidœ:œAzureChatOpenAI-PWgAOœ}-ConversationalRetrievalChain-UDboB{œfieldNameœ:œllmœ,œidœ:œConversationalRetrievalChain-UDboBœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}",
        "data": {
          "targetHandle": {
            "fieldName": "llm",
            "id": "ConversationalRetrievalChain-UDboB",
            "inputTypes": null,
            "type": "BaseLanguageModel"
          },
          "sourceHandle": {
            "baseClasses": [
              "BaseLanguageModel"
            ],
            "dataType": "AzureChatOpenAI",
            "id": "AzureChatOpenAI-PWgAO"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-gray-900 ",
        "animated": false,
        "selected": false
      },
      {
        "source": "AzureOpenAIEmbeddings-M77ou",
        "target": "FAISS-C8n1A",
        "sourceHandle": "{œbaseClassesœ:[œEmbeddingsœ],œdataTypeœ:œAzureOpenAIEmbeddingsœ,œidœ:œAzureOpenAIEmbeddings-M77ouœ}",
        "targetHandle": "{œfieldNameœ:œembeddingœ,œidœ:œFAISS-C8n1Aœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}",
        "id": "reactflow__edge-AzureOpenAIEmbeddings-M77ou{œbaseClassesœ:[œEmbeddingsœ],œdataTypeœ:œAzureOpenAIEmbeddingsœ,œidœ:œAzureOpenAIEmbeddings-M77ouœ}-FAISS-C8n1A{œfieldNameœ:œembeddingœ,œidœ:œFAISS-C8n1Aœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}",
        "data": {
          "targetHandle": {
            "fieldName": "embedding",
            "id": "FAISS-C8n1A",
            "inputTypes": null,
            "type": "Embeddings"
          },
          "sourceHandle": {
            "baseClasses": [
              "Embeddings"
            ],
            "dataType": "AzureOpenAIEmbeddings",
            "id": "AzureOpenAIEmbeddings-M77ou"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-gray-900 ",
        "animated": false,
        "selected": false
      }
    ],
    "viewport": {
      "x": 43.009504198850095,
      "y": -142.14814284611396,
      "zoom": 0.4600938253124376
    }
  },
  "metadata": {
    "PyPDFLoader": {
      "count": 1
    },
    "RecursiveCharacterTextSplitter": {
      "count": 1
    },
    "ConversationBufferMemory": {
      "count": 1
    },
    "ConversationalRetrievalChain": {
      "count": 1
    },
    "FAISS": {
      "count": 1
    },
    "AzureChatOpenAI": {
      "count": 1
    },
    "AzureOpenAIEmbeddings": {
      "count": 1
    },
    "total": 7
  },
  "original": {
    "id": "fbf6aa40-3428-421c-8933-1dee5e923e1c",
    "name": "simple_rag_azure_openai_multi_documens",
    "description": "Simple RAG Azure OpenAI Multi-Documents",
    "is_component": false,
    "liked_by_count": "6",
    "downloads_count": "89",
    "metadata": {
      "PyPDFLoader": {
        "count": 1
      },
      "RecursiveCharacterTextSplitter": {
        "count": 1
      },
      "ConversationBufferMemory": {
        "count": 1
      },
      "ConversationalRetrievalChain": {
        "count": 1
      },
      "FAISS": {
        "count": 1
      },
      "AzureChatOpenAI": {
        "count": 1
      },
      "AzureOpenAIEmbeddings": {
        "count": 1
      },
      "total": 7
    },
    "last_tested_version": "0.6.19",
    "private": false,
    "data": {
      "nodes": [
        {
          "id": "PyPDFLoader-SJG1M",
          "type": "genericNode",
          "position": {
            "x": -222,
            "y": 472.8338137604999
          },
          "data": {
            "type": "PyPDFLoader",
            "node": {
              "template": {
                "file_path": {
                  "type": "file",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "",
                  "fileTypes": [
                    ".pdf"
                  ],
                  "file_path": "",
                  "password": false,
                  "name": "file_path",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "metadata": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": [
                    {
                      "": ""
                    }
                  ],
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "metadata",
                  "display_name": "Metadata",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "_type": "PyPDFLoader"
              },
              "description": "Load PDF using pypdf into list of documents.",
              "base_classes": [
                "Document"
              ],
              "display_name": "PyPDFLoader",
              "documentation": "https://python.langchain.com/docs/modules/data_connection/document_loaders/how_to/pdf",
              "custom_fields": {},
              "output_types": [
                "Document"
              ],
              "field_formatters": {},
              "beta": false
            },
            "id": "PyPDFLoader-SJG1M"
          },
          "selected": false,
          "width": 384,
          "height": 366
        },
        {
          "id": "RecursiveCharacterTextSplitter-0Ho62",
          "type": "genericNode",
          "position": {
            "x": 530.0171851298708,
            "y": 670.039075215416
          },
          "data": {
            "type": "RecursiveCharacterTextSplitter",
            "node": {
              "template": {
                "documents": {
                  "type": "Document",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "documents",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "chunk_overlap": {
                  "type": "int",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "100",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "chunk_overlap",
                  "display_name": "Chunk Overlap",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "chunk_size": {
                  "type": "int",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": 1000,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "chunk_size",
                  "display_name": "Chunk Size",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "separator_type": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "Text",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "options": [
                    "Text",
                    "c",
                    "cobol",
                    "cpp",
                    "csharp",
                    "go",
                    "html",
                    "java",
                    "js",
                    "kotlin",
                    "latex",
                    "lua",
                    "markdown",
                    "perl",
                    "php",
                    "proto",
                    "python",
                    "rst",
                    "ruby",
                    "rust",
                    "scala",
                    "sol",
                    "swift",
                    "ts"
                  ],
                  "name": "separator_type",
                  "display_name": "Separator Type",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "separators": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": ",",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "separators",
                  "display_name": "Separator",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "_type": "RecursiveCharacterTextSplitter"
              },
              "description": "Splitting text by recursively look at characters.",
              "base_classes": [
                "Document"
              ],
              "display_name": "RecursiveCharacterTextSplitter",
              "documentation": "https://python.langchain.com/docs/modules/data_connection/document_transformers/recursive_text_splitter",
              "custom_fields": {},
              "output_types": [
                "Document"
              ],
              "field_formatters": {},
              "beta": false
            },
            "id": "RecursiveCharacterTextSplitter-0Ho62"
          },
          "selected": false,
          "width": 384,
          "height": 597
        },
        {
          "id": "ConversationBufferMemory-JOLmS",
          "type": "genericNode",
          "position": {
            "x": 1096.963456043704,
            "y": 156.1502369351184
          },
          "data": {
            "type": "ConversationBufferMemory",
            "node": {
              "template": {
                "chat_memory": {
                  "type": "BaseChatMessageHistory",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "chat_memory",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "ai_prefix": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": "AI",
                  "fileTypes": [],
                  "password": false,
                  "name": "ai_prefix",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "human_prefix": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": "Human",
                  "fileTypes": [],
                  "password": false,
                  "name": "human_prefix",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "input_key": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "question",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "input_key",
                  "advanced": false,
                  "dynamic": false,
                  "info": "The variable to be used as Chat Input when more than one variable is available.",
                  "title_case": true
                },
                "memory_key": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "chat_history",
                  "fileTypes": [],
                  "password": false,
                  "name": "memory_key",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "output_key": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "answer",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "output_key",
                  "advanced": false,
                  "dynamic": false,
                  "info": "The variable to be used as Chat Output (e.g. answer in a ConversationalRetrievalChain)",
                  "title_case": true
                },
                "return_messages": {
                  "type": "bool",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "return_messages",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "value": true
                },
                "_type": "ConversationBufferMemory"
              },
              "description": "Buffer for storing conversation memory.",
              "base_classes": [
                "BaseMemory",
                "ConversationBufferMemory",
                "BaseChatMemory"
              ],
              "display_name": "ConversationBufferMemory",
              "documentation": "https://python.langchain.com/docs/modules/memory/how_to/buffer",
              "custom_fields": {},
              "output_types": [],
              "field_formatters": {},
              "beta": false
            },
            "id": "ConversationBufferMemory-JOLmS"
          },
          "selected": false,
          "width": 384,
          "height": 599
        },
        {
          "id": "ConversationalRetrievalChain-UDboB",
          "type": "genericNode",
          "position": {
            "x": 2176.8024754004077,
            "y": 883.3652023964636
          },
          "data": {
            "type": "ConversationalRetrievalChain",
            "node": {
              "template": {
                "callbacks": {
                  "type": "Callbacks",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "callbacks",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "condense_question_llm": {
                  "type": "BaseLanguageModel",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "condense_question_llm",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "condense_question_prompt": {
                  "type": "BasePromptTemplate",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": {
                    "name": null,
                    "input_variables": [
                      "chat_history",
                      "question"
                    ],
                    "input_types": {},
                    "output_parser": null,
                    "partial_variables": {},
                    "metadata": null,
                    "tags": null,
                    "template": "Given the following conversation and a follow up question, rephrase the follow up question to be a standalone question, in its original language.\n\nChat History:\n{chat_history}\nFollow Up Input: {question}\nStandalone question:",
                    "template_format": "f-string",
                    "validate_template": false
                  },
                  "fileTypes": [],
                  "password": false,
                  "name": "condense_question_prompt",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "llm": {
                  "type": "BaseLanguageModel",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "llm",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "memory": {
                  "type": "BaseChatMemory",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "memory",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "retriever": {
                  "type": "BaseRetriever",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "retriever",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "chain_type": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "stuff",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "options": [
                    "stuff",
                    "map_reduce",
                    "map_rerank",
                    "refine"
                  ],
                  "name": "chain_type",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "combine_docs_chain_kwargs": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "combine_docs_chain_kwargs",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "return_source_documents": {
                  "type": "bool",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": true,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "return_source_documents",
                  "display_name": "Return source documents",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "verbose": {
                  "type": "bool",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "verbose",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "_type": "ConversationalRetrievalChain"
              },
              "description": "Convenience method to load chain from LLM and retriever.",
              "base_classes": [
                "Chain",
                "BaseConversationalRetrievalChain",
                "ConversationalRetrievalChain",
                "Callable"
              ],
              "display_name": "ConversationalRetrievalChain",
              "documentation": "https://python.langchain.com/docs/modules/chains/popular/chat_vector_db",
              "custom_fields": {},
              "output_types": [],
              "field_formatters": {},
              "beta": false
            },
            "id": "ConversationalRetrievalChain-UDboB"
          },
          "selected": false,
          "width": 384,
          "height": 448
        },
        {
          "id": "FAISS-C8n1A",
          "type": "genericNode",
          "position": {
            "x": 1262.8544453017344,
            "y": 1179.4930944975808
          },
          "data": {
            "type": "FAISS",
            "node": {
              "template": {
                "documents": {
                  "type": "Document",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "documents",
                  "display_name": "Documents",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "embedding": {
                  "type": "Embeddings",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "embedding",
                  "display_name": "Embedding",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from typing import List, Union\n\nfrom langchain.schema import BaseRetriever\nfrom langchain_community.vectorstores import VectorStore\nfrom langchain_community.vectorstores.faiss import FAISS\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import Document, Embeddings\n\n\nclass FAISSComponent(CustomComponent):\n    display_name = \"FAISS\"\n    description = \"Construct FAISS wrapper from raw documents.\"\n    documentation = \"https://python.langchain.com/docs/modules/data_connection/vectorstores/integrations/faiss\"\n\n    def build_config(self):\n        return {\n            \"documents\": {\"display_name\": \"Documents\"},\n            \"embedding\": {\"display_name\": \"Embedding\"},\n        }\n\n    def build(\n        self,\n        embedding: Embeddings,\n        documents: List[Document],\n    ) -> Union[VectorStore, FAISS, BaseRetriever]:\n        return FAISS.from_documents(documents=documents, embedding=embedding)\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "_type": "CustomComponent"
              },
              "description": "Construct FAISS wrapper from raw documents.",
              "base_classes": [
                "VectorStore",
                "VectorStore",
                "FAISS",
                "BaseRetriever"
              ],
              "display_name": "FAISS",
              "documentation": "https://python.langchain.com/docs/modules/data_connection/vectorstores/integrations/faiss",
              "custom_fields": {
                "embedding": null,
                "documents": null
              },
              "output_types": [
                "VectorStore",
                "FAISS",
                "BaseRetriever"
              ],
              "field_formatters": {},
              "beta": true
            },
            "id": "FAISS-C8n1A"
          },
          "selected": false,
          "width": 384,
          "height": 376
        },
        {
          "id": "AzureChatOpenAI-PWgAO",
          "type": "genericNode",
          "position": {
            "x": 1639.8634536107943,
            "y": -35.587501525878906
          },
          "data": {
            "type": "AzureChatOpenAI",
            "node": {
              "template": {
                "api_key": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": true,
                  "name": "api_key",
                  "display_name": "API Key",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "value": ""
                },
                "api_version": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "2023-12-01-preview",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "options": [
                    "2023-03-15-preview",
                    "2023-05-15",
                    "2023-06-01-preview",
                    "2023-07-01-preview",
                    "2023-08-01-preview",
                    "2023-09-01-preview",
                    "2023-12-01-preview"
                  ],
                  "name": "api_version",
                  "display_name": "API Version",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "azure_deployment": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "azure_deployment",
                  "display_name": "Deployment Name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "value": "gpt-4-32K"
                },
                "azure_endpoint": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "azure_endpoint",
                  "display_name": "Azure Endpoint",
                  "advanced": false,
                  "dynamic": false,
                  "info": "Your Azure endpoint, including the resource.. Example: `https://example-resource.azure.openai.com/`",
                  "title_case": true,
                  "value": ""
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from typing import Optional\nfrom axiestudio import CustomComponent\nfrom langchain.llms.base import BaseLanguageModel\nfrom langchain_community.chat_models.azure_openai import AzureChatOpenAI\n\n\nclass AzureChatOpenAIComponent(CustomComponent):\n    display_name: str = \"AzureChatOpenAI\"\n    description: str = \"LLM model from Azure OpenAI.\"\n    documentation: str = \"https://python.langchain.com/docs/integrations/llms/azure_openai\"\n    beta = False\n\n    AZURE_OPENAI_MODELS = [\n        \"gpt-35-turbo\",\n        \"gpt-35-turbo-16k\",\n        \"gpt-35-turbo-instruct\",\n        \"gpt-4\",\n        \"gpt-4-32k\",\n        \"gpt-4-vision\",\n    ]\n\n    AZURE_OPENAI_API_VERSIONS = [\n        \"2023-03-15-preview\",\n        \"2023-05-15\",\n        \"2023-06-01-preview\",\n        \"2023-07-01-preview\",\n        \"2023-08-01-preview\",\n        \"2023-09-01-preview\",\n        \"2023-12-01-preview\",\n    ]\n\n    def build_config(self):\n        return {\n            \"model\": {\n                \"display_name\": \"Model Name\",\n                \"value\": self.AZURE_OPENAI_MODELS[0],\n                \"options\": self.AZURE_OPENAI_MODELS,\n                \"required\": True,\n            },\n            \"azure_endpoint\": {\n                \"display_name\": \"Azure Endpoint\",\n                \"required\": True,\n                \"info\": \"Your Azure endpoint, including the resource.. Example: `https://example-resource.azure.openai.com/`\",\n            },\n            \"azure_deployment\": {\n                \"display_name\": \"Deployment Name\",\n                \"required\": True,\n            },\n            \"api_version\": {\n                \"display_name\": \"API Version\",\n                \"options\": self.AZURE_OPENAI_API_VERSIONS,\n                \"value\": self.AZURE_OPENAI_API_VERSIONS[-1],\n                \"required\": True,\n                \"advanced\": True,\n            },\n            \"api_key\": {\"display_name\": \"API Key\", \"required\": True, \"password\": True},\n            \"temperature\": {\n                \"display_name\": \"Temperature\",\n                \"value\": 0.7,\n                \"field_type\": \"float\",\n                \"required\": False,\n            },\n            \"max_tokens\": {\n                \"display_name\": \"Max Tokens\",\n                \"value\": 1000,\n                \"required\": False,\n                \"field_type\": \"int\",\n                \"advanced\": True,\n                \"info\": \"Maximum number of tokens to generate.\",\n            },\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        model: str,\n        azure_endpoint: str,\n        azure_deployment: str,\n        api_key: str,\n        api_version: str,\n        temperature: float = 0.7,\n        max_tokens: Optional[int] = 1000,\n    ) -> BaseLanguageModel:\n        try:\n            llm = AzureChatOpenAI(\n                model=model,\n                azure_endpoint=azure_endpoint,\n                azure_deployment=azure_deployment,\n                api_version=api_version,\n                api_key=api_key,\n                temperature=temperature,\n                max_tokens=max_tokens,\n            )\n        except Exception as e:\n            raise ValueError(\"Could not connect to AzureOpenAI API.\") from e\n        return llm\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "max_tokens": {
                  "type": "int",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": 1000,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "max_tokens",
                  "display_name": "Max Tokens",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Maximum number of tokens to generate.",
                  "title_case": true
                },
                "model": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "gpt-4-32k",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "options": [
                    "gpt-35-turbo",
                    "gpt-35-turbo-16k",
                    "gpt-35-turbo-instruct",
                    "gpt-4",
                    "gpt-4-32k",
                    "gpt-4-vision"
                  ],
                  "name": "model",
                  "display_name": "Model Name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "temperature": {
                  "type": "float",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": 0.7,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "temperature",
                  "display_name": "Temperature",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "rangeSpec": {
                    "min": -1,
                    "max": 1,
                    "step": 0.1
                  },
                  "title_case": true
                },
                "_type": "CustomComponent"
              },
              "description": "LLM model from Azure OpenAI.",
              "base_classes": [
                "BaseLanguageModel"
              ],
              "display_name": "AzureChatOpenAI",
              "documentation": "https://python.langchain.com/docs/integrations/llms/azure_openai",
              "custom_fields": {
                "model": null,
                "azure_endpoint": null,
                "azure_deployment": null,
                "api_key": null,
                "api_version": null,
                "temperature": null,
                "max_tokens": null
              },
              "output_types": [
                "BaseLanguageModel"
              ],
              "field_formatters": {},
              "beta": false
            },
            "id": "AzureChatOpenAI-PWgAO"
          },
          "selected": false,
          "width": 384,
          "height": 736
        },
        {
          "id": "AzureOpenAIEmbeddings-M77ou",
          "type": "genericNode",
          "position": {
            "x": 616.8829066719679,
            "y": 1428.0038057216202
          },
          "data": {
            "type": "AzureOpenAIEmbeddings",
            "node": {
              "template": {
                "api_key": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": true,
                  "name": "api_key",
                  "display_name": "API Key",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "value": ""
                },
                "api_version": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "2023-08-01-preview",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "options": [
                    "2022-12-01",
                    "2023-03-15-preview",
                    "2023-05-15",
                    "2023-06-01-preview",
                    "2023-07-01-preview",
                    "2023-08-01-preview"
                  ],
                  "name": "api_version",
                  "display_name": "API Version",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "azure_deployment": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "azure_deployment",
                  "display_name": "Deployment Name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "value": "text-embedding-ada-002"
                },
                "azure_endpoint": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "azure_endpoint",
                  "display_name": "Azure Endpoint",
                  "advanced": false,
                  "dynamic": false,
                  "info": "Your Azure endpoint, including the resource.. Example: `https://example-resource.azure.openai.com/`",
                  "title_case": true,
                  "value": ""
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from langchain.embeddings.base import Embeddings\nfrom langchain_community.embeddings import AzureOpenAIEmbeddings\n\nfrom axiestudio import CustomComponent\n\n\nclass AzureOpenAIEmbeddingsComponent(CustomComponent):\n    display_name: str = \"AzureOpenAIEmbeddings\"\n    description: str = \"Embeddings model from Azure OpenAI.\"\n    documentation: str = \"https://python.langchain.com/docs/integrations/text_embedding/azureopenai\"\n    beta = False\n\n    API_VERSION_OPTIONS = [\n        \"2022-12-01\",\n        \"2023-03-15-preview\",\n        \"2023-05-15\",\n        \"2023-06-01-preview\",\n        \"2023-07-01-preview\",\n        \"2023-08-01-preview\",\n    ]\n\n    def build_config(self):\n        return {\n            \"azure_endpoint\": {\n                \"display_name\": \"Azure Endpoint\",\n                \"required\": True,\n                \"info\": \"Your Azure endpoint, including the resource.. Example: `https://example-resource.azure.openai.com/`\",\n            },\n            \"azure_deployment\": {\n                \"display_name\": \"Deployment Name\",\n                \"required\": True,\n            },\n            \"api_version\": {\n                \"display_name\": \"API Version\",\n                \"options\": self.API_VERSION_OPTIONS,\n                \"value\": self.API_VERSION_OPTIONS[-1],\n                \"advanced\": True,\n            },\n            \"api_key\": {\n                \"display_name\": \"API Key\",\n                \"required\": True,\n                \"password\": True,\n            },\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        azure_endpoint: str,\n        azure_deployment: str,\n        api_version: str,\n        api_key: str,\n    ) -> Embeddings:\n        try:\n            embeddings = AzureOpenAIEmbeddings(\n                azure_endpoint=azure_endpoint,\n                azure_deployment=azure_deployment,\n                api_version=api_version,\n                api_key=api_key,\n            )\n\n        except Exception as e:\n            raise ValueError(\"Could not connect to AzureOpenAIEmbeddings API.\") from e\n\n        return embeddings\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "_type": "CustomComponent"
              },
              "description": "Embeddings model from Azure OpenAI.",
              "base_classes": [
                "Embeddings"
              ],
              "display_name": "AzureOpenAIEmbeddings",
              "documentation": "https://python.langchain.com/docs/integrations/text_embedding/azureopenai",
              "custom_fields": {
                "azure_endpoint": null,
                "azure_deployment": null,
                "api_version": null,
                "api_key": null
              },
              "output_types": [
                "Embeddings"
              ],
              "field_formatters": {},
              "beta": false
            },
            "id": "AzureOpenAIEmbeddings-M77ou"
          },
          "selected": false,
          "width": 384,
          "height": 561
        }
      ],
      "edges": [
        {
          "source": "PyPDFLoader-SJG1M",
          "target": "RecursiveCharacterTextSplitter-0Ho62",
          "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œPyPDFLoaderœ,œidœ:œPyPDFLoader-SJG1Mœ}",
          "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œRecursiveCharacterTextSplitter-0Ho62œ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
          "id": "reactflow__edge-PyPDFLoader-SJG1M{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œPyPDFLoaderœ,œidœ:œPyPDFLoader-SJG1Mœ}-RecursiveCharacterTextSplitter-0Ho62{œfieldNameœ:œdocumentsœ,œidœ:œRecursiveCharacterTextSplitter-0Ho62œ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
          "data": {
            "targetHandle": {
              "fieldName": "documents",
              "id": "RecursiveCharacterTextSplitter-0Ho62",
              "inputTypes": null,
              "type": "Document"
            },
            "sourceHandle": {
              "baseClasses": [
                "Document"
              ],
              "dataType": "PyPDFLoader",
              "id": "PyPDFLoader-SJG1M"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-gray-900 ",
          "animated": false,
          "selected": false
        },
        {
          "source": "ConversationBufferMemory-JOLmS",
          "target": "ConversationalRetrievalChain-UDboB",
          "sourceHandle": "{œbaseClassesœ:[œBaseMemoryœ,œConversationBufferMemoryœ,œBaseChatMemoryœ],œdataTypeœ:œConversationBufferMemoryœ,œidœ:œConversationBufferMemory-JOLmSœ}",
          "targetHandle": "{œfieldNameœ:œmemoryœ,œidœ:œConversationalRetrievalChain-UDboBœ,œinputTypesœ:null,œtypeœ:œBaseChatMemoryœ}",
          "id": "reactflow__edge-ConversationBufferMemory-JOLmS{œbaseClassesœ:[œBaseMemoryœ,œConversationBufferMemoryœ,œBaseChatMemoryœ],œdataTypeœ:œConversationBufferMemoryœ,œidœ:œConversationBufferMemory-JOLmSœ}-ConversationalRetrievalChain-UDboB{œfieldNameœ:œmemoryœ,œidœ:œConversationalRetrievalChain-UDboBœ,œinputTypesœ:null,œtypeœ:œBaseChatMemoryœ}",
          "data": {
            "targetHandle": {
              "fieldName": "memory",
              "id": "ConversationalRetrievalChain-UDboB",
              "inputTypes": null,
              "type": "BaseChatMemory"
            },
            "sourceHandle": {
              "baseClasses": [
                "BaseMemory",
                "ConversationBufferMemory",
                "BaseChatMemory"
              ],
              "dataType": "ConversationBufferMemory",
              "id": "ConversationBufferMemory-JOLmS"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-gray-900 ",
          "animated": false,
          "selected": false
        },
        {
          "source": "RecursiveCharacterTextSplitter-0Ho62",
          "target": "FAISS-C8n1A",
          "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œRecursiveCharacterTextSplitterœ,œidœ:œRecursiveCharacterTextSplitter-0Ho62œ}",
          "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œFAISS-C8n1Aœ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
          "id": "reactflow__edge-RecursiveCharacterTextSplitter-0Ho62{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œRecursiveCharacterTextSplitterœ,œidœ:œRecursiveCharacterTextSplitter-0Ho62œ}-FAISS-C8n1A{œfieldNameœ:œdocumentsœ,œidœ:œFAISS-C8n1Aœ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
          "data": {
            "targetHandle": {
              "fieldName": "documents",
              "id": "FAISS-C8n1A",
              "inputTypes": null,
              "type": "Document"
            },
            "sourceHandle": {
              "baseClasses": [
                "Document"
              ],
              "dataType": "RecursiveCharacterTextSplitter",
              "id": "RecursiveCharacterTextSplitter-0Ho62"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-gray-900 ",
          "animated": false,
          "selected": false
        },
        {
          "source": "FAISS-C8n1A",
          "target": "ConversationalRetrievalChain-UDboB",
          "sourceHandle": "{œbaseClassesœ:[œVectorStoreœ,œVectorStoreœ,œFAISSœ,œBaseRetrieverœ],œdataTypeœ:œFAISSœ,œidœ:œFAISS-C8n1Aœ}",
          "targetHandle": "{œfieldNameœ:œretrieverœ,œidœ:œConversationalRetrievalChain-UDboBœ,œinputTypesœ:null,œtypeœ:œBaseRetrieverœ}",
          "id": "reactflow__edge-FAISS-C8n1A{œbaseClassesœ:[œVectorStoreœ,œVectorStoreœ,œFAISSœ,œBaseRetrieverœ],œdataTypeœ:œFAISSœ,œidœ:œFAISS-C8n1Aœ}-ConversationalRetrievalChain-UDboB{œfieldNameœ:œretrieverœ,œidœ:œConversationalRetrievalChain-UDboBœ,œinputTypesœ:null,œtypeœ:œBaseRetrieverœ}",
          "data": {
            "targetHandle": {
              "fieldName": "retriever",
              "id": "ConversationalRetrievalChain-UDboB",
              "inputTypes": null,
              "type": "BaseRetriever"
            },
            "sourceHandle": {
              "baseClasses": [
                "VectorStore",
                "VectorStore",
                "FAISS",
                "BaseRetriever"
              ],
              "dataType": "FAISS",
              "id": "FAISS-C8n1A"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-gray-900 ",
          "animated": false,
          "selected": false
        },
        {
          "source": "AzureChatOpenAI-PWgAO",
          "target": "ConversationalRetrievalChain-UDboB",
          "sourceHandle": "{œbaseClassesœ:[œBaseLanguageModelœ],œdataTypeœ:œAzureChatOpenAIœ,œidœ:œAzureChatOpenAI-PWgAOœ}",
          "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œConversationalRetrievalChain-UDboBœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}",
          "id": "reactflow__edge-AzureChatOpenAI-PWgAO{œbaseClassesœ:[œBaseLanguageModelœ],œdataTypeœ:œAzureChatOpenAIœ,œidœ:œAzureChatOpenAI-PWgAOœ}-ConversationalRetrievalChain-UDboB{œfieldNameœ:œllmœ,œidœ:œConversationalRetrievalChain-UDboBœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}",
          "data": {
            "targetHandle": {
              "fieldName": "llm",
              "id": "ConversationalRetrievalChain-UDboB",
              "inputTypes": null,
              "type": "BaseLanguageModel"
            },
            "sourceHandle": {
              "baseClasses": [
                "BaseLanguageModel"
              ],
              "dataType": "AzureChatOpenAI",
              "id": "AzureChatOpenAI-PWgAO"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-gray-900 ",
          "animated": false,
          "selected": false
        },
        {
          "source": "AzureOpenAIEmbeddings-M77ou",
          "target": "FAISS-C8n1A",
          "sourceHandle": "{œbaseClassesœ:[œEmbeddingsœ],œdataTypeœ:œAzureOpenAIEmbeddingsœ,œidœ:œAzureOpenAIEmbeddings-M77ouœ}",
          "targetHandle": "{œfieldNameœ:œembeddingœ,œidœ:œFAISS-C8n1Aœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}",
          "id": "reactflow__edge-AzureOpenAIEmbeddings-M77ou{œbaseClassesœ:[œEmbeddingsœ],œdataTypeœ:œAzureOpenAIEmbeddingsœ,œidœ:œAzureOpenAIEmbeddings-M77ouœ}-FAISS-C8n1A{œfieldNameœ:œembeddingœ,œidœ:œFAISS-C8n1Aœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}",
          "data": {
            "targetHandle": {
              "fieldName": "embedding",
              "id": "FAISS-C8n1A",
              "inputTypes": null,
              "type": "Embeddings"
            },
            "sourceHandle": {
              "baseClasses": [
                "Embeddings"
              ],
              "dataType": "AzureOpenAIEmbeddings",
              "id": "AzureOpenAIEmbeddings-M77ou"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-gray-900 ",
          "animated": false,
          "selected": false
        }
      ],
      "viewport": {
        "x": 43.009504198850095,
        "y": -142.14814284611396,
        "zoom": 0.4600938253124376
      }
    },
    "date_created": "2024-06-10T21:26:41.336Z",
    "date_updated": "2024-06-10T21:26:41.373Z",
    "status": "Public",
    "sort": null,
    "user_updated": "b8445dc7-4758-4354-ac36-62cb3797828c",
    "user_created": {
      "username": "JayDoubleu",
      "first_name": "Jay",
      "last_name": "Walaszek",
      "id": "b8445dc7-4758-4354-ac36-62cb3797828c"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:08.496Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 8,
    "converter_version": "1.0.0"
  }
}