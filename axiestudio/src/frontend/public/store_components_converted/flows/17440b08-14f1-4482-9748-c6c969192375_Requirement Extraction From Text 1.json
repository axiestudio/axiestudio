{
  "id": "17440b08-14f1-4482-9748-c6c969192375",
  "name": "Requirement Extraction From Text (1)",
  "description": "",
  "type": "FLOW",
  "is_component": false,
  "author": {
    "username": "wiresky",
    "first_name": "Nguyen",
    "last_name": "Nam",
    "id": "dc599610-3065-4b5b-94ed-de108ec210dd",
    "full_name": "Nguyen Nam"
  },
  "store_url": "https://www.langflow.store/store/component/17440b08-14f1-4482-9748-c6c969192375",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-05-07T02:06:13.680Z",
    "updated": "2024-05-07T02:06:13.711Z",
    "downloaded": "2025-08-19T17:50:05.069Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "0.6.18",
    "private": true,
    "status": "Public"
  },
  "data": {
    "nodes": [
      {
        "id": "LLMChain-cTBV5",
        "type": "genericNode",
        "position": {
          "x": 776,
          "y": 402.328125
        },
        "data": {
          "type": "LLMChain",
          "node": {
            "template": {
              "llm": {
                "type": "BaseLanguageModel",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "llm",
                "display_name": "LLM",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "memory": {
                "type": "BaseMemory",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "memory",
                "display_name": "Memory",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "prompt": {
                "type": "BasePromptTemplate",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "prompt",
                "display_name": "Prompt",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from typing import Callable, Optional, Union\n\nfrom langchain.chains import LLMChain\n\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import (\n    BaseLanguageModel,\n    BaseMemory,\n    BasePromptTemplate,\n    Chain,\n)\n\n\nclass LLMChainComponent(CustomComponent):\n    display_name = \"LLMChain\"\n    description = \"Chain to run queries against LLMs\"\n\n    def build_config(self):\n        return {\n            \"prompt\": {\"display_name\": \"Prompt\"},\n            \"llm\": {\"display_name\": \"LLM\"},\n            \"memory\": {\"display_name\": \"Memory\"},\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        prompt: BasePromptTemplate,\n        llm: BaseLanguageModel,\n        memory: Optional[BaseMemory] = None,\n    ) -> Union[Chain, Callable, LLMChain]:\n        return LLMChain(prompt=prompt, llm=llm, memory=memory)\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "_type": "CustomComponent"
            },
            "description": "Chain to run queries against LLMs",
            "base_classes": [
              "Chain",
              "Callable",
              "Chain",
              "LLMChain"
            ],
            "display_name": "LLMChain",
            "documentation": "",
            "custom_fields": {
              "prompt": null,
              "llm": null,
              "memory": null
            },
            "output_types": [
              "Chain",
              "Callable",
              "LLMChain"
            ],
            "field_formatters": {},
            "beta": true
          },
          "id": "LLMChain-cTBV5"
        },
        "selected": false,
        "width": 384,
        "height": 425
      },
      {
        "id": "ChatOpenAI-6Isak",
        "type": "genericNode",
        "position": {
          "x": 246,
          "y": -478.67187499999994
        },
        "data": {
          "type": "ChatOpenAI",
          "node": {
            "template": {
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from typing import Optional, Union\n\nfrom langchain.llms import BaseLLM\nfrom langchain_community.chat_models.openai import ChatOpenAI\n\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import BaseLanguageModel, NestedDict\n\n\nclass ChatOpenAIComponent(CustomComponent):\n    display_name = \"ChatOpenAI\"\n    description = \"`OpenAI` Chat large language models API.\"\n\n    def build_config(self):\n        return {\n            \"max_tokens\": {\n                \"display_name\": \"Max Tokens\",\n                \"field_type\": \"int\",\n                \"advanced\": False,\n                \"required\": False,\n            },\n            \"model_kwargs\": {\n                \"display_name\": \"Model Kwargs\",\n                \"field_type\": \"NestedDict\",\n                \"advanced\": True,\n                \"required\": False,\n            },\n            \"model_name\": {\n                \"display_name\": \"Model Name\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"options\": [\n                    \"gpt-4-turbo-preview\",\n                    \"gpt-4-0125-preview\",\n                    \"gpt-4-1106-preview\",\n                    \"gpt-4-vision-preview\",\n                    \"gpt-3.5-turbo-0125\",\n                    \"gpt-3.5-turbo-1106\",\n                ],\n            },\n            \"openai_api_base\": {\n                \"display_name\": \"OpenAI API Base\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"info\": (\n                    \"The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\\n\\n\"\n                    \"You can change this to use other APIs like JinaChat, LocalAI and Prem.\"\n                ),\n            },\n            \"openai_api_key\": {\n                \"display_name\": \"OpenAI API Key\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"password\": True,\n            },\n            \"temperature\": {\n                \"display_name\": \"Temperature\",\n                \"field_type\": \"float\",\n                \"advanced\": False,\n                \"required\": False,\n                \"value\": 0.7,\n            },\n        }\n\n    def build(\n        self,\n        max_tokens: Optional[int] = 256,\n        model_kwargs: NestedDict = {},\n        model_name: str = \"gpt-4-1106-preview\",\n        openai_api_base: Optional[str] = None,\n        openai_api_key: Optional[str] = None,\n        temperature: float = 0.7,\n    ) -> Union[BaseLanguageModel, BaseLLM]:\n        if not openai_api_base:\n            openai_api_base = \"https://api.openai.com/v1\"\n        return ChatOpenAI(\n            max_tokens=max_tokens,\n            model_kwargs=model_kwargs,\n            model=model_name,\n            base_url=openai_api_base,\n            api_key=openai_api_key,\n            temperature=temperature,\n        )\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "max_tokens": {
                "type": "int",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "1024",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "model_kwargs": {
                "type": "NestedDict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": {},
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "model_kwargs",
                "display_name": "Model Kwargs",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "model_name": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "gpt-3.5-turbo-0125",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "options": [
                  "gpt-4-turbo-preview",
                  "gpt-4-0125-preview",
                  "gpt-4-1106-preview",
                  "gpt-4-vision-preview",
                  "gpt-3.5-turbo-0125",
                  "gpt-3.5-turbo-1106"
                ],
                "name": "model_name",
                "display_name": "Model Name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "openai_api_base": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "openai_api_base",
                "display_name": "OpenAI API Base",
                "advanced": false,
                "dynamic": false,
                "info": "The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.",
                "title_case": true
              },
              "openai_api_key": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": true,
                "name": "openai_api_key",
                "display_name": "OpenAI API Key",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "value": ""
              },
              "temperature": {
                "type": "float",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "0.2",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "temperature",
                "display_name": "Temperature",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "rangeSpec": {
                  "min": -1,
                  "max": 1,
                  "step": 0.1
                },
                "title_case": true
              },
              "_type": "CustomComponent"
            },
            "description": "`OpenAI` Chat large language models API.",
            "base_classes": [
              "BaseLanguageModel",
              "BaseLanguageModel",
              "BaseLLM"
            ],
            "display_name": "ChatOpenAI",
            "documentation": "",
            "custom_fields": {
              "max_tokens": null,
              "model_kwargs": null,
              "model_name": null,
              "openai_api_base": null,
              "openai_api_key": null,
              "temperature": null
            },
            "output_types": [
              "BaseLanguageModel",
              "BaseLLM"
            ],
            "field_formatters": {},
            "beta": true
          },
          "id": "ChatOpenAI-6Isak"
        },
        "selected": false,
        "width": 384,
        "height": 731,
        "positionAbsolute": {
          "x": 246,
          "y": -478.67187499999994
        },
        "dragging": false
      },
      {
        "id": "ChatPromptTemplate-uS8uO",
        "type": "genericNode",
        "position": {
          "x": 252.79258316086816,
          "y": 605.1309348128682
        },
        "data": {
          "type": "ChatPromptTemplate",
          "node": {
            "template": {
              "messages": {
                "type": "BaseMessagePromptTemplate",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "messages",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "output_parser": {
                "type": "BaseOutputParser",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "output_parser",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "input_types": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "input_types",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "input_variables": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "input_variables",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "metadata": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "metadata",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "name": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "name",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "partial_variables": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "partial_variables",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "tags": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": true,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "tags",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "validate_template": {
                "type": "bool",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": false,
                "fileTypes": [],
                "password": false,
                "name": "validate_template",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "_type": "ChatPromptTemplate"
            },
            "description": "Prompt template for chat models.",
            "base_classes": [
              "BasePromptTemplate",
              "ChatPromptTemplate",
              "BaseChatPromptTemplate"
            ],
            "display_name": "ChatPromptTemplate",
            "documentation": "https://python.langchain.com/docs/modules/model_io/models/chat/how_to/prompts",
            "custom_fields": {},
            "output_types": [],
            "field_formatters": {},
            "beta": false
          },
          "id": "ChatPromptTemplate-uS8uO"
        },
        "selected": false,
        "width": 384,
        "height": 243,
        "positionAbsolute": {
          "x": 252.79258316086816,
          "y": 605.1309348128682
        },
        "dragging": false
      },
      {
        "id": "HumanMessagePromptTemplate-uLNaU",
        "type": "genericNode",
        "position": {
          "x": -250.38564242429135,
          "y": 850.6261936623752
        },
        "data": {
          "type": "HumanMessagePromptTemplate",
          "node": {
            "template": {
              "additional_kwargs": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "additional_kwargs",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "prompt": {
                "type": "prompt",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": true,
                "value": "{input_text}",
                "fileTypes": [],
                "password": false,
                "name": "prompt",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "_type": "HumanMessagePromptTemplate",
              "input_text": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "Workflow and Delegations\n \nThe solution MUST support:\n1.\tan ‘approval workflow’ capability for price structure changes, for Product staff.\n2.\tan ‘approval workflow’ capability for list price changes for Product staff.\n3.\tan ‘approval workflow’ capability for price changes, with logic using ‘delegated discount ranges’ for Sales staff.\n4.\tan ‘approval workflow’ capability for tax and other changes, for Finance staff.",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "input_text",
                "display_name": "input_text",
                "advanced": false,
                "input_types": [
                  "Document",
                  "BaseOutputParser"
                ],
                "dynamic": false,
                "info": "",
                "title_case": true
              }
            },
            "description": "Human message prompt template. This is a message sent from the user.",
            "icon": null,
            "base_classes": [
              "BaseMessagePromptTemplate",
              "HumanMessagePromptTemplate",
              "_StringImageMessagePromptTemplate"
            ],
            "name": "",
            "display_name": "HumanMessagePromptTemplate",
            "documentation": "https://python.langchain.com/docs/modules/model_io/models/chat/how_to/prompts",
            "custom_fields": {
              "": [
                "input_text"
              ]
            },
            "output_types": [],
            "full_path": null,
            "field_formatters": {},
            "beta": false,
            "error": null
          },
          "id": "HumanMessagePromptTemplate-uLNaU",
          "description": "Human message prompt template. This is a message sent from the user.",
          "display_name": "HumanMessagePromptTemplate"
        },
        "selected": false,
        "width": 384,
        "height": 395,
        "dragging": false,
        "positionAbsolute": {
          "x": -250.38564242429135,
          "y": 850.6261936623752
        }
      },
      {
        "id": "SystemMessagePromptTemplate-qImmg",
        "type": "genericNode",
        "position": {
          "x": -248.64454129769928,
          "y": 225.5708892157581
        },
        "data": {
          "type": "SystemMessagePromptTemplate",
          "node": {
            "template": {
              "additional_kwargs": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "additional_kwargs",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "prompt": {
                "type": "prompt",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": true,
                "value": "{Instructions}\n\n### Examples:\n\n{Examples}",
                "fileTypes": [],
                "password": false,
                "name": "prompt",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "_type": "SystemMessagePromptTemplate",
              "Instructions": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "Instructions",
                "display_name": "Instructions",
                "advanced": false,
                "input_types": [
                  "Document",
                  "BaseOutputParser"
                ],
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "Examples": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "Examples",
                "display_name": "Examples",
                "advanced": false,
                "input_types": [
                  "Document",
                  "BaseOutputParser"
                ],
                "dynamic": false,
                "info": "",
                "title_case": true
              }
            },
            "description": "System message prompt template.",
            "icon": null,
            "base_classes": [
              "BaseMessagePromptTemplate",
              "SystemMessagePromptTemplate",
              "_StringImageMessagePromptTemplate"
            ],
            "name": "",
            "display_name": "SystemMessagePromptTemplate",
            "documentation": "https://python.langchain.com/docs/modules/model_io/models/chat/how_to/prompts",
            "custom_fields": {
              "": [
                "Instructions",
                "Examples"
              ]
            },
            "output_types": [],
            "full_path": null,
            "field_formatters": {},
            "beta": false,
            "error": null
          },
          "id": "SystemMessagePromptTemplate-qImmg",
          "description": "System message prompt template.",
          "display_name": "SystemMessagePromptTemplate"
        },
        "selected": false,
        "width": 384,
        "height": 469,
        "positionAbsolute": {
          "x": -248.64454129769928,
          "y": 225.5708892157581
        },
        "dragging": false
      },
      {
        "id": "CustomComponent-K2ESS",
        "type": "genericNode",
        "position": {
          "x": -1048.1974865546229,
          "y": -60.12098810729186
        },
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio import CustomComponent\nfrom langchain_core.prompts import ChatPromptTemplate\nfrom langfuse import Langfuse\nimport os\n\nclass PromptRetrieverToString(CustomComponent):\n    display_name = \"PromptRetrieverToString\"\n    documentation = \"http://docs.axiestudio.org/components/custom\"\n    description = \"Get prompt from Langfuse and return the prompt string\"\n\n    def build_config(self):\n        return {\"prompt_name\": {\"display_name\": \"Prompt name\"}}\n\n    def build(self, prompt_name: str) -> str:\n        \n        langfuse = Langfuse(\n            secret_key=os.environ.get('LANGFLOW_LANGFUSE_SECRET_KEY', ''),\n            public_key=os.environ.get('LANGFLOW_LANGFUSE_PUBLIC_KEY', ''),\n            host=os.environ.get('LANGFLOW_LANGFUSE_HOST', ''),\n        )\n        langfuse_prompt = langfuse.get_prompt(prompt_name)\n        langchain_prompt = langfuse_prompt.get_langchain_prompt()\n    \n        return langchain_prompt\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "prompt_name": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "prompt_name",
                "display_name": "Prompt name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "value": "requirement_extraction_examples"
              },
              "_type": "CustomComponent"
            },
            "description": "Get prompt from Langfuse and return the prompt string",
            "base_classes": [
              "str"
            ],
            "display_name": "PromptRetrieverToString",
            "documentation": "http://docs.axiestudio.org/components/custom",
            "custom_fields": {
              "prompt_name": null
            },
            "output_types": [
              "str"
            ],
            "field_formatters": {},
            "beta": true
          },
          "id": "CustomComponent-K2ESS",
          "description": "Get prompt from Langfuse and return the prompt string",
          "display_name": "PromptRetrieverToString"
        },
        "selected": false,
        "width": 384,
        "height": 394,
        "dragging": false,
        "positionAbsolute": {
          "x": -1048.1974865546229,
          "y": -60.12098810729186
        }
      },
      {
        "id": "CustomComponent-CuiYI",
        "type": "genericNode",
        "position": {
          "x": -1057.1227061886327,
          "y": 444.6692897516018
        },
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio import CustomComponent\nfrom langchain_core.prompts import ChatPromptTemplate\nfrom langfuse import Langfuse\nimport os\n\nclass PromptRetrieverToString(CustomComponent):\n    display_name = \"PromptRetrieverToString\"\n    documentation = \"http://docs.axiestudio.org/components/custom\"\n    description = \"Get prompt from Langfuse and return the prompt string\"\n\n    def build_config(self):\n        return {\"prompt_name\": {\"display_name\": \"Prompt name\"}}\n\n    def build(self, prompt_name: str) -> str:\n        \n        langfuse = Langfuse(\n            secret_key=os.environ.get('LANGFLOW_LANGFUSE_SECRET_KEY', ''),\n            public_key=os.environ.get('LANGFLOW_LANGFUSE_PUBLIC_KEY', ''),\n            host=os.environ.get('LANGFLOW_LANGFUSE_HOST', ''),\n        )\n        langfuse_prompt = langfuse.get_prompt(prompt_name)\n        langchain_prompt = langfuse_prompt.get_langchain_prompt()\n    \n        return langchain_prompt\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "prompt_name": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "prompt_name",
                "display_name": "Prompt name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "value": "requirement_extraction_instruction"
              },
              "_type": "CustomComponent"
            },
            "description": "Get prompt from Langfuse and return the prompt string",
            "base_classes": [
              "str"
            ],
            "display_name": "PromptRetrieverToString",
            "documentation": "http://docs.axiestudio.org/components/custom",
            "custom_fields": {
              "prompt_name": null
            },
            "output_types": [
              "str"
            ],
            "field_formatters": {},
            "beta": true,
            "official": false
          },
          "id": "CustomComponent-CuiYI"
        },
        "selected": true,
        "width": 384,
        "height": 394,
        "positionAbsolute": {
          "x": -1057.1227061886327,
          "y": 444.6692897516018
        },
        "dragging": true
      }
    ],
    "edges": [
      {
        "source": "ChatOpenAI-6Isak",
        "sourceHandle": "{œbaseClassesœ:[œBaseLanguageModelœ,œBaseLanguageModelœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-6Isakœ}",
        "target": "LLMChain-cTBV5",
        "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œLLMChain-cTBV5œ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}",
        "data": {
          "targetHandle": {
            "fieldName": "llm",
            "id": "LLMChain-cTBV5",
            "inputTypes": null,
            "type": "BaseLanguageModel"
          },
          "sourceHandle": {
            "baseClasses": [
              "BaseLanguageModel",
              "BaseLanguageModel",
              "BaseLLM"
            ],
            "dataType": "ChatOpenAI",
            "id": "ChatOpenAI-6Isak"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-gray-900  stroke-connection",
        "animated": false,
        "id": "reactflow__edge-ChatOpenAI-6Isak{œbaseClassesœ:[œBaseLanguageModelœ,œBaseLanguageModelœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-6Isakœ}-LLMChain-cTBV5{œfieldNameœ:œllmœ,œidœ:œLLMChain-cTBV5œ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}"
      },
      {
        "source": "ChatPromptTemplate-uS8uO",
        "sourceHandle": "{œbaseClassesœ:[œBasePromptTemplateœ,œChatPromptTemplateœ,œBaseChatPromptTemplateœ],œdataTypeœ:œChatPromptTemplateœ,œidœ:œChatPromptTemplate-uS8uOœ}",
        "target": "LLMChain-cTBV5",
        "targetHandle": "{œfieldNameœ:œpromptœ,œidœ:œLLMChain-cTBV5œ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}",
        "data": {
          "targetHandle": {
            "fieldName": "prompt",
            "id": "LLMChain-cTBV5",
            "inputTypes": null,
            "type": "BasePromptTemplate"
          },
          "sourceHandle": {
            "baseClasses": [
              "BasePromptTemplate",
              "ChatPromptTemplate",
              "BaseChatPromptTemplate"
            ],
            "dataType": "ChatPromptTemplate",
            "id": "ChatPromptTemplate-uS8uO"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-gray-900  stroke-connection",
        "animated": false,
        "id": "reactflow__edge-ChatPromptTemplate-uS8uO{œbaseClassesœ:[œBasePromptTemplateœ,œChatPromptTemplateœ,œBaseChatPromptTemplateœ],œdataTypeœ:œChatPromptTemplateœ,œidœ:œChatPromptTemplate-uS8uOœ}-LLMChain-cTBV5{œfieldNameœ:œpromptœ,œidœ:œLLMChain-cTBV5œ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}"
      },
      {
        "source": "HumanMessagePromptTemplate-uLNaU",
        "sourceHandle": "{œbaseClassesœ:[œBaseMessagePromptTemplateœ,œHumanMessagePromptTemplateœ,œ_StringImageMessagePromptTemplateœ],œdataTypeœ:œHumanMessagePromptTemplateœ,œidœ:œHumanMessagePromptTemplate-uLNaUœ}",
        "target": "ChatPromptTemplate-uS8uO",
        "targetHandle": "{œfieldNameœ:œmessagesœ,œidœ:œChatPromptTemplate-uS8uOœ,œinputTypesœ:null,œtypeœ:œBaseMessagePromptTemplateœ}",
        "data": {
          "targetHandle": {
            "fieldName": "messages",
            "id": "ChatPromptTemplate-uS8uO",
            "inputTypes": null,
            "type": "BaseMessagePromptTemplate"
          },
          "sourceHandle": {
            "baseClasses": [
              "BaseMessagePromptTemplate",
              "HumanMessagePromptTemplate",
              "_StringImageMessagePromptTemplate"
            ],
            "dataType": "HumanMessagePromptTemplate",
            "id": "HumanMessagePromptTemplate-uLNaU"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-gray-900  stroke-connection",
        "animated": false,
        "id": "reactflow__edge-HumanMessagePromptTemplate-uLNaU{œbaseClassesœ:[œBaseMessagePromptTemplateœ,œHumanMessagePromptTemplateœ,œ_StringImageMessagePromptTemplateœ],œdataTypeœ:œHumanMessagePromptTemplateœ,œidœ:œHumanMessagePromptTemplate-uLNaUœ}-ChatPromptTemplate-uS8uO{œfieldNameœ:œmessagesœ,œidœ:œChatPromptTemplate-uS8uOœ,œinputTypesœ:null,œtypeœ:œBaseMessagePromptTemplateœ}"
      },
      {
        "source": "SystemMessagePromptTemplate-qImmg",
        "sourceHandle": "{œbaseClassesœ:[œBaseMessagePromptTemplateœ,œSystemMessagePromptTemplateœ,œ_StringImageMessagePromptTemplateœ],œdataTypeœ:œSystemMessagePromptTemplateœ,œidœ:œSystemMessagePromptTemplate-qImmgœ}",
        "target": "ChatPromptTemplate-uS8uO",
        "targetHandle": "{œfieldNameœ:œmessagesœ,œidœ:œChatPromptTemplate-uS8uOœ,œinputTypesœ:null,œtypeœ:œBaseMessagePromptTemplateœ}",
        "data": {
          "targetHandle": {
            "fieldName": "messages",
            "id": "ChatPromptTemplate-uS8uO",
            "inputTypes": null,
            "type": "BaseMessagePromptTemplate"
          },
          "sourceHandle": {
            "baseClasses": [
              "BaseMessagePromptTemplate",
              "SystemMessagePromptTemplate",
              "_StringImageMessagePromptTemplate"
            ],
            "dataType": "SystemMessagePromptTemplate",
            "id": "SystemMessagePromptTemplate-qImmg"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-gray-900  stroke-connection",
        "animated": false,
        "id": "reactflow__edge-SystemMessagePromptTemplate-qImmg{œbaseClassesœ:[œBaseMessagePromptTemplateœ,œSystemMessagePromptTemplateœ,œ_StringImageMessagePromptTemplateœ],œdataTypeœ:œSystemMessagePromptTemplateœ,œidœ:œSystemMessagePromptTemplate-qImmgœ}-ChatPromptTemplate-uS8uO{œfieldNameœ:œmessagesœ,œidœ:œChatPromptTemplate-uS8uOœ,œinputTypesœ:null,œtypeœ:œBaseMessagePromptTemplateœ}"
      },
      {
        "source": "CustomComponent-K2ESS",
        "sourceHandle": "{œbaseClassesœ:[œstrœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-K2ESSœ}",
        "target": "SystemMessagePromptTemplate-qImmg",
        "targetHandle": "{œfieldNameœ:œExamplesœ,œidœ:œSystemMessagePromptTemplate-qImmgœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}",
        "data": {
          "targetHandle": {
            "fieldName": "Examples",
            "id": "SystemMessagePromptTemplate-qImmg",
            "inputTypes": [
              "Document",
              "BaseOutputParser"
            ],
            "type": "str"
          },
          "sourceHandle": {
            "baseClasses": [
              "str"
            ],
            "dataType": "CustomComponent",
            "id": "CustomComponent-K2ESS"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-foreground  stroke-connection",
        "animated": false,
        "id": "reactflow__edge-CustomComponent-K2ESS{œbaseClassesœ:[œstrœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-K2ESSœ}-SystemMessagePromptTemplate-qImmg{œfieldNameœ:œExamplesœ,œidœ:œSystemMessagePromptTemplate-qImmgœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}"
      },
      {
        "source": "CustomComponent-CuiYI",
        "sourceHandle": "{œbaseClassesœ:[œstrœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-CuiYIœ}",
        "target": "SystemMessagePromptTemplate-qImmg",
        "targetHandle": "{œfieldNameœ:œInstructionsœ,œidœ:œSystemMessagePromptTemplate-qImmgœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}",
        "data": {
          "targetHandle": {
            "fieldName": "Instructions",
            "id": "SystemMessagePromptTemplate-qImmg",
            "inputTypes": [
              "Document",
              "BaseOutputParser"
            ],
            "type": "str"
          },
          "sourceHandle": {
            "baseClasses": [
              "str"
            ],
            "dataType": "CustomComponent",
            "id": "CustomComponent-CuiYI"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-foreground  stroke-connection",
        "animated": false,
        "id": "reactflow__edge-CustomComponent-CuiYI{œbaseClassesœ:[œstrœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-CuiYIœ}-SystemMessagePromptTemplate-qImmg{œfieldNameœ:œInstructionsœ,œidœ:œSystemMessagePromptTemplate-qImmgœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}"
      }
    ],
    "viewport": {
      "x": 707.4041127199714,
      "y": 229.08998530972502,
      "zoom": 0.5000000000000013
    }
  },
  "metadata": {
    "LLMChain": {
      "count": 1
    },
    "ChatOpenAI": {
      "count": 1
    },
    "ChatPromptTemplate": {
      "count": 1
    },
    "HumanMessagePromptTemplate": {
      "count": 1
    },
    "SystemMessagePromptTemplate": {
      "count": 1
    },
    "CustomComponent": {
      "count": 2
    },
    "total": 7
  },
  "original": {
    "id": "17440b08-14f1-4482-9748-c6c969192375",
    "name": "Requirement Extraction From Text (1)",
    "description": "",
    "is_component": false,
    "liked_by_count": "0",
    "downloads_count": "0",
    "metadata": {
      "LLMChain": {
        "count": 1
      },
      "ChatOpenAI": {
        "count": 1
      },
      "ChatPromptTemplate": {
        "count": 1
      },
      "HumanMessagePromptTemplate": {
        "count": 1
      },
      "SystemMessagePromptTemplate": {
        "count": 1
      },
      "CustomComponent": {
        "count": 2
      },
      "total": 7
    },
    "last_tested_version": "0.6.18",
    "private": true,
    "data": {
      "nodes": [
        {
          "id": "LLMChain-cTBV5",
          "type": "genericNode",
          "position": {
            "x": 776,
            "y": 402.328125
          },
          "data": {
            "type": "LLMChain",
            "node": {
              "template": {
                "llm": {
                  "type": "BaseLanguageModel",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "llm",
                  "display_name": "LLM",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "memory": {
                  "type": "BaseMemory",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "memory",
                  "display_name": "Memory",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "prompt": {
                  "type": "BasePromptTemplate",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "prompt",
                  "display_name": "Prompt",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from typing import Callable, Optional, Union\n\nfrom langchain.chains import LLMChain\n\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import (\n    BaseLanguageModel,\n    BaseMemory,\n    BasePromptTemplate,\n    Chain,\n)\n\n\nclass LLMChainComponent(CustomComponent):\n    display_name = \"LLMChain\"\n    description = \"Chain to run queries against LLMs\"\n\n    def build_config(self):\n        return {\n            \"prompt\": {\"display_name\": \"Prompt\"},\n            \"llm\": {\"display_name\": \"LLM\"},\n            \"memory\": {\"display_name\": \"Memory\"},\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        prompt: BasePromptTemplate,\n        llm: BaseLanguageModel,\n        memory: Optional[BaseMemory] = None,\n    ) -> Union[Chain, Callable, LLMChain]:\n        return LLMChain(prompt=prompt, llm=llm, memory=memory)\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "_type": "CustomComponent"
              },
              "description": "Chain to run queries against LLMs",
              "base_classes": [
                "Chain",
                "Callable",
                "Chain",
                "LLMChain"
              ],
              "display_name": "LLMChain",
              "documentation": "",
              "custom_fields": {
                "prompt": null,
                "llm": null,
                "memory": null
              },
              "output_types": [
                "Chain",
                "Callable",
                "LLMChain"
              ],
              "field_formatters": {},
              "beta": true
            },
            "id": "LLMChain-cTBV5"
          },
          "selected": false,
          "width": 384,
          "height": 425
        },
        {
          "id": "ChatOpenAI-6Isak",
          "type": "genericNode",
          "position": {
            "x": 246,
            "y": -478.67187499999994
          },
          "data": {
            "type": "ChatOpenAI",
            "node": {
              "template": {
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from typing import Optional, Union\n\nfrom langchain.llms import BaseLLM\nfrom langchain_community.chat_models.openai import ChatOpenAI\n\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import BaseLanguageModel, NestedDict\n\n\nclass ChatOpenAIComponent(CustomComponent):\n    display_name = \"ChatOpenAI\"\n    description = \"`OpenAI` Chat large language models API.\"\n\n    def build_config(self):\n        return {\n            \"max_tokens\": {\n                \"display_name\": \"Max Tokens\",\n                \"field_type\": \"int\",\n                \"advanced\": False,\n                \"required\": False,\n            },\n            \"model_kwargs\": {\n                \"display_name\": \"Model Kwargs\",\n                \"field_type\": \"NestedDict\",\n                \"advanced\": True,\n                \"required\": False,\n            },\n            \"model_name\": {\n                \"display_name\": \"Model Name\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"options\": [\n                    \"gpt-4-turbo-preview\",\n                    \"gpt-4-0125-preview\",\n                    \"gpt-4-1106-preview\",\n                    \"gpt-4-vision-preview\",\n                    \"gpt-3.5-turbo-0125\",\n                    \"gpt-3.5-turbo-1106\",\n                ],\n            },\n            \"openai_api_base\": {\n                \"display_name\": \"OpenAI API Base\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"info\": (\n                    \"The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\\n\\n\"\n                    \"You can change this to use other APIs like JinaChat, LocalAI and Prem.\"\n                ),\n            },\n            \"openai_api_key\": {\n                \"display_name\": \"OpenAI API Key\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"password\": True,\n            },\n            \"temperature\": {\n                \"display_name\": \"Temperature\",\n                \"field_type\": \"float\",\n                \"advanced\": False,\n                \"required\": False,\n                \"value\": 0.7,\n            },\n        }\n\n    def build(\n        self,\n        max_tokens: Optional[int] = 256,\n        model_kwargs: NestedDict = {},\n        model_name: str = \"gpt-4-1106-preview\",\n        openai_api_base: Optional[str] = None,\n        openai_api_key: Optional[str] = None,\n        temperature: float = 0.7,\n    ) -> Union[BaseLanguageModel, BaseLLM]:\n        if not openai_api_base:\n            openai_api_base = \"https://api.openai.com/v1\"\n        return ChatOpenAI(\n            max_tokens=max_tokens,\n            model_kwargs=model_kwargs,\n            model=model_name,\n            base_url=openai_api_base,\n            api_key=openai_api_key,\n            temperature=temperature,\n        )\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "max_tokens": {
                  "type": "int",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "1024",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "max_tokens",
                  "display_name": "Max Tokens",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "model_kwargs": {
                  "type": "NestedDict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": {},
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "model_kwargs",
                  "display_name": "Model Kwargs",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "model_name": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "gpt-3.5-turbo-0125",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "options": [
                    "gpt-4-turbo-preview",
                    "gpt-4-0125-preview",
                    "gpt-4-1106-preview",
                    "gpt-4-vision-preview",
                    "gpt-3.5-turbo-0125",
                    "gpt-3.5-turbo-1106"
                  ],
                  "name": "model_name",
                  "display_name": "Model Name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "openai_api_base": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "openai_api_base",
                  "display_name": "OpenAI API Base",
                  "advanced": false,
                  "dynamic": false,
                  "info": "The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.",
                  "title_case": true
                },
                "openai_api_key": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": true,
                  "name": "openai_api_key",
                  "display_name": "OpenAI API Key",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "value": ""
                },
                "temperature": {
                  "type": "float",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "0.2",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "temperature",
                  "display_name": "Temperature",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "rangeSpec": {
                    "min": -1,
                    "max": 1,
                    "step": 0.1
                  },
                  "title_case": true
                },
                "_type": "CustomComponent"
              },
              "description": "`OpenAI` Chat large language models API.",
              "base_classes": [
                "BaseLanguageModel",
                "BaseLanguageModel",
                "BaseLLM"
              ],
              "display_name": "ChatOpenAI",
              "documentation": "",
              "custom_fields": {
                "max_tokens": null,
                "model_kwargs": null,
                "model_name": null,
                "openai_api_base": null,
                "openai_api_key": null,
                "temperature": null
              },
              "output_types": [
                "BaseLanguageModel",
                "BaseLLM"
              ],
              "field_formatters": {},
              "beta": true
            },
            "id": "ChatOpenAI-6Isak"
          },
          "selected": false,
          "width": 384,
          "height": 731,
          "positionAbsolute": {
            "x": 246,
            "y": -478.67187499999994
          },
          "dragging": false
        },
        {
          "id": "ChatPromptTemplate-uS8uO",
          "type": "genericNode",
          "position": {
            "x": 252.79258316086816,
            "y": 605.1309348128682
          },
          "data": {
            "type": "ChatPromptTemplate",
            "node": {
              "template": {
                "messages": {
                  "type": "BaseMessagePromptTemplate",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "messages",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "output_parser": {
                  "type": "BaseOutputParser",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "output_parser",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "input_types": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "input_types",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "input_variables": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "input_variables",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "metadata": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "metadata",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "name": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "name",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "partial_variables": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "partial_variables",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "tags": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": true,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "tags",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "validate_template": {
                  "type": "bool",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "validate_template",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "_type": "ChatPromptTemplate"
              },
              "description": "Prompt template for chat models.",
              "base_classes": [
                "BasePromptTemplate",
                "ChatPromptTemplate",
                "BaseChatPromptTemplate"
              ],
              "display_name": "ChatPromptTemplate",
              "documentation": "https://python.langchain.com/docs/modules/model_io/models/chat/how_to/prompts",
              "custom_fields": {},
              "output_types": [],
              "field_formatters": {},
              "beta": false
            },
            "id": "ChatPromptTemplate-uS8uO"
          },
          "selected": false,
          "width": 384,
          "height": 243,
          "positionAbsolute": {
            "x": 252.79258316086816,
            "y": 605.1309348128682
          },
          "dragging": false
        },
        {
          "id": "HumanMessagePromptTemplate-uLNaU",
          "type": "genericNode",
          "position": {
            "x": -250.38564242429135,
            "y": 850.6261936623752
          },
          "data": {
            "type": "HumanMessagePromptTemplate",
            "node": {
              "template": {
                "additional_kwargs": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "additional_kwargs",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "prompt": {
                  "type": "prompt",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": true,
                  "value": "{input_text}",
                  "fileTypes": [],
                  "password": false,
                  "name": "prompt",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "_type": "HumanMessagePromptTemplate",
                "input_text": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "Workflow and Delegations\n \nThe solution MUST support:\n1.\tan ‘approval workflow’ capability for price structure changes, for Product staff.\n2.\tan ‘approval workflow’ capability for list price changes for Product staff.\n3.\tan ‘approval workflow’ capability for price changes, with logic using ‘delegated discount ranges’ for Sales staff.\n4.\tan ‘approval workflow’ capability for tax and other changes, for Finance staff.",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "input_text",
                  "display_name": "input_text",
                  "advanced": false,
                  "input_types": [
                    "Document",
                    "BaseOutputParser"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                }
              },
              "description": "Human message prompt template. This is a message sent from the user.",
              "icon": null,
              "base_classes": [
                "BaseMessagePromptTemplate",
                "HumanMessagePromptTemplate",
                "_StringImageMessagePromptTemplate"
              ],
              "name": "",
              "display_name": "HumanMessagePromptTemplate",
              "documentation": "https://python.langchain.com/docs/modules/model_io/models/chat/how_to/prompts",
              "custom_fields": {
                "": [
                  "input_text"
                ]
              },
              "output_types": [],
              "full_path": null,
              "field_formatters": {},
              "beta": false,
              "error": null
            },
            "id": "HumanMessagePromptTemplate-uLNaU",
            "description": "Human message prompt template. This is a message sent from the user.",
            "display_name": "HumanMessagePromptTemplate"
          },
          "selected": false,
          "width": 384,
          "height": 395,
          "dragging": false,
          "positionAbsolute": {
            "x": -250.38564242429135,
            "y": 850.6261936623752
          }
        },
        {
          "id": "SystemMessagePromptTemplate-qImmg",
          "type": "genericNode",
          "position": {
            "x": -248.64454129769928,
            "y": 225.5708892157581
          },
          "data": {
            "type": "SystemMessagePromptTemplate",
            "node": {
              "template": {
                "additional_kwargs": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "additional_kwargs",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "prompt": {
                  "type": "prompt",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": true,
                  "value": "{Instructions}\n\n### Examples:\n\n{Examples}",
                  "fileTypes": [],
                  "password": false,
                  "name": "prompt",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "_type": "SystemMessagePromptTemplate",
                "Instructions": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "Instructions",
                  "display_name": "Instructions",
                  "advanced": false,
                  "input_types": [
                    "Document",
                    "BaseOutputParser"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "Examples": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "Examples",
                  "display_name": "Examples",
                  "advanced": false,
                  "input_types": [
                    "Document",
                    "BaseOutputParser"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                }
              },
              "description": "System message prompt template.",
              "icon": null,
              "base_classes": [
                "BaseMessagePromptTemplate",
                "SystemMessagePromptTemplate",
                "_StringImageMessagePromptTemplate"
              ],
              "name": "",
              "display_name": "SystemMessagePromptTemplate",
              "documentation": "https://python.langchain.com/docs/modules/model_io/models/chat/how_to/prompts",
              "custom_fields": {
                "": [
                  "Instructions",
                  "Examples"
                ]
              },
              "output_types": [],
              "full_path": null,
              "field_formatters": {},
              "beta": false,
              "error": null
            },
            "id": "SystemMessagePromptTemplate-qImmg",
            "description": "System message prompt template.",
            "display_name": "SystemMessagePromptTemplate"
          },
          "selected": false,
          "width": 384,
          "height": 469,
          "positionAbsolute": {
            "x": -248.64454129769928,
            "y": 225.5708892157581
          },
          "dragging": false
        },
        {
          "id": "CustomComponent-K2ESS",
          "type": "genericNode",
          "position": {
            "x": -1048.1974865546229,
            "y": -60.12098810729186
          },
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio import CustomComponent\nfrom langchain_core.prompts import ChatPromptTemplate\nfrom langfuse import Langfuse\nimport os\n\nclass PromptRetrieverToString(CustomComponent):\n    display_name = \"PromptRetrieverToString\"\n    documentation = \"http://docs.axiestudio.org/components/custom\"\n    description = \"Get prompt from Langfuse and return the prompt string\"\n\n    def build_config(self):\n        return {\"prompt_name\": {\"display_name\": \"Prompt name\"}}\n\n    def build(self, prompt_name: str) -> str:\n        \n        langfuse = Langfuse(\n            secret_key=os.environ.get('LANGFLOW_LANGFUSE_SECRET_KEY', ''),\n            public_key=os.environ.get('LANGFLOW_LANGFUSE_PUBLIC_KEY', ''),\n            host=os.environ.get('LANGFLOW_LANGFUSE_HOST', ''),\n        )\n        langfuse_prompt = langfuse.get_prompt(prompt_name)\n        langchain_prompt = langfuse_prompt.get_langchain_prompt()\n    \n        return langchain_prompt\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "prompt_name": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "prompt_name",
                  "display_name": "Prompt name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "value": "requirement_extraction_examples"
                },
                "_type": "CustomComponent"
              },
              "description": "Get prompt from Langfuse and return the prompt string",
              "base_classes": [
                "str"
              ],
              "display_name": "PromptRetrieverToString",
              "documentation": "http://docs.axiestudio.org/components/custom",
              "custom_fields": {
                "prompt_name": null
              },
              "output_types": [
                "str"
              ],
              "field_formatters": {},
              "beta": true
            },
            "id": "CustomComponent-K2ESS",
            "description": "Get prompt from Langfuse and return the prompt string",
            "display_name": "PromptRetrieverToString"
          },
          "selected": false,
          "width": 384,
          "height": 394,
          "dragging": false,
          "positionAbsolute": {
            "x": -1048.1974865546229,
            "y": -60.12098810729186
          }
        },
        {
          "id": "CustomComponent-CuiYI",
          "type": "genericNode",
          "position": {
            "x": -1057.1227061886327,
            "y": 444.6692897516018
          },
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio import CustomComponent\nfrom langchain_core.prompts import ChatPromptTemplate\nfrom langfuse import Langfuse\nimport os\n\nclass PromptRetrieverToString(CustomComponent):\n    display_name = \"PromptRetrieverToString\"\n    documentation = \"http://docs.axiestudio.org/components/custom\"\n    description = \"Get prompt from Langfuse and return the prompt string\"\n\n    def build_config(self):\n        return {\"prompt_name\": {\"display_name\": \"Prompt name\"}}\n\n    def build(self, prompt_name: str) -> str:\n        \n        langfuse = Langfuse(\n            secret_key=os.environ.get('LANGFLOW_LANGFUSE_SECRET_KEY', ''),\n            public_key=os.environ.get('LANGFLOW_LANGFUSE_PUBLIC_KEY', ''),\n            host=os.environ.get('LANGFLOW_LANGFUSE_HOST', ''),\n        )\n        langfuse_prompt = langfuse.get_prompt(prompt_name)\n        langchain_prompt = langfuse_prompt.get_langchain_prompt()\n    \n        return langchain_prompt\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "prompt_name": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "prompt_name",
                  "display_name": "Prompt name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "value": "requirement_extraction_instruction"
                },
                "_type": "CustomComponent"
              },
              "description": "Get prompt from Langfuse and return the prompt string",
              "base_classes": [
                "str"
              ],
              "display_name": "PromptRetrieverToString",
              "documentation": "http://docs.axiestudio.org/components/custom",
              "custom_fields": {
                "prompt_name": null
              },
              "output_types": [
                "str"
              ],
              "field_formatters": {},
              "beta": true,
              "official": false
            },
            "id": "CustomComponent-CuiYI"
          },
          "selected": true,
          "width": 384,
          "height": 394,
          "positionAbsolute": {
            "x": -1057.1227061886327,
            "y": 444.6692897516018
          },
          "dragging": true
        }
      ],
      "edges": [
        {
          "source": "ChatOpenAI-6Isak",
          "sourceHandle": "{œbaseClassesœ:[œBaseLanguageModelœ,œBaseLanguageModelœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-6Isakœ}",
          "target": "LLMChain-cTBV5",
          "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œLLMChain-cTBV5œ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}",
          "data": {
            "targetHandle": {
              "fieldName": "llm",
              "id": "LLMChain-cTBV5",
              "inputTypes": null,
              "type": "BaseLanguageModel"
            },
            "sourceHandle": {
              "baseClasses": [
                "BaseLanguageModel",
                "BaseLanguageModel",
                "BaseLLM"
              ],
              "dataType": "ChatOpenAI",
              "id": "ChatOpenAI-6Isak"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-gray-900  stroke-connection",
          "animated": false,
          "id": "reactflow__edge-ChatOpenAI-6Isak{œbaseClassesœ:[œBaseLanguageModelœ,œBaseLanguageModelœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-6Isakœ}-LLMChain-cTBV5{œfieldNameœ:œllmœ,œidœ:œLLMChain-cTBV5œ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}"
        },
        {
          "source": "ChatPromptTemplate-uS8uO",
          "sourceHandle": "{œbaseClassesœ:[œBasePromptTemplateœ,œChatPromptTemplateœ,œBaseChatPromptTemplateœ],œdataTypeœ:œChatPromptTemplateœ,œidœ:œChatPromptTemplate-uS8uOœ}",
          "target": "LLMChain-cTBV5",
          "targetHandle": "{œfieldNameœ:œpromptœ,œidœ:œLLMChain-cTBV5œ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}",
          "data": {
            "targetHandle": {
              "fieldName": "prompt",
              "id": "LLMChain-cTBV5",
              "inputTypes": null,
              "type": "BasePromptTemplate"
            },
            "sourceHandle": {
              "baseClasses": [
                "BasePromptTemplate",
                "ChatPromptTemplate",
                "BaseChatPromptTemplate"
              ],
              "dataType": "ChatPromptTemplate",
              "id": "ChatPromptTemplate-uS8uO"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-gray-900  stroke-connection",
          "animated": false,
          "id": "reactflow__edge-ChatPromptTemplate-uS8uO{œbaseClassesœ:[œBasePromptTemplateœ,œChatPromptTemplateœ,œBaseChatPromptTemplateœ],œdataTypeœ:œChatPromptTemplateœ,œidœ:œChatPromptTemplate-uS8uOœ}-LLMChain-cTBV5{œfieldNameœ:œpromptœ,œidœ:œLLMChain-cTBV5œ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}"
        },
        {
          "source": "HumanMessagePromptTemplate-uLNaU",
          "sourceHandle": "{œbaseClassesœ:[œBaseMessagePromptTemplateœ,œHumanMessagePromptTemplateœ,œ_StringImageMessagePromptTemplateœ],œdataTypeœ:œHumanMessagePromptTemplateœ,œidœ:œHumanMessagePromptTemplate-uLNaUœ}",
          "target": "ChatPromptTemplate-uS8uO",
          "targetHandle": "{œfieldNameœ:œmessagesœ,œidœ:œChatPromptTemplate-uS8uOœ,œinputTypesœ:null,œtypeœ:œBaseMessagePromptTemplateœ}",
          "data": {
            "targetHandle": {
              "fieldName": "messages",
              "id": "ChatPromptTemplate-uS8uO",
              "inputTypes": null,
              "type": "BaseMessagePromptTemplate"
            },
            "sourceHandle": {
              "baseClasses": [
                "BaseMessagePromptTemplate",
                "HumanMessagePromptTemplate",
                "_StringImageMessagePromptTemplate"
              ],
              "dataType": "HumanMessagePromptTemplate",
              "id": "HumanMessagePromptTemplate-uLNaU"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-gray-900  stroke-connection",
          "animated": false,
          "id": "reactflow__edge-HumanMessagePromptTemplate-uLNaU{œbaseClassesœ:[œBaseMessagePromptTemplateœ,œHumanMessagePromptTemplateœ,œ_StringImageMessagePromptTemplateœ],œdataTypeœ:œHumanMessagePromptTemplateœ,œidœ:œHumanMessagePromptTemplate-uLNaUœ}-ChatPromptTemplate-uS8uO{œfieldNameœ:œmessagesœ,œidœ:œChatPromptTemplate-uS8uOœ,œinputTypesœ:null,œtypeœ:œBaseMessagePromptTemplateœ}"
        },
        {
          "source": "SystemMessagePromptTemplate-qImmg",
          "sourceHandle": "{œbaseClassesœ:[œBaseMessagePromptTemplateœ,œSystemMessagePromptTemplateœ,œ_StringImageMessagePromptTemplateœ],œdataTypeœ:œSystemMessagePromptTemplateœ,œidœ:œSystemMessagePromptTemplate-qImmgœ}",
          "target": "ChatPromptTemplate-uS8uO",
          "targetHandle": "{œfieldNameœ:œmessagesœ,œidœ:œChatPromptTemplate-uS8uOœ,œinputTypesœ:null,œtypeœ:œBaseMessagePromptTemplateœ}",
          "data": {
            "targetHandle": {
              "fieldName": "messages",
              "id": "ChatPromptTemplate-uS8uO",
              "inputTypes": null,
              "type": "BaseMessagePromptTemplate"
            },
            "sourceHandle": {
              "baseClasses": [
                "BaseMessagePromptTemplate",
                "SystemMessagePromptTemplate",
                "_StringImageMessagePromptTemplate"
              ],
              "dataType": "SystemMessagePromptTemplate",
              "id": "SystemMessagePromptTemplate-qImmg"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-gray-900  stroke-connection",
          "animated": false,
          "id": "reactflow__edge-SystemMessagePromptTemplate-qImmg{œbaseClassesœ:[œBaseMessagePromptTemplateœ,œSystemMessagePromptTemplateœ,œ_StringImageMessagePromptTemplateœ],œdataTypeœ:œSystemMessagePromptTemplateœ,œidœ:œSystemMessagePromptTemplate-qImmgœ}-ChatPromptTemplate-uS8uO{œfieldNameœ:œmessagesœ,œidœ:œChatPromptTemplate-uS8uOœ,œinputTypesœ:null,œtypeœ:œBaseMessagePromptTemplateœ}"
        },
        {
          "source": "CustomComponent-K2ESS",
          "sourceHandle": "{œbaseClassesœ:[œstrœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-K2ESSœ}",
          "target": "SystemMessagePromptTemplate-qImmg",
          "targetHandle": "{œfieldNameœ:œExamplesœ,œidœ:œSystemMessagePromptTemplate-qImmgœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}",
          "data": {
            "targetHandle": {
              "fieldName": "Examples",
              "id": "SystemMessagePromptTemplate-qImmg",
              "inputTypes": [
                "Document",
                "BaseOutputParser"
              ],
              "type": "str"
            },
            "sourceHandle": {
              "baseClasses": [
                "str"
              ],
              "dataType": "CustomComponent",
              "id": "CustomComponent-K2ESS"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-foreground  stroke-connection",
          "animated": false,
          "id": "reactflow__edge-CustomComponent-K2ESS{œbaseClassesœ:[œstrœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-K2ESSœ}-SystemMessagePromptTemplate-qImmg{œfieldNameœ:œExamplesœ,œidœ:œSystemMessagePromptTemplate-qImmgœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}"
        },
        {
          "source": "CustomComponent-CuiYI",
          "sourceHandle": "{œbaseClassesœ:[œstrœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-CuiYIœ}",
          "target": "SystemMessagePromptTemplate-qImmg",
          "targetHandle": "{œfieldNameœ:œInstructionsœ,œidœ:œSystemMessagePromptTemplate-qImmgœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}",
          "data": {
            "targetHandle": {
              "fieldName": "Instructions",
              "id": "SystemMessagePromptTemplate-qImmg",
              "inputTypes": [
                "Document",
                "BaseOutputParser"
              ],
              "type": "str"
            },
            "sourceHandle": {
              "baseClasses": [
                "str"
              ],
              "dataType": "CustomComponent",
              "id": "CustomComponent-CuiYI"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-foreground  stroke-connection",
          "animated": false,
          "id": "reactflow__edge-CustomComponent-CuiYI{œbaseClassesœ:[œstrœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-CuiYIœ}-SystemMessagePromptTemplate-qImmg{œfieldNameœ:œInstructionsœ,œidœ:œSystemMessagePromptTemplate-qImmgœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}"
        }
      ],
      "viewport": {
        "x": 707.4041127199714,
        "y": 229.08998530972502,
        "zoom": 0.5000000000000013
      }
    },
    "date_created": "2024-05-07T02:06:13.680Z",
    "date_updated": "2024-05-07T02:06:13.711Z",
    "status": "Public",
    "sort": null,
    "user_updated": "dc599610-3065-4b5b-94ed-de108ec210dd",
    "user_created": {
      "username": "wiresky",
      "first_name": "Nguyen",
      "last_name": "Nam",
      "id": "dc599610-3065-4b5b-94ed-de108ec210dd"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:08:54.481Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 20,
    "converter_version": "1.0.0"
  }
}