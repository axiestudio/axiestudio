{
  "id": "e23069ab-5475-49d8-86ee-65152239c2eb",
  "name": "Image to Text",
  "description": "This component processes images (such as JPG, PNG, BMP, and more) and converts the text contained within them into a digital format.\n\n*Note: Tesseract OCR is required for this functionality.\nAmir (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "COMPONENT",
  "is_component": true,
  "author": {
    "username": "amir",
    "first_name": "AmirMohammad",
    "last_name": "Mohseni Ghaleh Ghazi",
    "id": "918090e3-0e8a-43ee-92a2-4f6fb455d4d2",
    "full_name": "AmirMohammad Mohseni Ghaleh Ghazi"
  },
  "store_url": "https://www.langflow.store/store/component/e23069ab-5475-49d8-86ee-65152239c2eb",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-07-19T12:45:31.015Z",
    "updated": "2024-07-19T12:45:31.077Z",
    "downloaded": "2025-08-19T17:50:06.565Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "1.0.10",
    "private": false,
    "status": "Public"
  },
  "data": {
    "edges": [],
    "nodes": [
      {
        "data": {
          "type": "ReadImage",
          "node": {
            "template": {
              "_type": "Component",
              "path": {
                "trace_as_metadata": true,
                "file_path": "",
                "fileTypes": [
                  "jpg",
                  "jpeg",
                  "png",
                  "bmp",
                  "tiff"
                ],
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "",
                "name": "path",
                "display_name": "Path",
                "advanced": false,
                "dynamic": false,
                "info": "Supported file types: jpg, jpeg, png, bmp, tiff",
                "title_case": false,
                "type": "file",
                "load_from_db": false
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from pathlib import Path\r\nfrom axiestudio.custom import Component\r\nfrom axiestudio.io import FileInput, Output\r\nfrom axiestudio.schema import Data\r\nfrom PIL import Image\r\nimport pytesseract\r\n\r\n# Specify the Tesseract executable path\r\npytesseract.pytesseract.tesseract_cmd = r'C:\\Users\\V28514B\\AppData\\Local\\Programs\\Tesseract-OCR\\tesseract.exe'\r\n\r\nclass ReadImageComponent(Component):\r\n\r\n    display_name = \"Read Image\"\r\n    description = \"Reads an image file from local files and extracts text details.\"\r\n    icon = \"ðŸ“·\"\r\n    name = \"ReadImage\"\r\n\r\n    inputs = [\r\n        FileInput(\r\n            name=\"path\",\r\n            display_name=\"Path\",\r\n            file_types=[\"jpg\", \"jpeg\", \"png\", \"bmp\", \"tiff\"],\r\n            info=\"Supported file types: jpg, jpeg, png, bmp, tiff\",\r\n        ),\r\n    ]\r\n\r\n    outputs = [\r\n        Output(display_name=\"Extracted Text\", name=\"extracted_text\", method=\"extract_text\"),\r\n    ]\r\n\r\n    def extract_text(self) -> Data:\r\n        if not self.path:\r\n            raise ValueError(\"Please, upload a file to use this component.\")\r\n        resolved_path = self.resolve_path(self.path)\r\n\r\n        # Open and read the image file\r\n        image = Image.open(resolved_path)\r\n\r\n        # Extract text from the image using OCR\r\n        extracted_text = pytesseract.image_to_string(image)\r\n\r\n        # Wrap the extracted text in the Data object\r\n        data = Data()\r\n        data.text = extracted_text\r\n        self.status = extracted_text if extracted_text else \"No text found\"\r\n        return data\r\n\r\n# Assuming you have some framework to register and run this component\r\n# register_component(ReadImageComponent)\r\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              }
            },
            "description": "This component processes images (such as JPG, PNG, BMP, and more) and converts the text contained within them into a digital format.\n\n*Note: Tesseract OCR is required for this functionality.\nAmir",
            "icon": "ðŸ“·",
            "base_classes": [
              "Data"
            ],
            "display_name": "Image to Text",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Data"
                ],
                "selected": "Data",
                "name": "extracted_text",
                "display_name": "Extracted Text",
                "method": "extract_text",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "path"
            ],
            "beta": false,
            "edited": true,
            "official": false
          },
          "id": "ReadJPG-FOw7a",
          "description": "Reads an image file from local files and extracts text details.",
          "display_name": "Custom Component"
        },
        "id": "ReadJPG-FOw7a",
        "position": {
          "x": 0,
          "y": 0
        },
        "type": "genericNode"
      }
    ],
    "viewport": {
      "x": 1,
      "y": 1,
      "zoom": 1
    }
  },
  "metadata": {
    "ReadJPG": {
      "count": 1
    },
    "total": 1
  },
  "original": {
    "id": "e23069ab-5475-49d8-86ee-65152239c2eb",
    "name": "Image to Text",
    "description": "This component processes images (such as JPG, PNG, BMP, and more) and converts the text contained within them into a digital format.\n\n*Note: Tesseract OCR is required for this functionality.\nAmir",
    "is_component": true,
    "liked_by_count": "39",
    "downloads_count": "438",
    "metadata": {
      "ReadJPG": {
        "count": 1
      },
      "total": 1
    },
    "last_tested_version": "1.0.10",
    "private": false,
    "data": {
      "edges": [],
      "nodes": [
        {
          "data": {
            "type": "ReadImage",
            "node": {
              "template": {
                "_type": "Component",
                "path": {
                  "trace_as_metadata": true,
                  "file_path": "",
                  "fileTypes": [
                    "jpg",
                    "jpeg",
                    "png",
                    "bmp",
                    "tiff"
                  ],
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "",
                  "name": "path",
                  "display_name": "Path",
                  "advanced": false,
                  "dynamic": false,
                  "info": "Supported file types: jpg, jpeg, png, bmp, tiff",
                  "title_case": false,
                  "type": "file",
                  "load_from_db": false
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from pathlib import Path\r\nfrom axiestudio.custom import Component\r\nfrom axiestudio.io import FileInput, Output\r\nfrom axiestudio.schema import Data\r\nfrom PIL import Image\r\nimport pytesseract\r\n\r\n# Specify the Tesseract executable path\r\npytesseract.pytesseract.tesseract_cmd = r'C:\\Users\\V28514B\\AppData\\Local\\Programs\\Tesseract-OCR\\tesseract.exe'\r\n\r\nclass ReadImageComponent(Component):\r\n\r\n    display_name = \"Read Image\"\r\n    description = \"Reads an image file from local files and extracts text details.\"\r\n    icon = \"ðŸ“·\"\r\n    name = \"ReadImage\"\r\n\r\n    inputs = [\r\n        FileInput(\r\n            name=\"path\",\r\n            display_name=\"Path\",\r\n            file_types=[\"jpg\", \"jpeg\", \"png\", \"bmp\", \"tiff\"],\r\n            info=\"Supported file types: jpg, jpeg, png, bmp, tiff\",\r\n        ),\r\n    ]\r\n\r\n    outputs = [\r\n        Output(display_name=\"Extracted Text\", name=\"extracted_text\", method=\"extract_text\"),\r\n    ]\r\n\r\n    def extract_text(self) -> Data:\r\n        if not self.path:\r\n            raise ValueError(\"Please, upload a file to use this component.\")\r\n        resolved_path = self.resolve_path(self.path)\r\n\r\n        # Open and read the image file\r\n        image = Image.open(resolved_path)\r\n\r\n        # Extract text from the image using OCR\r\n        extracted_text = pytesseract.image_to_string(image)\r\n\r\n        # Wrap the extracted text in the Data object\r\n        data = Data()\r\n        data.text = extracted_text\r\n        self.status = extracted_text if extracted_text else \"No text found\"\r\n        return data\r\n\r\n# Assuming you have some framework to register and run this component\r\n# register_component(ReadImageComponent)\r\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                }
              },
              "description": "This component processes images (such as JPG, PNG, BMP, and more) and converts the text contained within them into a digital format.\n\n*Note: Tesseract OCR is required for this functionality.\nAmir",
              "icon": "ðŸ“·",
              "base_classes": [
                "Data"
              ],
              "display_name": "Image to Text",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Data"
                  ],
                  "selected": "Data",
                  "name": "extracted_text",
                  "display_name": "Extracted Text",
                  "method": "extract_text",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "path"
              ],
              "beta": false,
              "edited": true,
              "official": false
            },
            "id": "ReadJPG-FOw7a",
            "description": "Reads an image file from local files and extracts text details.",
            "display_name": "Custom Component"
          },
          "id": "ReadJPG-FOw7a",
          "position": {
            "x": 0,
            "y": 0
          },
          "type": "genericNode"
        }
      ],
      "viewport": {
        "x": 1,
        "y": 1,
        "zoom": 1
      }
    },
    "date_created": "2024-07-19T12:45:31.015Z",
    "date_updated": "2024-07-19T12:45:31.077Z",
    "status": "Public",
    "sort": null,
    "user_updated": "918090e3-0e8a-43ee-92a2-4f6fb455d4d2",
    "user_created": {
      "username": "amir",
      "first_name": "AmirMohammad",
      "last_name": "Mohseni Ghaleh Ghazi",
      "id": "918090e3-0e8a-43ee-92a2-4f6fb455d4d2"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:12.197Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 6,
    "converter_version": "1.0.0"
  }
}