{
  "id": "c9d11ba1-c9ac-40bc-b82f-d2540c09b6ec",
  "name": "Update Page Property [Notion]",
  "description": "Update the properties of a Notion page. (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "COMPONENT",
  "is_component": true,
  "author": {
    "username": "NamastexLabs",
    "first_name": "Felipe",
    "last_name": "Rosa",
    "id": "37095b75-b1f7-4e35-aea6-bcc9bbf1e2c7",
    "full_name": "Felipe Rosa"
  },
  "store_url": "https://www.langflow.store/store/component/c9d11ba1-c9ac-40bc-b82f-d2540c09b6ec",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-05-21T00:00:24.137Z",
    "updated": "2024-08-22T21:48:18.865Z",
    "downloaded": "2025-08-19T17:50:05.792Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "1.0.15",
    "private": false,
    "status": "Public"
  },
  "data": {
    "edges": [],
    "nodes": [
      {
        "data": {
          "type": "NotionPageUpdate",
          "node": {
            "template": {
              "_type": "Component",
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "import json\r\nimport requests\r\nfrom typing import Dict, Any, Union\r\nfrom pydantic import BaseModel, Field\r\nfrom axiestudio.base.langchain_utilities.model import LCToolComponent\r\nfrom axiestudio.inputs import SecretStrInput, StrInput, MultilineInput\r\nfrom axiestudio.schema import Data\r\nfrom axiestudio.field_typing import Tool\r\nfrom langchain.tools import StructuredTool\r\nfrom loguru import logger\r\n\r\nclass NotionPageUpdate(LCToolComponent):\r\n    display_name: str = \"Update Page Property [Notion]\"\r\n    description: str = \"Update the properties of a Notion page.\"\r\n    documentation: str = \"https://docs.axiestudio.org/integrations/notion/page-update\"\r\n    icon = \"NotionDirectoryLoader\"\r\n\r\n    inputs = [\r\n        StrInput(\r\n            name=\"page_id\",\r\n            display_name=\"Page ID\",\r\n            info=\"The ID of the Notion page to update.\",\r\n        ),\r\n        MultilineInput(\r\n            name=\"properties\",\r\n            display_name=\"Properties\",\r\n            info=\"The properties to update on the page (as a JSON string or a dictionary).\",\r\n        ),\r\n        SecretStrInput(\r\n            name=\"notion_secret\",\r\n            display_name=\"Notion Secret\",\r\n            info=\"The Notion integration token.\",\r\n            required=True,\r\n        ),\r\n    ]\r\n\r\n    class NotionPageUpdateSchema(BaseModel):\r\n        page_id: str = Field(..., description=\"The ID of the Notion page to update.\")\r\n        properties: Union[str, Dict[str, Any]] = Field(..., description=\"The properties to update on the page (as a JSON string or a dictionary).\")\r\n\r\n    def run_model(self) -> Data:\r\n        result = self._update_notion_page(self.page_id, self.properties)\r\n        if isinstance(result, str):\r\n            # An error occurred, return it as text\r\n            return Data(text=result)\r\n        else:\r\n            # Success, return the updated page data\r\n            output = \"Updated page properties:\\n\"\r\n            for prop_name, prop_value in result.get(\"properties\", {}).items():\r\n                output += f\"{prop_name}: {prop_value}\\n\"\r\n            return Data(text=output, data=result)\r\n\r\n    def build_tool(self) -> Tool:\r\n        return StructuredTool.from_function(\r\n            name=\"update_notion_page\",\r\n            description=\"Update the properties of a Notion page. IMPORTANT: Use the tool to check the Database properties for more details before using this tool.\",\r\n            func=self._update_notion_page,\r\n            args_schema=self.NotionPageUpdateSchema,\r\n        )\r\n\r\n    def _update_notion_page(self, page_id: str, properties: Union[str, Dict[str, Any]]) -> Union[Dict[str, Any], str]:\r\n        url = f\"https://api.notion.com/v1/pages/{page_id}\"\r\n        headers = {\r\n            \"Authorization\": f\"Bearer {self.notion_secret}\",\r\n            \"Content-Type\": \"application/json\",\r\n            \"Notion-Version\": \"2022-06-28\",  # Use the latest supported version\r\n        }\r\n\r\n        # Parse properties if it's a string\r\n        if isinstance(properties, str):\r\n            try:\r\n                parsed_properties = json.loads(properties)\r\n            except json.JSONDecodeError as e:\r\n                error_message = f\"Invalid JSON format for properties: {str(e)}\"\r\n                logger.error(error_message)\r\n                return error_message\r\n\r\n        else:\r\n            parsed_properties = properties\r\n\r\n        data = {\r\n            \"properties\": parsed_properties\r\n        }\r\n\r\n        try:\r\n            logger.info(f\"Sending request to Notion API: URL: {url}, Data: {json.dumps(data)}\")\r\n            response = requests.patch(url, headers=headers, json=data)\r\n            response.raise_for_status()\r\n            updated_page = response.json()\r\n            \r\n            logger.info(f\"Successfully updated Notion page. Response: {json.dumps(updated_page)}\")\r\n            return updated_page\r\n        except requests.exceptions.HTTPError as e:\r\n            error_message = f\"HTTP Error occurred: {str(e)}\"\r\n            if e.response is not None:\r\n                error_message += f\"\\nStatus code: {e.response.status_code}\"\r\n                error_message += f\"\\nResponse body: {e.response.text}\"\r\n            logger.error(error_message)\r\n            return error_message\r\n        except requests.exceptions.RequestException as e:\r\n            error_message = f\"An error occurred while making the request: {str(e)}\"\r\n            logger.error(error_message)\r\n            return error_message\r\n        except Exception as e:\r\n            error_message = f\"An unexpected error occurred: {str(e)}\"\r\n            logger.error(error_message)\r\n            return error_message\r\n\r\n    def __call__(self, *args, **kwargs):\r\n        return self._update_notion_page(*args, **kwargs)",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "notion_secret": {
                "load_from_db": true,
                "required": true,
                "placeholder": "",
                "show": true,
                "name": "notion_secret",
                "value": "",
                "display_name": "Notion Secret",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "The Notion integration token.",
                "title_case": false,
                "password": true,
                "type": "str",
                "_input_type": "SecretStrInput"
              },
              "page_id": {
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "page_id",
                "value": "",
                "display_name": "Page ID",
                "advanced": true,
                "dynamic": false,
                "info": "The ID of the Notion page to update.",
                "title_case": false,
                "type": "str",
                "_input_type": "StrInput"
              },
              "properties": {
                "trace_as_input": true,
                "multiline": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "properties",
                "value": "",
                "display_name": "Properties",
                "advanced": true,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "The properties to update on the page (as a JSON string or a dictionary).",
                "title_case": false,
                "type": "str",
                "_input_type": "MultilineInput"
              }
            },
            "description": "Update the properties of a Notion page.",
            "icon": "NotionDirectoryLoader",
            "base_classes": [
              "Data",
              "list",
              "Sequence",
              "Tool"
            ],
            "display_name": "Update Page Property [Notion]",
            "documentation": "https://docs.axiestudio.org/integrations/notion/page-update",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Data",
                  "list"
                ],
                "selected": "Data",
                "name": "api_run_model",
                "display_name": "Data",
                "method": "run_model",
                "value": "__UNDEFINED__",
                "cache": true,
                "hidden": true
              },
              {
                "types": [
                  "Tool",
                  "Sequence"
                ],
                "selected": "Tool",
                "name": "api_build_tool",
                "display_name": "Tool",
                "method": "build_tool",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "page_id",
              "properties",
              "notion_secret"
            ],
            "beta": false,
            "edited": true,
            "official": false,
            "lf_version": "1.0.15"
          },
          "id": "NotionPageUpdate-DftVD"
        },
        "id": "NotionPageUpdate-DftVD",
        "position": {
          "x": 0,
          "y": 0
        },
        "type": "genericNode"
      }
    ],
    "viewport": {
      "x": 1,
      "y": 1,
      "zoom": 1
    }
  },
  "metadata": {
    "NotionPageUpdate": {
      "count": 1
    },
    "total": 1
  },
  "original": {
    "id": "c9d11ba1-c9ac-40bc-b82f-d2540c09b6ec",
    "name": "Update Page Property [Notion]",
    "description": "Update the properties of a Notion page.",
    "is_component": true,
    "liked_by_count": "9",
    "downloads_count": "34",
    "metadata": {
      "NotionPageUpdate": {
        "count": 1
      },
      "total": 1
    },
    "last_tested_version": "1.0.15",
    "private": false,
    "data": {
      "edges": [],
      "nodes": [
        {
          "data": {
            "type": "NotionPageUpdate",
            "node": {
              "template": {
                "_type": "Component",
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "import json\r\nimport requests\r\nfrom typing import Dict, Any, Union\r\nfrom pydantic import BaseModel, Field\r\nfrom axiestudio.base.langchain_utilities.model import LCToolComponent\r\nfrom axiestudio.inputs import SecretStrInput, StrInput, MultilineInput\r\nfrom axiestudio.schema import Data\r\nfrom axiestudio.field_typing import Tool\r\nfrom langchain.tools import StructuredTool\r\nfrom loguru import logger\r\n\r\nclass NotionPageUpdate(LCToolComponent):\r\n    display_name: str = \"Update Page Property [Notion]\"\r\n    description: str = \"Update the properties of a Notion page.\"\r\n    documentation: str = \"https://docs.axiestudio.org/integrations/notion/page-update\"\r\n    icon = \"NotionDirectoryLoader\"\r\n\r\n    inputs = [\r\n        StrInput(\r\n            name=\"page_id\",\r\n            display_name=\"Page ID\",\r\n            info=\"The ID of the Notion page to update.\",\r\n        ),\r\n        MultilineInput(\r\n            name=\"properties\",\r\n            display_name=\"Properties\",\r\n            info=\"The properties to update on the page (as a JSON string or a dictionary).\",\r\n        ),\r\n        SecretStrInput(\r\n            name=\"notion_secret\",\r\n            display_name=\"Notion Secret\",\r\n            info=\"The Notion integration token.\",\r\n            required=True,\r\n        ),\r\n    ]\r\n\r\n    class NotionPageUpdateSchema(BaseModel):\r\n        page_id: str = Field(..., description=\"The ID of the Notion page to update.\")\r\n        properties: Union[str, Dict[str, Any]] = Field(..., description=\"The properties to update on the page (as a JSON string or a dictionary).\")\r\n\r\n    def run_model(self) -> Data:\r\n        result = self._update_notion_page(self.page_id, self.properties)\r\n        if isinstance(result, str):\r\n            # An error occurred, return it as text\r\n            return Data(text=result)\r\n        else:\r\n            # Success, return the updated page data\r\n            output = \"Updated page properties:\\n\"\r\n            for prop_name, prop_value in result.get(\"properties\", {}).items():\r\n                output += f\"{prop_name}: {prop_value}\\n\"\r\n            return Data(text=output, data=result)\r\n\r\n    def build_tool(self) -> Tool:\r\n        return StructuredTool.from_function(\r\n            name=\"update_notion_page\",\r\n            description=\"Update the properties of a Notion page. IMPORTANT: Use the tool to check the Database properties for more details before using this tool.\",\r\n            func=self._update_notion_page,\r\n            args_schema=self.NotionPageUpdateSchema,\r\n        )\r\n\r\n    def _update_notion_page(self, page_id: str, properties: Union[str, Dict[str, Any]]) -> Union[Dict[str, Any], str]:\r\n        url = f\"https://api.notion.com/v1/pages/{page_id}\"\r\n        headers = {\r\n            \"Authorization\": f\"Bearer {self.notion_secret}\",\r\n            \"Content-Type\": \"application/json\",\r\n            \"Notion-Version\": \"2022-06-28\",  # Use the latest supported version\r\n        }\r\n\r\n        # Parse properties if it's a string\r\n        if isinstance(properties, str):\r\n            try:\r\n                parsed_properties = json.loads(properties)\r\n            except json.JSONDecodeError as e:\r\n                error_message = f\"Invalid JSON format for properties: {str(e)}\"\r\n                logger.error(error_message)\r\n                return error_message\r\n\r\n        else:\r\n            parsed_properties = properties\r\n\r\n        data = {\r\n            \"properties\": parsed_properties\r\n        }\r\n\r\n        try:\r\n            logger.info(f\"Sending request to Notion API: URL: {url}, Data: {json.dumps(data)}\")\r\n            response = requests.patch(url, headers=headers, json=data)\r\n            response.raise_for_status()\r\n            updated_page = response.json()\r\n            \r\n            logger.info(f\"Successfully updated Notion page. Response: {json.dumps(updated_page)}\")\r\n            return updated_page\r\n        except requests.exceptions.HTTPError as e:\r\n            error_message = f\"HTTP Error occurred: {str(e)}\"\r\n            if e.response is not None:\r\n                error_message += f\"\\nStatus code: {e.response.status_code}\"\r\n                error_message += f\"\\nResponse body: {e.response.text}\"\r\n            logger.error(error_message)\r\n            return error_message\r\n        except requests.exceptions.RequestException as e:\r\n            error_message = f\"An error occurred while making the request: {str(e)}\"\r\n            logger.error(error_message)\r\n            return error_message\r\n        except Exception as e:\r\n            error_message = f\"An unexpected error occurred: {str(e)}\"\r\n            logger.error(error_message)\r\n            return error_message\r\n\r\n    def __call__(self, *args, **kwargs):\r\n        return self._update_notion_page(*args, **kwargs)",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "notion_secret": {
                  "load_from_db": true,
                  "required": true,
                  "placeholder": "",
                  "show": true,
                  "name": "notion_secret",
                  "value": "",
                  "display_name": "Notion Secret",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "The Notion integration token.",
                  "title_case": false,
                  "password": true,
                  "type": "str",
                  "_input_type": "SecretStrInput"
                },
                "page_id": {
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "page_id",
                  "value": "",
                  "display_name": "Page ID",
                  "advanced": true,
                  "dynamic": false,
                  "info": "The ID of the Notion page to update.",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "StrInput"
                },
                "properties": {
                  "trace_as_input": true,
                  "multiline": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "properties",
                  "value": "",
                  "display_name": "Properties",
                  "advanced": true,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "The properties to update on the page (as a JSON string or a dictionary).",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MultilineInput"
                }
              },
              "description": "Update the properties of a Notion page.",
              "icon": "NotionDirectoryLoader",
              "base_classes": [
                "Data",
                "list",
                "Sequence",
                "Tool"
              ],
              "display_name": "Update Page Property [Notion]",
              "documentation": "https://docs.axiestudio.org/integrations/notion/page-update",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Data",
                    "list"
                  ],
                  "selected": "Data",
                  "name": "api_run_model",
                  "display_name": "Data",
                  "method": "run_model",
                  "value": "__UNDEFINED__",
                  "cache": true,
                  "hidden": true
                },
                {
                  "types": [
                    "Tool",
                    "Sequence"
                  ],
                  "selected": "Tool",
                  "name": "api_build_tool",
                  "display_name": "Tool",
                  "method": "build_tool",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "page_id",
                "properties",
                "notion_secret"
              ],
              "beta": false,
              "edited": true,
              "official": false,
              "lf_version": "1.0.15"
            },
            "id": "NotionPageUpdate-DftVD"
          },
          "id": "NotionPageUpdate-DftVD",
          "position": {
            "x": 0,
            "y": 0
          },
          "type": "genericNode"
        }
      ],
      "viewport": {
        "x": 1,
        "y": 1,
        "zoom": 1
      }
    },
    "date_created": "2024-05-21T00:00:24.137Z",
    "date_updated": "2024-08-22T21:48:18.865Z",
    "status": "Public",
    "sort": null,
    "user_updated": "37095b75-b1f7-4e35-aea6-bcc9bbf1e2c7",
    "user_created": {
      "username": "NamastexLabs",
      "first_name": "Felipe",
      "last_name": "Rosa",
      "id": "37095b75-b1f7-4e35-aea6-bcc9bbf1e2c7"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:11.809Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 12,
    "converter_version": "1.0.0"
  }
}