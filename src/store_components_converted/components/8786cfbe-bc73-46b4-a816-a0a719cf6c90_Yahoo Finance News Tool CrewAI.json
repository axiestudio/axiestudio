{
  "id": "8786cfbe-bc73-46b4-a816-a0a719cf6c90",
  "name": "Yahoo Finance News Tool CrewAI",
  "description": "Tool for interacting with Yahoo Finance News. The query is the company ticker (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "COMPONENT",
  "is_component": true,
  "author": {
    "username": "img",
    "first_name": "Ricardo",
    "last_name": "Fortes",
    "id": "344be9ce-dcfd-4e42-9abe-0e77ffe6d6b0",
    "full_name": "Ricardo Fortes"
  },
  "store_url": "https://www.langflow.store/store/component/8786cfbe-bc73-46b4-a816-a0a719cf6c90",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-08-14T04:52:03.922Z",
    "updated": "2024-08-14T04:52:03.965Z",
    "downloaded": "2025-08-19T17:50:06.336Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "1.0.15",
    "private": false,
    "status": "Public"
  },
  "data": {
    "edges": [],
    "nodes": [
      {
        "data": {
          "description": "Tool for interacting with Yahoo Finance News.",
          "display_name": "Yahoo Finance News Tool",
          "id": "YFinanceTool-BgnfC",
          "node": {
            "template": {
              "_type": "Component",
              "ticker": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "ticker",
                "display_name": "Company Ticker",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "value": "AAPL"
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from typing import cast\r\n\r\nfrom axiestudio.custom import Component\r\nfrom axiestudio.field_typing import Tool\r\nfrom axiestudio.io import Output#, Input\r\nfrom axiestudio.inputs import Input\r\n\r\nclass YfinanceToolComponent(Component):\r\n    display_name = \"Yahoo Finance News Tool\"\r\n    description = \"Tool for interacting with Yahoo Finance News. The query is the company ticker\"\r\n    name = \"YFinanceTool\"\r\n\r\n    inputs = [\r\n        Input(name=\"ticker\", display_name=\"Company Ticker\", description=\"The ticker symbol of the company\", required=True),\r\n    ]\r\n\r\n    outputs = [\r\n        Output(display_name=\"Tool\", name=\"tool\", method=\"build_tool\"),\r\n    ]\r\n    \r\n    def run_model(self) -> Union[Data, list[Data]]:\r\n        wrapper = self._build_wrapper()\r\n        results = wrapper.invoke(self.ticker)\r\n\r\n        # Step 1: Split the string into individual entries based on \"], [\" which separates them\r\n        entries = results.strip(\"[]\").split(\"], [\")\r\n        \r\n        # Step 2: Convert each entry into a dictionary\r\n        results_converted = []\r\n        for entry in entries:\r\n            # Use regex to find all key-value pairs\r\n            pairs = re.findall(r'(\\w+):\\s(.*?)(?=, \\w+:|$)', entry)\r\n            \r\n            # Convert the list of pairs into a dictionary\r\n            entry_dict = {key: value.strip() for key, value in pairs}\r\n            \r\n            # Append the dictionary to the converted list\r\n            results_converted.append(entry_dict)\r\n\r\n        data = [Data(data=result, text=result) for result in results_converted]\r\n        print(\"data\", data)\r\n        self.status = data\r\n        return data\r\n        \r\n    def build_tool(self) -> Tool:\r\n        wrapper = self._build_wrapper()\r\n        return Tool(\r\n            name=\"yahoo_finance_news.\",\r\n            description=\"Tool for interacting with Yahoo Finance News. The query is the company ticker.\",\r\n            func=wrapper.run,\r\n        )\r\n\r\n    def _build_wrapper(self):\r\n        try:\r\n            from langchain_community.tools.yahoo_finance_news import YahooFinanceNewsTool  # type: ignore\r\n        except ImportError:\r\n            raise ImportError(\"Please install YFinanceTool to use Yahoo Finance News Tool.\")\r\n        return YahooFinanceNewsTool()\r\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              }
            },
            "description": "Tool for interacting with Yahoo Finance News. The query is the company ticker",
            "base_classes": [
              "Tool"
            ],
            "display_name": "Yahoo Finance News Tool CrewAI",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Tool"
                ],
                "selected": "Tool",
                "name": "tool",
                "display_name": "Tool",
                "method": "build_tool",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "ticker"
            ],
            "beta": false,
            "edited": true,
            "lf_version": "1.0.15",
            "official": false
          },
          "type": "YFinanceTool"
        },
        "id": "YFinanceTool-BgnfC",
        "position": {
          "x": 0,
          "y": 0
        },
        "type": "genericNode"
      }
    ],
    "viewport": {
      "x": 1,
      "y": 1,
      "zoom": 1
    }
  },
  "metadata": {
    "YFinanceTool": {
      "count": 1
    },
    "total": 1
  },
  "original": {
    "id": "8786cfbe-bc73-46b4-a816-a0a719cf6c90",
    "name": "Yahoo Finance News Tool CrewAI",
    "description": "Tool for interacting with Yahoo Finance News. The query is the company ticker",
    "is_component": true,
    "liked_by_count": "7",
    "downloads_count": "116",
    "metadata": {
      "YFinanceTool": {
        "count": 1
      },
      "total": 1
    },
    "last_tested_version": "1.0.15",
    "private": false,
    "data": {
      "edges": [],
      "nodes": [
        {
          "data": {
            "description": "Tool for interacting with Yahoo Finance News.",
            "display_name": "Yahoo Finance News Tool",
            "id": "YFinanceTool-BgnfC",
            "node": {
              "template": {
                "_type": "Component",
                "ticker": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "ticker",
                  "display_name": "Company Ticker",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "value": "AAPL"
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from typing import cast\r\n\r\nfrom axiestudio.custom import Component\r\nfrom axiestudio.field_typing import Tool\r\nfrom axiestudio.io import Output#, Input\r\nfrom axiestudio.inputs import Input\r\n\r\nclass YfinanceToolComponent(Component):\r\n    display_name = \"Yahoo Finance News Tool\"\r\n    description = \"Tool for interacting with Yahoo Finance News. The query is the company ticker\"\r\n    name = \"YFinanceTool\"\r\n\r\n    inputs = [\r\n        Input(name=\"ticker\", display_name=\"Company Ticker\", description=\"The ticker symbol of the company\", required=True),\r\n    ]\r\n\r\n    outputs = [\r\n        Output(display_name=\"Tool\", name=\"tool\", method=\"build_tool\"),\r\n    ]\r\n    \r\n    def run_model(self) -> Union[Data, list[Data]]:\r\n        wrapper = self._build_wrapper()\r\n        results = wrapper.invoke(self.ticker)\r\n\r\n        # Step 1: Split the string into individual entries based on \"], [\" which separates them\r\n        entries = results.strip(\"[]\").split(\"], [\")\r\n        \r\n        # Step 2: Convert each entry into a dictionary\r\n        results_converted = []\r\n        for entry in entries:\r\n            # Use regex to find all key-value pairs\r\n            pairs = re.findall(r'(\\w+):\\s(.*?)(?=, \\w+:|$)', entry)\r\n            \r\n            # Convert the list of pairs into a dictionary\r\n            entry_dict = {key: value.strip() for key, value in pairs}\r\n            \r\n            # Append the dictionary to the converted list\r\n            results_converted.append(entry_dict)\r\n\r\n        data = [Data(data=result, text=result) for result in results_converted]\r\n        print(\"data\", data)\r\n        self.status = data\r\n        return data\r\n        \r\n    def build_tool(self) -> Tool:\r\n        wrapper = self._build_wrapper()\r\n        return Tool(\r\n            name=\"yahoo_finance_news.\",\r\n            description=\"Tool for interacting with Yahoo Finance News. The query is the company ticker.\",\r\n            func=wrapper.run,\r\n        )\r\n\r\n    def _build_wrapper(self):\r\n        try:\r\n            from langchain_community.tools.yahoo_finance_news import YahooFinanceNewsTool  # type: ignore\r\n        except ImportError:\r\n            raise ImportError(\"Please install YFinanceTool to use Yahoo Finance News Tool.\")\r\n        return YahooFinanceNewsTool()\r\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                }
              },
              "description": "Tool for interacting with Yahoo Finance News. The query is the company ticker",
              "base_classes": [
                "Tool"
              ],
              "display_name": "Yahoo Finance News Tool CrewAI",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Tool"
                  ],
                  "selected": "Tool",
                  "name": "tool",
                  "display_name": "Tool",
                  "method": "build_tool",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "ticker"
              ],
              "beta": false,
              "edited": true,
              "lf_version": "1.0.15",
              "official": false
            },
            "type": "YFinanceTool"
          },
          "id": "YFinanceTool-BgnfC",
          "position": {
            "x": 0,
            "y": 0
          },
          "type": "genericNode"
        }
      ],
      "viewport": {
        "x": 1,
        "y": 1,
        "zoom": 1
      }
    },
    "date_created": "2024-08-14T04:52:03.922Z",
    "date_updated": "2024-08-14T04:52:03.965Z",
    "status": "Public",
    "sort": null,
    "user_updated": "344be9ce-dcfd-4e42-9abe-0e77ffe6d6b0",
    "user_created": {
      "username": "img",
      "first_name": "Ricardo",
      "last_name": "Fortes",
      "id": "344be9ce-dcfd-4e42-9abe-0e77ffe6d6b0"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:10.885Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 8,
    "converter_version": "1.0.0"
  }
}