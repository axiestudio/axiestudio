{
  "id": "ba133384-4aae-4ac5-a914-c79c47a722d1",
  "name": "chromarag_sample",
  "description": "",
  "type": "COMPONENT",
  "is_component": true,
  "author": {
    "username": "yamon",
    "first_name": "YamonCompany",
    "last_name": "kim",
    "id": "23c5d1e9-66fe-4789-85da-d07be25ec3cc",
    "full_name": "YamonCompany kim"
  },
  "store_url": "https://www.langflow.store/store/component/ba133384-4aae-4ac5-a914-c79c47a722d1",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-04-02T09:30:58.975Z",
    "updated": "2024-04-02T09:30:59.080Z",
    "downloaded": "2025-08-19T17:50:04.903Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "0.6.12",
    "private": true,
    "status": "Public"
  },
  "data": {
    "edges": [],
    "nodes": [
      {
        "data": {
          "id": "Chroma-TEgpE",
          "type": "Chroma",
          "node": {
            "output_types": [
              "VectorStore",
              "BaseRetriever"
            ],
            "display_name": "chromarag_sample",
            "documentation": "",
            "base_classes": [
              "VectorStore",
              "BaseRetriever"
            ],
            "description": "",
            "template": {
              "allowed_special_OpenAIEmbeddings-y4Z35": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": [],
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "allowed_special",
                "display_name": "Allowed Special",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "proxy": {
                  "id": "OpenAIEmbeddings-y4Z35",
                  "field": "allowed_special"
                }
              },
              "chunk_size_OpenAIEmbeddings-y4Z35": {
                "type": "int",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": 1000,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "chunk_size",
                "display_name": "Chunk Size",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "proxy": {
                  "id": "OpenAIEmbeddings-y4Z35",
                  "field": "chunk_size"
                }
              },
              "client_OpenAIEmbeddings-y4Z35": {
                "type": "Any",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "client",
                "display_name": "Client",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "proxy": {
                  "id": "OpenAIEmbeddings-y4Z35",
                  "field": "client"
                }
              },
              "code_OpenAIEmbeddings-y4Z35": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": true,
                "value": "from typing import Any, Callable, Dict, List, Optional, Union\n\nfrom langchain_openai import OpenAIEmbeddings\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import NestedDict\nfrom pydantic.v1.types import SecretStr\n\n\nclass OpenAIEmbeddingsComponent(CustomComponent):\n    display_name = \"OpenAIEmbeddings\"\n    description = \"OpenAI embedding models\"\n\n    def build_config(self):\n        return {\n            \"allowed_special\": {\n                \"display_name\": \"Allowed Special\",\n                \"advanced\": True,\n                \"field_type\": \"str\",\n                \"is_list\": True,\n            },\n            \"default_headers\": {\n                \"display_name\": \"Default Headers\",\n                \"advanced\": True,\n                \"field_type\": \"dict\",\n            },\n            \"default_query\": {\n                \"display_name\": \"Default Query\",\n                \"advanced\": True,\n                \"field_type\": \"NestedDict\",\n            },\n            \"disallowed_special\": {\n                \"display_name\": \"Disallowed Special\",\n                \"advanced\": True,\n                \"field_type\": \"str\",\n                \"is_list\": True,\n            },\n            \"chunk_size\": {\"display_name\": \"Chunk Size\", \"advanced\": True},\n            \"client\": {\"display_name\": \"Client\", \"advanced\": True},\n            \"deployment\": {\"display_name\": \"Deployment\", \"advanced\": True},\n            \"embedding_ctx_length\": {\n                \"display_name\": \"Embedding Context Length\",\n                \"advanced\": True,\n            },\n            \"max_retries\": {\"display_name\": \"Max Retries\", \"advanced\": True},\n            \"model\": {\n                \"display_name\": \"Model\",\n                \"advanced\": False,\n                \"options\": [\"text-embedding-3-small\", \"text-embedding-3-large\", \"text-embedding-ada-002\"],\n            },\n            \"model_kwargs\": {\"display_name\": \"Model Kwargs\", \"advanced\": True},\n            \"openai_api_base\": {\"display_name\": \"OpenAI API Base\", \"password\": True, \"advanced\": True},\n            \"openai_api_key\": {\"display_name\": \"OpenAI API Key\", \"password\": True},\n            \"openai_api_type\": {\"display_name\": \"OpenAI API Type\", \"advanced\": True, \"password\": True},\n            \"openai_api_version\": {\n                \"display_name\": \"OpenAI API Version\",\n                \"advanced\": True,\n            },\n            \"openai_organization\": {\n                \"display_name\": \"OpenAI Organization\",\n                \"advanced\": True,\n            },\n            \"openai_proxy\": {\"display_name\": \"OpenAI Proxy\", \"advanced\": True},\n            \"request_timeout\": {\"display_name\": \"Request Timeout\", \"advanced\": True},\n            \"show_progress_bar\": {\n                \"display_name\": \"Show Progress Bar\",\n                \"advanced\": True,\n            },\n            \"skip_empty\": {\"display_name\": \"Skip Empty\", \"advanced\": True},\n            \"tiktoken_model_name\": {\"display_name\": \"TikToken Model Name\"},\n            \"tikToken_enable\": {\"display_name\": \"TikToken Enable\", \"advanced\": True},\n        }\n\n    def build(\n        self,\n        default_headers: Optional[Dict[str, str]] = None,\n        default_query: Optional[NestedDict] = {},\n        allowed_special: List[str] = [],\n        disallowed_special: List[str] = [\"all\"],\n        chunk_size: int = 1000,\n        client: Optional[Any] = None,\n        deployment: str = \"text-embedding-3-small\",\n        embedding_ctx_length: int = 8191,\n        max_retries: int = 6,\n        model: str = \"text-embedding-3-small\",\n        model_kwargs: NestedDict = {},\n        openai_api_base: Optional[str] = None,\n        openai_api_key: Optional[str] = \"\",\n        openai_api_type: Optional[str] = None,\n        openai_api_version: Optional[str] = None,\n        openai_organization: Optional[str] = None,\n        openai_proxy: Optional[str] = None,\n        request_timeout: Optional[float] = None,\n        show_progress_bar: bool = False,\n        skip_empty: bool = False,\n        tiktoken_enable: bool = True,\n        tiktoken_model_name: Optional[str] = None,\n    ) -> Union[OpenAIEmbeddings, Callable]:\n        # This is to avoid errors with Vector Stores (e.g Chroma)\n        if disallowed_special == [\"all\"]:\n            disallowed_special = \"all\"  # type: ignore\n\n        api_key = SecretStr(openai_api_key) if openai_api_key else None\n\n        return OpenAIEmbeddings(\n            tiktoken_enabled=tiktoken_enable,\n            default_headers=default_headers,\n            default_query=default_query,\n            allowed_special=set(allowed_special),\n            disallowed_special=\"all\",\n            chunk_size=chunk_size,\n            client=client,\n            deployment=deployment,\n            embedding_ctx_length=embedding_ctx_length,\n            max_retries=max_retries,\n            model=model,\n            model_kwargs=model_kwargs,\n            base_url=openai_api_base,\n            api_key=openai_api_key,\n            openai_api_type=openai_api_type,\n            api_version=openai_api_version,\n            organization=openai_organization,\n            openai_proxy=openai_proxy,\n            timeout=request_timeout,\n            show_progress_bar=show_progress_bar,\n            skip_empty=skip_empty,\n            tiktoken_model_name=tiktoken_model_name,\n        )\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true,
                "proxy": {
                  "id": "OpenAIEmbeddings-y4Z35",
                  "field": "code"
                },
                "display_name": "Code"
              },
              "default_headers_OpenAIEmbeddings-y4Z35": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "default_headers",
                "display_name": "Default Headers",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "proxy": {
                  "id": "OpenAIEmbeddings-y4Z35",
                  "field": "default_headers"
                }
              },
              "default_query_OpenAIEmbeddings-y4Z35": {
                "type": "NestedDict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": {},
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "default_query",
                "display_name": "Default Query",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "proxy": {
                  "id": "OpenAIEmbeddings-y4Z35",
                  "field": "default_query"
                }
              },
              "deployment_OpenAIEmbeddings-y4Z35": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "text-embedding-3-small",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "deployment",
                "display_name": "Deployment",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "proxy": {
                  "id": "OpenAIEmbeddings-y4Z35",
                  "field": "deployment"
                }
              },
              "disallowed_special_OpenAIEmbeddings-y4Z35": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": [
                  "all"
                ],
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "disallowed_special",
                "display_name": "Disallowed Special",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "proxy": {
                  "id": "OpenAIEmbeddings-y4Z35",
                  "field": "disallowed_special"
                }
              },
              "embedding_ctx_length_OpenAIEmbeddings-y4Z35": {
                "type": "int",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": 8191,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "embedding_ctx_length",
                "display_name": "Embedding Context Length",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "proxy": {
                  "id": "OpenAIEmbeddings-y4Z35",
                  "field": "embedding_ctx_length"
                }
              },
              "max_retries_OpenAIEmbeddings-y4Z35": {
                "type": "int",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": 6,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "max_retries",
                "display_name": "Max Retries",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "proxy": {
                  "id": "OpenAIEmbeddings-y4Z35",
                  "field": "max_retries"
                }
              },
              "model_OpenAIEmbeddings-y4Z35": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "text-embedding-ada-002",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "options": [
                  "text-embedding-3-small",
                  "text-embedding-3-large",
                  "text-embedding-ada-002"
                ],
                "name": "model",
                "display_name": "Model",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "proxy": {
                  "id": "OpenAIEmbeddings-y4Z35",
                  "field": "model"
                }
              },
              "model_kwargs_OpenAIEmbeddings-y4Z35": {
                "type": "NestedDict",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": {},
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "model_kwargs",
                "display_name": "Model Kwargs",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "proxy": {
                  "id": "OpenAIEmbeddings-y4Z35",
                  "field": "model_kwargs"
                }
              },
              "openai_api_base_OpenAIEmbeddings-y4Z35": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": true,
                "name": "openai_api_base",
                "display_name": "OpenAI API Base",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "proxy": {
                  "id": "OpenAIEmbeddings-y4Z35",
                  "field": "openai_api_base"
                },
                "value": ""
              },
              "openai_api_key_OpenAIEmbeddings-y4Z35": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": true,
                "name": "openai_api_key",
                "display_name": "OpenAI API Key",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "proxy": {
                  "id": "OpenAIEmbeddings-y4Z35",
                  "field": "openai_api_key"
                }
              },
              "openai_api_type_OpenAIEmbeddings-y4Z35": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": true,
                "name": "openai_api_type",
                "display_name": "OpenAI API Type",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "proxy": {
                  "id": "OpenAIEmbeddings-y4Z35",
                  "field": "openai_api_type"
                },
                "value": ""
              },
              "openai_api_version_OpenAIEmbeddings-y4Z35": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "openai_api_version",
                "display_name": "OpenAI API Version",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "proxy": {
                  "id": "OpenAIEmbeddings-y4Z35",
                  "field": "openai_api_version"
                }
              },
              "openai_organization_OpenAIEmbeddings-y4Z35": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "openai_organization",
                "display_name": "OpenAI Organization",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "proxy": {
                  "id": "OpenAIEmbeddings-y4Z35",
                  "field": "openai_organization"
                }
              },
              "openai_proxy_OpenAIEmbeddings-y4Z35": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "openai_proxy",
                "display_name": "OpenAI Proxy",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "proxy": {
                  "id": "OpenAIEmbeddings-y4Z35",
                  "field": "openai_proxy"
                }
              },
              "request_timeout_OpenAIEmbeddings-y4Z35": {
                "type": "float",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "request_timeout",
                "display_name": "Request Timeout",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "rangeSpec": {
                  "min": -1,
                  "max": 1,
                  "step": 0.1
                },
                "title_case": true,
                "proxy": {
                  "id": "OpenAIEmbeddings-y4Z35",
                  "field": "request_timeout"
                }
              },
              "show_progress_bar_OpenAIEmbeddings-y4Z35": {
                "type": "bool",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "show_progress_bar",
                "display_name": "Show Progress Bar",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "proxy": {
                  "id": "OpenAIEmbeddings-y4Z35",
                  "field": "show_progress_bar"
                }
              },
              "skip_empty_OpenAIEmbeddings-y4Z35": {
                "type": "bool",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "skip_empty",
                "display_name": "Skip Empty",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "proxy": {
                  "id": "OpenAIEmbeddings-y4Z35",
                  "field": "skip_empty"
                }
              },
              "tiktoken_enable_OpenAIEmbeddings-y4Z35": {
                "type": "bool",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": true,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "tiktoken_enable",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "proxy": {
                  "id": "OpenAIEmbeddings-y4Z35",
                  "field": "tiktoken_enable"
                },
                "display_name": "Tiktoken Enable"
              },
              "tiktoken_model_name_OpenAIEmbeddings-y4Z35": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "tiktoken_model_name",
                "display_name": "TikToken Model Name",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "value": "cl100k_base",
                "proxy": {
                  "id": "OpenAIEmbeddings-y4Z35",
                  "field": "tiktoken_model_name"
                }
              },
              "documents_Chroma-0OMtG": {
                "type": "Document",
                "required": false,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "documents",
                "display_name": "Documents",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "proxy": {
                  "id": "Chroma-0OMtG",
                  "field": "documents"
                }
              },
              "chroma_server_cors_allow_origins_Chroma-0OMtG": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "chroma_server_cors_allow_origins",
                "display_name": "Server CORS Allow Origins",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "proxy": {
                  "id": "Chroma-0OMtG",
                  "field": "chroma_server_cors_allow_origins"
                }
              },
              "chroma_server_grpc_port_Chroma-0OMtG": {
                "type": "int",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "chroma_server_grpc_port",
                "display_name": "Server gRPC Port",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "proxy": {
                  "id": "Chroma-0OMtG",
                  "field": "chroma_server_grpc_port"
                }
              },
              "chroma_server_host_Chroma-0OMtG": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "chroma_server_host",
                "display_name": "Server Host",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "proxy": {
                  "id": "Chroma-0OMtG",
                  "field": "chroma_server_host"
                }
              },
              "chroma_server_port_Chroma-0OMtG": {
                "type": "int",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "chroma_server_port",
                "display_name": "Server Port",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "proxy": {
                  "id": "Chroma-0OMtG",
                  "field": "chroma_server_port"
                }
              },
              "chroma_server_ssl_enabled_Chroma-0OMtG": {
                "type": "bool",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "chroma_server_ssl_enabled",
                "display_name": "Server SSL Enabled",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "proxy": {
                  "id": "Chroma-0OMtG",
                  "field": "chroma_server_ssl_enabled"
                }
              },
              "code_Chroma-0OMtG": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": true,
                "value": "from typing import List, Optional, Union\n\nimport chromadb  # type: ignore\nfrom langchain_openai import OpenAIEmbeddings\nfrom langchain.schema import BaseRetriever, Document\nfrom langchain_community.vectorstores import VectorStore\nfrom langchain_community.vectorstores.chroma import Chroma\nfrom axiestudio import CustomComponent\nfrom chromadb.api.types import EmbeddingFunction\n\nclass ChromaComponent(CustomComponent):\n    \"\"\"\n    A custom component for implementing a Vector Store using Chroma.\n    \"\"\"\n\n    display_name: str = \"Chroma\"\n    description: str = \"Implementation of Vector Store using Chroma\"\n    documentation = \"https://python.langchain.com/docs/integrations/vectorstores/chroma\"\n    beta: bool = True\n\n    def build_config(self):\n        \"\"\"\n        Builds the configuration for the component.\n\n        Returns:\n        - dict: A dictionary containing the configuration options for the component.\n        \"\"\"\n        return {\n            \"collection_name\": {\"display_name\": \"Collection Name\", \"value\": \"axiestudio\"},\n            \"persist\": {\"display_name\": \"Persist\"},\n            \"persist_directory\": {\"display_name\": \"Persist Directory\"},\n            \"code\": {\"advanced\": True, \"display_name\": \"Code\"},\n            \"documents\": {\"display_name\": \"Documents\", \"is_list\": True},\n            \"embedding\": {\"display_name\": \"Embedding\"},\n            \"chroma_server_cors_allow_origins\": {\n                \"display_name\": \"Server CORS Allow Origins\",\n                \"advanced\": True,\n            },\n            \"chroma_server_host\": {\"display_name\": \"Server Host\", \"advanced\": True},\n            \"chroma_server_port\": {\"display_name\": \"Server Port\", \"advanced\": True},\n            \"chroma_server_grpc_port\": {\n                \"display_name\": \"Server gRPC Port\",\n                \"advanced\": True,\n            },\n            \"chroma_server_ssl_enabled\": {\n                \"display_name\": \"Server SSL Enabled\",\n                \"advanced\": True,\n            },\n        }\n\n    def build(\n        self,\n        collection_name: str,\n        persist: bool,\n        embedding: Embeddings,\n        chroma_server_ssl_enabled: bool,\n        persist_directory: Optional[str] = None,\n        documents: Optional[List[Document]] = None,\n        chroma_server_cors_allow_origins: Optional[str] = None,\n        chroma_server_host: Optional[str] = None,\n        chroma_server_port: Optional[int] = None,\n        chroma_server_grpc_port: Optional[int] = None,\n    ) -> Union[VectorStore, BaseRetriever]:\n        \"\"\"\n        Builds the Vector Store or BaseRetriever object.\n\n        Args:\n        - collection_name (str): The name of the collection.\n        - persist_directory (Optional[str]): The directory to persist the Vector Store to.\n        - chroma_server_ssl_enabled (bool): Whether to enable SSL for the Chroma server.\n        - persist (bool): Whether to persist the Vector Store or not.\n        - embedding (Optional[Embeddings]): The embeddings to use for the Vector Store.\n        - documents (Optional[Document]): The documents to use for the Vector Store.\n        - chroma_server_cors_allow_origins (Optional[str]): The CORS allow origins for the Chroma server.\n        - chroma_server_host (Optional[str]): The host for the Chroma server.\n        - chroma_server_port (Optional[int]): The port for the Chroma server.\n        - chroma_server_grpc_port (Optional[int]): The gRPC port for the Chroma server.\n\n        Returns:\n        - Union[VectorStore, BaseRetriever]: The Vector Store or BaseRetriever object.\n        \"\"\"\n        client = chromadb.PersistentClient(path=persist_directory)\n\n        col = client.get_or_create_collection(collection_name)\n        \n        col.upsert([f\"{i}\" for i in range(10)],documents=[f\"This is document #{i}\" for i in range(10)],metadatas=[{\"id\":f\"{i}\"} for i in range(10)])\n      \n        ef = chromadb.utils.embedding_functions.DefaultEmbeddingFunction()\n        \n        \n        class DefChromaEF(Embeddings):\n          def __init__(self,ef):\n            self.ef = ef\n        \n          def embed_documents(self,texts):\n            return self.ef(texts)\n        \n          def embed_query(self, query):\n            return self.ef([query])[0]\n        # Chroma settings\n        chroma_settings = None\n\n        if chroma_server_host is not None:\n            chroma_settings = chromadb.config.Settings(\n                chroma_server_cors_allow_origins=chroma_server_cors_allow_origins or None,\n                chroma_server_host=chroma_server_host,\n                chroma_server_port=chroma_server_port or None,\n                chroma_server_grpc_port=chroma_server_grpc_port or None,\n                chroma_server_ssl_enabled=chroma_server_ssl_enabled,\n            )\n\n\n\n        return Chroma(client=client, collection_name=collection_name,embedding_function=DefChromaEF(ef))\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "title_case": true,
                "proxy": {
                  "id": "Chroma-0OMtG",
                  "field": "code"
                },
                "display_name": "Code"
              },
              "collection_name_Chroma-0OMtG": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "yamon_guide",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "collection_name",
                "display_name": "Collection Name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "proxy": {
                  "id": "Chroma-0OMtG",
                  "field": "collection_name"
                }
              },
              "persist_Chroma-0OMtG": {
                "type": "bool",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": true,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "persist",
                "display_name": "Persist",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "proxy": {
                  "id": "Chroma-0OMtG",
                  "field": "persist"
                }
              },
              "persist_directory_Chroma-0OMtG": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "persist_directory",
                "display_name": "Persist Directory",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "value": "/link_volumes/chroma/yamon_guide",
                "proxy": {
                  "id": "Chroma-0OMtG",
                  "field": "persist_directory"
                }
              }
            },
            "flow": {
              "data": {
                "nodes": [
                  {
                    "width": 384,
                    "height": 632,
                    "id": "OpenAIEmbeddings-y4Z35",
                    "type": "genericNode",
                    "position": {
                      "x": 616.0092083066893,
                      "y": 732.6896033657725
                    },
                    "data": {
                      "type": "OpenAIEmbeddings",
                      "node": {
                        "template": {
                          "allowed_special": {
                            "type": "str",
                            "required": true,
                            "placeholder": "",
                            "list": true,
                            "show": true,
                            "multiline": false,
                            "value": [],
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "allowed_special",
                            "display_name": "Allowed Special",
                            "advanced": true,
                            "dynamic": false,
                            "info": "",
                            "title_case": true
                          },
                          "chunk_size": {
                            "type": "int",
                            "required": true,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "value": 1000,
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "chunk_size",
                            "display_name": "Chunk Size",
                            "advanced": true,
                            "dynamic": false,
                            "info": "",
                            "title_case": true
                          },
                          "client": {
                            "type": "Any",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "client",
                            "display_name": "Client",
                            "advanced": true,
                            "dynamic": false,
                            "info": "",
                            "title_case": true
                          },
                          "code": {
                            "type": "code",
                            "required": true,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": true,
                            "value": "from typing import Any, Callable, Dict, List, Optional, Union\n\nfrom langchain_openai import OpenAIEmbeddings\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import NestedDict\nfrom pydantic.v1.types import SecretStr\n\n\nclass OpenAIEmbeddingsComponent(CustomComponent):\n    display_name = \"OpenAIEmbeddings\"\n    description = \"OpenAI embedding models\"\n\n    def build_config(self):\n        return {\n            \"allowed_special\": {\n                \"display_name\": \"Allowed Special\",\n                \"advanced\": True,\n                \"field_type\": \"str\",\n                \"is_list\": True,\n            },\n            \"default_headers\": {\n                \"display_name\": \"Default Headers\",\n                \"advanced\": True,\n                \"field_type\": \"dict\",\n            },\n            \"default_query\": {\n                \"display_name\": \"Default Query\",\n                \"advanced\": True,\n                \"field_type\": \"NestedDict\",\n            },\n            \"disallowed_special\": {\n                \"display_name\": \"Disallowed Special\",\n                \"advanced\": True,\n                \"field_type\": \"str\",\n                \"is_list\": True,\n            },\n            \"chunk_size\": {\"display_name\": \"Chunk Size\", \"advanced\": True},\n            \"client\": {\"display_name\": \"Client\", \"advanced\": True},\n            \"deployment\": {\"display_name\": \"Deployment\", \"advanced\": True},\n            \"embedding_ctx_length\": {\n                \"display_name\": \"Embedding Context Length\",\n                \"advanced\": True,\n            },\n            \"max_retries\": {\"display_name\": \"Max Retries\", \"advanced\": True},\n            \"model\": {\n                \"display_name\": \"Model\",\n                \"advanced\": False,\n                \"options\": [\"text-embedding-3-small\", \"text-embedding-3-large\", \"text-embedding-ada-002\"],\n            },\n            \"model_kwargs\": {\"display_name\": \"Model Kwargs\", \"advanced\": True},\n            \"openai_api_base\": {\"display_name\": \"OpenAI API Base\", \"password\": True, \"advanced\": True},\n            \"openai_api_key\": {\"display_name\": \"OpenAI API Key\", \"password\": True},\n            \"openai_api_type\": {\"display_name\": \"OpenAI API Type\", \"advanced\": True, \"password\": True},\n            \"openai_api_version\": {\n                \"display_name\": \"OpenAI API Version\",\n                \"advanced\": True,\n            },\n            \"openai_organization\": {\n                \"display_name\": \"OpenAI Organization\",\n                \"advanced\": True,\n            },\n            \"openai_proxy\": {\"display_name\": \"OpenAI Proxy\", \"advanced\": True},\n            \"request_timeout\": {\"display_name\": \"Request Timeout\", \"advanced\": True},\n            \"show_progress_bar\": {\n                \"display_name\": \"Show Progress Bar\",\n                \"advanced\": True,\n            },\n            \"skip_empty\": {\"display_name\": \"Skip Empty\", \"advanced\": True},\n            \"tiktoken_model_name\": {\"display_name\": \"TikToken Model Name\"},\n            \"tikToken_enable\": {\"display_name\": \"TikToken Enable\", \"advanced\": True},\n        }\n\n    def build(\n        self,\n        default_headers: Optional[Dict[str, str]] = None,\n        default_query: Optional[NestedDict] = {},\n        allowed_special: List[str] = [],\n        disallowed_special: List[str] = [\"all\"],\n        chunk_size: int = 1000,\n        client: Optional[Any] = None,\n        deployment: str = \"text-embedding-3-small\",\n        embedding_ctx_length: int = 8191,\n        max_retries: int = 6,\n        model: str = \"text-embedding-3-small\",\n        model_kwargs: NestedDict = {},\n        openai_api_base: Optional[str] = None,\n        openai_api_key: Optional[str] = \"\",\n        openai_api_type: Optional[str] = None,\n        openai_api_version: Optional[str] = None,\n        openai_organization: Optional[str] = None,\n        openai_proxy: Optional[str] = None,\n        request_timeout: Optional[float] = None,\n        show_progress_bar: bool = False,\n        skip_empty: bool = False,\n        tiktoken_enable: bool = True,\n        tiktoken_model_name: Optional[str] = None,\n    ) -> Union[OpenAIEmbeddings, Callable]:\n        # This is to avoid errors with Vector Stores (e.g Chroma)\n        if disallowed_special == [\"all\"]:\n            disallowed_special = \"all\"  # type: ignore\n\n        api_key = SecretStr(openai_api_key) if openai_api_key else None\n\n        return OpenAIEmbeddings(\n            tiktoken_enabled=tiktoken_enable,\n            default_headers=default_headers,\n            default_query=default_query,\n            allowed_special=set(allowed_special),\n            disallowed_special=\"all\",\n            chunk_size=chunk_size,\n            client=client,\n            deployment=deployment,\n            embedding_ctx_length=embedding_ctx_length,\n            max_retries=max_retries,\n            model=model,\n            model_kwargs=model_kwargs,\n            base_url=openai_api_base,\n            api_key=openai_api_key,\n            openai_api_type=openai_api_type,\n            api_version=openai_api_version,\n            organization=openai_organization,\n            openai_proxy=openai_proxy,\n            timeout=request_timeout,\n            show_progress_bar=show_progress_bar,\n            skip_empty=skip_empty,\n            tiktoken_model_name=tiktoken_model_name,\n        )\n",
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "code",
                            "advanced": false,
                            "dynamic": true,
                            "info": "",
                            "title_case": true
                          },
                          "default_headers": {
                            "type": "dict",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "default_headers",
                            "display_name": "Default Headers",
                            "advanced": true,
                            "dynamic": false,
                            "info": "",
                            "title_case": true
                          },
                          "default_query": {
                            "type": "NestedDict",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "value": {},
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "default_query",
                            "display_name": "Default Query",
                            "advanced": true,
                            "dynamic": false,
                            "info": "",
                            "title_case": true
                          },
                          "deployment": {
                            "type": "str",
                            "required": true,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "value": "text-embedding-3-small",
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "deployment",
                            "display_name": "Deployment",
                            "advanced": true,
                            "dynamic": false,
                            "info": "",
                            "title_case": true
                          },
                          "disallowed_special": {
                            "type": "str",
                            "required": true,
                            "placeholder": "",
                            "list": true,
                            "show": true,
                            "multiline": false,
                            "value": [
                              "all"
                            ],
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "disallowed_special",
                            "display_name": "Disallowed Special",
                            "advanced": true,
                            "dynamic": false,
                            "info": "",
                            "title_case": true
                          },
                          "embedding_ctx_length": {
                            "type": "int",
                            "required": true,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "value": 8191,
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "embedding_ctx_length",
                            "display_name": "Embedding Context Length",
                            "advanced": true,
                            "dynamic": false,
                            "info": "",
                            "title_case": true
                          },
                          "max_retries": {
                            "type": "int",
                            "required": true,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "value": 6,
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "max_retries",
                            "display_name": "Max Retries",
                            "advanced": true,
                            "dynamic": false,
                            "info": "",
                            "title_case": true
                          },
                          "model": {
                            "type": "str",
                            "required": true,
                            "placeholder": "",
                            "list": true,
                            "show": true,
                            "multiline": false,
                            "value": "text-embedding-ada-002",
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "options": [
                              "text-embedding-3-small",
                              "text-embedding-3-large",
                              "text-embedding-ada-002"
                            ],
                            "name": "model",
                            "display_name": "Model",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "title_case": true
                          },
                          "model_kwargs": {
                            "type": "NestedDict",
                            "required": true,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "value": {},
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "model_kwargs",
                            "display_name": "Model Kwargs",
                            "advanced": true,
                            "dynamic": false,
                            "info": "",
                            "title_case": true
                          },
                          "openai_api_base": {
                            "type": "str",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "fileTypes": [],
                            "file_path": "",
                            "password": true,
                            "name": "openai_api_base",
                            "display_name": "OpenAI API Base",
                            "advanced": true,
                            "dynamic": false,
                            "info": "",
                            "title_case": true
                          },
                          "openai_api_key": {
                            "type": "str",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "value": "sk-PLACEHOLDER_API_KEY",
                            "fileTypes": [],
                            "file_path": "",
                            "password": true,
                            "name": "openai_api_key",
                            "display_name": "OpenAI API Key",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "title_case": true
                          },
                          "openai_api_type": {
                            "type": "str",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "fileTypes": [],
                            "file_path": "",
                            "password": true,
                            "name": "openai_api_type",
                            "display_name": "OpenAI API Type",
                            "advanced": true,
                            "dynamic": false,
                            "info": "",
                            "title_case": true
                          },
                          "openai_api_version": {
                            "type": "str",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "openai_api_version",
                            "display_name": "OpenAI API Version",
                            "advanced": true,
                            "dynamic": false,
                            "info": "",
                            "title_case": true
                          },
                          "openai_organization": {
                            "type": "str",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "openai_organization",
                            "display_name": "OpenAI Organization",
                            "advanced": true,
                            "dynamic": false,
                            "info": "",
                            "title_case": true
                          },
                          "openai_proxy": {
                            "type": "str",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "openai_proxy",
                            "display_name": "OpenAI Proxy",
                            "advanced": true,
                            "dynamic": false,
                            "info": "",
                            "title_case": true
                          },
                          "request_timeout": {
                            "type": "float",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "request_timeout",
                            "display_name": "Request Timeout",
                            "advanced": true,
                            "dynamic": false,
                            "info": "",
                            "rangeSpec": {
                              "min": -1,
                              "max": 1,
                              "step": 0.1
                            },
                            "title_case": true
                          },
                          "show_progress_bar": {
                            "type": "bool",
                            "required": true,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "value": false,
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "show_progress_bar",
                            "display_name": "Show Progress Bar",
                            "advanced": true,
                            "dynamic": false,
                            "info": "",
                            "title_case": true
                          },
                          "skip_empty": {
                            "type": "bool",
                            "required": true,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "value": false,
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "skip_empty",
                            "display_name": "Skip Empty",
                            "advanced": true,
                            "dynamic": false,
                            "info": "",
                            "title_case": true
                          },
                          "tiktoken_enable": {
                            "type": "bool",
                            "required": true,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "value": true,
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "tiktoken_enable",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "title_case": true
                          },
                          "tiktoken_model_name": {
                            "type": "str",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "tiktoken_model_name",
                            "display_name": "TikToken Model Name",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "title_case": true,
                            "value": "cl100k_base"
                          },
                          "_type": "CustomComponent"
                        },
                        "description": "OpenAI embedding models",
                        "base_classes": [
                          "Embeddings",
                          "OpenAIEmbeddings",
                          "Callable"
                        ],
                        "display_name": "OpenAIEmbeddings",
                        "documentation": "",
                        "custom_fields": {
                          "default_headers": null,
                          "default_query": null,
                          "allowed_special": null,
                          "disallowed_special": null,
                          "chunk_size": null,
                          "client": null,
                          "deployment": null,
                          "embedding_ctx_length": null,
                          "max_retries": null,
                          "model": null,
                          "model_kwargs": null,
                          "openai_api_base": null,
                          "openai_api_key": null,
                          "openai_api_type": null,
                          "openai_api_version": null,
                          "openai_organization": null,
                          "openai_proxy": null,
                          "request_timeout": null,
                          "show_progress_bar": null,
                          "skip_empty": null,
                          "tiktoken_enable": null,
                          "tiktoken_model_name": null
                        },
                        "output_types": [
                          "OpenAIEmbeddings",
                          "Callable"
                        ],
                        "field_formatters": {},
                        "beta": true
                      },
                      "id": "OpenAIEmbeddings-y4Z35",
                      "description": "OpenAI embedding models",
                      "display_name": "OpenAIEmbeddings"
                    },
                    "selected": true,
                    "positionAbsolute": {
                      "x": 616.0092083066893,
                      "y": 732.6896033657725
                    },
                    "dragging": false
                  },
                  {
                    "width": 384,
                    "height": 553,
                    "id": "Chroma-0OMtG",
                    "type": "genericNode",
                    "position": {
                      "x": 1171.4601327194407,
                      "y": 730.4056541895504
                    },
                    "data": {
                      "type": "Chroma",
                      "node": {
                        "template": {
                          "documents": {
                            "type": "Document",
                            "required": false,
                            "placeholder": "",
                            "list": true,
                            "show": true,
                            "multiline": false,
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "documents",
                            "display_name": "Documents",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "title_case": true
                          },
                          "embedding": {
                            "type": "Embeddings",
                            "required": true,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "embedding",
                            "display_name": "Embedding",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "title_case": true
                          },
                          "chroma_server_cors_allow_origins": {
                            "type": "str",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "chroma_server_cors_allow_origins",
                            "display_name": "Server CORS Allow Origins",
                            "advanced": true,
                            "dynamic": false,
                            "info": "",
                            "title_case": true
                          },
                          "chroma_server_grpc_port": {
                            "type": "int",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "chroma_server_grpc_port",
                            "display_name": "Server gRPC Port",
                            "advanced": true,
                            "dynamic": false,
                            "info": "",
                            "title_case": true
                          },
                          "chroma_server_host": {
                            "type": "str",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "chroma_server_host",
                            "display_name": "Server Host",
                            "advanced": true,
                            "dynamic": false,
                            "info": "",
                            "title_case": true
                          },
                          "chroma_server_port": {
                            "type": "int",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "chroma_server_port",
                            "display_name": "Server Port",
                            "advanced": true,
                            "dynamic": false,
                            "info": "",
                            "title_case": true
                          },
                          "chroma_server_ssl_enabled": {
                            "type": "bool",
                            "required": true,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "value": false,
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "chroma_server_ssl_enabled",
                            "display_name": "Server SSL Enabled",
                            "advanced": true,
                            "dynamic": false,
                            "info": "",
                            "title_case": true
                          },
                          "code": {
                            "type": "code",
                            "required": true,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": true,
                            "value": "from typing import List, Optional, Union\n\nimport chromadb  # type: ignore\nfrom langchain_openai import OpenAIEmbeddings\nfrom langchain.schema import BaseRetriever, Document\nfrom langchain_community.vectorstores import VectorStore\nfrom langchain_community.vectorstores.chroma import Chroma\nfrom axiestudio import CustomComponent\nfrom chromadb.api.types import EmbeddingFunction\n\nclass ChromaComponent(CustomComponent):\n    \"\"\"\n    A custom component for implementing a Vector Store using Chroma.\n    \"\"\"\n\n    display_name: str = \"Chroma\"\n    description: str = \"Implementation of Vector Store using Chroma\"\n    documentation = \"https://python.langchain.com/docs/integrations/vectorstores/chroma\"\n    beta: bool = True\n\n    def build_config(self):\n        \"\"\"\n        Builds the configuration for the component.\n\n        Returns:\n        - dict: A dictionary containing the configuration options for the component.\n        \"\"\"\n        return {\n            \"collection_name\": {\"display_name\": \"Collection Name\", \"value\": \"axiestudio\"},\n            \"persist\": {\"display_name\": \"Persist\"},\n            \"persist_directory\": {\"display_name\": \"Persist Directory\"},\n            \"code\": {\"advanced\": True, \"display_name\": \"Code\"},\n            \"documents\": {\"display_name\": \"Documents\", \"is_list\": True},\n            \"embedding\": {\"display_name\": \"Embedding\"},\n            \"chroma_server_cors_allow_origins\": {\n                \"display_name\": \"Server CORS Allow Origins\",\n                \"advanced\": True,\n            },\n            \"chroma_server_host\": {\"display_name\": \"Server Host\", \"advanced\": True},\n            \"chroma_server_port\": {\"display_name\": \"Server Port\", \"advanced\": True},\n            \"chroma_server_grpc_port\": {\n                \"display_name\": \"Server gRPC Port\",\n                \"advanced\": True,\n            },\n            \"chroma_server_ssl_enabled\": {\n                \"display_name\": \"Server SSL Enabled\",\n                \"advanced\": True,\n            },\n        }\n\n    def build(\n        self,\n        collection_name: str,\n        persist: bool,\n        embedding: Embeddings,\n        chroma_server_ssl_enabled: bool,\n        persist_directory: Optional[str] = None,\n        documents: Optional[List[Document]] = None,\n        chroma_server_cors_allow_origins: Optional[str] = None,\n        chroma_server_host: Optional[str] = None,\n        chroma_server_port: Optional[int] = None,\n        chroma_server_grpc_port: Optional[int] = None,\n    ) -> Union[VectorStore, BaseRetriever]:\n        \"\"\"\n        Builds the Vector Store or BaseRetriever object.\n\n        Args:\n        - collection_name (str): The name of the collection.\n        - persist_directory (Optional[str]): The directory to persist the Vector Store to.\n        - chroma_server_ssl_enabled (bool): Whether to enable SSL for the Chroma server.\n        - persist (bool): Whether to persist the Vector Store or not.\n        - embedding (Optional[Embeddings]): The embeddings to use for the Vector Store.\n        - documents (Optional[Document]): The documents to use for the Vector Store.\n        - chroma_server_cors_allow_origins (Optional[str]): The CORS allow origins for the Chroma server.\n        - chroma_server_host (Optional[str]): The host for the Chroma server.\n        - chroma_server_port (Optional[int]): The port for the Chroma server.\n        - chroma_server_grpc_port (Optional[int]): The gRPC port for the Chroma server.\n\n        Returns:\n        - Union[VectorStore, BaseRetriever]: The Vector Store or BaseRetriever object.\n        \"\"\"\n        client = chromadb.PersistentClient(path=persist_directory)\n\n        col = client.get_or_create_collection(collection_name)\n        \n        col.upsert([f\"{i}\" for i in range(10)],documents=[f\"This is document #{i}\" for i in range(10)],metadatas=[{\"id\":f\"{i}\"} for i in range(10)])\n      \n        ef = chromadb.utils.embedding_functions.DefaultEmbeddingFunction()\n        \n        \n        class DefChromaEF(Embeddings):\n          def __init__(self,ef):\n            self.ef = ef\n        \n          def embed_documents(self,texts):\n            return self.ef(texts)\n        \n          def embed_query(self, query):\n            return self.ef([query])[0]\n        # Chroma settings\n        chroma_settings = None\n\n        if chroma_server_host is not None:\n            chroma_settings = chromadb.config.Settings(\n                chroma_server_cors_allow_origins=chroma_server_cors_allow_origins or None,\n                chroma_server_host=chroma_server_host,\n                chroma_server_port=chroma_server_port or None,\n                chroma_server_grpc_port=chroma_server_grpc_port or None,\n                chroma_server_ssl_enabled=chroma_server_ssl_enabled,\n            )\n\n\n\n        return Chroma(client=client, collection_name=collection_name,embedding_function=DefChromaEF(ef))\n",
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "code",
                            "advanced": true,
                            "dynamic": true,
                            "info": "",
                            "title_case": true
                          },
                          "collection_name": {
                            "type": "str",
                            "required": true,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "value": "yamon_guide",
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "collection_name",
                            "display_name": "Collection Name",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "title_case": true
                          },
                          "persist": {
                            "type": "bool",
                            "required": true,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "value": true,
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "persist",
                            "display_name": "Persist",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "title_case": true
                          },
                          "persist_directory": {
                            "type": "str",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "persist_directory",
                            "display_name": "Persist Directory",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "title_case": true,
                            "value": "/link_volumes/chroma/yamon_guide"
                          },
                          "_type": "CustomComponent"
                        },
                        "description": "Implementation of Vector Store using Chroma",
                        "base_classes": [
                          "VectorStore",
                          "BaseRetriever"
                        ],
                        "display_name": "Chroma",
                        "documentation": "https://python.langchain.com/docs/integrations/vectorstores/chroma",
                        "custom_fields": {
                          "collection_name": null,
                          "persist": null,
                          "embedding": null,
                          "chroma_server_ssl_enabled": null,
                          "persist_directory": null,
                          "documents": null,
                          "chroma_server_cors_allow_origins": null,
                          "chroma_server_host": null,
                          "chroma_server_port": null,
                          "chroma_server_grpc_port": null
                        },
                        "output_types": [
                          "VectorStore",
                          "BaseRetriever"
                        ],
                        "field_formatters": {},
                        "beta": true
                      },
                      "id": "Chroma-0OMtG",
                      "description": "Implementation of Vector Store using Chroma",
                      "display_name": "Chroma"
                    },
                    "selected": true,
                    "dragging": false,
                    "positionAbsolute": {
                      "x": 1171.4601327194407,
                      "y": 730.4056541895504
                    }
                  }
                ],
                "edges": [
                  {
                    "source": "OpenAIEmbeddings-y4Z35",
                    "sourceHandle": "{œbaseClassesœ:[œEmbeddingsœ,œOpenAIEmbeddingsœ,œCallableœ],œdataTypeœ:œOpenAIEmbeddingsœ,œidœ:œOpenAIEmbeddings-y4Z35œ}",
                    "target": "Chroma-0OMtG",
                    "targetHandle": "{œfieldNameœ:œembeddingœ,œidœ:œChroma-0OMtGœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}",
                    "data": {
                      "targetHandle": {
                        "fieldName": "embedding",
                        "id": "Chroma-0OMtG",
                        "inputTypes": null,
                        "type": "Embeddings"
                      },
                      "sourceHandle": {
                        "baseClasses": [
                          "Embeddings",
                          "OpenAIEmbeddings",
                          "Callable"
                        ],
                        "dataType": "OpenAIEmbeddings",
                        "id": "OpenAIEmbeddings-y4Z35"
                      }
                    },
                    "style": {
                      "stroke": "#555"
                    },
                    "className": "stroke-foreground  stroke-connection",
                    "animated": false,
                    "id": "reactflow__edge-OpenAIEmbeddings-y4Z35{œbaseClassesœ:[œEmbeddingsœ,œOpenAIEmbeddingsœ,œCallableœ],œdataTypeœ:œOpenAIEmbeddingsœ,œidœ:œOpenAIEmbeddings-y4Z35œ}-Chroma-0OMtG{œfieldNameœ:œembeddingœ,œidœ:œChroma-0OMtGœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}"
                  }
                ],
                "viewport": {
                  "zoom": 1,
                  "x": 0,
                  "y": 0
                }
              },
              "is_component": false,
              "name": "Modest Brown",
              "description": "",
              "id": "MCO6E"
            },
            "official": false
          }
        },
        "id": "Chroma-TEgpE",
        "position": {
          "x": 0,
          "y": 0
        },
        "type": "genericNode"
      }
    ],
    "viewport": {
      "x": 1,
      "y": 1,
      "zoom": 1
    }
  },
  "metadata": {
    "Chroma": {
      "count": 1
    },
    "total": 1
  },
  "original": {
    "id": "ba133384-4aae-4ac5-a914-c79c47a722d1",
    "name": "chromarag_sample",
    "description": "",
    "is_component": true,
    "liked_by_count": "0",
    "downloads_count": "0",
    "metadata": {
      "Chroma": {
        "count": 1
      },
      "total": 1
    },
    "last_tested_version": "0.6.12",
    "private": true,
    "data": {
      "edges": [],
      "nodes": [
        {
          "data": {
            "id": "Chroma-TEgpE",
            "type": "Chroma",
            "node": {
              "output_types": [
                "VectorStore",
                "BaseRetriever"
              ],
              "display_name": "chromarag_sample",
              "documentation": "",
              "base_classes": [
                "VectorStore",
                "BaseRetriever"
              ],
              "description": "",
              "template": {
                "allowed_special_OpenAIEmbeddings-y4Z35": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": [],
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "allowed_special",
                  "display_name": "Allowed Special",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "proxy": {
                    "id": "OpenAIEmbeddings-y4Z35",
                    "field": "allowed_special"
                  }
                },
                "chunk_size_OpenAIEmbeddings-y4Z35": {
                  "type": "int",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": 1000,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "chunk_size",
                  "display_name": "Chunk Size",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "proxy": {
                    "id": "OpenAIEmbeddings-y4Z35",
                    "field": "chunk_size"
                  }
                },
                "client_OpenAIEmbeddings-y4Z35": {
                  "type": "Any",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "client",
                  "display_name": "Client",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "proxy": {
                    "id": "OpenAIEmbeddings-y4Z35",
                    "field": "client"
                  }
                },
                "code_OpenAIEmbeddings-y4Z35": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": true,
                  "value": "from typing import Any, Callable, Dict, List, Optional, Union\n\nfrom langchain_openai import OpenAIEmbeddings\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import NestedDict\nfrom pydantic.v1.types import SecretStr\n\n\nclass OpenAIEmbeddingsComponent(CustomComponent):\n    display_name = \"OpenAIEmbeddings\"\n    description = \"OpenAI embedding models\"\n\n    def build_config(self):\n        return {\n            \"allowed_special\": {\n                \"display_name\": \"Allowed Special\",\n                \"advanced\": True,\n                \"field_type\": \"str\",\n                \"is_list\": True,\n            },\n            \"default_headers\": {\n                \"display_name\": \"Default Headers\",\n                \"advanced\": True,\n                \"field_type\": \"dict\",\n            },\n            \"default_query\": {\n                \"display_name\": \"Default Query\",\n                \"advanced\": True,\n                \"field_type\": \"NestedDict\",\n            },\n            \"disallowed_special\": {\n                \"display_name\": \"Disallowed Special\",\n                \"advanced\": True,\n                \"field_type\": \"str\",\n                \"is_list\": True,\n            },\n            \"chunk_size\": {\"display_name\": \"Chunk Size\", \"advanced\": True},\n            \"client\": {\"display_name\": \"Client\", \"advanced\": True},\n            \"deployment\": {\"display_name\": \"Deployment\", \"advanced\": True},\n            \"embedding_ctx_length\": {\n                \"display_name\": \"Embedding Context Length\",\n                \"advanced\": True,\n            },\n            \"max_retries\": {\"display_name\": \"Max Retries\", \"advanced\": True},\n            \"model\": {\n                \"display_name\": \"Model\",\n                \"advanced\": False,\n                \"options\": [\"text-embedding-3-small\", \"text-embedding-3-large\", \"text-embedding-ada-002\"],\n            },\n            \"model_kwargs\": {\"display_name\": \"Model Kwargs\", \"advanced\": True},\n            \"openai_api_base\": {\"display_name\": \"OpenAI API Base\", \"password\": True, \"advanced\": True},\n            \"openai_api_key\": {\"display_name\": \"OpenAI API Key\", \"password\": True},\n            \"openai_api_type\": {\"display_name\": \"OpenAI API Type\", \"advanced\": True, \"password\": True},\n            \"openai_api_version\": {\n                \"display_name\": \"OpenAI API Version\",\n                \"advanced\": True,\n            },\n            \"openai_organization\": {\n                \"display_name\": \"OpenAI Organization\",\n                \"advanced\": True,\n            },\n            \"openai_proxy\": {\"display_name\": \"OpenAI Proxy\", \"advanced\": True},\n            \"request_timeout\": {\"display_name\": \"Request Timeout\", \"advanced\": True},\n            \"show_progress_bar\": {\n                \"display_name\": \"Show Progress Bar\",\n                \"advanced\": True,\n            },\n            \"skip_empty\": {\"display_name\": \"Skip Empty\", \"advanced\": True},\n            \"tiktoken_model_name\": {\"display_name\": \"TikToken Model Name\"},\n            \"tikToken_enable\": {\"display_name\": \"TikToken Enable\", \"advanced\": True},\n        }\n\n    def build(\n        self,\n        default_headers: Optional[Dict[str, str]] = None,\n        default_query: Optional[NestedDict] = {},\n        allowed_special: List[str] = [],\n        disallowed_special: List[str] = [\"all\"],\n        chunk_size: int = 1000,\n        client: Optional[Any] = None,\n        deployment: str = \"text-embedding-3-small\",\n        embedding_ctx_length: int = 8191,\n        max_retries: int = 6,\n        model: str = \"text-embedding-3-small\",\n        model_kwargs: NestedDict = {},\n        openai_api_base: Optional[str] = None,\n        openai_api_key: Optional[str] = \"\",\n        openai_api_type: Optional[str] = None,\n        openai_api_version: Optional[str] = None,\n        openai_organization: Optional[str] = None,\n        openai_proxy: Optional[str] = None,\n        request_timeout: Optional[float] = None,\n        show_progress_bar: bool = False,\n        skip_empty: bool = False,\n        tiktoken_enable: bool = True,\n        tiktoken_model_name: Optional[str] = None,\n    ) -> Union[OpenAIEmbeddings, Callable]:\n        # This is to avoid errors with Vector Stores (e.g Chroma)\n        if disallowed_special == [\"all\"]:\n            disallowed_special = \"all\"  # type: ignore\n\n        api_key = SecretStr(openai_api_key) if openai_api_key else None\n\n        return OpenAIEmbeddings(\n            tiktoken_enabled=tiktoken_enable,\n            default_headers=default_headers,\n            default_query=default_query,\n            allowed_special=set(allowed_special),\n            disallowed_special=\"all\",\n            chunk_size=chunk_size,\n            client=client,\n            deployment=deployment,\n            embedding_ctx_length=embedding_ctx_length,\n            max_retries=max_retries,\n            model=model,\n            model_kwargs=model_kwargs,\n            base_url=openai_api_base,\n            api_key=openai_api_key,\n            openai_api_type=openai_api_type,\n            api_version=openai_api_version,\n            organization=openai_organization,\n            openai_proxy=openai_proxy,\n            timeout=request_timeout,\n            show_progress_bar=show_progress_bar,\n            skip_empty=skip_empty,\n            tiktoken_model_name=tiktoken_model_name,\n        )\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true,
                  "proxy": {
                    "id": "OpenAIEmbeddings-y4Z35",
                    "field": "code"
                  },
                  "display_name": "Code"
                },
                "default_headers_OpenAIEmbeddings-y4Z35": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "default_headers",
                  "display_name": "Default Headers",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "proxy": {
                    "id": "OpenAIEmbeddings-y4Z35",
                    "field": "default_headers"
                  }
                },
                "default_query_OpenAIEmbeddings-y4Z35": {
                  "type": "NestedDict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": {},
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "default_query",
                  "display_name": "Default Query",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "proxy": {
                    "id": "OpenAIEmbeddings-y4Z35",
                    "field": "default_query"
                  }
                },
                "deployment_OpenAIEmbeddings-y4Z35": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "text-embedding-3-small",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "deployment",
                  "display_name": "Deployment",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "proxy": {
                    "id": "OpenAIEmbeddings-y4Z35",
                    "field": "deployment"
                  }
                },
                "disallowed_special_OpenAIEmbeddings-y4Z35": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": [
                    "all"
                  ],
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "disallowed_special",
                  "display_name": "Disallowed Special",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "proxy": {
                    "id": "OpenAIEmbeddings-y4Z35",
                    "field": "disallowed_special"
                  }
                },
                "embedding_ctx_length_OpenAIEmbeddings-y4Z35": {
                  "type": "int",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": 8191,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "embedding_ctx_length",
                  "display_name": "Embedding Context Length",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "proxy": {
                    "id": "OpenAIEmbeddings-y4Z35",
                    "field": "embedding_ctx_length"
                  }
                },
                "max_retries_OpenAIEmbeddings-y4Z35": {
                  "type": "int",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": 6,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "max_retries",
                  "display_name": "Max Retries",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "proxy": {
                    "id": "OpenAIEmbeddings-y4Z35",
                    "field": "max_retries"
                  }
                },
                "model_OpenAIEmbeddings-y4Z35": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "text-embedding-ada-002",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "options": [
                    "text-embedding-3-small",
                    "text-embedding-3-large",
                    "text-embedding-ada-002"
                  ],
                  "name": "model",
                  "display_name": "Model",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "proxy": {
                    "id": "OpenAIEmbeddings-y4Z35",
                    "field": "model"
                  }
                },
                "model_kwargs_OpenAIEmbeddings-y4Z35": {
                  "type": "NestedDict",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": {},
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "model_kwargs",
                  "display_name": "Model Kwargs",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "proxy": {
                    "id": "OpenAIEmbeddings-y4Z35",
                    "field": "model_kwargs"
                  }
                },
                "openai_api_base_OpenAIEmbeddings-y4Z35": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": true,
                  "name": "openai_api_base",
                  "display_name": "OpenAI API Base",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "proxy": {
                    "id": "OpenAIEmbeddings-y4Z35",
                    "field": "openai_api_base"
                  },
                  "value": ""
                },
                "openai_api_key_OpenAIEmbeddings-y4Z35": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": true,
                  "name": "openai_api_key",
                  "display_name": "OpenAI API Key",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "proxy": {
                    "id": "OpenAIEmbeddings-y4Z35",
                    "field": "openai_api_key"
                  }
                },
                "openai_api_type_OpenAIEmbeddings-y4Z35": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": true,
                  "name": "openai_api_type",
                  "display_name": "OpenAI API Type",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "proxy": {
                    "id": "OpenAIEmbeddings-y4Z35",
                    "field": "openai_api_type"
                  },
                  "value": ""
                },
                "openai_api_version_OpenAIEmbeddings-y4Z35": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "openai_api_version",
                  "display_name": "OpenAI API Version",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "proxy": {
                    "id": "OpenAIEmbeddings-y4Z35",
                    "field": "openai_api_version"
                  }
                },
                "openai_organization_OpenAIEmbeddings-y4Z35": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "openai_organization",
                  "display_name": "OpenAI Organization",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "proxy": {
                    "id": "OpenAIEmbeddings-y4Z35",
                    "field": "openai_organization"
                  }
                },
                "openai_proxy_OpenAIEmbeddings-y4Z35": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "openai_proxy",
                  "display_name": "OpenAI Proxy",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "proxy": {
                    "id": "OpenAIEmbeddings-y4Z35",
                    "field": "openai_proxy"
                  }
                },
                "request_timeout_OpenAIEmbeddings-y4Z35": {
                  "type": "float",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "request_timeout",
                  "display_name": "Request Timeout",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "rangeSpec": {
                    "min": -1,
                    "max": 1,
                    "step": 0.1
                  },
                  "title_case": true,
                  "proxy": {
                    "id": "OpenAIEmbeddings-y4Z35",
                    "field": "request_timeout"
                  }
                },
                "show_progress_bar_OpenAIEmbeddings-y4Z35": {
                  "type": "bool",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "show_progress_bar",
                  "display_name": "Show Progress Bar",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "proxy": {
                    "id": "OpenAIEmbeddings-y4Z35",
                    "field": "show_progress_bar"
                  }
                },
                "skip_empty_OpenAIEmbeddings-y4Z35": {
                  "type": "bool",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "skip_empty",
                  "display_name": "Skip Empty",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "proxy": {
                    "id": "OpenAIEmbeddings-y4Z35",
                    "field": "skip_empty"
                  }
                },
                "tiktoken_enable_OpenAIEmbeddings-y4Z35": {
                  "type": "bool",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": true,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "tiktoken_enable",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "proxy": {
                    "id": "OpenAIEmbeddings-y4Z35",
                    "field": "tiktoken_enable"
                  },
                  "display_name": "Tiktoken Enable"
                },
                "tiktoken_model_name_OpenAIEmbeddings-y4Z35": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "tiktoken_model_name",
                  "display_name": "TikToken Model Name",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "value": "cl100k_base",
                  "proxy": {
                    "id": "OpenAIEmbeddings-y4Z35",
                    "field": "tiktoken_model_name"
                  }
                },
                "documents_Chroma-0OMtG": {
                  "type": "Document",
                  "required": false,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "documents",
                  "display_name": "Documents",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "proxy": {
                    "id": "Chroma-0OMtG",
                    "field": "documents"
                  }
                },
                "chroma_server_cors_allow_origins_Chroma-0OMtG": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "chroma_server_cors_allow_origins",
                  "display_name": "Server CORS Allow Origins",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "proxy": {
                    "id": "Chroma-0OMtG",
                    "field": "chroma_server_cors_allow_origins"
                  }
                },
                "chroma_server_grpc_port_Chroma-0OMtG": {
                  "type": "int",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "chroma_server_grpc_port",
                  "display_name": "Server gRPC Port",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "proxy": {
                    "id": "Chroma-0OMtG",
                    "field": "chroma_server_grpc_port"
                  }
                },
                "chroma_server_host_Chroma-0OMtG": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "chroma_server_host",
                  "display_name": "Server Host",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "proxy": {
                    "id": "Chroma-0OMtG",
                    "field": "chroma_server_host"
                  }
                },
                "chroma_server_port_Chroma-0OMtG": {
                  "type": "int",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "chroma_server_port",
                  "display_name": "Server Port",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "proxy": {
                    "id": "Chroma-0OMtG",
                    "field": "chroma_server_port"
                  }
                },
                "chroma_server_ssl_enabled_Chroma-0OMtG": {
                  "type": "bool",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "chroma_server_ssl_enabled",
                  "display_name": "Server SSL Enabled",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "proxy": {
                    "id": "Chroma-0OMtG",
                    "field": "chroma_server_ssl_enabled"
                  }
                },
                "code_Chroma-0OMtG": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": true,
                  "value": "from typing import List, Optional, Union\n\nimport chromadb  # type: ignore\nfrom langchain_openai import OpenAIEmbeddings\nfrom langchain.schema import BaseRetriever, Document\nfrom langchain_community.vectorstores import VectorStore\nfrom langchain_community.vectorstores.chroma import Chroma\nfrom axiestudio import CustomComponent\nfrom chromadb.api.types import EmbeddingFunction\n\nclass ChromaComponent(CustomComponent):\n    \"\"\"\n    A custom component for implementing a Vector Store using Chroma.\n    \"\"\"\n\n    display_name: str = \"Chroma\"\n    description: str = \"Implementation of Vector Store using Chroma\"\n    documentation = \"https://python.langchain.com/docs/integrations/vectorstores/chroma\"\n    beta: bool = True\n\n    def build_config(self):\n        \"\"\"\n        Builds the configuration for the component.\n\n        Returns:\n        - dict: A dictionary containing the configuration options for the component.\n        \"\"\"\n        return {\n            \"collection_name\": {\"display_name\": \"Collection Name\", \"value\": \"axiestudio\"},\n            \"persist\": {\"display_name\": \"Persist\"},\n            \"persist_directory\": {\"display_name\": \"Persist Directory\"},\n            \"code\": {\"advanced\": True, \"display_name\": \"Code\"},\n            \"documents\": {\"display_name\": \"Documents\", \"is_list\": True},\n            \"embedding\": {\"display_name\": \"Embedding\"},\n            \"chroma_server_cors_allow_origins\": {\n                \"display_name\": \"Server CORS Allow Origins\",\n                \"advanced\": True,\n            },\n            \"chroma_server_host\": {\"display_name\": \"Server Host\", \"advanced\": True},\n            \"chroma_server_port\": {\"display_name\": \"Server Port\", \"advanced\": True},\n            \"chroma_server_grpc_port\": {\n                \"display_name\": \"Server gRPC Port\",\n                \"advanced\": True,\n            },\n            \"chroma_server_ssl_enabled\": {\n                \"display_name\": \"Server SSL Enabled\",\n                \"advanced\": True,\n            },\n        }\n\n    def build(\n        self,\n        collection_name: str,\n        persist: bool,\n        embedding: Embeddings,\n        chroma_server_ssl_enabled: bool,\n        persist_directory: Optional[str] = None,\n        documents: Optional[List[Document]] = None,\n        chroma_server_cors_allow_origins: Optional[str] = None,\n        chroma_server_host: Optional[str] = None,\n        chroma_server_port: Optional[int] = None,\n        chroma_server_grpc_port: Optional[int] = None,\n    ) -> Union[VectorStore, BaseRetriever]:\n        \"\"\"\n        Builds the Vector Store or BaseRetriever object.\n\n        Args:\n        - collection_name (str): The name of the collection.\n        - persist_directory (Optional[str]): The directory to persist the Vector Store to.\n        - chroma_server_ssl_enabled (bool): Whether to enable SSL for the Chroma server.\n        - persist (bool): Whether to persist the Vector Store or not.\n        - embedding (Optional[Embeddings]): The embeddings to use for the Vector Store.\n        - documents (Optional[Document]): The documents to use for the Vector Store.\n        - chroma_server_cors_allow_origins (Optional[str]): The CORS allow origins for the Chroma server.\n        - chroma_server_host (Optional[str]): The host for the Chroma server.\n        - chroma_server_port (Optional[int]): The port for the Chroma server.\n        - chroma_server_grpc_port (Optional[int]): The gRPC port for the Chroma server.\n\n        Returns:\n        - Union[VectorStore, BaseRetriever]: The Vector Store or BaseRetriever object.\n        \"\"\"\n        client = chromadb.PersistentClient(path=persist_directory)\n\n        col = client.get_or_create_collection(collection_name)\n        \n        col.upsert([f\"{i}\" for i in range(10)],documents=[f\"This is document #{i}\" for i in range(10)],metadatas=[{\"id\":f\"{i}\"} for i in range(10)])\n      \n        ef = chromadb.utils.embedding_functions.DefaultEmbeddingFunction()\n        \n        \n        class DefChromaEF(Embeddings):\n          def __init__(self,ef):\n            self.ef = ef\n        \n          def embed_documents(self,texts):\n            return self.ef(texts)\n        \n          def embed_query(self, query):\n            return self.ef([query])[0]\n        # Chroma settings\n        chroma_settings = None\n\n        if chroma_server_host is not None:\n            chroma_settings = chromadb.config.Settings(\n                chroma_server_cors_allow_origins=chroma_server_cors_allow_origins or None,\n                chroma_server_host=chroma_server_host,\n                chroma_server_port=chroma_server_port or None,\n                chroma_server_grpc_port=chroma_server_grpc_port or None,\n                chroma_server_ssl_enabled=chroma_server_ssl_enabled,\n            )\n\n\n\n        return Chroma(client=client, collection_name=collection_name,embedding_function=DefChromaEF(ef))\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "title_case": true,
                  "proxy": {
                    "id": "Chroma-0OMtG",
                    "field": "code"
                  },
                  "display_name": "Code"
                },
                "collection_name_Chroma-0OMtG": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "yamon_guide",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "collection_name",
                  "display_name": "Collection Name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "proxy": {
                    "id": "Chroma-0OMtG",
                    "field": "collection_name"
                  }
                },
                "persist_Chroma-0OMtG": {
                  "type": "bool",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": true,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "persist",
                  "display_name": "Persist",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "proxy": {
                    "id": "Chroma-0OMtG",
                    "field": "persist"
                  }
                },
                "persist_directory_Chroma-0OMtG": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "persist_directory",
                  "display_name": "Persist Directory",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "value": "/link_volumes/chroma/yamon_guide",
                  "proxy": {
                    "id": "Chroma-0OMtG",
                    "field": "persist_directory"
                  }
                }
              },
              "flow": {
                "data": {
                  "nodes": [
                    {
                      "width": 384,
                      "height": 632,
                      "id": "OpenAIEmbeddings-y4Z35",
                      "type": "genericNode",
                      "position": {
                        "x": 616.0092083066893,
                        "y": 732.6896033657725
                      },
                      "data": {
                        "type": "OpenAIEmbeddings",
                        "node": {
                          "template": {
                            "allowed_special": {
                              "type": "str",
                              "required": true,
                              "placeholder": "",
                              "list": true,
                              "show": true,
                              "multiline": false,
                              "value": [],
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "allowed_special",
                              "display_name": "Allowed Special",
                              "advanced": true,
                              "dynamic": false,
                              "info": "",
                              "title_case": true
                            },
                            "chunk_size": {
                              "type": "int",
                              "required": true,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "value": 1000,
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "chunk_size",
                              "display_name": "Chunk Size",
                              "advanced": true,
                              "dynamic": false,
                              "info": "",
                              "title_case": true
                            },
                            "client": {
                              "type": "Any",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "client",
                              "display_name": "Client",
                              "advanced": true,
                              "dynamic": false,
                              "info": "",
                              "title_case": true
                            },
                            "code": {
                              "type": "code",
                              "required": true,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": true,
                              "value": "from typing import Any, Callable, Dict, List, Optional, Union\n\nfrom langchain_openai import OpenAIEmbeddings\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import NestedDict\nfrom pydantic.v1.types import SecretStr\n\n\nclass OpenAIEmbeddingsComponent(CustomComponent):\n    display_name = \"OpenAIEmbeddings\"\n    description = \"OpenAI embedding models\"\n\n    def build_config(self):\n        return {\n            \"allowed_special\": {\n                \"display_name\": \"Allowed Special\",\n                \"advanced\": True,\n                \"field_type\": \"str\",\n                \"is_list\": True,\n            },\n            \"default_headers\": {\n                \"display_name\": \"Default Headers\",\n                \"advanced\": True,\n                \"field_type\": \"dict\",\n            },\n            \"default_query\": {\n                \"display_name\": \"Default Query\",\n                \"advanced\": True,\n                \"field_type\": \"NestedDict\",\n            },\n            \"disallowed_special\": {\n                \"display_name\": \"Disallowed Special\",\n                \"advanced\": True,\n                \"field_type\": \"str\",\n                \"is_list\": True,\n            },\n            \"chunk_size\": {\"display_name\": \"Chunk Size\", \"advanced\": True},\n            \"client\": {\"display_name\": \"Client\", \"advanced\": True},\n            \"deployment\": {\"display_name\": \"Deployment\", \"advanced\": True},\n            \"embedding_ctx_length\": {\n                \"display_name\": \"Embedding Context Length\",\n                \"advanced\": True,\n            },\n            \"max_retries\": {\"display_name\": \"Max Retries\", \"advanced\": True},\n            \"model\": {\n                \"display_name\": \"Model\",\n                \"advanced\": False,\n                \"options\": [\"text-embedding-3-small\", \"text-embedding-3-large\", \"text-embedding-ada-002\"],\n            },\n            \"model_kwargs\": {\"display_name\": \"Model Kwargs\", \"advanced\": True},\n            \"openai_api_base\": {\"display_name\": \"OpenAI API Base\", \"password\": True, \"advanced\": True},\n            \"openai_api_key\": {\"display_name\": \"OpenAI API Key\", \"password\": True},\n            \"openai_api_type\": {\"display_name\": \"OpenAI API Type\", \"advanced\": True, \"password\": True},\n            \"openai_api_version\": {\n                \"display_name\": \"OpenAI API Version\",\n                \"advanced\": True,\n            },\n            \"openai_organization\": {\n                \"display_name\": \"OpenAI Organization\",\n                \"advanced\": True,\n            },\n            \"openai_proxy\": {\"display_name\": \"OpenAI Proxy\", \"advanced\": True},\n            \"request_timeout\": {\"display_name\": \"Request Timeout\", \"advanced\": True},\n            \"show_progress_bar\": {\n                \"display_name\": \"Show Progress Bar\",\n                \"advanced\": True,\n            },\n            \"skip_empty\": {\"display_name\": \"Skip Empty\", \"advanced\": True},\n            \"tiktoken_model_name\": {\"display_name\": \"TikToken Model Name\"},\n            \"tikToken_enable\": {\"display_name\": \"TikToken Enable\", \"advanced\": True},\n        }\n\n    def build(\n        self,\n        default_headers: Optional[Dict[str, str]] = None,\n        default_query: Optional[NestedDict] = {},\n        allowed_special: List[str] = [],\n        disallowed_special: List[str] = [\"all\"],\n        chunk_size: int = 1000,\n        client: Optional[Any] = None,\n        deployment: str = \"text-embedding-3-small\",\n        embedding_ctx_length: int = 8191,\n        max_retries: int = 6,\n        model: str = \"text-embedding-3-small\",\n        model_kwargs: NestedDict = {},\n        openai_api_base: Optional[str] = None,\n        openai_api_key: Optional[str] = \"\",\n        openai_api_type: Optional[str] = None,\n        openai_api_version: Optional[str] = None,\n        openai_organization: Optional[str] = None,\n        openai_proxy: Optional[str] = None,\n        request_timeout: Optional[float] = None,\n        show_progress_bar: bool = False,\n        skip_empty: bool = False,\n        tiktoken_enable: bool = True,\n        tiktoken_model_name: Optional[str] = None,\n    ) -> Union[OpenAIEmbeddings, Callable]:\n        # This is to avoid errors with Vector Stores (e.g Chroma)\n        if disallowed_special == [\"all\"]:\n            disallowed_special = \"all\"  # type: ignore\n\n        api_key = SecretStr(openai_api_key) if openai_api_key else None\n\n        return OpenAIEmbeddings(\n            tiktoken_enabled=tiktoken_enable,\n            default_headers=default_headers,\n            default_query=default_query,\n            allowed_special=set(allowed_special),\n            disallowed_special=\"all\",\n            chunk_size=chunk_size,\n            client=client,\n            deployment=deployment,\n            embedding_ctx_length=embedding_ctx_length,\n            max_retries=max_retries,\n            model=model,\n            model_kwargs=model_kwargs,\n            base_url=openai_api_base,\n            api_key=openai_api_key,\n            openai_api_type=openai_api_type,\n            api_version=openai_api_version,\n            organization=openai_organization,\n            openai_proxy=openai_proxy,\n            timeout=request_timeout,\n            show_progress_bar=show_progress_bar,\n            skip_empty=skip_empty,\n            tiktoken_model_name=tiktoken_model_name,\n        )\n",
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "code",
                              "advanced": false,
                              "dynamic": true,
                              "info": "",
                              "title_case": true
                            },
                            "default_headers": {
                              "type": "dict",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "default_headers",
                              "display_name": "Default Headers",
                              "advanced": true,
                              "dynamic": false,
                              "info": "",
                              "title_case": true
                            },
                            "default_query": {
                              "type": "NestedDict",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "value": {},
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "default_query",
                              "display_name": "Default Query",
                              "advanced": true,
                              "dynamic": false,
                              "info": "",
                              "title_case": true
                            },
                            "deployment": {
                              "type": "str",
                              "required": true,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "value": "text-embedding-3-small",
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "deployment",
                              "display_name": "Deployment",
                              "advanced": true,
                              "dynamic": false,
                              "info": "",
                              "title_case": true
                            },
                            "disallowed_special": {
                              "type": "str",
                              "required": true,
                              "placeholder": "",
                              "list": true,
                              "show": true,
                              "multiline": false,
                              "value": [
                                "all"
                              ],
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "disallowed_special",
                              "display_name": "Disallowed Special",
                              "advanced": true,
                              "dynamic": false,
                              "info": "",
                              "title_case": true
                            },
                            "embedding_ctx_length": {
                              "type": "int",
                              "required": true,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "value": 8191,
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "embedding_ctx_length",
                              "display_name": "Embedding Context Length",
                              "advanced": true,
                              "dynamic": false,
                              "info": "",
                              "title_case": true
                            },
                            "max_retries": {
                              "type": "int",
                              "required": true,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "value": 6,
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "max_retries",
                              "display_name": "Max Retries",
                              "advanced": true,
                              "dynamic": false,
                              "info": "",
                              "title_case": true
                            },
                            "model": {
                              "type": "str",
                              "required": true,
                              "placeholder": "",
                              "list": true,
                              "show": true,
                              "multiline": false,
                              "value": "text-embedding-ada-002",
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "options": [
                                "text-embedding-3-small",
                                "text-embedding-3-large",
                                "text-embedding-ada-002"
                              ],
                              "name": "model",
                              "display_name": "Model",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "title_case": true
                            },
                            "model_kwargs": {
                              "type": "NestedDict",
                              "required": true,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "value": {},
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "model_kwargs",
                              "display_name": "Model Kwargs",
                              "advanced": true,
                              "dynamic": false,
                              "info": "",
                              "title_case": true
                            },
                            "openai_api_base": {
                              "type": "str",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "fileTypes": [],
                              "file_path": "",
                              "password": true,
                              "name": "openai_api_base",
                              "display_name": "OpenAI API Base",
                              "advanced": true,
                              "dynamic": false,
                              "info": "",
                              "title_case": true
                            },
                            "openai_api_key": {
                              "type": "str",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "value": "sk-PLACEHOLDER_API_KEY",
                              "fileTypes": [],
                              "file_path": "",
                              "password": true,
                              "name": "openai_api_key",
                              "display_name": "OpenAI API Key",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "title_case": true
                            },
                            "openai_api_type": {
                              "type": "str",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "fileTypes": [],
                              "file_path": "",
                              "password": true,
                              "name": "openai_api_type",
                              "display_name": "OpenAI API Type",
                              "advanced": true,
                              "dynamic": false,
                              "info": "",
                              "title_case": true
                            },
                            "openai_api_version": {
                              "type": "str",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "openai_api_version",
                              "display_name": "OpenAI API Version",
                              "advanced": true,
                              "dynamic": false,
                              "info": "",
                              "title_case": true
                            },
                            "openai_organization": {
                              "type": "str",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "openai_organization",
                              "display_name": "OpenAI Organization",
                              "advanced": true,
                              "dynamic": false,
                              "info": "",
                              "title_case": true
                            },
                            "openai_proxy": {
                              "type": "str",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "openai_proxy",
                              "display_name": "OpenAI Proxy",
                              "advanced": true,
                              "dynamic": false,
                              "info": "",
                              "title_case": true
                            },
                            "request_timeout": {
                              "type": "float",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "request_timeout",
                              "display_name": "Request Timeout",
                              "advanced": true,
                              "dynamic": false,
                              "info": "",
                              "rangeSpec": {
                                "min": -1,
                                "max": 1,
                                "step": 0.1
                              },
                              "title_case": true
                            },
                            "show_progress_bar": {
                              "type": "bool",
                              "required": true,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "value": false,
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "show_progress_bar",
                              "display_name": "Show Progress Bar",
                              "advanced": true,
                              "dynamic": false,
                              "info": "",
                              "title_case": true
                            },
                            "skip_empty": {
                              "type": "bool",
                              "required": true,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "value": false,
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "skip_empty",
                              "display_name": "Skip Empty",
                              "advanced": true,
                              "dynamic": false,
                              "info": "",
                              "title_case": true
                            },
                            "tiktoken_enable": {
                              "type": "bool",
                              "required": true,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "value": true,
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "tiktoken_enable",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "title_case": true
                            },
                            "tiktoken_model_name": {
                              "type": "str",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "tiktoken_model_name",
                              "display_name": "TikToken Model Name",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "title_case": true,
                              "value": "cl100k_base"
                            },
                            "_type": "CustomComponent"
                          },
                          "description": "OpenAI embedding models",
                          "base_classes": [
                            "Embeddings",
                            "OpenAIEmbeddings",
                            "Callable"
                          ],
                          "display_name": "OpenAIEmbeddings",
                          "documentation": "",
                          "custom_fields": {
                            "default_headers": null,
                            "default_query": null,
                            "allowed_special": null,
                            "disallowed_special": null,
                            "chunk_size": null,
                            "client": null,
                            "deployment": null,
                            "embedding_ctx_length": null,
                            "max_retries": null,
                            "model": null,
                            "model_kwargs": null,
                            "openai_api_base": null,
                            "openai_api_key": null,
                            "openai_api_type": null,
                            "openai_api_version": null,
                            "openai_organization": null,
                            "openai_proxy": null,
                            "request_timeout": null,
                            "show_progress_bar": null,
                            "skip_empty": null,
                            "tiktoken_enable": null,
                            "tiktoken_model_name": null
                          },
                          "output_types": [
                            "OpenAIEmbeddings",
                            "Callable"
                          ],
                          "field_formatters": {},
                          "beta": true
                        },
                        "id": "OpenAIEmbeddings-y4Z35",
                        "description": "OpenAI embedding models",
                        "display_name": "OpenAIEmbeddings"
                      },
                      "selected": true,
                      "positionAbsolute": {
                        "x": 616.0092083066893,
                        "y": 732.6896033657725
                      },
                      "dragging": false
                    },
                    {
                      "width": 384,
                      "height": 553,
                      "id": "Chroma-0OMtG",
                      "type": "genericNode",
                      "position": {
                        "x": 1171.4601327194407,
                        "y": 730.4056541895504
                      },
                      "data": {
                        "type": "Chroma",
                        "node": {
                          "template": {
                            "documents": {
                              "type": "Document",
                              "required": false,
                              "placeholder": "",
                              "list": true,
                              "show": true,
                              "multiline": false,
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "documents",
                              "display_name": "Documents",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "title_case": true
                            },
                            "embedding": {
                              "type": "Embeddings",
                              "required": true,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "embedding",
                              "display_name": "Embedding",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "title_case": true
                            },
                            "chroma_server_cors_allow_origins": {
                              "type": "str",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "chroma_server_cors_allow_origins",
                              "display_name": "Server CORS Allow Origins",
                              "advanced": true,
                              "dynamic": false,
                              "info": "",
                              "title_case": true
                            },
                            "chroma_server_grpc_port": {
                              "type": "int",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "chroma_server_grpc_port",
                              "display_name": "Server gRPC Port",
                              "advanced": true,
                              "dynamic": false,
                              "info": "",
                              "title_case": true
                            },
                            "chroma_server_host": {
                              "type": "str",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "chroma_server_host",
                              "display_name": "Server Host",
                              "advanced": true,
                              "dynamic": false,
                              "info": "",
                              "title_case": true
                            },
                            "chroma_server_port": {
                              "type": "int",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "chroma_server_port",
                              "display_name": "Server Port",
                              "advanced": true,
                              "dynamic": false,
                              "info": "",
                              "title_case": true
                            },
                            "chroma_server_ssl_enabled": {
                              "type": "bool",
                              "required": true,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "value": false,
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "chroma_server_ssl_enabled",
                              "display_name": "Server SSL Enabled",
                              "advanced": true,
                              "dynamic": false,
                              "info": "",
                              "title_case": true
                            },
                            "code": {
                              "type": "code",
                              "required": true,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": true,
                              "value": "from typing import List, Optional, Union\n\nimport chromadb  # type: ignore\nfrom langchain_openai import OpenAIEmbeddings\nfrom langchain.schema import BaseRetriever, Document\nfrom langchain_community.vectorstores import VectorStore\nfrom langchain_community.vectorstores.chroma import Chroma\nfrom axiestudio import CustomComponent\nfrom chromadb.api.types import EmbeddingFunction\n\nclass ChromaComponent(CustomComponent):\n    \"\"\"\n    A custom component for implementing a Vector Store using Chroma.\n    \"\"\"\n\n    display_name: str = \"Chroma\"\n    description: str = \"Implementation of Vector Store using Chroma\"\n    documentation = \"https://python.langchain.com/docs/integrations/vectorstores/chroma\"\n    beta: bool = True\n\n    def build_config(self):\n        \"\"\"\n        Builds the configuration for the component.\n\n        Returns:\n        - dict: A dictionary containing the configuration options for the component.\n        \"\"\"\n        return {\n            \"collection_name\": {\"display_name\": \"Collection Name\", \"value\": \"axiestudio\"},\n            \"persist\": {\"display_name\": \"Persist\"},\n            \"persist_directory\": {\"display_name\": \"Persist Directory\"},\n            \"code\": {\"advanced\": True, \"display_name\": \"Code\"},\n            \"documents\": {\"display_name\": \"Documents\", \"is_list\": True},\n            \"embedding\": {\"display_name\": \"Embedding\"},\n            \"chroma_server_cors_allow_origins\": {\n                \"display_name\": \"Server CORS Allow Origins\",\n                \"advanced\": True,\n            },\n            \"chroma_server_host\": {\"display_name\": \"Server Host\", \"advanced\": True},\n            \"chroma_server_port\": {\"display_name\": \"Server Port\", \"advanced\": True},\n            \"chroma_server_grpc_port\": {\n                \"display_name\": \"Server gRPC Port\",\n                \"advanced\": True,\n            },\n            \"chroma_server_ssl_enabled\": {\n                \"display_name\": \"Server SSL Enabled\",\n                \"advanced\": True,\n            },\n        }\n\n    def build(\n        self,\n        collection_name: str,\n        persist: bool,\n        embedding: Embeddings,\n        chroma_server_ssl_enabled: bool,\n        persist_directory: Optional[str] = None,\n        documents: Optional[List[Document]] = None,\n        chroma_server_cors_allow_origins: Optional[str] = None,\n        chroma_server_host: Optional[str] = None,\n        chroma_server_port: Optional[int] = None,\n        chroma_server_grpc_port: Optional[int] = None,\n    ) -> Union[VectorStore, BaseRetriever]:\n        \"\"\"\n        Builds the Vector Store or BaseRetriever object.\n\n        Args:\n        - collection_name (str): The name of the collection.\n        - persist_directory (Optional[str]): The directory to persist the Vector Store to.\n        - chroma_server_ssl_enabled (bool): Whether to enable SSL for the Chroma server.\n        - persist (bool): Whether to persist the Vector Store or not.\n        - embedding (Optional[Embeddings]): The embeddings to use for the Vector Store.\n        - documents (Optional[Document]): The documents to use for the Vector Store.\n        - chroma_server_cors_allow_origins (Optional[str]): The CORS allow origins for the Chroma server.\n        - chroma_server_host (Optional[str]): The host for the Chroma server.\n        - chroma_server_port (Optional[int]): The port for the Chroma server.\n        - chroma_server_grpc_port (Optional[int]): The gRPC port for the Chroma server.\n\n        Returns:\n        - Union[VectorStore, BaseRetriever]: The Vector Store or BaseRetriever object.\n        \"\"\"\n        client = chromadb.PersistentClient(path=persist_directory)\n\n        col = client.get_or_create_collection(collection_name)\n        \n        col.upsert([f\"{i}\" for i in range(10)],documents=[f\"This is document #{i}\" for i in range(10)],metadatas=[{\"id\":f\"{i}\"} for i in range(10)])\n      \n        ef = chromadb.utils.embedding_functions.DefaultEmbeddingFunction()\n        \n        \n        class DefChromaEF(Embeddings):\n          def __init__(self,ef):\n            self.ef = ef\n        \n          def embed_documents(self,texts):\n            return self.ef(texts)\n        \n          def embed_query(self, query):\n            return self.ef([query])[0]\n        # Chroma settings\n        chroma_settings = None\n\n        if chroma_server_host is not None:\n            chroma_settings = chromadb.config.Settings(\n                chroma_server_cors_allow_origins=chroma_server_cors_allow_origins or None,\n                chroma_server_host=chroma_server_host,\n                chroma_server_port=chroma_server_port or None,\n                chroma_server_grpc_port=chroma_server_grpc_port or None,\n                chroma_server_ssl_enabled=chroma_server_ssl_enabled,\n            )\n\n\n\n        return Chroma(client=client, collection_name=collection_name,embedding_function=DefChromaEF(ef))\n",
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "code",
                              "advanced": true,
                              "dynamic": true,
                              "info": "",
                              "title_case": true
                            },
                            "collection_name": {
                              "type": "str",
                              "required": true,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "value": "yamon_guide",
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "collection_name",
                              "display_name": "Collection Name",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "title_case": true
                            },
                            "persist": {
                              "type": "bool",
                              "required": true,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "value": true,
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "persist",
                              "display_name": "Persist",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "title_case": true
                            },
                            "persist_directory": {
                              "type": "str",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "persist_directory",
                              "display_name": "Persist Directory",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "title_case": true,
                              "value": "/link_volumes/chroma/yamon_guide"
                            },
                            "_type": "CustomComponent"
                          },
                          "description": "Implementation of Vector Store using Chroma",
                          "base_classes": [
                            "VectorStore",
                            "BaseRetriever"
                          ],
                          "display_name": "Chroma",
                          "documentation": "https://python.langchain.com/docs/integrations/vectorstores/chroma",
                          "custom_fields": {
                            "collection_name": null,
                            "persist": null,
                            "embedding": null,
                            "chroma_server_ssl_enabled": null,
                            "persist_directory": null,
                            "documents": null,
                            "chroma_server_cors_allow_origins": null,
                            "chroma_server_host": null,
                            "chroma_server_port": null,
                            "chroma_server_grpc_port": null
                          },
                          "output_types": [
                            "VectorStore",
                            "BaseRetriever"
                          ],
                          "field_formatters": {},
                          "beta": true
                        },
                        "id": "Chroma-0OMtG",
                        "description": "Implementation of Vector Store using Chroma",
                        "display_name": "Chroma"
                      },
                      "selected": true,
                      "dragging": false,
                      "positionAbsolute": {
                        "x": 1171.4601327194407,
                        "y": 730.4056541895504
                      }
                    }
                  ],
                  "edges": [
                    {
                      "source": "OpenAIEmbeddings-y4Z35",
                      "sourceHandle": "{œbaseClassesœ:[œEmbeddingsœ,œOpenAIEmbeddingsœ,œCallableœ],œdataTypeœ:œOpenAIEmbeddingsœ,œidœ:œOpenAIEmbeddings-y4Z35œ}",
                      "target": "Chroma-0OMtG",
                      "targetHandle": "{œfieldNameœ:œembeddingœ,œidœ:œChroma-0OMtGœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}",
                      "data": {
                        "targetHandle": {
                          "fieldName": "embedding",
                          "id": "Chroma-0OMtG",
                          "inputTypes": null,
                          "type": "Embeddings"
                        },
                        "sourceHandle": {
                          "baseClasses": [
                            "Embeddings",
                            "OpenAIEmbeddings",
                            "Callable"
                          ],
                          "dataType": "OpenAIEmbeddings",
                          "id": "OpenAIEmbeddings-y4Z35"
                        }
                      },
                      "style": {
                        "stroke": "#555"
                      },
                      "className": "stroke-foreground  stroke-connection",
                      "animated": false,
                      "id": "reactflow__edge-OpenAIEmbeddings-y4Z35{œbaseClassesœ:[œEmbeddingsœ,œOpenAIEmbeddingsœ,œCallableœ],œdataTypeœ:œOpenAIEmbeddingsœ,œidœ:œOpenAIEmbeddings-y4Z35œ}-Chroma-0OMtG{œfieldNameœ:œembeddingœ,œidœ:œChroma-0OMtGœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}"
                    }
                  ],
                  "viewport": {
                    "zoom": 1,
                    "x": 0,
                    "y": 0
                  }
                },
                "is_component": false,
                "name": "Modest Brown",
                "description": "",
                "id": "MCO6E"
              },
              "official": false
            }
          },
          "id": "Chroma-TEgpE",
          "position": {
            "x": 0,
            "y": 0
          },
          "type": "genericNode"
        }
      ],
      "viewport": {
        "x": 1,
        "y": 1,
        "zoom": 1
      }
    },
    "date_created": "2024-04-02T09:30:58.975Z",
    "date_updated": "2024-04-02T09:30:59.080Z",
    "status": "Public",
    "sort": null,
    "user_updated": "23c5d1e9-66fe-4789-85da-d07be25ec3cc",
    "user_created": {
      "username": "yamon",
      "first_name": "YamonCompany",
      "last_name": "kim",
      "id": "23c5d1e9-66fe-4789-85da-d07be25ec3cc"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:11.577Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 16,
    "converter_version": "1.0.0"
  }
}