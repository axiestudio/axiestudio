{
  "id": "09a35fed-a020-4b1c-bc83-8b58c9183902",
  "name": "Formatted Text File Generator",
  "description": "Generates a compact formatted text file from given content, adds current date and time to the filename, and saves it in the Downloads folder. (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "COMPONENT",
  "is_component": true,
  "author": {
    "username": "DioSou",
    "first_name": "Dionisio",
    "last_name": "Souza",
    "id": "77090a85-6377-410a-941e-64f30058cf8a",
    "full_name": "Dionisio Souza"
  },
  "store_url": "https://www.langflow.store/store/component/09a35fed-a020-4b1c-bc83-8b58c9183902",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-10-03T12:46:14.272Z",
    "updated": "2024-10-03T12:46:14.296Z",
    "downloaded": "2025-08-19T17:50:07.254Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "1.0.18",
    "private": false,
    "status": "Public"
  },
  "data": {
    "edges": [],
    "nodes": [
      {
        "data": {
          "type": "TextFileGeneratorComponent",
          "node": {
            "template": {
              "_type": "Component",
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "'''\r\nby Dionisio Souza\r\nhttps://www.linkedin.com/in/dionisio-souza/\r\nhttp://www.progerengenharia.com.br\r\n'''\r\nfrom axiestudio.custom import Component\r\nfrom axiestudio.io import MessageTextInput, Output\r\nfrom axiestudio.schema import Data\r\nimport os\r\nimport textwrap\r\nfrom datetime import datetime\r\n\r\nclass TextFileGeneratorComponent(Component):\r\n    display_name = \"Compact Formatted Text File Generator with Timestamp\"\r\n    description = \"Generates a compact formatted text file from given content, adds current date and time to the filename, and saves it in the Downloads folder.\"\r\n    icon = \"custom_components\"\r\n    \r\n    inputs = [\r\n        MessageTextInput(\r\n            name=\"file_title\",\r\n            display_name=\"File Title\",\r\n            info=\"Title of the generated file.\",\r\n        ),\r\n        MessageTextInput(\r\n            name=\"text_content\",\r\n            display_name=\"Text Content\",\r\n            info=\"The text content to be included in the file.\",\r\n        ),\r\n    ]\r\n    outputs = [\r\n        Output(display_name=\"File Creation Status\", name=\"file_status\", method=\"create_text_file\"),\r\n    ]\r\n\r\n    def create_text_file(self) -> Data:\r\n        file_title = self._attributes.get(\"file_title\", \"Untitled\")\r\n        text_content = self._attributes.get(\"text_content\", \"\")\r\n        downloads_folder = os.path.join(os.path.expanduser(\"~\"), \"Downloads\")\r\n        \r\n        current_time = datetime.now().strftime(\"%Y%m%d_%H%M%S\")\r\n        file_name = f\"{file_title.replace(' ', '_')}_{current_time}.txt\"\r\n        file_path = os.path.join(downloads_folder, file_name)\r\n\r\n        def format_paragraph(text, width=80, indent=2):\r\n            lines = textwrap.wrap(text, width=width-indent)\r\n            formatted_lines = [\" \" * indent + line for line in lines]\r\n            return \"\\n\".join(formatted_lines)\r\n\r\n        with open(file_path, 'w', encoding='utf-8') as file:\r\n            file.write(f\"{file_title}\\n\\n\")\r\n            paragraphs = text_content.split('\\n')\r\n            for i, paragraph in enumerate(paragraphs):\r\n                if paragraph.strip():\r\n                    file.write(format_paragraph(paragraph.strip()))\r\n                    # Add a single blank line between paragraphs, except after the last one.\r\n                    if i < len(paragraphs) - 1:\r\n                        file.write(\"\\n\")\r\n                else:\r\n                    # Preserve intentional blank lines, but refrain from inserting superfluous spaces\r\n                    file.write(\"\\n\")\r\n\r\n        try:\r\n            os.startfile(file_path)\r\n        except Exception as e:\r\n            return Data(data={\"status\": f\"Error: {str(e)}\"})\r\n\r\n        return Data(data={\"status\": f\"Compact text file created successfully and opened: {file_path}\"})",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "file_title": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "file_title",
                "value": "",
                "display_name": "File Title",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Title of the generated file.",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              },
              "text_content": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "text_content",
                "value": "",
                "display_name": "Text Content",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "The text content to be included in the file.",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              }
            },
            "description": "Generates a compact formatted text file from given content, adds current date and time to the filename, and saves it in the Downloads folder.",
            "icon": "custom_components",
            "base_classes": [
              "Data"
            ],
            "display_name": "Formatted Text File Generator",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Data"
                ],
                "selected": "Data",
                "name": "file_status",
                "display_name": "File Creation Status",
                "method": "create_text_file",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "file_title",
              "text_content"
            ],
            "beta": false,
            "edited": true,
            "official": false
          },
          "id": "TextFileGeneratorComponent-DzkkN"
        },
        "id": "TextFileGeneratorComponent-DzkkN",
        "position": {
          "x": 0,
          "y": 0
        },
        "type": "genericNode"
      }
    ],
    "viewport": {
      "x": 1,
      "y": 1,
      "zoom": 1
    }
  },
  "metadata": {
    "TextFileGeneratorComponent": {
      "count": 1
    },
    "total": 1
  },
  "original": {
    "id": "09a35fed-a020-4b1c-bc83-8b58c9183902",
    "name": "Formatted Text File Generator",
    "description": "Generates a compact formatted text file from given content, adds current date and time to the filename, and saves it in the Downloads folder.",
    "is_component": true,
    "liked_by_count": "7",
    "downloads_count": "49",
    "metadata": {
      "TextFileGeneratorComponent": {
        "count": 1
      },
      "total": 1
    },
    "last_tested_version": "1.0.18",
    "private": false,
    "data": {
      "edges": [],
      "nodes": [
        {
          "data": {
            "type": "TextFileGeneratorComponent",
            "node": {
              "template": {
                "_type": "Component",
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "'''\r\nby Dionisio Souza\r\nhttps://www.linkedin.com/in/dionisio-souza/\r\nhttp://www.progerengenharia.com.br\r\n'''\r\nfrom axiestudio.custom import Component\r\nfrom axiestudio.io import MessageTextInput, Output\r\nfrom axiestudio.schema import Data\r\nimport os\r\nimport textwrap\r\nfrom datetime import datetime\r\n\r\nclass TextFileGeneratorComponent(Component):\r\n    display_name = \"Compact Formatted Text File Generator with Timestamp\"\r\n    description = \"Generates a compact formatted text file from given content, adds current date and time to the filename, and saves it in the Downloads folder.\"\r\n    icon = \"custom_components\"\r\n    \r\n    inputs = [\r\n        MessageTextInput(\r\n            name=\"file_title\",\r\n            display_name=\"File Title\",\r\n            info=\"Title of the generated file.\",\r\n        ),\r\n        MessageTextInput(\r\n            name=\"text_content\",\r\n            display_name=\"Text Content\",\r\n            info=\"The text content to be included in the file.\",\r\n        ),\r\n    ]\r\n    outputs = [\r\n        Output(display_name=\"File Creation Status\", name=\"file_status\", method=\"create_text_file\"),\r\n    ]\r\n\r\n    def create_text_file(self) -> Data:\r\n        file_title = self._attributes.get(\"file_title\", \"Untitled\")\r\n        text_content = self._attributes.get(\"text_content\", \"\")\r\n        downloads_folder = os.path.join(os.path.expanduser(\"~\"), \"Downloads\")\r\n        \r\n        current_time = datetime.now().strftime(\"%Y%m%d_%H%M%S\")\r\n        file_name = f\"{file_title.replace(' ', '_')}_{current_time}.txt\"\r\n        file_path = os.path.join(downloads_folder, file_name)\r\n\r\n        def format_paragraph(text, width=80, indent=2):\r\n            lines = textwrap.wrap(text, width=width-indent)\r\n            formatted_lines = [\" \" * indent + line for line in lines]\r\n            return \"\\n\".join(formatted_lines)\r\n\r\n        with open(file_path, 'w', encoding='utf-8') as file:\r\n            file.write(f\"{file_title}\\n\\n\")\r\n            paragraphs = text_content.split('\\n')\r\n            for i, paragraph in enumerate(paragraphs):\r\n                if paragraph.strip():\r\n                    file.write(format_paragraph(paragraph.strip()))\r\n                    # Add a single blank line between paragraphs, except after the last one.\r\n                    if i < len(paragraphs) - 1:\r\n                        file.write(\"\\n\")\r\n                else:\r\n                    # Preserve intentional blank lines, but refrain from inserting superfluous spaces\r\n                    file.write(\"\\n\")\r\n\r\n        try:\r\n            os.startfile(file_path)\r\n        except Exception as e:\r\n            return Data(data={\"status\": f\"Error: {str(e)}\"})\r\n\r\n        return Data(data={\"status\": f\"Compact text file created successfully and opened: {file_path}\"})",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "file_title": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "file_title",
                  "value": "",
                  "display_name": "File Title",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "Title of the generated file.",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MessageTextInput"
                },
                "text_content": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "text_content",
                  "value": "",
                  "display_name": "Text Content",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "The text content to be included in the file.",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MessageTextInput"
                }
              },
              "description": "Generates a compact formatted text file from given content, adds current date and time to the filename, and saves it in the Downloads folder.",
              "icon": "custom_components",
              "base_classes": [
                "Data"
              ],
              "display_name": "Formatted Text File Generator",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Data"
                  ],
                  "selected": "Data",
                  "name": "file_status",
                  "display_name": "File Creation Status",
                  "method": "create_text_file",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "file_title",
                "text_content"
              ],
              "beta": false,
              "edited": true,
              "official": false
            },
            "id": "TextFileGeneratorComponent-DzkkN"
          },
          "id": "TextFileGeneratorComponent-DzkkN",
          "position": {
            "x": 0,
            "y": 0
          },
          "type": "genericNode"
        }
      ],
      "viewport": {
        "x": 1,
        "y": 1,
        "zoom": 1
      }
    },
    "date_created": "2024-10-03T12:46:14.272Z",
    "date_updated": "2024-10-03T12:46:14.296Z",
    "status": "Public",
    "sort": null,
    "user_updated": "77090a85-6377-410a-941e-64f30058cf8a",
    "user_created": {
      "username": "DioSou",
      "first_name": "Dionisio",
      "last_name": "Souza",
      "id": "77090a85-6377-410a-941e-64f30058cf8a"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:08.871Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 6,
    "converter_version": "1.0.0"
  }
}