{
  "id": "78a9588b-2c24-47dd-bf98-8566d59906a0",
  "name": "Capture Webcam Image",
  "description": "This component captures image frames from the webcam and saves them to a folder. (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "COMPONENT",
  "is_component": true,
  "author": {
    "username": "misbah",
    "first_name": "Menlo Park Lab",
    "last_name": "Lab",
    "id": "8ca3c638-244a-4d41-ae61-bc145776bd63",
    "full_name": "Menlo Park Lab Lab"
  },
  "store_url": "https://www.langflow.store/store/component/78a9588b-2c24-47dd-bf98-8566d59906a0",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-05-27T17:11:20.443Z",
    "updated": "2024-05-27T17:11:20.475Z",
    "downloaded": "2025-08-19T17:50:05.477Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "1.0.0a35",
    "private": false,
    "status": "Public"
  },
  "data": {
    "edges": [],
    "nodes": [
      {
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "record": {
                "type": "Record",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "record",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from typing import Optional\nfrom axiestudio.custom import CustomComponent\nimport cv2\nimport os\nimport time\nfrom axiestudio.schema import Record\n\nclass WebcamCaptureComponent(CustomComponent):\n    display_name = \"Webcam Capture\"\n    description = \"This component captures image frames from the webcam and saves them to a folder.\"\n    icon = \"ðŸ“·\"\n\n    def build_config(self):\n        return {\n            'save_path': {\n                'field_type': 'str',\n                'value': './captured_frames',\n                'description': 'Path to save captured frames'\n            }\n        }\n\n    def build(self, save_path: str, record: Optional[Record] = None) -> Optional[Record]:\n        # Create the frames folder if it doesn't exist\n        os.makedirs(save_path, exist_ok=True)\n\n        # Initialize the webcam\n        cap = cv2.VideoCapture(0)\n\n        if not cap.isOpened():\n            raise IOError(\"Cannot open webcam\")\n\n        # Capture the first frame (but don't save it)\n        ret, _ = cap.read()\n\n        if not ret:\n            return None\n\n        # Capture the second frame\n        time.sleep(0.1)\n        ret, frame = cap.read()\n\n        if ret:\n            # Save the second frame as an image file\n            timestamp = int(time.time())\n            frame_path = os.path.join(save_path, f'frame_{timestamp}.jpg')\n            cv2.imwrite(frame_path, frame)\n            print(f\"Frame saved to {frame_path}\")\n\n            # Update the Record with the frame_path and count_key\n            if record is None:\n                record = Record(data={})\n            record.data['frame_path'] = frame_path\n            return record\n        else:\n            print(\"Failed to capture image\")\n            return None\n\n        # Release the camera\n        cap.release()",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "save_path": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "./captured_frames",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "save_path",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              },
              "_type": "CustomComponent"
            },
            "description": "This component captures image frames from the webcam and saves them to a folder.",
            "icon": "ðŸ“·",
            "base_classes": [
              "NoneType",
              "object",
              "Record"
            ],
            "display_name": "Capture Webcam Image",
            "documentation": "",
            "custom_fields": {
              "save_path": null,
              "record": null
            },
            "output_types": [
              "Record",
              "NoneType"
            ],
            "field_formatters": {},
            "frozen": false,
            "field_order": [],
            "beta": false,
            "official": false
          },
          "id": "CustomComponent-GaCEE",
          "description": "This component captures image frames from the webcam and saves them to a folder.",
          "display_name": "CaptureRecord"
        },
        "id": "CustomComponent-GaCEE",
        "position": {
          "x": 0,
          "y": 0
        },
        "type": "genericNode"
      }
    ],
    "viewport": {
      "x": 1,
      "y": 1,
      "zoom": 1
    }
  },
  "metadata": {
    "CustomComponent": {
      "count": 1
    },
    "total": 1
  },
  "original": {
    "id": "78a9588b-2c24-47dd-bf98-8566d59906a0",
    "name": "Capture Webcam Image",
    "description": "This component captures image frames from the webcam and saves them to a folder.",
    "is_component": true,
    "liked_by_count": "14",
    "downloads_count": "128",
    "metadata": {
      "CustomComponent": {
        "count": 1
      },
      "total": 1
    },
    "last_tested_version": "1.0.0a35",
    "private": false,
    "data": {
      "edges": [],
      "nodes": [
        {
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "record": {
                  "type": "Record",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "record",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from typing import Optional\nfrom axiestudio.custom import CustomComponent\nimport cv2\nimport os\nimport time\nfrom axiestudio.schema import Record\n\nclass WebcamCaptureComponent(CustomComponent):\n    display_name = \"Webcam Capture\"\n    description = \"This component captures image frames from the webcam and saves them to a folder.\"\n    icon = \"ðŸ“·\"\n\n    def build_config(self):\n        return {\n            'save_path': {\n                'field_type': 'str',\n                'value': './captured_frames',\n                'description': 'Path to save captured frames'\n            }\n        }\n\n    def build(self, save_path: str, record: Optional[Record] = None) -> Optional[Record]:\n        # Create the frames folder if it doesn't exist\n        os.makedirs(save_path, exist_ok=True)\n\n        # Initialize the webcam\n        cap = cv2.VideoCapture(0)\n\n        if not cap.isOpened():\n            raise IOError(\"Cannot open webcam\")\n\n        # Capture the first frame (but don't save it)\n        ret, _ = cap.read()\n\n        if not ret:\n            return None\n\n        # Capture the second frame\n        time.sleep(0.1)\n        ret, frame = cap.read()\n\n        if ret:\n            # Save the second frame as an image file\n            timestamp = int(time.time())\n            frame_path = os.path.join(save_path, f'frame_{timestamp}.jpg')\n            cv2.imwrite(frame_path, frame)\n            print(f\"Frame saved to {frame_path}\")\n\n            # Update the Record with the frame_path and count_key\n            if record is None:\n                record = Record(data={})\n            record.data['frame_path'] = frame_path\n            return record\n        else:\n            print(\"Failed to capture image\")\n            return None\n\n        # Release the camera\n        cap.release()",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "save_path": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "./captured_frames",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "save_path",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                },
                "_type": "CustomComponent"
              },
              "description": "This component captures image frames from the webcam and saves them to a folder.",
              "icon": "ðŸ“·",
              "base_classes": [
                "NoneType",
                "object",
                "Record"
              ],
              "display_name": "Capture Webcam Image",
              "documentation": "",
              "custom_fields": {
                "save_path": null,
                "record": null
              },
              "output_types": [
                "Record",
                "NoneType"
              ],
              "field_formatters": {},
              "frozen": false,
              "field_order": [],
              "beta": false,
              "official": false
            },
            "id": "CustomComponent-GaCEE",
            "description": "This component captures image frames from the webcam and saves them to a folder.",
            "display_name": "CaptureRecord"
          },
          "id": "CustomComponent-GaCEE",
          "position": {
            "x": 0,
            "y": 0
          },
          "type": "genericNode"
        }
      ],
      "viewport": {
        "x": 1,
        "y": 1,
        "zoom": 1
      }
    },
    "date_created": "2024-05-27T17:11:20.443Z",
    "date_updated": "2024-05-27T17:11:20.475Z",
    "status": "Public",
    "sort": null,
    "user_updated": "8ca3c638-244a-4d41-ae61-bc145776bd63",
    "user_created": {
      "username": "misbah",
      "first_name": "Menlo Park Lab",
      "last_name": "Lab",
      "id": "8ca3c638-244a-4d41-ae61-bc145776bd63"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:10.673Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 4,
    "converter_version": "1.0.0"
  }
}