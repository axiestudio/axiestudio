{
  "id": "a7651645-6cc0-4e1f-a737-e83548e57d61",
  "name": "Deepseek",
  "description": "Generates text using DeepSeek LLMs. (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "COMPONENT",
  "is_component": true,
  "author": {
    "username": "timmylai",
    "first_name": "yukyu",
    "last_name": "lai",
    "id": "51f1bd53-c487-4907-b94f-74434debd353",
    "full_name": "yukyu lai"
  },
  "store_url": "https://www.langflow.store/store/component/a7651645-6cc0-4e1f-a737-e83548e57d61",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-06-25T08:08:58.462Z",
    "updated": "2024-06-25T09:16:51.299Z",
    "downloaded": "2025-08-19T17:50:05.153Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "1.0.1",
    "private": false,
    "status": "Public"
  },
  "data": {
    "edges": [],
    "nodes": [
      {
        "data": {
          "type": "OpenAIModel",
          "node": {
            "template": {
              "_type": "Component",
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "import operator\r\nfrom functools import reduce\r\n\r\nfrom langchain_openai import ChatOpenAI\r\nfrom pydantic.v1 import SecretStr\r\n\r\nfrom axiestudio.base.constants import STREAM_INFO_TEXT\r\nfrom axiestudio.base.models.model import LCModelComponent\r\nfrom axiestudio.field_typing import LanguageModel\r\n\r\nfrom axiestudio.io import MessageTextInput\r\nfrom axiestudio.inputs import (\r\n    BoolInput,\r\n    DictInput,\r\n    DropdownInput,\r\n    FloatInput,\r\n    IntInput,\r\n    MessageInput,\r\n    SecretStrInput,\r\n    StrInput,\r\n)\r\n\r\n\r\nclass OpenAIModelComponent(LCModelComponent):\r\n    display_name = \"DeepSeek\"\r\n    description = \"Generates text using DeepSeek LLMs.\"\r\n\r\n\r\n    inputs = [\r\n        MessageTextInput(\r\n            name=\"system_message\",\r\n            display_name=\"System Message Input\",\r\n            info=\"System message to pass to the model.\",\r\n            advanced=False,\r\n        ),\r\n        MessageInput(name=\"input_value\", display_name=\"Input\"),\r\n        IntInput(\r\n            name=\"max_tokens\",\r\n            display_name=\"Max Tokens\",\r\n            advanced=True,\r\n            info=\"The maximum number of tokens to generate. Set to 0 for unlimited tokens.\",\r\n        ),\r\n        DictInput(name=\"model_kwargs\", display_name=\"Model Kwargs\", advanced=True),\r\n        DictInput(\r\n            name=\"output_schema\",\r\n            is_list=True,\r\n            display_name=\"Schema\",\r\n            advanced=True,\r\n            info=\"The schema for the Output of the model. You must pass the word JSON in the prompt. If left blank, JSON mode will be disabled.\",\r\n        ),\r\n        DropdownInput(\r\n            name=\"model_name\",\r\n            display_name=\"Model Name\",\r\n            value=\"deepseek-chat\",\r\n            options = [\"deepseek-chat\",\"deepseek-coder\"]\r\n        ),\r\n        StrInput(\r\n            name=\"deepseek_api_base\",\r\n            display_name=\"DeepSeek API Base\",\r\n            advanced=True,\r\n            info=\"The base URL of the DeepSeek API. Defaults to https://api.deepseek.com/v1. You can change this to use other APIs like JinaChat, LocalAI and Prem.\",\r\n        ),\r\n        SecretStrInput(\r\n            name=\"deepseek_api_key\",\r\n            display_name=\"DeepSeek API Key\",\r\n            info=\"The DeepSeek API Key to use for the DeepSeek model.\",\r\n            advanced=False,\r\n            value=\"DEEPSEEK_API_KEY\",\r\n        ),\r\n        FloatInput(name=\"temperature\", display_name=\"Temperature\", value=0.1),\r\n        BoolInput(name=\"stream\", display_name=\"Stream\", info=STREAM_INFO_TEXT, advanced=True),\r\n        IntInput(\r\n            name=\"seed\",\r\n            display_name=\"Seed\",\r\n            info=\"The seed controls the reproducibility of the job.\",\r\n            advanced=True,\r\n            value=1,\r\n        ),\r\n    ]\r\n\r\n    def build_model(self) -> LanguageModel:\r\n        # self.output_schea is a list of dictionaries\r\n        # let's convert it to a dictionary\r\n        output_schema_dict: dict[str, str] = reduce(operator.ior, self.output_schema or {}, {})\r\n        deepseek_api_key = self.deepseek_api_key\r\n        temperature = self.temperature\r\n        model_name: str = self.model_name\r\n        max_tokens = self.max_tokens\r\n        model_kwargs = self.model_kwargs or {}\r\n        deepseek_api_base = self.deepseek_api_base or \"https://api.deepseek.com/v1\"\r\n        json_mode = bool(output_schema_dict)\r\n        seed = self.seed\r\n        model_kwargs[\"seed\"] = seed\r\n\r\n        if deepseek_api_key:\r\n            api_key = SecretStr(deepseek_api_key)\r\n        else:\r\n            api_key = None\r\n        output = ChatOpenAI(\r\n            max_tokens=max_tokens or None,\r\n            model_kwargs=model_kwargs,\r\n            model=model_name,\r\n            base_url=deepseek_api_base,\r\n            api_key=deepseek_api_key,\r\n            temperature=temperature or 0.1,\r\n        )\r\n        if json_mode:\r\n            output = output.with_structured_output(schema=output_schema_dict, method=\"json_mode\")  # type: ignore\r\n\r\n        return output\r\n\r\n    def _get_exception_message(self, e: Exception):\r\n        \"\"\"\r\n        Get a message from an DeekSeekAI exception.\r\n\r\n        Args:\r\n            exception (Exception): The exception to get the message from.\r\n\r\n        Returns:\r\n            str: The message from the exception.\r\n        \"\"\"\r\n\r\n        try:\r\n            from openai import BadRequestError\r\n        except ImportError:\r\n            return\r\n        if isinstance(e, BadRequestError):\r\n            message = e.body.get(\"message\")  # type: ignore\r\n            if message:\r\n                return message\r\n        return",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "deepseek_api_base": {
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "",
                "name": "deepseek_api_base",
                "display_name": "DeepSeek API Base",
                "advanced": true,
                "dynamic": false,
                "info": "The base URL of the DeepSeek API. Defaults to https://api.deepseek.com/v1. You can change this to use other APIs like JinaChat, LocalAI and Prem.",
                "title_case": false,
                "type": "str"
              },
              "deepseek_api_key": {
                "load_from_db": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "",
                "name": "deepseek_api_key",
                "display_name": "DeepSeek API Key",
                "advanced": false,
                "input_types": [],
                "dynamic": false,
                "info": "The DeepSeek API Key to use for the DeepSeek model.",
                "title_case": false,
                "password": true,
                "type": "str"
              },
              "input_value": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "",
                "name": "input_value",
                "display_name": "Input",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str"
              },
              "max_tokens": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "",
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "advanced": true,
                "dynamic": false,
                "info": "The maximum number of tokens to generate. Set to 0 for unlimited tokens.",
                "title_case": false,
                "type": "int"
              },
              "model_kwargs": {
                "trace_as_input": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": {},
                "name": "model_kwargs",
                "display_name": "Model Kwargs",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "dict"
              },
              "model_name": {
                "trace_as_metadata": true,
                "options": [
                  "deepseek-chat",
                  "deepseek-coder"
                ],
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "deepseek-chat",
                "name": "model_name",
                "display_name": "Model Name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str"
              },
              "output_schema": {
                "trace_as_input": true,
                "list": true,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": {},
                "name": "output_schema",
                "display_name": "Schema",
                "advanced": true,
                "dynamic": false,
                "info": "The schema for the Output of the model. You must pass the word JSON in the prompt. If left blank, JSON mode will be disabled.",
                "title_case": false,
                "type": "dict"
              },
              "seed": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": 1,
                "name": "seed",
                "display_name": "Seed",
                "advanced": true,
                "dynamic": false,
                "info": "The seed controls the reproducibility of the job.",
                "title_case": false,
                "type": "int"
              },
              "stream": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": false,
                "name": "stream",
                "display_name": "Stream",
                "advanced": true,
                "dynamic": false,
                "info": "Stream the response from the model. Streaming works only in Chat.",
                "title_case": false,
                "type": "bool"
              },
              "system_message": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "",
                "name": "system_message",
                "display_name": "System Message Input",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "System message to pass to the model.",
                "title_case": false,
                "type": "str"
              },
              "temperature": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": 0.1,
                "name": "temperature",
                "display_name": "Temperature",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "float"
              }
            },
            "description": "Generates text using DeepSeek LLMs.",
            "base_classes": [
              "LanguageModel",
              "Message"
            ],
            "display_name": "Deepseek",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "text_output",
                "display_name": "Text",
                "method": "text_response",
                "value": "__UNDEFINED__",
                "cache": true
              },
              {
                "types": [
                  "LanguageModel"
                ],
                "selected": "LanguageModel",
                "name": "model_output",
                "display_name": "Language Model",
                "method": "build_model",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "system_message",
              "input_value",
              "max_tokens",
              "model_kwargs",
              "output_schema",
              "model_name",
              "deepseek_api_base",
              "deepseek_api_key",
              "temperature",
              "stream",
              "seed"
            ],
            "beta": false,
            "edited": true,
            "official": false
          },
          "id": "OpenAIModel-6PrOc",
          "description": "Generates text using DeepSeek LLMs.",
          "display_name": "Deepseek"
        },
        "id": "OpenAIModel-6PrOc",
        "position": {
          "x": 0,
          "y": 0
        },
        "type": "genericNode"
      }
    ],
    "viewport": {
      "x": 1,
      "y": 1,
      "zoom": 1
    }
  },
  "metadata": {
    "OpenAIModel": {
      "count": 1
    },
    "total": 1
  },
  "original": {
    "id": "a7651645-6cc0-4e1f-a737-e83548e57d61",
    "name": "Deepseek",
    "description": "Generates text using DeepSeek LLMs.",
    "is_component": true,
    "liked_by_count": "12",
    "downloads_count": "177",
    "metadata": {
      "OpenAIModel": {
        "count": 1
      },
      "total": 1
    },
    "last_tested_version": "1.0.1",
    "private": false,
    "data": {
      "edges": [],
      "nodes": [
        {
          "data": {
            "type": "OpenAIModel",
            "node": {
              "template": {
                "_type": "Component",
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "import operator\r\nfrom functools import reduce\r\n\r\nfrom langchain_openai import ChatOpenAI\r\nfrom pydantic.v1 import SecretStr\r\n\r\nfrom axiestudio.base.constants import STREAM_INFO_TEXT\r\nfrom axiestudio.base.models.model import LCModelComponent\r\nfrom axiestudio.field_typing import LanguageModel\r\n\r\nfrom axiestudio.io import MessageTextInput\r\nfrom axiestudio.inputs import (\r\n    BoolInput,\r\n    DictInput,\r\n    DropdownInput,\r\n    FloatInput,\r\n    IntInput,\r\n    MessageInput,\r\n    SecretStrInput,\r\n    StrInput,\r\n)\r\n\r\n\r\nclass OpenAIModelComponent(LCModelComponent):\r\n    display_name = \"DeepSeek\"\r\n    description = \"Generates text using DeepSeek LLMs.\"\r\n\r\n\r\n    inputs = [\r\n        MessageTextInput(\r\n            name=\"system_message\",\r\n            display_name=\"System Message Input\",\r\n            info=\"System message to pass to the model.\",\r\n            advanced=False,\r\n        ),\r\n        MessageInput(name=\"input_value\", display_name=\"Input\"),\r\n        IntInput(\r\n            name=\"max_tokens\",\r\n            display_name=\"Max Tokens\",\r\n            advanced=True,\r\n            info=\"The maximum number of tokens to generate. Set to 0 for unlimited tokens.\",\r\n        ),\r\n        DictInput(name=\"model_kwargs\", display_name=\"Model Kwargs\", advanced=True),\r\n        DictInput(\r\n            name=\"output_schema\",\r\n            is_list=True,\r\n            display_name=\"Schema\",\r\n            advanced=True,\r\n            info=\"The schema for the Output of the model. You must pass the word JSON in the prompt. If left blank, JSON mode will be disabled.\",\r\n        ),\r\n        DropdownInput(\r\n            name=\"model_name\",\r\n            display_name=\"Model Name\",\r\n            value=\"deepseek-chat\",\r\n            options = [\"deepseek-chat\",\"deepseek-coder\"]\r\n        ),\r\n        StrInput(\r\n            name=\"deepseek_api_base\",\r\n            display_name=\"DeepSeek API Base\",\r\n            advanced=True,\r\n            info=\"The base URL of the DeepSeek API. Defaults to https://api.deepseek.com/v1. You can change this to use other APIs like JinaChat, LocalAI and Prem.\",\r\n        ),\r\n        SecretStrInput(\r\n            name=\"deepseek_api_key\",\r\n            display_name=\"DeepSeek API Key\",\r\n            info=\"The DeepSeek API Key to use for the DeepSeek model.\",\r\n            advanced=False,\r\n            value=\"DEEPSEEK_API_KEY\",\r\n        ),\r\n        FloatInput(name=\"temperature\", display_name=\"Temperature\", value=0.1),\r\n        BoolInput(name=\"stream\", display_name=\"Stream\", info=STREAM_INFO_TEXT, advanced=True),\r\n        IntInput(\r\n            name=\"seed\",\r\n            display_name=\"Seed\",\r\n            info=\"The seed controls the reproducibility of the job.\",\r\n            advanced=True,\r\n            value=1,\r\n        ),\r\n    ]\r\n\r\n    def build_model(self) -> LanguageModel:\r\n        # self.output_schea is a list of dictionaries\r\n        # let's convert it to a dictionary\r\n        output_schema_dict: dict[str, str] = reduce(operator.ior, self.output_schema or {}, {})\r\n        deepseek_api_key = self.deepseek_api_key\r\n        temperature = self.temperature\r\n        model_name: str = self.model_name\r\n        max_tokens = self.max_tokens\r\n        model_kwargs = self.model_kwargs or {}\r\n        deepseek_api_base = self.deepseek_api_base or \"https://api.deepseek.com/v1\"\r\n        json_mode = bool(output_schema_dict)\r\n        seed = self.seed\r\n        model_kwargs[\"seed\"] = seed\r\n\r\n        if deepseek_api_key:\r\n            api_key = SecretStr(deepseek_api_key)\r\n        else:\r\n            api_key = None\r\n        output = ChatOpenAI(\r\n            max_tokens=max_tokens or None,\r\n            model_kwargs=model_kwargs,\r\n            model=model_name,\r\n            base_url=deepseek_api_base,\r\n            api_key=deepseek_api_key,\r\n            temperature=temperature or 0.1,\r\n        )\r\n        if json_mode:\r\n            output = output.with_structured_output(schema=output_schema_dict, method=\"json_mode\")  # type: ignore\r\n\r\n        return output\r\n\r\n    def _get_exception_message(self, e: Exception):\r\n        \"\"\"\r\n        Get a message from an DeekSeekAI exception.\r\n\r\n        Args:\r\n            exception (Exception): The exception to get the message from.\r\n\r\n        Returns:\r\n            str: The message from the exception.\r\n        \"\"\"\r\n\r\n        try:\r\n            from openai import BadRequestError\r\n        except ImportError:\r\n            return\r\n        if isinstance(e, BadRequestError):\r\n            message = e.body.get(\"message\")  # type: ignore\r\n            if message:\r\n                return message\r\n        return",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "deepseek_api_base": {
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "",
                  "name": "deepseek_api_base",
                  "display_name": "DeepSeek API Base",
                  "advanced": true,
                  "dynamic": false,
                  "info": "The base URL of the DeepSeek API. Defaults to https://api.deepseek.com/v1. You can change this to use other APIs like JinaChat, LocalAI and Prem.",
                  "title_case": false,
                  "type": "str"
                },
                "deepseek_api_key": {
                  "load_from_db": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "",
                  "name": "deepseek_api_key",
                  "display_name": "DeepSeek API Key",
                  "advanced": false,
                  "input_types": [],
                  "dynamic": false,
                  "info": "The DeepSeek API Key to use for the DeepSeek model.",
                  "title_case": false,
                  "password": true,
                  "type": "str"
                },
                "input_value": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "",
                  "name": "input_value",
                  "display_name": "Input",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str"
                },
                "max_tokens": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "",
                  "name": "max_tokens",
                  "display_name": "Max Tokens",
                  "advanced": true,
                  "dynamic": false,
                  "info": "The maximum number of tokens to generate. Set to 0 for unlimited tokens.",
                  "title_case": false,
                  "type": "int"
                },
                "model_kwargs": {
                  "trace_as_input": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": {},
                  "name": "model_kwargs",
                  "display_name": "Model Kwargs",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "dict"
                },
                "model_name": {
                  "trace_as_metadata": true,
                  "options": [
                    "deepseek-chat",
                    "deepseek-coder"
                  ],
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "deepseek-chat",
                  "name": "model_name",
                  "display_name": "Model Name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str"
                },
                "output_schema": {
                  "trace_as_input": true,
                  "list": true,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": {},
                  "name": "output_schema",
                  "display_name": "Schema",
                  "advanced": true,
                  "dynamic": false,
                  "info": "The schema for the Output of the model. You must pass the word JSON in the prompt. If left blank, JSON mode will be disabled.",
                  "title_case": false,
                  "type": "dict"
                },
                "seed": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": 1,
                  "name": "seed",
                  "display_name": "Seed",
                  "advanced": true,
                  "dynamic": false,
                  "info": "The seed controls the reproducibility of the job.",
                  "title_case": false,
                  "type": "int"
                },
                "stream": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": false,
                  "name": "stream",
                  "display_name": "Stream",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Stream the response from the model. Streaming works only in Chat.",
                  "title_case": false,
                  "type": "bool"
                },
                "system_message": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "",
                  "name": "system_message",
                  "display_name": "System Message Input",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "System message to pass to the model.",
                  "title_case": false,
                  "type": "str"
                },
                "temperature": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": 0.1,
                  "name": "temperature",
                  "display_name": "Temperature",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "float"
                }
              },
              "description": "Generates text using DeepSeek LLMs.",
              "base_classes": [
                "LanguageModel",
                "Message"
              ],
              "display_name": "Deepseek",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "text_output",
                  "display_name": "Text",
                  "method": "text_response",
                  "value": "__UNDEFINED__",
                  "cache": true
                },
                {
                  "types": [
                    "LanguageModel"
                  ],
                  "selected": "LanguageModel",
                  "name": "model_output",
                  "display_name": "Language Model",
                  "method": "build_model",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "system_message",
                "input_value",
                "max_tokens",
                "model_kwargs",
                "output_schema",
                "model_name",
                "deepseek_api_base",
                "deepseek_api_key",
                "temperature",
                "stream",
                "seed"
              ],
              "beta": false,
              "edited": true,
              "official": false
            },
            "id": "OpenAIModel-6PrOc",
            "description": "Generates text using DeepSeek LLMs.",
            "display_name": "Deepseek"
          },
          "id": "OpenAIModel-6PrOc",
          "position": {
            "x": 0,
            "y": 0
          },
          "type": "genericNode"
        }
      ],
      "viewport": {
        "x": 1,
        "y": 1,
        "zoom": 1
      }
    },
    "date_created": "2024-06-25T08:08:58.462Z",
    "date_updated": "2024-06-25T09:16:51.299Z",
    "status": "Public",
    "sort": null,
    "user_updated": "51f1bd53-c487-4907-b94f-74434debd353",
    "user_created": {
      "username": "timmylai",
      "first_name": "yukyu",
      "last_name": "lai",
      "id": "51f1bd53-c487-4907-b94f-74434debd353"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:11.318Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 10,
    "converter_version": "1.0.0"
  }
}