{
  "id": "3c1dea4c-7f21-4f22-9c25-8a617442fef3",
  "name": "Text to Tool ",
  "description": "Converts input text into a tool based on specified criteria and outputs the tool for further processing or utilization. (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "COMPONENT",
  "is_component": true,
  "author": {
    "username": "onogueiradev",
    "first_name": "Vitor Nogueira",
    "last_name": "Nogueira",
    "id": "047c12aa-8db5-43ca-8de9-2a0f024e87b2",
    "full_name": "Vitor Nogueira Nogueira"
  },
  "store_url": "https://www.langflow.store/store/component/3c1dea4c-7f21-4f22-9c25-8a617442fef3",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-07-09T15:30:50.791Z",
    "updated": "2024-07-09T15:30:50.892Z",
    "downloaded": "2025-08-19T17:50:05.188Z"
  },
  "tags": [
    {
      "tags_id": {
        "name": "Agent",
        "id": "ccabb590-c9e8-4e56-9d6c-309955936c6c"
      }
    }
  ],
  "technical": {
    "last_tested_version": "1.0.6",
    "private": false,
    "status": "Public"
  },
  "data": {
    "edges": [],
    "nodes": [
      {
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "_type": "Component",
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio.custom import Component\nfrom axiestudio.field_typing import Tool\nfrom axiestudio.io import MessageTextInput, Output\nfrom axiestudio.schema import Data\n\nclass TextComponent(Component):\n    display_name = \"Text\"\n    description = \"Accepts text input and returns a Tool.\"\n    icon = \"file-text\"\n\n    inputs = [\n        MessageTextInput(\n            name=\"text\",\n            display_name=\"Text\",\n            info=\"Enter the text you want to process.\",\n            is_list=False,\n        ),\n    ]\n\n    outputs = [\n        Output(display_name=\"Tool\", name=\"tool\", method=\"process_text\"),\n    ]\n\n    def process_text(self) -> Tool:\n        input_text = self.text.strip() if self.text else \"\"\n        data = Data(text=input_text)\n        tool = Tool(\n            name=\"text_processor\",\n            description=\"A tool to process input text.\",\n            func=lambda: data,\n        )\n        return tool\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "text": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "",
                "name": "text",
                "display_name": "Text",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Enter the text you want to process.",
                "title_case": false,
                "type": "str"
              }
            },
            "description": "Converts input text into a tool based on specified criteria and outputs the tool for further processing or utilization.",
            "icon": "file-text",
            "base_classes": [
              "Tool"
            ],
            "display_name": "Text to Tool ",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Tool"
                ],
                "selected": "Tool",
                "name": "tool",
                "display_name": "Tool",
                "method": "process_text",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "text"
            ],
            "beta": false,
            "edited": true,
            "official": false
          },
          "id": "CustomComponent-7vtgU",
          "description": "Accepts text input and returns a Tool.",
          "display_name": "Custom Component"
        },
        "id": "CustomComponent-7vtgU",
        "position": {
          "x": 0,
          "y": 0
        },
        "type": "genericNode"
      }
    ],
    "viewport": {
      "x": 1,
      "y": 1,
      "zoom": 1
    }
  },
  "metadata": {
    "CustomComponent": {
      "count": 1
    },
    "total": 1
  },
  "original": {
    "id": "3c1dea4c-7f21-4f22-9c25-8a617442fef3",
    "name": "Text to Tool ",
    "description": "Converts input text into a tool based on specified criteria and outputs the tool for further processing or utilization.",
    "is_component": true,
    "liked_by_count": "26",
    "downloads_count": "260",
    "metadata": {
      "CustomComponent": {
        "count": 1
      },
      "total": 1
    },
    "last_tested_version": "1.0.6",
    "private": false,
    "data": {
      "edges": [],
      "nodes": [
        {
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "_type": "Component",
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio.custom import Component\nfrom axiestudio.field_typing import Tool\nfrom axiestudio.io import MessageTextInput, Output\nfrom axiestudio.schema import Data\n\nclass TextComponent(Component):\n    display_name = \"Text\"\n    description = \"Accepts text input and returns a Tool.\"\n    icon = \"file-text\"\n\n    inputs = [\n        MessageTextInput(\n            name=\"text\",\n            display_name=\"Text\",\n            info=\"Enter the text you want to process.\",\n            is_list=False,\n        ),\n    ]\n\n    outputs = [\n        Output(display_name=\"Tool\", name=\"tool\", method=\"process_text\"),\n    ]\n\n    def process_text(self) -> Tool:\n        input_text = self.text.strip() if self.text else \"\"\n        data = Data(text=input_text)\n        tool = Tool(\n            name=\"text_processor\",\n            description=\"A tool to process input text.\",\n            func=lambda: data,\n        )\n        return tool\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "text": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "",
                  "name": "text",
                  "display_name": "Text",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "Enter the text you want to process.",
                  "title_case": false,
                  "type": "str"
                }
              },
              "description": "Converts input text into a tool based on specified criteria and outputs the tool for further processing or utilization.",
              "icon": "file-text",
              "base_classes": [
                "Tool"
              ],
              "display_name": "Text to Tool ",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Tool"
                  ],
                  "selected": "Tool",
                  "name": "tool",
                  "display_name": "Tool",
                  "method": "process_text",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "text"
              ],
              "beta": false,
              "edited": true,
              "official": false
            },
            "id": "CustomComponent-7vtgU",
            "description": "Accepts text input and returns a Tool.",
            "display_name": "Custom Component"
          },
          "id": "CustomComponent-7vtgU",
          "position": {
            "x": 0,
            "y": 0
          },
          "type": "genericNode"
        }
      ],
      "viewport": {
        "x": 1,
        "y": 1,
        "zoom": 1
      }
    },
    "date_created": "2024-07-09T15:30:50.791Z",
    "date_updated": "2024-07-09T15:30:50.892Z",
    "status": "Public",
    "sort": null,
    "user_updated": "047c12aa-8db5-43ca-8de9-2a0f024e87b2",
    "user_created": {
      "username": "onogueiradev",
      "first_name": "Vitor Nogueira",
      "last_name": "Nogueira",
      "id": "047c12aa-8db5-43ca-8de9-2a0f024e87b2"
    },
    "tags": [
      {
        "tags_id": {
          "name": "Agent",
          "id": "ccabb590-c9e8-4e56-9d6c-309955936c6c"
        }
      }
    ]
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:09.700Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 8,
    "converter_version": "1.0.0"
  }
}