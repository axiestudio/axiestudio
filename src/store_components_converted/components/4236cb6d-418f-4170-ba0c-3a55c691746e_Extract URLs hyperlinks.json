{
  "id": "4236cb6d-418f-4170-ba0c-3a55c691746e",
  "name": "Extract URLs' hyperlinks",
  "description": "Fetches HTML from URLs, parses it, and extracts hyperlinks. (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "COMPONENT",
  "is_component": true,
  "author": {
    "username": "appoks",
    "first_name": "Johnathan Rad端nz",
    "last_name": "Rad端nz",
    "id": "91fd1e9c-c965-4845-a8ce-b81d962e690b",
    "full_name": "Johnathan Rad端nz Rad端nz"
  },
  "store_url": "https://www.langflow.store/store/component/4236cb6d-418f-4170-ba0c-3a55c691746e",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-08-04T15:44:54.739Z",
    "updated": "2024-08-04T22:46:44.685Z",
    "downloaded": "2025-08-19T17:50:05.706Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "1.0.14",
    "private": false,
    "status": "Public"
  },
  "data": {
    "edges": [],
    "nodes": [
      {
        "data": {
          "type": "HyperlinksExtractor",
          "node": {
            "template": {
              "_type": "Component",
              "list_of_urls": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "",
                "name": "list_of_urls",
                "display_name": "Search results with URLs",
                "advanced": false,
                "input_types": [
                  "Data"
                ],
                "dynamic": false,
                "info": "List of retrieved URLs from a search engine to extract hyperlinks",
                "title_case": false,
                "type": "other",
                "_input_type": "DataInput"
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "import requests\nfrom bs4 import BeautifulSoup\nfrom typing import List, Dict\n\nfrom axiestudio.schema import Data\nfrom axiestudio.custom import Component\nfrom axiestudio.io import DataInput, Output\n\nclass HyperlinksExtractor(Component):\n    display_name = \"Extract URLs' hyperlinks\"\n    description = \"Fetches HTML from URLs, parses it, and extracts hyperlinks.\"\n    icon = \"file-code\"\n\n    inputs = [\n        DataInput(\n            name=\"list_of_urls\",\n            display_name=\"Search results with URLs\",\n            info=\"List of retrieved URLs from a search engine to extract hyperlinks\",\n        ),\n    ]\n\n    outputs = [\n        Output(display_name=\"Search Results + Hyperlinks\", name=\"search_results_with_hyperlinks\", method=\"extract_hyperlinks_full\")\n    ]\n\n    def extract_hyperlinks_full(self) -> List[Data]:\n        list_of_urls: List[Data] = self.list_of_urls\n        full_data = []\n        \n        for result in list_of_urls:\n            url = result.link\n            new_item = result.data.copy()\n\n            # Extract HTML from the response\n            response = requests.get(url)\n            html_content = response.text\n\n            # Parse the HTML\n            soup = BeautifulSoup(html_content, 'html.parser')\n            \n            # Extract the links from the given URL\n            links = [link.get('href') for link in soup.find_all('a') if link.get('href')]\n            \n            new_item[\"hyperlinks\"] = links\n            full_data.append(Data(data=new_item))\n            \n        return full_data\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              }
            },
            "description": "Fetches HTML from URLs, parses it, and extracts hyperlinks.",
            "icon": "file-code",
            "base_classes": [
              "Data"
            ],
            "display_name": "Extract URLs' hyperlinks",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Data"
                ],
                "selected": "Data",
                "name": "search_results_with_hyperlinks",
                "display_name": "Search Results + Hyperlinks",
                "method": "extract_hyperlinks_full",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "list_of_urls"
            ],
            "beta": false,
            "edited": true,
            "official": false
          },
          "id": "HyperlinksExtractor-tXd06"
        },
        "id": "HyperlinksExtractor-tXd06",
        "position": {
          "x": 0,
          "y": 0
        },
        "type": "genericNode"
      }
    ],
    "viewport": {
      "x": 1,
      "y": 1,
      "zoom": 1
    }
  },
  "metadata": {
    "HyperlinksExtractor": {
      "count": 1
    },
    "total": 1
  },
  "original": {
    "id": "4236cb6d-418f-4170-ba0c-3a55c691746e",
    "name": "Extract URLs' hyperlinks",
    "description": "Fetches HTML from URLs, parses it, and extracts hyperlinks.",
    "is_component": true,
    "liked_by_count": "4",
    "downloads_count": "37",
    "metadata": {
      "HyperlinksExtractor": {
        "count": 1
      },
      "total": 1
    },
    "last_tested_version": "1.0.14",
    "private": false,
    "data": {
      "edges": [],
      "nodes": [
        {
          "data": {
            "type": "HyperlinksExtractor",
            "node": {
              "template": {
                "_type": "Component",
                "list_of_urls": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "",
                  "name": "list_of_urls",
                  "display_name": "Search results with URLs",
                  "advanced": false,
                  "input_types": [
                    "Data"
                  ],
                  "dynamic": false,
                  "info": "List of retrieved URLs from a search engine to extract hyperlinks",
                  "title_case": false,
                  "type": "other",
                  "_input_type": "DataInput"
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "import requests\nfrom bs4 import BeautifulSoup\nfrom typing import List, Dict\n\nfrom axiestudio.schema import Data\nfrom axiestudio.custom import Component\nfrom axiestudio.io import DataInput, Output\n\nclass HyperlinksExtractor(Component):\n    display_name = \"Extract URLs' hyperlinks\"\n    description = \"Fetches HTML from URLs, parses it, and extracts hyperlinks.\"\n    icon = \"file-code\"\n\n    inputs = [\n        DataInput(\n            name=\"list_of_urls\",\n            display_name=\"Search results with URLs\",\n            info=\"List of retrieved URLs from a search engine to extract hyperlinks\",\n        ),\n    ]\n\n    outputs = [\n        Output(display_name=\"Search Results + Hyperlinks\", name=\"search_results_with_hyperlinks\", method=\"extract_hyperlinks_full\")\n    ]\n\n    def extract_hyperlinks_full(self) -> List[Data]:\n        list_of_urls: List[Data] = self.list_of_urls\n        full_data = []\n        \n        for result in list_of_urls:\n            url = result.link\n            new_item = result.data.copy()\n\n            # Extract HTML from the response\n            response = requests.get(url)\n            html_content = response.text\n\n            # Parse the HTML\n            soup = BeautifulSoup(html_content, 'html.parser')\n            \n            # Extract the links from the given URL\n            links = [link.get('href') for link in soup.find_all('a') if link.get('href')]\n            \n            new_item[\"hyperlinks\"] = links\n            full_data.append(Data(data=new_item))\n            \n        return full_data\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                }
              },
              "description": "Fetches HTML from URLs, parses it, and extracts hyperlinks.",
              "icon": "file-code",
              "base_classes": [
                "Data"
              ],
              "display_name": "Extract URLs' hyperlinks",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Data"
                  ],
                  "selected": "Data",
                  "name": "search_results_with_hyperlinks",
                  "display_name": "Search Results + Hyperlinks",
                  "method": "extract_hyperlinks_full",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "list_of_urls"
              ],
              "beta": false,
              "edited": true,
              "official": false
            },
            "id": "HyperlinksExtractor-tXd06"
          },
          "id": "HyperlinksExtractor-tXd06",
          "position": {
            "x": 0,
            "y": 0
          },
          "type": "genericNode"
        }
      ],
      "viewport": {
        "x": 1,
        "y": 1,
        "zoom": 1
      }
    },
    "date_created": "2024-08-04T15:44:54.739Z",
    "date_updated": "2024-08-04T22:46:44.685Z",
    "status": "Public",
    "sort": null,
    "user_updated": "91fd1e9c-c965-4845-a8ce-b81d962e690b",
    "user_created": {
      "username": "appoks",
      "first_name": "Johnathan Rad端nz",
      "last_name": "Rad端nz",
      "id": "91fd1e9c-c965-4845-a8ce-b81d962e690b"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:09.792Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 6,
    "converter_version": "1.0.0"
  }
}