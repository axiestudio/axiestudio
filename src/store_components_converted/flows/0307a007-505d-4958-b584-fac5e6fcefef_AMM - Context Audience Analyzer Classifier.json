{
  "id": "0307a007-505d-4958-b584-fac5e6fcefef",
  "name": "AMM - Context Audience Analyzer Classifier",
  "description": "AMM - Context Audience Analyzer Classifier (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "FLOW",
  "is_component": false,
  "author": {
    "username": "xxx-tech",
    "first_name": "Jürgen",
    "last_name": "Winkler",
    "id": "7ede3335-6b52-442c-866d-7438416e33db",
    "full_name": "Jürgen Winkler"
  },
  "store_url": "https://www.langflow.store/store/component/0307a007-505d-4958-b584-fac5e6fcefef",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-05-23T08:02:45.956Z",
    "updated": "2024-05-23T08:02:45.986Z",
    "downloaded": "2025-08-19T17:50:05.697Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "0.6.4",
    "private": true,
    "status": "Public"
  },
  "data": {
    "nodes": [
      {
        "width": 384,
        "height": 649,
        "id": "ChatOpenAI-Tk1ZP",
        "type": "genericNode",
        "position": {
          "x": -222,
          "y": 100.00452047273558
        },
        "data": {
          "type": "ChatOpenAI",
          "node": {
            "template": {
              "callbacks": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "callbacks",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "langchain.callbacks.base.BaseCallbackHandler",
                "list": true
              },
              "cache": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "cache",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "bool",
                "list": false
              },
              "client": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "client",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "Any",
                "list": false
              },
              "max_retries": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "value": 6,
                "password": false,
                "name": "max_retries",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "int",
                "list": false
              },
              "max_tokens": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": true,
                "name": "max_tokens",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "int",
                "list": false,
                "value": ""
              },
              "metadata": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "metadata",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "code",
                "list": false
              },
              "model_kwargs": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "model_kwargs",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "code",
                "list": false
              },
              "model_name": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "gpt-3.5-turbo",
                "password": false,
                "options": [
                  "gpt-3.5-turbo-0613",
                  "gpt-3.5-turbo",
                  "gpt-3.5-turbo-16k-0613",
                  "gpt-3.5-turbo-16k",
                  "gpt-4-0613",
                  "gpt-4-32k-0613",
                  "gpt-4",
                  "gpt-4-32k"
                ],
                "name": "model_name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": true
              },
              "n": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "value": 1,
                "password": false,
                "name": "n",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "int",
                "list": false
              },
              "openai_api_base": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "openai_api_base",
                "display_name": "OpenAI API Base",
                "advanced": false,
                "dynamic": false,
                "info": "\nThe base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.\n",
                "type": "str",
                "list": false
              },
              "openai_api_key": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "",
                "password": true,
                "name": "openai_api_key",
                "display_name": "OpenAI API Key",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false
              },
              "openai_organization": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "openai_organization",
                "display_name": "OpenAI Organization",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false
              },
              "openai_proxy": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "openai_proxy",
                "display_name": "OpenAI Proxy",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false
              },
              "request_timeout": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "request_timeout",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "float",
                "list": false,
                "value": 60
              },
              "streaming": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "value": false,
                "password": false,
                "name": "streaming",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "bool",
                "list": false
              },
              "tags": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "tags",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": true
              },
              "temperature": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "0.8",
                "password": false,
                "name": "temperature",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "float",
                "list": false
              },
              "tiktoken_model_name": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "tiktoken_model_name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false
              },
              "verbose": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "value": false,
                "password": false,
                "name": "verbose",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "bool",
                "list": false
              },
              "_type": "ChatOpenAI"
            },
            "description": "Wrapper around OpenAI Chat large language models.",
            "base_classes": [
              "BaseLanguageModel",
              "ChatOpenAI",
              "BaseChatModel",
              "BaseLLM"
            ],
            "display_name": "ChatOpenAI",
            "documentation": "https://python.langchain.com/docs/modules/model_io/models/chat/integrations/openai"
          },
          "id": "ChatOpenAI-Tk1ZP",
          "value": null
        },
        "selected": false,
        "positionAbsolute": {
          "x": -222,
          "y": 100.00452047273558
        }
      },
      {
        "width": 384,
        "height": 339,
        "id": "LLMChain-vgXUq",
        "type": "genericNode",
        "position": {
          "x": 754.9419016495017,
          "y": 163.40404351388435
        },
        "data": {
          "type": "LLMChain",
          "node": {
            "template": {
              "callbacks": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "callbacks",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "langchain.callbacks.base.BaseCallbackHandler",
                "list": true
              },
              "llm": {
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "llm",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "BaseLanguageModel",
                "list": false
              },
              "memory": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "memory",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "BaseMemory",
                "list": false
              },
              "output_parser": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "output_parser",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "BaseLLMOutputParser",
                "list": false
              },
              "prompt": {
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "prompt",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "BasePromptTemplate",
                "list": false
              },
              "llm_kwargs": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "llm_kwargs",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "code",
                "list": false
              },
              "metadata": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "metadata",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "code",
                "list": false
              },
              "output_key": {
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "text",
                "password": false,
                "name": "output_key",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false
              },
              "return_final_only": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "value": true,
                "password": false,
                "name": "return_final_only",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "bool",
                "list": false
              },
              "tags": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "tags",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": true
              },
              "verbose": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "value": false,
                "password": false,
                "name": "verbose",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "bool",
                "list": false
              },
              "_type": "LLMChain"
            },
            "description": "Chain to run queries against LLMs.",
            "base_classes": [
              "LLMChain",
              "Chain",
              "function"
            ],
            "display_name": "LLMChain",
            "documentation": "https://python.langchain.com/docs/modules/chains/foundational/llm_chain"
          },
          "id": "LLMChain-vgXUq",
          "value": null
        },
        "selected": false,
        "positionAbsolute": {
          "x": 754.9419016495017,
          "y": 163.40404351388435
        },
        "dragging": false
      },
      {
        "width": 384,
        "height": 375,
        "id": "PromptTemplate-XMNNL",
        "type": "genericNode",
        "position": {
          "x": 290.6143945543606,
          "y": -36.140625
        },
        "data": {
          "type": "PromptTemplate",
          "node": {
            "template": {
              "output_parser": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "output_parser",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "BaseOutputParser",
                "list": false
              },
              "input_variables": {
                "required": true,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "input_variables",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": true,
                "value": [
                  "question"
                ]
              },
              "partial_variables": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "partial_variables",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "code",
                "list": false
              },
              "template": {
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": true,
                "password": false,
                "name": "template",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "prompt",
                "list": false,
                "value": "Your Role:\nYou are a journalist and marketing writing expert and professional blog writer for blog and news websites and your expertise is in classification of the relevance of a context of an article for the right audience group of readers. You are receiving different questions with meta information about article context and targeted audience and you review, analyse and classify if the article context is relevant for the defined targeted audience. Your job is to create a full and very detailed and well classified \"article_classification_set\" for the meta information you receive. Your results shall help the website and the blog you are workin for to find the best articles that are relevant for the blog or website you are working for with your result of the article_classification_set result.\n\nExplenation for your job:\nDepending on the source of the word or input you receive different qualities of inputs for which you need to create results:\ntargeted_audience: this is the audience which is a group of users with certain interests and topics that are relevant to them explained with a few keywords and phrases that reflect the interests of the audience.\narticle_context: this is a news article including a title which can be short or long and which needs to be analyzed in detail to classify whether it is relevant for the targeted audience or not.\n\nExample Structure Details for your final article_classification_set results:\nHere is an example how you need to answer to questions for a article_classification_set based on the \n\n\"relevance\": a string that returns \"yes\" if the article is relevant for the defined targeted audience or \"no\" if it does not fit context wise for the targeted audience.\n\"alternative_audiences\": an array of up to 6 strings that stand for the major tags or categories of audiences the article of the input meta information would be relevant for.\n\nHere is an Example Question and Answer for a article_classification_set request:\n\nQuestion:\nHow does a article_classification_set look like for for the following data:\n\ntargeted_audience: Dating,Singles,Partnersuche,Singlebörse,Couples,Love\narticle_context: Muss man auf Dating-Plattformen für die Liebe lügen? Das Stück \"Brieffreundschaft+\" mit Ingrid Diem und Dominik Landolt feiert am Mittwoch im Casanova Premiere. Dabei geht es um die Tücken beim Dating. \"Es geht darum, dass zwei Langzeit Singles die als hoffnungslos gelten, auf Tinder gehen, damit sie zumindest eine Brieffreundschaft plus haben, also damit sie zumindest wen finden zum Schreiben und Verlieben\", beschreibt Ingrid Diem das Austropopkabrett mit Dominik Landolt, dass am 1. Mai im CasaNova Premiere feiert. Doch es gibt einen Twist! Die Langzeitsingles nehmen es mit der Wahrheit nicht so Ernst und bearbeiten ihre Fotos mit dem \"Leiwandizer\" ins Unerkenntliche. \"Da kann man Gesicht und Körper total bearbeiten und zur absoluten unkenntlichen Perfektion verändern\", erklärt die Schauspielerin, \"weil sie überzeugt sind, dass man 2024 nur mehr mit mindestens 4 OPs und 10 Filter überhaupt wen kriegt.\" Als die zwei Hauptfiguren sich dann treffen, fliegt die Schummelei über das Aussehen auf. Dieses Gefühl kennen Diem und Landolt auch im wahren Leben nur zu gut, geben sie zu.\n\n\n\nAnswer:\n\"relevance\": yes\n\"alternative_audiences\": TV Serien, Schauspieler\n\n\nRules:\n\n1. Generate your results written in german language and only use english or other words if those words are commonly known and understood in the german speaking countries or a typical wording for the adult entertainment industry also in german speaking countries.\n2. return your results in the structure provided in the example and keep the object names of the nested json in english while the results still shall be in german language.\n3. Return your results in a nested json result output based on the structure explained before.\n\nYour major job is to return better classification results based on the details you receive as input and follow your role in all details with your answer.\n\n\nCurrent conversation:\n\n{question}\nAnswer \n\n\n"
              },
              "template_format": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "value": "f-string",
                "password": false,
                "name": "template_format",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false
              },
              "validate_template": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "value": true,
                "password": false,
                "name": "validate_template",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "bool",
                "list": false
              },
              "_type": "PromptTemplate",
              "question": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "question",
                "display_name": "question",
                "advanced": false,
                "input_types": [
                  "Document",
                  "BaseOutputParser"
                ],
                "dynamic": false,
                "info": ""
              }
            },
            "description": "A prompt template for a language model.",
            "base_classes": [
              "BasePromptTemplate",
              "StringPromptTemplate",
              "PromptTemplate"
            ],
            "name": "",
            "display_name": "PromptTemplate",
            "documentation": "https://python.langchain.com/docs/modules/model_io/prompts/prompt_templates/",
            "custom_fields": {
              "template": [
                "question"
              ],
              "": [
                "question"
              ]
            },
            "output_types": [],
            "full_path": null,
            "field_formatters": {},
            "beta": false,
            "error": null
          },
          "id": "PromptTemplate-XMNNL",
          "value": null
        },
        "selected": true,
        "dragging": false,
        "positionAbsolute": {
          "x": 290.6143945543606,
          "y": -36.140625
        }
      }
    ],
    "edges": [
      {
        "source": "ChatOpenAI-Tk1ZP",
        "target": "LLMChain-vgXUq",
        "sourceHandle": "{œbaseClassesœ:[œBaseLanguageModelœ,œChatOpenAIœ,œBaseChatModelœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-Tk1ZPœ}",
        "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œLLMChain-vgXUqœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}",
        "id": "reactflow__edge-ChatOpenAI-Tk1ZP{œbaseClassesœ:[œBaseLanguageModelœ,œChatOpenAIœ,œBaseChatModelœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-Tk1ZPœ}-LLMChain-vgXUq{œfieldNameœ:œllmœ,œidœ:œLLMChain-vgXUqœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}",
        "data": {
          "sourceHandle": {
            "baseClasses": [
              "BaseLanguageModel",
              "ChatOpenAI",
              "BaseChatModel",
              "BaseLLM"
            ],
            "dataType": "ChatOpenAI",
            "id": "ChatOpenAI-Tk1ZP"
          },
          "targetHandle": {
            "fieldName": "llm",
            "id": "LLMChain-vgXUq",
            "inputTypes": null,
            "type": "BaseLanguageModel"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-gray-900  stroke-connection",
        "animated": false,
        "selected": false
      },
      {
        "source": "PromptTemplate-XMNNL",
        "target": "LLMChain-vgXUq",
        "sourceHandle": "{œbaseClassesœ:[œBasePromptTemplateœ,œStringPromptTemplateœ,œPromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-XMNNLœ}",
        "targetHandle": "{œfieldNameœ:œpromptœ,œidœ:œLLMChain-vgXUqœ,œinputTypesœ:null,œtypeœ:œBasePromptTemplate��}",
        "id": "reactflow__edge-PromptTemplate-XMNNL{œbaseClassesœ:[œBasePromptTemplateœ,œStringPromptTemplateœ,œPromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-XMNNLœ}-LLMChain-vgXUq{œfieldNameœ:œpromptœ,œidœ:œLLMChain-vgXUqœ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}",
        "data": {
          "sourceHandle": {
            "baseClasses": [
              "BasePromptTemplate",
              "StringPromptTemplate",
              "PromptTemplate"
            ],
            "dataType": "PromptTemplate",
            "id": "PromptTemplate-XMNNL"
          },
          "targetHandle": {
            "fieldName": "prompt",
            "id": "LLMChain-vgXUq",
            "inputTypes": null,
            "type": "BasePromptTemplate"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-gray-900  stroke-connection",
        "animated": false,
        "selected": false
      }
    ],
    "viewport": {
      "x": 482,
      "y": 117,
      "zoom": 1
    }
  },
  "metadata": {
    "ChatOpenAI": {
      "count": 1
    },
    "LLMChain": {
      "count": 1
    },
    "PromptTemplate": {
      "count": 1
    },
    "total": 3
  },
  "original": {
    "id": "0307a007-505d-4958-b584-fac5e6fcefef",
    "name": "AMM - Context Audience Analyzer Classifier",
    "description": "AMM - Context Audience Analyzer Classifier",
    "is_component": false,
    "liked_by_count": "0",
    "downloads_count": "0",
    "metadata": {
      "ChatOpenAI": {
        "count": 1
      },
      "LLMChain": {
        "count": 1
      },
      "PromptTemplate": {
        "count": 1
      },
      "total": 3
    },
    "last_tested_version": "0.6.4",
    "private": true,
    "data": {
      "nodes": [
        {
          "width": 384,
          "height": 649,
          "id": "ChatOpenAI-Tk1ZP",
          "type": "genericNode",
          "position": {
            "x": -222,
            "y": 100.00452047273558
          },
          "data": {
            "type": "ChatOpenAI",
            "node": {
              "template": {
                "callbacks": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "callbacks",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "langchain.callbacks.base.BaseCallbackHandler",
                  "list": true
                },
                "cache": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "cache",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "bool",
                  "list": false
                },
                "client": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "client",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "Any",
                  "list": false
                },
                "max_retries": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "value": 6,
                  "password": false,
                  "name": "max_retries",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "int",
                  "list": false
                },
                "max_tokens": {
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "multiline": false,
                  "password": true,
                  "name": "max_tokens",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "int",
                  "list": false,
                  "value": ""
                },
                "metadata": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "metadata",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "code",
                  "list": false
                },
                "model_kwargs": {
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "multiline": false,
                  "password": false,
                  "name": "model_kwargs",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "type": "code",
                  "list": false
                },
                "model_name": {
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "multiline": false,
                  "value": "gpt-3.5-turbo",
                  "password": false,
                  "options": [
                    "gpt-3.5-turbo-0613",
                    "gpt-3.5-turbo",
                    "gpt-3.5-turbo-16k-0613",
                    "gpt-3.5-turbo-16k",
                    "gpt-4-0613",
                    "gpt-4-32k-0613",
                    "gpt-4",
                    "gpt-4-32k"
                  ],
                  "name": "model_name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "str",
                  "list": true
                },
                "n": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "value": 1,
                  "password": false,
                  "name": "n",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "int",
                  "list": false
                },
                "openai_api_base": {
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "multiline": false,
                  "password": false,
                  "name": "openai_api_base",
                  "display_name": "OpenAI API Base",
                  "advanced": false,
                  "dynamic": false,
                  "info": "\nThe base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.\n",
                  "type": "str",
                  "list": false
                },
                "openai_api_key": {
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "multiline": false,
                  "value": "",
                  "password": true,
                  "name": "openai_api_key",
                  "display_name": "OpenAI API Key",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "str",
                  "list": false
                },
                "openai_organization": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "openai_organization",
                  "display_name": "OpenAI Organization",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "str",
                  "list": false
                },
                "openai_proxy": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "openai_proxy",
                  "display_name": "OpenAI Proxy",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "str",
                  "list": false
                },
                "request_timeout": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "request_timeout",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "float",
                  "list": false,
                  "value": 60
                },
                "streaming": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "value": false,
                  "password": false,
                  "name": "streaming",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "bool",
                  "list": false
                },
                "tags": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "tags",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "str",
                  "list": true
                },
                "temperature": {
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "multiline": false,
                  "value": "0.8",
                  "password": false,
                  "name": "temperature",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "float",
                  "list": false
                },
                "tiktoken_model_name": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "tiktoken_model_name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "str",
                  "list": false
                },
                "verbose": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "value": false,
                  "password": false,
                  "name": "verbose",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "bool",
                  "list": false
                },
                "_type": "ChatOpenAI"
              },
              "description": "Wrapper around OpenAI Chat large language models.",
              "base_classes": [
                "BaseLanguageModel",
                "ChatOpenAI",
                "BaseChatModel",
                "BaseLLM"
              ],
              "display_name": "ChatOpenAI",
              "documentation": "https://python.langchain.com/docs/modules/model_io/models/chat/integrations/openai"
            },
            "id": "ChatOpenAI-Tk1ZP",
            "value": null
          },
          "selected": false,
          "positionAbsolute": {
            "x": -222,
            "y": 100.00452047273558
          }
        },
        {
          "width": 384,
          "height": 339,
          "id": "LLMChain-vgXUq",
          "type": "genericNode",
          "position": {
            "x": 754.9419016495017,
            "y": 163.40404351388435
          },
          "data": {
            "type": "LLMChain",
            "node": {
              "template": {
                "callbacks": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "callbacks",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "langchain.callbacks.base.BaseCallbackHandler",
                  "list": true
                },
                "llm": {
                  "required": true,
                  "placeholder": "",
                  "show": true,
                  "multiline": false,
                  "password": false,
                  "name": "llm",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "BaseLanguageModel",
                  "list": false
                },
                "memory": {
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "multiline": false,
                  "password": false,
                  "name": "memory",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "BaseMemory",
                  "list": false
                },
                "output_parser": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "output_parser",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "BaseLLMOutputParser",
                  "list": false
                },
                "prompt": {
                  "required": true,
                  "placeholder": "",
                  "show": true,
                  "multiline": false,
                  "password": false,
                  "name": "prompt",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "BasePromptTemplate",
                  "list": false
                },
                "llm_kwargs": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "llm_kwargs",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "code",
                  "list": false
                },
                "metadata": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "metadata",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "code",
                  "list": false
                },
                "output_key": {
                  "required": true,
                  "placeholder": "",
                  "show": true,
                  "multiline": false,
                  "value": "text",
                  "password": false,
                  "name": "output_key",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "type": "str",
                  "list": false
                },
                "return_final_only": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "value": true,
                  "password": false,
                  "name": "return_final_only",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "bool",
                  "list": false
                },
                "tags": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "tags",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "str",
                  "list": true
                },
                "verbose": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "value": false,
                  "password": false,
                  "name": "verbose",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "type": "bool",
                  "list": false
                },
                "_type": "LLMChain"
              },
              "description": "Chain to run queries against LLMs.",
              "base_classes": [
                "LLMChain",
                "Chain",
                "function"
              ],
              "display_name": "LLMChain",
              "documentation": "https://python.langchain.com/docs/modules/chains/foundational/llm_chain"
            },
            "id": "LLMChain-vgXUq",
            "value": null
          },
          "selected": false,
          "positionAbsolute": {
            "x": 754.9419016495017,
            "y": 163.40404351388435
          },
          "dragging": false
        },
        {
          "width": 384,
          "height": 375,
          "id": "PromptTemplate-XMNNL",
          "type": "genericNode",
          "position": {
            "x": 290.6143945543606,
            "y": -36.140625
          },
          "data": {
            "type": "PromptTemplate",
            "node": {
              "template": {
                "output_parser": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "output_parser",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "BaseOutputParser",
                  "list": false
                },
                "input_variables": {
                  "required": true,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "input_variables",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "str",
                  "list": true,
                  "value": [
                    "question"
                  ]
                },
                "partial_variables": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "partial_variables",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "code",
                  "list": false
                },
                "template": {
                  "required": true,
                  "placeholder": "",
                  "show": true,
                  "multiline": true,
                  "password": false,
                  "name": "template",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "prompt",
                  "list": false,
                  "value": "Your Role:\nYou are a journalist and marketing writing expert and professional blog writer for blog and news websites and your expertise is in classification of the relevance of a context of an article for the right audience group of readers. You are receiving different questions with meta information about article context and targeted audience and you review, analyse and classify if the article context is relevant for the defined targeted audience. Your job is to create a full and very detailed and well classified \"article_classification_set\" for the meta information you receive. Your results shall help the website and the blog you are workin for to find the best articles that are relevant for the blog or website you are working for with your result of the article_classification_set result.\n\nExplenation for your job:\nDepending on the source of the word or input you receive different qualities of inputs for which you need to create results:\ntargeted_audience: this is the audience which is a group of users with certain interests and topics that are relevant to them explained with a few keywords and phrases that reflect the interests of the audience.\narticle_context: this is a news article including a title which can be short or long and which needs to be analyzed in detail to classify whether it is relevant for the targeted audience or not.\n\nExample Structure Details for your final article_classification_set results:\nHere is an example how you need to answer to questions for a article_classification_set based on the \n\n\"relevance\": a string that returns \"yes\" if the article is relevant for the defined targeted audience or \"no\" if it does not fit context wise for the targeted audience.\n\"alternative_audiences\": an array of up to 6 strings that stand for the major tags or categories of audiences the article of the input meta information would be relevant for.\n\nHere is an Example Question and Answer for a article_classification_set request:\n\nQuestion:\nHow does a article_classification_set look like for for the following data:\n\ntargeted_audience: Dating,Singles,Partnersuche,Singlebörse,Couples,Love\narticle_context: Muss man auf Dating-Plattformen für die Liebe lügen? Das Stück \"Brieffreundschaft+\" mit Ingrid Diem und Dominik Landolt feiert am Mittwoch im Casanova Premiere. Dabei geht es um die Tücken beim Dating. \"Es geht darum, dass zwei Langzeit Singles die als hoffnungslos gelten, auf Tinder gehen, damit sie zumindest eine Brieffreundschaft plus haben, also damit sie zumindest wen finden zum Schreiben und Verlieben\", beschreibt Ingrid Diem das Austropopkabrett mit Dominik Landolt, dass am 1. Mai im CasaNova Premiere feiert. Doch es gibt einen Twist! Die Langzeitsingles nehmen es mit der Wahrheit nicht so Ernst und bearbeiten ihre Fotos mit dem \"Leiwandizer\" ins Unerkenntliche. \"Da kann man Gesicht und Körper total bearbeiten und zur absoluten unkenntlichen Perfektion verändern\", erklärt die Schauspielerin, \"weil sie überzeugt sind, dass man 2024 nur mehr mit mindestens 4 OPs und 10 Filter überhaupt wen kriegt.\" Als die zwei Hauptfiguren sich dann treffen, fliegt die Schummelei über das Aussehen auf. Dieses Gefühl kennen Diem und Landolt auch im wahren Leben nur zu gut, geben sie zu.\n\n\n\nAnswer:\n\"relevance\": yes\n\"alternative_audiences\": TV Serien, Schauspieler\n\n\nRules:\n\n1. Generate your results written in german language and only use english or other words if those words are commonly known and understood in the german speaking countries or a typical wording for the adult entertainment industry also in german speaking countries.\n2. return your results in the structure provided in the example and keep the object names of the nested json in english while the results still shall be in german language.\n3. Return your results in a nested json result output based on the structure explained before.\n\nYour major job is to return better classification results based on the details you receive as input and follow your role in all details with your answer.\n\n\nCurrent conversation:\n\n{question}\nAnswer \n\n\n"
                },
                "template_format": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "value": "f-string",
                  "password": false,
                  "name": "template_format",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "str",
                  "list": false
                },
                "validate_template": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "value": true,
                  "password": false,
                  "name": "validate_template",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "bool",
                  "list": false
                },
                "_type": "PromptTemplate",
                "question": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "question",
                  "display_name": "question",
                  "advanced": false,
                  "input_types": [
                    "Document",
                    "BaseOutputParser"
                  ],
                  "dynamic": false,
                  "info": ""
                }
              },
              "description": "A prompt template for a language model.",
              "base_classes": [
                "BasePromptTemplate",
                "StringPromptTemplate",
                "PromptTemplate"
              ],
              "name": "",
              "display_name": "PromptTemplate",
              "documentation": "https://python.langchain.com/docs/modules/model_io/prompts/prompt_templates/",
              "custom_fields": {
                "template": [
                  "question"
                ],
                "": [
                  "question"
                ]
              },
              "output_types": [],
              "full_path": null,
              "field_formatters": {},
              "beta": false,
              "error": null
            },
            "id": "PromptTemplate-XMNNL",
            "value": null
          },
          "selected": true,
          "dragging": false,
          "positionAbsolute": {
            "x": 290.6143945543606,
            "y": -36.140625
          }
        }
      ],
      "edges": [
        {
          "source": "ChatOpenAI-Tk1ZP",
          "target": "LLMChain-vgXUq",
          "sourceHandle": "{œbaseClassesœ:[œBaseLanguageModelœ,œChatOpenAIœ,œBaseChatModelœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-Tk1ZPœ}",
          "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œLLMChain-vgXUqœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}",
          "id": "reactflow__edge-ChatOpenAI-Tk1ZP{œbaseClassesœ:[œBaseLanguageModelœ,œChatOpenAIœ,œBaseChatModelœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-Tk1ZPœ}-LLMChain-vgXUq{œfieldNameœ:œllmœ,œidœ:œLLMChain-vgXUqœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}",
          "data": {
            "sourceHandle": {
              "baseClasses": [
                "BaseLanguageModel",
                "ChatOpenAI",
                "BaseChatModel",
                "BaseLLM"
              ],
              "dataType": "ChatOpenAI",
              "id": "ChatOpenAI-Tk1ZP"
            },
            "targetHandle": {
              "fieldName": "llm",
              "id": "LLMChain-vgXUq",
              "inputTypes": null,
              "type": "BaseLanguageModel"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-gray-900  stroke-connection",
          "animated": false,
          "selected": false
        },
        {
          "source": "PromptTemplate-XMNNL",
          "target": "LLMChain-vgXUq",
          "sourceHandle": "{œbaseClassesœ:[œBasePromptTemplateœ,œStringPromptTemplateœ,œPromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-XMNNLœ}",
          "targetHandle": "{œfieldNameœ:œpromptœ,œidœ:œLLMChain-vgXUqœ,œinputTypesœ:null,œtypeœ:œBasePromptTemplate��}",
          "id": "reactflow__edge-PromptTemplate-XMNNL{œbaseClassesœ:[œBasePromptTemplateœ,œStringPromptTemplateœ,œPromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-XMNNLœ}-LLMChain-vgXUq{œfieldNameœ:œpromptœ,œidœ:œLLMChain-vgXUqœ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}",
          "data": {
            "sourceHandle": {
              "baseClasses": [
                "BasePromptTemplate",
                "StringPromptTemplate",
                "PromptTemplate"
              ],
              "dataType": "PromptTemplate",
              "id": "PromptTemplate-XMNNL"
            },
            "targetHandle": {
              "fieldName": "prompt",
              "id": "LLMChain-vgXUq",
              "inputTypes": null,
              "type": "BasePromptTemplate"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-gray-900  stroke-connection",
          "animated": false,
          "selected": false
        }
      ],
      "viewport": {
        "x": 482,
        "y": 117,
        "zoom": 1
      }
    },
    "date_created": "2024-05-23T08:02:45.956Z",
    "date_updated": "2024-05-23T08:02:45.986Z",
    "status": "Public",
    "sort": null,
    "user_updated": "7ede3335-6b52-442c-866d-7438416e33db",
    "user_created": {
      "username": "xxx-tech",
      "first_name": "Jürgen",
      "last_name": "Winkler",
      "id": "7ede3335-6b52-442c-866d-7438416e33db"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:08:53.174Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 0,
    "converter_version": "1.0.0"
  }
}