{
  "id": "4eecb287-d75d-45a5-8858-3cc578c689e3",
  "name": "Crewai Flow",
  "description": "example 3 agents with crewai (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "FLOW",
  "is_component": false,
  "author": {
    "username": "Ailtondev",
    "first_name": "Mileide Lopez",
    "last_name": "Da silva",
    "id": "74384f8a-ea00-4768-8909-b8bfd6ea4539",
    "full_name": "Mileide Lopez Da silva"
  },
  "store_url": "https://www.langflow.store/store/component/4eecb287-d75d-45a5-8858-3cc578c689e3",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-09-07T04:25:49.477Z",
    "updated": "2024-09-07T04:25:49.520Z",
    "downloaded": "2025-08-19T17:50:06.893Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "1.0.15",
    "private": false,
    "status": "Public"
  },
  "data": {
    "nodes": [
      {
        "id": "ChatInput-sW99D",
        "type": "genericNode",
        "position": {
          "x": 2643.296511876612,
          "y": 473.8393357805752
        },
        "data": {
          "type": "ChatInput",
          "node": {
            "template": {
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from typing import Optional, Union\n\nfrom axiestudio.base.io.chat import ChatComponent\nfrom axiestudio.field_typing import Text\nfrom axiestudio.schema import Record\n\n\nclass ChatInput(ChatComponent):\n    display_name = \"Chat Input\"\n    description = \"Get chat inputs from the Interaction Panel.\"\n    icon = \"ChatInput\"\n\n    def build_config(self):\n        build_config = super().build_config()\n        build_config[\"input_value\"] = {\n            \"input_types\": [],\n            \"display_name\": \"Message\",\n            \"multiline\": True,\n        }\n\n        return build_config\n\n    def build(\n        self,\n        sender: Optional[str] = \"User\",\n        sender_name: Optional[str] = \"User\",\n        input_value: Optional[str] = None,\n        session_id: Optional[str] = None,\n        return_record: Optional[bool] = False,\n    ) -> Union[Text, Record]:\n        return super().build_no_record(\n            sender=sender,\n            sender_name=sender_name,\n            input_value=input_value,\n            session_id=session_id,\n            return_record=return_record,\n        )\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "input_value": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "input_value",
                "display_name": "Message",
                "advanced": false,
                "input_types": [],
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "value": "Utilizando informações sobre a cultura e valores da Magalu, crie uma publicação de vaga atraente para a posição de Especialista em Inteligência Artificial. A postagem deve incluir uma introdução envolvente, descrição detalhada da função, responsabilidades, requisitos e benefícios únicos oferecidos pela empresa. Certifique-se de que o tom ressoe com a cultura da Magalu e atraia candidatos que se alinhem com os valores e a missão da empresa."
              },
              "return_record": {
                "type": "bool",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "return_record",
                "display_name": "Return Record",
                "advanced": true,
                "dynamic": false,
                "info": "Return the message as a record containing the sender, sender_name, and session_id.",
                "load_from_db": false,
                "title_case": false
              },
              "sender": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "User",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "options": [
                  "Machine",
                  "User"
                ],
                "name": "sender",
                "display_name": "Sender Type",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              },
              "sender_name": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "Guilherme",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "sender_name",
                "display_name": "Sender Name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              },
              "session_id": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "session_id",
                "display_name": "Session ID",
                "advanced": true,
                "dynamic": false,
                "info": "If provided, the message will be stored in the memory.",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              },
              "_type": "CustomComponent"
            },
            "description": "Get chat inputs from the Interaction Panel.",
            "icon": "ChatInput",
            "base_classes": [
              "object",
              "Record",
              "str",
              "Text"
            ],
            "display_name": "Chat Input",
            "documentation": "",
            "custom_fields": {
              "sender": null,
              "sender_name": null,
              "input_value": null,
              "session_id": null,
              "return_record": null
            },
            "output_types": [
              "Text",
              "Record"
            ],
            "field_formatters": {},
            "frozen": false,
            "field_order": [],
            "beta": false,
            "outputs": [
              {
                "types": [
                  "Text",
                  "Record"
                ],
                "selected": "Text",
                "name": "Text | Record",
                "display_name": "Text | Record"
              }
            ]
          },
          "id": "ChatInput-sW99D"
        },
        "selected": false,
        "width": 384,
        "height": 383
      },
      {
        "id": "ChatOutput-bcKLB",
        "type": "genericNode",
        "position": {
          "x": 2578.185269843795,
          "y": 1837.239338531694
        },
        "data": {
          "type": "ChatOutput",
          "node": {
            "template": {
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from typing import Optional, Union\n\nfrom axiestudio.base.io.chat import ChatComponent\nfrom axiestudio.field_typing import Text\nfrom axiestudio.schema import Record\n\n\nclass ChatOutput(ChatComponent):\n    display_name = \"Chat Output\"\n    description = \"Display a chat message in the Interaction Panel.\"\n    icon = \"ChatOutput\"\n\n    def build(\n        self,\n        sender: Optional[str] = \"Machine\",\n        sender_name: Optional[str] = \"AI\",\n        input_value: Optional[str] = None,\n        session_id: Optional[str] = None,\n        return_record: Optional[bool] = False,\n        record_template: Optional[str] = \"{text}\",\n    ) -> Union[Text, Record]:\n        return super().build_with_record(\n            sender=sender,\n            sender_name=sender_name,\n            input_value=input_value,\n            session_id=session_id,\n            return_record=return_record,\n            record_template=record_template or \"\",\n        )\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "input_value": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "input_value",
                "display_name": "Message",
                "advanced": false,
                "input_types": [
                  "Text"
                ],
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "record_template": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "{text}",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "record_template",
                "display_name": "Record Template",
                "advanced": true,
                "dynamic": false,
                "info": "In case of Message being a Record, this template will be used to convert it to text.",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              },
              "return_record": {
                "type": "bool",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "return_record",
                "display_name": "Return Record",
                "advanced": true,
                "dynamic": false,
                "info": "Return the message as a record containing the sender, sender_name, and session_id.",
                "load_from_db": false,
                "title_case": false
              },
              "sender": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "Machine",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "options": [
                  "Machine",
                  "User"
                ],
                "name": "sender",
                "display_name": "Sender Type",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              },
              "sender_name": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "AI",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "sender_name",
                "display_name": "Sender Name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              },
              "session_id": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "session_id",
                "display_name": "Session ID",
                "advanced": true,
                "dynamic": false,
                "info": "If provided, the message will be stored in the memory.",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              },
              "_type": "CustomComponent"
            },
            "description": "Display a chat message in the Interaction Panel.",
            "icon": "ChatOutput",
            "base_classes": [
              "object",
              "Record",
              "str",
              "Text"
            ],
            "display_name": "Chat Output",
            "documentation": "",
            "custom_fields": {
              "sender": null,
              "sender_name": null,
              "input_value": null,
              "session_id": null,
              "return_record": null,
              "record_template": null
            },
            "output_types": [
              "Text",
              "Record"
            ],
            "field_formatters": {},
            "frozen": false,
            "field_order": [],
            "beta": false
          },
          "id": "ChatOutput-bcKLB"
        },
        "selected": false,
        "width": 384,
        "height": 341
      },
      {
        "id": "CustomComponent-nNCg1",
        "type": "genericNode",
        "position": {
          "x": 281.83122780655367,
          "y": 382.1526523417341
        },
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "llm": {
                "type": "object",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "llm",
                "display_name": "Language Model",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "tools": {
                "type": "Tool",
                "required": false,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "tools",
                "display_name": "Tools",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "backstory": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "backstory",
                "display_name": "Backstory",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "Especialista em analisar culturas empresariais e identificar valores e necessidades chave a partir de várias fontes, incluindo sites e descrições breves."
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio import CustomComponent\r\nfrom axiestudio.field_typing import BaseLanguageModel, Tool\r\nfrom crewai import Agent\r\nfrom typing import List, Optional\r\n\r\nclass AgentCrewComponent(CustomComponent):\r\n    display_name: str = \"AgentCrew\"\r\n    description: str = \"This component initializes an agent with language model and tools.\"\r\n\r\n    def build_config(self):\r\n        return {\r\n            \"role\": {\"display_name\": \"Role\"},\r\n            \"goal\": {\"display_name\": \"Goal\"},\r\n            \"backstory\": {\"display_name\": \"Backstory\"},\r\n            \"tools\": {\"display_name\": \"Tools\", \"type\": \"list\", \"item_type\": \"object\", \"optional\": True},  # Torna a entrada opcional\r\n            \"llm\": {\"display_name\": \"Language Model\", \"field_type\": \"object\"},\r\n        }\r\n\r\n    def build(self, role: str, goal: str, backstory: str, llm: BaseLanguageModel, tools: Optional[List[Tool]] = None) -> Agent:\r\n        # Se \"tools\" não for especificado, define como uma lista vazia\r\n        if tools is None:\r\n            tools = []\r\n        \r\n        # Supondo que cada ferramenta na lista seja um objeto já inicializado e pronto para uso\r\n        return Agent(\r\n            role=role,\r\n            goal=goal,\r\n            backstory=backstory,\r\n            tools=tools,  # Passa a lista de ferramentas diretamente\r\n            llm=llm,\r\n            verbose=True\r\n        )\r\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "goal": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "goal",
                "display_name": "Goal",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "Analisar sites de empresas e descrições fornecidas para extrair insights sobre cultura, valores e necessidades específicas."
              },
              "role": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "role",
                "display_name": "Role",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "Analista de Pesquisa"
              },
              "_type": "CustomComponent"
            },
            "description": "This component initializes an agent with language model and tools.",
            "base_classes": [
              "Agent"
            ],
            "display_name": "AgentCrew",
            "documentation": "",
            "custom_fields": {
              "role": null,
              "goal": null,
              "backstory": null,
              "llm": null,
              "tools": null
            },
            "output_types": [
              "Agent"
            ],
            "field_formatters": {},
            "frozen": false,
            "field_order": [],
            "beta": false,
            "official": false,
            "outputs": [
              {
                "types": [
                  "Agent"
                ],
                "selected": "Agent",
                "name": "Agent",
                "display_name": "Agent"
              }
            ]
          },
          "id": "CustomComponent-nNCg1"
        },
        "selected": false,
        "width": 384,
        "height": 593
      },
      {
        "id": "CustomComponent-9P5Rg",
        "type": "genericNode",
        "position": {
          "x": 722.3528521775029,
          "y": 366.55325696923967
        },
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "agent": {
                "type": "Agent",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "agent",
                "display_name": "Agent",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio import CustomComponent\r\nfrom axiestudio.field_typing import Data\r\nfrom crewai import Task, Agent\r\n\r\nclass TaskComponent(CustomComponent):\r\n    display_name: str = \"Create Task\"\r\n    description: str = \"This component creates a task for an agent.\"\r\n\r\n    def build_config(self):\r\n        return {\r\n            \"description\": {\"display_name\": \"Description\"},\r\n            \"expected_output\": {\"display_name\": \"Expected Output\"},\r\n            \"agent\": {\"display_name\": \"Agent\"},\r\n        }\r\n\r\n    def build(self, description: str, expected_output: str, agent: Agent) -> Task:\r\n        return Task(\r\n            description=description,\r\n            expected_output=expected_output,\r\n            agent=agent\r\n        )\r\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "description": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "description",
                "display_name": "Description",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "Analisar o site da empresa fornecido e a descrição da empresa para entender a cultura, valores e missão da empresa. Identificar pontos de venda únicos e projetos ou realizações específicas destacadas no site. Compilar um relatório resumindo esses insights, especificamente como eles podem ser aproveitados em uma postagem de emprego para atrair os candidatos certos."
              },
              "expected_output": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "expected_output",
                "display_name": "Expected Output",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "Um relatório abrangente detalhando a cultura, valores e missão da empresa, junto com pontos de venda específicos relevantes para a função. Sugestões sobre como incorporar esses insights na postagem de emprego devem ser incluídas."
              },
              "_type": "CustomComponent"
            },
            "description": "This component creates a task for an agent.",
            "base_classes": [
              "Task"
            ],
            "display_name": "TaskCrew",
            "documentation": "",
            "custom_fields": {
              "description": null,
              "expected_output": null,
              "agent": null
            },
            "output_types": [
              "Task"
            ],
            "field_formatters": {},
            "frozen": false,
            "field_order": [],
            "beta": false,
            "official": false,
            "outputs": [
              {
                "types": [
                  "Task"
                ],
                "selected": "Task",
                "name": "Task",
                "display_name": "Task"
              }
            ]
          },
          "id": "CustomComponent-9P5Rg"
        },
        "selected": false,
        "width": 384,
        "height": 431
      },
      {
        "id": "CustomComponent-9q782",
        "type": "genericNode",
        "position": {
          "x": 1707.9260960642205,
          "y": 1118.8290977842266
        },
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "agents": {
                "type": "Agent",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "agents",
                "display_name": "Agents",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "tasks": {
                "type": "Task",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "tasks",
                "display_name": "Tasks",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio import CustomComponent\r\nfrom crewai import Crew, Task, Agent\r\nfrom typing import List, Optional\r\nfrom axiestudio.field_typing import Text\r\n\r\nclass CrewComponent(CustomComponent):\r\n    display_name: str = \"Initialize Crew\"\r\n    description: str = \"This component initializes a crew to execute tasks with multiple agents.\"\r\n\r\n    def build_config(self):\r\n        return {\r\n            \"agents\": {\"display_name\": \"Agents\", \"type\": \"list\", \"item_type\": \"Agent\"},  # Define a entrada como lista de Agent\r\n            \"tasks\": {\"display_name\": \"Tasks\", \"type\": \"list\", \"item_type\": \"Task\"},  # Define a entrada como lista de Task\r\n            \"topic\": {\"display_name\": \"Topic\", \"type\": \"str\", \"required\": False, \"value\": \"\"},  # New topic field\r\n            \"verbose\": {\"display_name\": \"Verbose Level\", \"value\": 2},\r\n            \"max_iterations\": {\"display_name\": \"Max Iterations\", \"value\": 10},\r\n        }\r\n\r\n    def build(self, agents: List[Agent], tasks: List[Task], topic: Optional[str], verbose: int, max_iterations: int) -> Text:\r\n        \"\"\"Constrói o objeto Crew e executa as tarefas com os agentes coletados.\"\"\"\r\n        if not agents or not tasks:\r\n            raise ValueError(\"No agents or tasks have been added.\")\r\n        \r\n        inputs = {\r\n            'topic':topic\r\n        }\r\n        # Use the topic to guide the tasks or modify task execution context here if necessary\r\n        response = Crew(\r\n            agents=agents,\r\n            tasks=tasks,\r\n            verbose=verbose,\r\n            max_iterations=max_iterations\r\n        )\r\n        return response.kickoff(inputs=inputs)  # Assuming kickoff returns Text type or adjust accordingly\r\n\r\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "max_iterations": {
                "type": "int",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "2",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "max_iterations",
                "display_name": "Max Iterations",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "topic": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "topic",
                "display_name": "Topic",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              },
              "verbose": {
                "type": "int",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": 2,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "verbose",
                "display_name": "Verbose Level",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "_type": "CustomComponent"
            },
            "description": "This component initializes a crew to execute tasks with multiple agents.",
            "base_classes": [
              "object",
              "str",
              "Text"
            ],
            "display_name": "CrewAi",
            "documentation": "",
            "custom_fields": {
              "agents": null,
              "tasks": null,
              "topic": null,
              "verbose": null,
              "max_iterations": null
            },
            "output_types": [
              "Text"
            ],
            "field_formatters": {},
            "frozen": false,
            "field_order": [],
            "beta": false,
            "official": false,
            "outputs": [
              {
                "types": [
                  "Text"
                ],
                "selected": "Text",
                "name": "Text",
                "display_name": "Text"
              }
            ]
          },
          "id": "CustomComponent-9q782"
        },
        "selected": false,
        "width": 384,
        "height": 593,
        "dragging": false
      },
      {
        "id": "ChatOpenAISpecs-FEjNe",
        "type": "genericNode",
        "position": {
          "x": -208.806423664897,
          "y": 386.1225743114659
        },
        "data": {
          "type": "ChatOpenAISpecs",
          "node": {
            "template": {
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from typing import Optional\n\nfrom langchain_community.chat_models.openai import ChatOpenAI\n\nfrom axiestudio.base.models.openai_constants import MODEL_NAMES\nfrom axiestudio.field_typing import BaseLanguageModel, NestedDict\nfrom axiestudio.interface.custom.custom_component import CustomComponent\n\n\nclass ChatOpenAIComponent(CustomComponent):\n    display_name = \"ChatOpenAI\"\n    description = \"`OpenAI` Chat large language models API.\"\n    icon = \"OpenAI\"\n\n    def build_config(self):\n        return {\n            \"max_tokens\": {\n                \"display_name\": \"Max Tokens\",\n                \"advanced\": False,\n                \"required\": False,\n            },\n            \"model_kwargs\": {\n                \"display_name\": \"Model Kwargs\",\n                \"advanced\": True,\n                \"required\": False,\n            },\n            \"model_name\": {\"display_name\": \"Model Name\", \"advanced\": False, \"options\": MODEL_NAMES},\n            \"openai_api_base\": {\n                \"display_name\": \"OpenAI API Base\",\n                \"advanced\": False,\n                \"required\": False,\n                \"info\": (\n                    \"The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\\n\\n\"\n                    \"You can change this to use other APIs like JinaChat, LocalAI and Prem.\"\n                ),\n            },\n            \"openai_api_key\": {\n                \"display_name\": \"OpenAI API Key\",\n                \"advanced\": False,\n                \"required\": False,\n                \"password\": True,\n            },\n            \"temperature\": {\n                \"display_name\": \"Temperature\",\n                \"advanced\": False,\n                \"required\": False,\n                \"value\": 0.7,\n            },\n        }\n\n    def build(\n        self,\n        max_tokens: Optional[int] = 256,\n        model_kwargs: NestedDict = {},\n        model_name: str = \"gpt-4o\",\n        openai_api_base: Optional[str] = None,\n        openai_api_key: Optional[str] = None,\n        temperature: float = 0.7,\n    ) -> BaseLanguageModel:\n        if not openai_api_base:\n            openai_api_base = \"https://api.openai.com/v1\"\n        return ChatOpenAI(\n            max_tokens=max_tokens,\n            model_kwargs=model_kwargs,\n            model=model_name,\n            base_url=openai_api_base,\n            api_key=openai_api_key,\n            temperature=temperature,\n        )\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "max_tokens": {
                "type": "int",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "4096",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "model_kwargs": {
                "type": "NestedDict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": {},
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "model_kwargs",
                "display_name": "Model Kwargs",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "model_name": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "gpt-3.5-turbo",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "options": [
                  "gpt-4o",
                  "gpt-4-turbo",
                  "gpt-4-turbo-preview",
                  "gpt-3.5-turbo",
                  "gpt-3.5-turbo-0125"
                ],
                "name": "model_name",
                "display_name": "Model Name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              },
              "openai_api_base": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "openai_api_base",
                "display_name": "OpenAI API Base",
                "advanced": false,
                "dynamic": false,
                "info": "The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              },
              "openai_api_key": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": true,
                "name": "openai_api_key",
                "display_name": "OpenAI API Key",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": ""
              },
              "temperature": {
                "type": "float",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "0",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "temperature",
                "display_name": "Temperature",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "rangeSpec": {
                  "step_type": "float",
                  "min": -1,
                  "max": 1,
                  "step": 0.1
                },
                "load_from_db": false,
                "title_case": false
              },
              "_type": "CustomComponent"
            },
            "description": "`OpenAI` Chat large language models API.",
            "icon": "OpenAI",
            "base_classes": [
              "BaseLanguageModel",
              "Generic",
              "object",
              "Runnable",
              "RunnableSerializable",
              "Serializable"
            ],
            "display_name": "ChatOpenAI",
            "documentation": "",
            "custom_fields": {
              "max_tokens": null,
              "model_kwargs": null,
              "model_name": null,
              "openai_api_base": null,
              "openai_api_key": null,
              "temperature": null
            },
            "output_types": [
              "BaseLanguageModel"
            ],
            "field_formatters": {},
            "frozen": false,
            "field_order": [],
            "beta": false,
            "outputs": [
              {
                "types": [
                  "BaseLanguageModel"
                ],
                "name": "BaseLanguageModel",
                "display_name": "BaseLanguageModel"
              }
            ]
          },
          "id": "ChatOpenAISpecs-FEjNe"
        },
        "selected": false,
        "width": 384,
        "height": 643,
        "dragging": false
      },
      {
        "id": "CustomComponent-eb2Cw",
        "type": "genericNode",
        "position": {
          "x": 300.87425338653384,
          "y": 1211.2479826178942
        },
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "llm": {
                "type": "object",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "llm",
                "display_name": "Language Model",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "tools": {
                "type": "Tool",
                "required": false,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "tools",
                "display_name": "Tools",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "backstory": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "backstory",
                "display_name": "Backstory",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "Hábil em criar descrições de vagas atraentes que ressoam com os valores da empresa e atraem os candidatos certos."
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio import CustomComponent\r\nfrom axiestudio.field_typing import BaseLanguageModel, Tool\r\nfrom crewai import Agent\r\nfrom typing import List, Optional\r\n\r\nclass AgentCrewComponent(CustomComponent):\r\n    display_name: str = \"AgentCrew\"\r\n    description: str = \"This component initializes an agent with language model and tools.\"\r\n\r\n    def build_config(self):\r\n        return {\r\n            \"role\": {\"display_name\": \"Role\"},\r\n            \"goal\": {\"display_name\": \"Goal\"},\r\n            \"backstory\": {\"display_name\": \"Backstory\"},\r\n            \"tools\": {\"display_name\": \"Tools\", \"type\": \"list\", \"item_type\": \"object\", \"optional\": True},  # Torna a entrada opcional\r\n            \"llm\": {\"display_name\": \"Language Model\", \"field_type\": \"object\"},\r\n        }\r\n\r\n    def build(self, role: str, goal: str, backstory: str, llm: BaseLanguageModel, tools: Optional[List[Tool]] = None) -> Agent:\r\n        # Se \"tools\" não for especificado, define como uma lista vazia\r\n        if tools is None:\r\n            tools = []\r\n        \r\n        # Supondo que cada ferramenta na lista seja um objeto já inicializado e pronto para uso\r\n        return Agent(\r\n            role=role,\r\n            goal=goal,\r\n            backstory=backstory,\r\n            tools=tools,  # Passa a lista de ferramentas diretamente\r\n            llm=llm,\r\n            verbose=True\r\n        )\r\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "goal": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "goal",
                "display_name": "Goal",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "Usar os insights do Analista de Pesquisa para criar uma postagem de emprego detalhada, envolvente e atraente."
              },
              "role": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "role",
                "display_name": "Role",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "Escritor de Descrição de Vaga"
              },
              "_type": "CustomComponent"
            },
            "description": "This component initializes an agent with language model and tools.",
            "base_classes": [
              "Agent"
            ],
            "display_name": "AgentCrew",
            "documentation": "",
            "custom_fields": {
              "role": null,
              "goal": null,
              "backstory": null,
              "llm": null,
              "tools": null
            },
            "output_types": [
              "Agent"
            ],
            "field_formatters": {},
            "frozen": false,
            "field_order": [],
            "beta": false,
            "official": false,
            "outputs": [
              {
                "types": [
                  "Agent"
                ],
                "selected": "Agent",
                "name": "Agent",
                "display_name": "Agent"
              }
            ]
          },
          "id": "CustomComponent-eb2Cw"
        },
        "selected": false,
        "width": 384,
        "height": 593
      },
      {
        "id": "CustomComponent-Kd9vu",
        "type": "genericNode",
        "position": {
          "x": 773.2259256542015,
          "y": 1207.774319777483
        },
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "agent": {
                "type": "Agent",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "agent",
                "display_name": "Agent",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio import CustomComponent\r\nfrom axiestudio.field_typing import Data\r\nfrom crewai import Task, Agent\r\n\r\nclass TaskComponent(CustomComponent):\r\n    display_name: str = \"Create Task\"\r\n    description: str = \"This component creates a task for an agent.\"\r\n\r\n    def build_config(self):\r\n        return {\r\n            \"description\": {\"display_name\": \"Description\"},\r\n            \"expected_output\": {\"display_name\": \"Expected Output\"},\r\n            \"agent\": {\"display_name\": \"Agent\"},\r\n        }\r\n\r\n    def build(self, description: str, expected_output: str, agent: Agent) -> Task:\r\n        return Task(\r\n            description=description,\r\n            expected_output=expected_output,\r\n            agent=agent\r\n        )\r\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "description": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "description",
                "display_name": "Description",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "Redigir uma postagem de emprego para a função descrita pelo gerente de contratação. Use os insights sobre a empresa para iniciar com uma introdução envolvente, seguida por uma descrição detalhada da função, responsabilidades e habilidades e qualificações necessárias. Certifique-se de que o tom esteja alinhado com a cultura da empresa e incorpore quaisquer benefícios ou oportunidades únicas oferecidas pela empresa."
              },
              "expected_output": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "expected_output",
                "display_name": "Expected Output",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "Uma postagem de emprego detalhada e envolvente que inclui uma introdução, descrição da função, responsabilidades, requisitos e benefícios únicos da empresa. O tom deve ressoar com a cultura e valores da empresa, visando atrair os candidatos certos."
              },
              "_type": "CustomComponent"
            },
            "description": "This component creates a task for an agent.",
            "base_classes": [
              "Task"
            ],
            "display_name": "TaskCrew",
            "documentation": "",
            "custom_fields": {
              "description": null,
              "expected_output": null,
              "agent": null
            },
            "output_types": [
              "Task"
            ],
            "field_formatters": {},
            "frozen": false,
            "field_order": [],
            "beta": false,
            "official": false,
            "outputs": [
              {
                "types": [
                  "Task"
                ],
                "selected": "Task",
                "name": "Task",
                "display_name": "Task"
              }
            ]
          },
          "id": "CustomComponent-Kd9vu"
        },
        "selected": false,
        "width": 384,
        "height": 431
      },
      {
        "id": "ChatOpenAISpecs-i0rOh",
        "type": "genericNode",
        "position": {
          "x": -195.8262643509588,
          "y": 1224.3122039866885
        },
        "data": {
          "type": "ChatOpenAISpecs",
          "node": {
            "template": {
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from typing import Optional\n\nfrom langchain_community.chat_models.openai import ChatOpenAI\n\nfrom axiestudio.base.models.openai_constants import MODEL_NAMES\nfrom axiestudio.field_typing import BaseLanguageModel, NestedDict\nfrom axiestudio.interface.custom.custom_component import CustomComponent\n\n\nclass ChatOpenAIComponent(CustomComponent):\n    display_name = \"ChatOpenAI\"\n    description = \"`OpenAI` Chat large language models API.\"\n    icon = \"OpenAI\"\n\n    def build_config(self):\n        return {\n            \"max_tokens\": {\n                \"display_name\": \"Max Tokens\",\n                \"advanced\": False,\n                \"required\": False,\n            },\n            \"model_kwargs\": {\n                \"display_name\": \"Model Kwargs\",\n                \"advanced\": True,\n                \"required\": False,\n            },\n            \"model_name\": {\"display_name\": \"Model Name\", \"advanced\": False, \"options\": MODEL_NAMES},\n            \"openai_api_base\": {\n                \"display_name\": \"OpenAI API Base\",\n                \"advanced\": False,\n                \"required\": False,\n                \"info\": (\n                    \"The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\\n\\n\"\n                    \"You can change this to use other APIs like JinaChat, LocalAI and Prem.\"\n                ),\n            },\n            \"openai_api_key\": {\n                \"display_name\": \"OpenAI API Key\",\n                \"advanced\": False,\n                \"required\": False,\n                \"password\": True,\n            },\n            \"temperature\": {\n                \"display_name\": \"Temperature\",\n                \"advanced\": False,\n                \"required\": False,\n                \"value\": 0.7,\n            },\n        }\n\n    def build(\n        self,\n        max_tokens: Optional[int] = 256,\n        model_kwargs: NestedDict = {},\n        model_name: str = \"gpt-4o\",\n        openai_api_base: Optional[str] = None,\n        openai_api_key: Optional[str] = None,\n        temperature: float = 0.7,\n    ) -> BaseLanguageModel:\n        if not openai_api_base:\n            openai_api_base = \"https://api.openai.com/v1\"\n        return ChatOpenAI(\n            max_tokens=max_tokens,\n            model_kwargs=model_kwargs,\n            model=model_name,\n            base_url=openai_api_base,\n            api_key=openai_api_key,\n            temperature=temperature,\n        )\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "max_tokens": {
                "type": "int",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "4096",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "model_kwargs": {
                "type": "NestedDict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": {},
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "model_kwargs",
                "display_name": "Model Kwargs",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "model_name": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "gpt-3.5-turbo",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "options": [
                  "gpt-4o",
                  "gpt-4-turbo",
                  "gpt-4-turbo-preview",
                  "gpt-3.5-turbo",
                  "gpt-3.5-turbo-0125"
                ],
                "name": "model_name",
                "display_name": "Model Name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              },
              "openai_api_base": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "openai_api_base",
                "display_name": "OpenAI API Base",
                "advanced": false,
                "dynamic": false,
                "info": "The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              },
              "openai_api_key": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": true,
                "name": "openai_api_key",
                "display_name": "OpenAI API Key",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": ""
              },
              "temperature": {
                "type": "float",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "0",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "temperature",
                "display_name": "Temperature",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "rangeSpec": {
                  "step_type": "float",
                  "min": -1,
                  "max": 1,
                  "step": 0.1
                },
                "load_from_db": false,
                "title_case": false
              },
              "_type": "CustomComponent"
            },
            "description": "`OpenAI` Chat large language models API.",
            "icon": "OpenAI",
            "base_classes": [
              "BaseLanguageModel",
              "Generic",
              "object",
              "Runnable",
              "RunnableSerializable",
              "Serializable"
            ],
            "display_name": "ChatOpenAI",
            "documentation": "",
            "custom_fields": {
              "max_tokens": null,
              "model_kwargs": null,
              "model_name": null,
              "openai_api_base": null,
              "openai_api_key": null,
              "temperature": null
            },
            "output_types": [
              "BaseLanguageModel"
            ],
            "field_formatters": {},
            "frozen": false,
            "field_order": [],
            "beta": false,
            "outputs": [
              {
                "types": [
                  "BaseLanguageModel"
                ],
                "name": "BaseLanguageModel",
                "display_name": "BaseLanguageModel"
              }
            ]
          },
          "id": "ChatOpenAISpecs-i0rOh"
        },
        "selected": false,
        "width": 384,
        "height": 643,
        "dragging": false
      },
      {
        "id": "CustomComponent-l4UBv",
        "type": "genericNode",
        "position": {
          "x": 301.0906606941612,
          "y": 1986.781974800998
        },
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "llm": {
                "type": "object",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "llm",
                "display_name": "Language Model",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "tools": {
                "type": "Tool",
                "required": false,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "tools",
                "display_name": "Tools",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "backstory": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "backstory",
                "display_name": "Backstory",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "Um editor meticuloso com um olhar para detalhes, garantindo que todo conteúdo seja claro, envolvente e gramaticalmente perfeito, além de garantir que está correto a vaga solicitada."
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio import CustomComponent\r\nfrom axiestudio.field_typing import BaseLanguageModel, Tool\r\nfrom crewai import Agent\r\nfrom typing import List, Optional\r\n\r\nclass AgentCrewComponent(CustomComponent):\r\n    display_name: str = \"AgentCrew\"\r\n    description: str = \"This component initializes an agent with language model and tools.\"\r\n\r\n    def build_config(self):\r\n        return {\r\n            \"role\": {\"display_name\": \"Role\"},\r\n            \"goal\": {\"display_name\": \"Goal\"},\r\n            \"backstory\": {\"display_name\": \"Backstory\"},\r\n            \"tools\": {\"display_name\": \"Tools\", \"type\": \"list\", \"item_type\": \"object\", \"optional\": True},  # Torna a entrada opcional\r\n            \"llm\": {\"display_name\": \"Language Model\", \"field_type\": \"object\"},\r\n        }\r\n\r\n    def build(self, role: str, goal: str, backstory: str, llm: BaseLanguageModel, tools: Optional[List[Tool]] = None) -> Agent:\r\n        # Se \"tools\" não for especificado, define como uma lista vazia\r\n        if tools is None:\r\n            tools = []\r\n        \r\n        # Supondo que cada ferramenta na lista seja um objeto já inicializado e pronto para uso\r\n        return Agent(\r\n            role=role,\r\n            goal=goal,\r\n            backstory=backstory,\r\n            tools=tools,  # Passa a lista de ferramentas diretamente\r\n            llm=llm,\r\n            verbose=True\r\n        )\r\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "goal": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "goal",
                "display_name": "Goal",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "Revisar a postagem de emprego para clareza, envolvimento, precisão gramatical e alinhamento com os valores da empresa, refinando-a para garantir a perfeição."
              },
              "role": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "role",
                "display_name": "Role",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "Especialista em Revisão e Edição"
              },
              "_type": "CustomComponent"
            },
            "description": "This component initializes an agent with language model and tools.",
            "base_classes": [
              "Agent"
            ],
            "display_name": "AgentCrew",
            "documentation": "",
            "custom_fields": {
              "role": null,
              "goal": null,
              "backstory": null,
              "llm": null,
              "tools": null
            },
            "output_types": [
              "Agent"
            ],
            "field_formatters": {},
            "frozen": false,
            "field_order": [],
            "beta": false,
            "official": false,
            "outputs": [
              {
                "types": [
                  "Agent"
                ],
                "selected": "Agent",
                "name": "Agent",
                "display_name": "Agent"
              }
            ]
          },
          "id": "CustomComponent-l4UBv"
        },
        "selected": false,
        "width": 384,
        "height": 593
      },
      {
        "id": "CustomComponent-MO3RU",
        "type": "genericNode",
        "position": {
          "x": 794.5544595341948,
          "y": 1983.3083119605863
        },
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "agent": {
                "type": "Agent",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "agent",
                "display_name": "Agent",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio import CustomComponent\r\nfrom axiestudio.field_typing import Data\r\nfrom crewai import Task, Agent\r\n\r\nclass TaskComponent(CustomComponent):\r\n    display_name: str = \"Create Task\"\r\n    description: str = \"This component creates a task for an agent.\"\r\n\r\n    def build_config(self):\r\n        return {\r\n            \"description\": {\"display_name\": \"Description\"},\r\n            \"expected_output\": {\"display_name\": \"Expected Output\"},\r\n            \"agent\": {\"display_name\": \"Agent\"},\r\n        }\r\n\r\n    def build(self, description: str, expected_output: str, agent: Agent) -> Task:\r\n        return Task(\r\n            description=description,\r\n            expected_output=expected_output,\r\n            agent=agent\r\n        )\r\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "description": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "description",
                "display_name": "Description",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "Revisar a postagem de emprego para a função. Verifique a clareza, envolvimento, precisão gramatical e alinhamento com a cultura e valores da empresa. Edite e refine o conteúdo, garantindo que ele fale diretamente aos candidatos desejados e reflita com precisão os benefícios e oportunidades únicas da função. Forneça feedback para quaisquer revisões necessárias."
              },
              "expected_output": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "expected_output",
                "display_name": "Expected Output",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "Uma postagem de emprego polida e sem erros que seja clara, envolvente e perfeitamente alinhada com a cultura e valores da empresa. Feedback sobre melhorias potenciais e aprovação final para publicação. Formato em markdown."
              },
              "_type": "CustomComponent"
            },
            "description": "This component creates a task for an agent.",
            "base_classes": [
              "Task"
            ],
            "display_name": "TaskCrew",
            "documentation": "",
            "custom_fields": {
              "description": null,
              "expected_output": null,
              "agent": null
            },
            "output_types": [
              "Task"
            ],
            "field_formatters": {},
            "frozen": false,
            "field_order": [],
            "beta": false,
            "official": false,
            "outputs": [
              {
                "types": [
                  "Task"
                ],
                "selected": "Task",
                "name": "Task",
                "display_name": "Task"
              }
            ]
          },
          "id": "CustomComponent-MO3RU"
        },
        "selected": false,
        "width": 384,
        "height": 431
      },
      {
        "id": "ChatOpenAISpecs-L8wJN",
        "type": "genericNode",
        "position": {
          "x": -222.00001525878906,
          "y": 1994.5681645267
        },
        "data": {
          "type": "ChatOpenAISpecs",
          "node": {
            "template": {
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from typing import Optional\n\nfrom langchain_community.chat_models.openai import ChatOpenAI\n\nfrom axiestudio.base.models.openai_constants import MODEL_NAMES\nfrom axiestudio.field_typing import BaseLanguageModel, NestedDict\nfrom axiestudio.interface.custom.custom_component import CustomComponent\n\n\nclass ChatOpenAIComponent(CustomComponent):\n    display_name = \"ChatOpenAI\"\n    description = \"`OpenAI` Chat large language models API.\"\n    icon = \"OpenAI\"\n\n    def build_config(self):\n        return {\n            \"max_tokens\": {\n                \"display_name\": \"Max Tokens\",\n                \"advanced\": False,\n                \"required\": False,\n            },\n            \"model_kwargs\": {\n                \"display_name\": \"Model Kwargs\",\n                \"advanced\": True,\n                \"required\": False,\n            },\n            \"model_name\": {\"display_name\": \"Model Name\", \"advanced\": False, \"options\": MODEL_NAMES},\n            \"openai_api_base\": {\n                \"display_name\": \"OpenAI API Base\",\n                \"advanced\": False,\n                \"required\": False,\n                \"info\": (\n                    \"The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\\n\\n\"\n                    \"You can change this to use other APIs like JinaChat, LocalAI and Prem.\"\n                ),\n            },\n            \"openai_api_key\": {\n                \"display_name\": \"OpenAI API Key\",\n                \"advanced\": False,\n                \"required\": False,\n                \"password\": True,\n            },\n            \"temperature\": {\n                \"display_name\": \"Temperature\",\n                \"advanced\": False,\n                \"required\": False,\n                \"value\": 0.7,\n            },\n        }\n\n    def build(\n        self,\n        max_tokens: Optional[int] = 256,\n        model_kwargs: NestedDict = {},\n        model_name: str = \"gpt-4o\",\n        openai_api_base: Optional[str] = None,\n        openai_api_key: Optional[str] = None,\n        temperature: float = 0.7,\n    ) -> BaseLanguageModel:\n        if not openai_api_base:\n            openai_api_base = \"https://api.openai.com/v1\"\n        return ChatOpenAI(\n            max_tokens=max_tokens,\n            model_kwargs=model_kwargs,\n            model=model_name,\n            base_url=openai_api_base,\n            api_key=openai_api_key,\n            temperature=temperature,\n        )\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "max_tokens": {
                "type": "int",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "4096",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "model_kwargs": {
                "type": "NestedDict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": {},
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "model_kwargs",
                "display_name": "Model Kwargs",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "model_name": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "gpt-3.5-turbo",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "options": [
                  "gpt-4o",
                  "gpt-4-turbo",
                  "gpt-4-turbo-preview",
                  "gpt-3.5-turbo",
                  "gpt-3.5-turbo-0125"
                ],
                "name": "model_name",
                "display_name": "Model Name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              },
              "openai_api_base": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "openai_api_base",
                "display_name": "OpenAI API Base",
                "advanced": false,
                "dynamic": false,
                "info": "The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              },
              "openai_api_key": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": true,
                "name": "openai_api_key",
                "display_name": "OpenAI API Key",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": ""
              },
              "temperature": {
                "type": "float",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "0",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "temperature",
                "display_name": "Temperature",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "rangeSpec": {
                  "step_type": "float",
                  "min": -1,
                  "max": 1,
                  "step": 0.1
                },
                "load_from_db": false,
                "title_case": false
              },
              "_type": "CustomComponent"
            },
            "description": "`OpenAI` Chat large language models API.",
            "icon": "OpenAI",
            "base_classes": [
              "BaseLanguageModel",
              "Generic",
              "object",
              "Runnable",
              "RunnableSerializable",
              "Serializable"
            ],
            "display_name": "ChatOpenAI",
            "documentation": "",
            "custom_fields": {
              "max_tokens": null,
              "model_kwargs": null,
              "model_name": null,
              "openai_api_base": null,
              "openai_api_key": null,
              "temperature": null
            },
            "output_types": [
              "BaseLanguageModel"
            ],
            "field_formatters": {},
            "frozen": false,
            "field_order": [],
            "beta": false,
            "outputs": [
              {
                "types": [
                  "BaseLanguageModel"
                ],
                "name": "BaseLanguageModel",
                "display_name": "BaseLanguageModel"
              }
            ]
          },
          "id": "ChatOpenAISpecs-L8wJN"
        },
        "selected": false,
        "width": 384,
        "height": 643,
        "dragging": false
      },
      {
        "id": "SearchAPITool-juDP5",
        "type": "genericNode",
        "position": {
          "x": -195.53610929762783,
          "y": -36.017860412597656
        },
        "data": {
          "type": "SearchAPITool",
          "node": {
            "template": {
              "api_key": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": true,
                "name": "api_key",
                "display_name": "API Key",
                "advanced": false,
                "dynamic": false,
                "info": "The API key to use SearchApi.",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": ""
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from langchain_community.tools.searchapi import SearchAPIRun\nfrom langchain_community.utilities.searchapi import SearchApiAPIWrapper\n\nfrom axiestudio.custom import CustomComponent\nfrom axiestudio.field_typing import Tool\n\n\nclass SearchApiToolComponent(CustomComponent):\n    display_name: str = \"SearchApi Tool\"\n    description: str = \"Real-time search engine results API.\"\n    documentation: str = \"https://www.searchapi.io/docs/google\"\n    field_config = {\n        \"engine\": {\n            \"display_name\": \"Engine\",\n            \"field_type\": \"str\",\n            \"info\": \"The search engine to use.\",\n        },\n        \"api_key\": {\n            \"display_name\": \"API Key\",\n            \"field_type\": \"str\",\n            \"required\": True,\n            \"password\": True,\n            \"info\": \"The API key to use SearchApi.\",\n        },\n    }\n\n    def build(\n        self,\n        engine: str,\n        api_key: str,\n    ) -> Tool:\n        search_api_wrapper = SearchApiAPIWrapper(engine=engine, searchapi_api_key=api_key)\n\n        tool = SearchAPIRun(api_wrapper=search_api_wrapper)\n\n        self.status = tool\n        return tool  # type: ignore\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "engine": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "engine",
                "display_name": "Engine",
                "advanced": false,
                "dynamic": false,
                "info": "The search engine to use.",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "google"
              },
              "_type": "CustomComponent"
            },
            "description": "Real-time search engine results API.",
            "base_classes": [
              "BaseTool",
              "Generic",
              "object",
              "Runnable",
              "RunnableSerializable",
              "Serializable",
              "Tool"
            ],
            "display_name": "SearchApi Tool",
            "documentation": "https://www.searchapi.io/docs/google",
            "custom_fields": {
              "engine": null,
              "api_key": null
            },
            "output_types": [
              "Tool"
            ],
            "field_formatters": {},
            "frozen": false,
            "field_order": [
              "engine",
              "api_key"
            ],
            "beta": false,
            "outputs": [
              {
                "types": [
                  "Tool"
                ],
                "selected": "Tool",
                "name": "Tool",
                "display_name": "Tool"
              }
            ]
          },
          "id": "SearchAPITool-juDP5"
        },
        "selected": false,
        "width": 384,
        "height": 383
      }
    ],
    "edges": [
      {
        "source": "CustomComponent-nNCg1",
        "target": "CustomComponent-9P5Rg",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-nNCg1œ,œnameœ:œAgentœ,œoutput_typesœ:[œAgentœ]}",
        "targetHandle": "{œfieldNameœ:œagentœ,œidœ:œCustomComponent-9P5Rgœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
        "id": "reactflow__edge-CustomComponent-nNCg1{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-nNCg1œ,œnameœ:œAgentœ,œoutput_typesœ:[œAgentœ]}-CustomComponent-9P5Rg{œfieldNameœ:œagentœ,œidœ:œCustomComponent-9P5Rgœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
        "data": {
          "targetHandle": {
            "fieldName": "agent",
            "id": "CustomComponent-9P5Rg",
            "inputTypes": null,
            "type": "Agent"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-nNCg1",
            "name": "Agent",
            "output_types": [
              "Agent"
            ]
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "",
        "selected": false
      },
      {
        "source": "CustomComponent-9q782",
        "target": "ChatOutput-bcKLB",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-9q782œ,œnameœ:œTextœ,œoutput_typesœ:[œTextœ]}",
        "targetHandle": "{œfieldNameœ:œinput_valueœ,œidœ:œChatOutput-bcKLBœ,œinputTypesœ:[œTextœ],œtypeœ:œstrœ}",
        "id": "reactflow__edge-CustomComponent-9q782{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-9q782œ,œnameœ:œTextœ,œoutput_typesœ:[œTextœ]}-ChatOutput-bcKLB{œfieldNameœ:œinput_valueœ,œidœ:œChatOutput-bcKLBœ,œinputTypesœ:[œTextœ],œtypeœ:œstrœ}",
        "data": {
          "targetHandle": {
            "fieldName": "input_value",
            "id": "ChatOutput-bcKLB",
            "inputTypes": [
              "Text"
            ],
            "type": "str"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-9q782",
            "name": "Text",
            "output_types": [
              "Text"
            ]
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "",
        "selected": false
      },
      {
        "source": "CustomComponent-9P5Rg",
        "target": "CustomComponent-9q782",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-9P5Rgœ,œnameœ:œTaskœ,œoutput_typesœ:[œTaskœ]}",
        "targetHandle": "{œfieldNameœ:œtasksœ,œidœ:œCustomComponent-9q782œ,œinputTypesœ:null,œtypeœ:œTaskœ}",
        "id": "reactflow__edge-CustomComponent-9P5Rg{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-9P5Rgœ,œnameœ:œTaskœ,œoutput_typesœ:[œTaskœ]}-CustomComponent-9q782{œfieldNameœ:œtasksœ,œidœ:œCustomComponent-9q782œ,œinputTypesœ:null,œtypeœ:œTaskœ}",
        "data": {
          "targetHandle": {
            "fieldName": "tasks",
            "id": "CustomComponent-9q782",
            "inputTypes": null,
            "type": "Task"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-9P5Rg",
            "name": "Task",
            "output_types": [
              "Task"
            ]
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "",
        "selected": false
      },
      {
        "source": "CustomComponent-nNCg1",
        "target": "CustomComponent-9q782",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-nNCg1œ,œnameœ:œAgentœ,œoutput_typesœ:[œAgentœ]}",
        "targetHandle": "{œfieldNameœ:œagentsœ,œidœ:œCustomComponent-9q782œ,œinputTypesœ:null,œtypeœ:œAgentœ}",
        "id": "reactflow__edge-CustomComponent-nNCg1{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-nNCg1œ,œnameœ:œAgentœ,œoutput_typesœ:[œAgentœ]}-CustomComponent-9q782{œfieldNameœ:œagentsœ,œidœ:œCustomComponent-9q782œ,œinputTypesœ:null,œtypeœ:œAgentœ}",
        "data": {
          "targetHandle": {
            "fieldName": "agents",
            "id": "CustomComponent-9q782",
            "inputTypes": null,
            "type": "Agent"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-nNCg1",
            "name": "Agent",
            "output_types": [
              "Agent"
            ]
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "",
        "selected": false
      },
      {
        "source": "CustomComponent-eb2Cw",
        "target": "CustomComponent-Kd9vu",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-eb2Cwœ,œnameœ:œAgentœ,œoutput_typesœ:[œAgentœ]}",
        "targetHandle": "{œfieldNameœ:œagentœ,œidœ:œCustomComponent-Kd9vuœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
        "id": "reactflow__edge-CustomComponent-eb2Cw{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-eb2Cwœ,œnameœ:œAgentœ,œoutput_typesœ:[œAgentœ]}-CustomComponent-Kd9vu{œfieldNameœ:œagentœ,œidœ:œCustomComponent-Kd9vuœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
        "data": {
          "targetHandle": {
            "fieldName": "agent",
            "id": "CustomComponent-Kd9vu",
            "inputTypes": null,
            "type": "Agent"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-eb2Cw",
            "name": "Agent",
            "output_types": [
              "Agent"
            ]
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "",
        "selected": false
      },
      {
        "source": "CustomComponent-Kd9vu",
        "target": "CustomComponent-9q782",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-Kd9vuœ,œnameœ:œTaskœ,œoutput_typesœ:[œTaskœ]}",
        "targetHandle": "{œfieldNameœ:œtasksœ,œidœ:œCustomComponent-9q782œ,œinputTypesœ:null,œtypeœ:œTaskœ}",
        "id": "reactflow__edge-CustomComponent-Kd9vu{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-Kd9vuœ,œnameœ:œTaskœ,œoutput_typesœ:[œTaskœ]}-CustomComponent-9q782{œfieldNameœ:œtasksœ,œidœ:œCustomComponent-9q782œ,œinputTypesœ:null,œtypeœ:œTaskœ}",
        "data": {
          "targetHandle": {
            "fieldName": "tasks",
            "id": "CustomComponent-9q782",
            "inputTypes": null,
            "type": "Task"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-Kd9vu",
            "name": "Task",
            "output_types": [
              "Task"
            ]
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "",
        "selected": false
      },
      {
        "source": "CustomComponent-eb2Cw",
        "target": "CustomComponent-9q782",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-eb2Cwœ,œnameœ:œAgentœ,œoutput_typesœ:[œAgentœ]}",
        "targetHandle": "{œfieldNameœ:œagentsœ,œidœ:œCustomComponent-9q782œ,œinputTypesœ:null,œtypeœ:œAgentœ}",
        "id": "reactflow__edge-CustomComponent-eb2Cw{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-eb2Cwœ,œnameœ:œAgentœ,œoutput_typesœ:[œAgentœ]}-CustomComponent-9q782{œfieldNameœ:œagentsœ,œidœ:œCustomComponent-9q782œ,œinputTypesœ:null,œtypeœ:œAgentœ}",
        "data": {
          "targetHandle": {
            "fieldName": "agents",
            "id": "CustomComponent-9q782",
            "inputTypes": null,
            "type": "Agent"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-eb2Cw",
            "name": "Agent",
            "output_types": [
              "Agent"
            ]
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "",
        "selected": false
      },
      {
        "source": "CustomComponent-l4UBv",
        "target": "CustomComponent-MO3RU",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-l4UBvœ,œnameœ:œAgentœ,œoutput_typesœ:[œAgentœ]}",
        "targetHandle": "{œfieldNameœ:œagentœ,œidœ:œCustomComponent-MO3RUœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
        "id": "reactflow__edge-CustomComponent-l4UBv{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-l4UBvœ,œnameœ:œAgentœ,œoutput_typesœ:[œAgentœ]}-CustomComponent-MO3RU{œfieldNameœ:œagentœ,œidœ:œCustomComponent-MO3RUœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
        "data": {
          "targetHandle": {
            "fieldName": "agent",
            "id": "CustomComponent-MO3RU",
            "inputTypes": null,
            "type": "Agent"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-l4UBv",
            "name": "Agent",
            "output_types": [
              "Agent"
            ]
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "",
        "selected": false
      },
      {
        "source": "CustomComponent-MO3RU",
        "target": "CustomComponent-9q782",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-MO3RUœ,œnameœ:œTaskœ,œoutput_typesœ:[œTaskœ]}",
        "targetHandle": "{œfieldNameœ:œtasksœ,œidœ:œCustomComponent-9q782œ,œinputTypesœ:null,œtypeœ:œTaskœ}",
        "id": "reactflow__edge-CustomComponent-MO3RU{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-MO3RUœ,œnameœ:œTaskœ,œoutput_typesœ:[œTaskœ]}-CustomComponent-9q782{œfieldNameœ:œtasksœ,œidœ:œCustomComponent-9q782œ,œinputTypesœ:null,œtypeœ:œTaskœ}",
        "data": {
          "targetHandle": {
            "fieldName": "tasks",
            "id": "CustomComponent-9q782",
            "inputTypes": null,
            "type": "Task"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-MO3RU",
            "name": "Task",
            "output_types": [
              "Task"
            ]
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "",
        "selected": false
      },
      {
        "source": "CustomComponent-l4UBv",
        "target": "CustomComponent-9q782",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-l4UBvœ,œnameœ:œAgentœ,œoutput_typesœ:[œAgentœ]}",
        "targetHandle": "{œfieldNameœ:œagentsœ,œidœ:œCustomComponent-9q782œ,œinputTypesœ:null,œtypeœ:œAgentœ}",
        "id": "reactflow__edge-CustomComponent-l4UBv{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-l4UBvœ,œnameœ:œAgentœ,œoutput_typesœ:[œAgentœ]}-CustomComponent-9q782{œfieldNameœ:œagentsœ,œidœ:œCustomComponent-9q782œ,œinputTypesœ:null,œtypeœ:œAgentœ}",
        "data": {
          "targetHandle": {
            "fieldName": "agents",
            "id": "CustomComponent-9q782",
            "inputTypes": null,
            "type": "Agent"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-l4UBv",
            "name": "Agent",
            "output_types": [
              "Agent"
            ]
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "",
        "selected": false
      },
      {
        "source": "SearchAPITool-juDP5",
        "target": "CustomComponent-nNCg1",
        "sourceHandle": "{œdataTypeœ:œSearchAPIToolœ,œidœ:œSearchAPITool-juDP5œ,œnameœ:œToolœ,œoutput_typesœ:[œToolœ]}",
        "targetHandle": "{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-nNCg1œ,œinputTypesœ:null,œtypeœ:œToolœ}",
        "id": "reactflow__edge-SearchAPITool-juDP5{œdataTypeœ:œSearchAPIToolœ,œidœ:œSearchAPITool-juDP5œ,œnameœ:œToolœ,œoutput_typesœ:[œToolœ]}-CustomComponent-nNCg1{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-nNCg1œ,œinputTypesœ:null,œtypeœ:œToolœ}",
        "data": {
          "targetHandle": {
            "fieldName": "tools",
            "id": "CustomComponent-nNCg1",
            "inputTypes": null,
            "type": "Tool"
          },
          "sourceHandle": {
            "dataType": "SearchAPITool",
            "id": "SearchAPITool-juDP5",
            "name": "Tool",
            "output_types": [
              "Tool"
            ]
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "",
        "selected": false
      }
    ],
    "viewport": {
      "x": 641.2552370922988,
      "y": -7.267540413809968,
      "zoom": 0.22793062213955456
    }
  },
  "metadata": {
    "ChatInput": {
      "count": 1
    },
    "ChatOutput": {
      "count": 1
    },
    "CustomComponent": {
      "count": 7
    },
    "ChatOpenAISpecs": {
      "count": 3
    },
    "SearchAPITool": {
      "count": 1
    },
    "total": 13
  },
  "original": {
    "id": "4eecb287-d75d-45a5-8858-3cc578c689e3",
    "name": "Crewai Flow",
    "description": "example 3 agents with crewai",
    "is_component": false,
    "liked_by_count": "5",
    "downloads_count": "71",
    "metadata": {
      "ChatInput": {
        "count": 1
      },
      "ChatOutput": {
        "count": 1
      },
      "CustomComponent": {
        "count": 7
      },
      "ChatOpenAISpecs": {
        "count": 3
      },
      "SearchAPITool": {
        "count": 1
      },
      "total": 13
    },
    "last_tested_version": "1.0.15",
    "private": false,
    "data": {
      "nodes": [
        {
          "id": "ChatInput-sW99D",
          "type": "genericNode",
          "position": {
            "x": 2643.296511876612,
            "y": 473.8393357805752
          },
          "data": {
            "type": "ChatInput",
            "node": {
              "template": {
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from typing import Optional, Union\n\nfrom axiestudio.base.io.chat import ChatComponent\nfrom axiestudio.field_typing import Text\nfrom axiestudio.schema import Record\n\n\nclass ChatInput(ChatComponent):\n    display_name = \"Chat Input\"\n    description = \"Get chat inputs from the Interaction Panel.\"\n    icon = \"ChatInput\"\n\n    def build_config(self):\n        build_config = super().build_config()\n        build_config[\"input_value\"] = {\n            \"input_types\": [],\n            \"display_name\": \"Message\",\n            \"multiline\": True,\n        }\n\n        return build_config\n\n    def build(\n        self,\n        sender: Optional[str] = \"User\",\n        sender_name: Optional[str] = \"User\",\n        input_value: Optional[str] = None,\n        session_id: Optional[str] = None,\n        return_record: Optional[bool] = False,\n    ) -> Union[Text, Record]:\n        return super().build_no_record(\n            sender=sender,\n            sender_name=sender_name,\n            input_value=input_value,\n            session_id=session_id,\n            return_record=return_record,\n        )\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "input_value": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "input_value",
                  "display_name": "Message",
                  "advanced": false,
                  "input_types": [],
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "value": "Utilizando informações sobre a cultura e valores da Magalu, crie uma publicação de vaga atraente para a posição de Especialista em Inteligência Artificial. A postagem deve incluir uma introdução envolvente, descrição detalhada da função, responsabilidades, requisitos e benefícios únicos oferecidos pela empresa. Certifique-se de que o tom ressoe com a cultura da Magalu e atraia candidatos que se alinhem com os valores e a missão da empresa."
                },
                "return_record": {
                  "type": "bool",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "return_record",
                  "display_name": "Return Record",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Return the message as a record containing the sender, sender_name, and session_id.",
                  "load_from_db": false,
                  "title_case": false
                },
                "sender": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "User",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "options": [
                    "Machine",
                    "User"
                  ],
                  "name": "sender",
                  "display_name": "Sender Type",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                },
                "sender_name": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "Guilherme",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "sender_name",
                  "display_name": "Sender Name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                },
                "session_id": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "session_id",
                  "display_name": "Session ID",
                  "advanced": true,
                  "dynamic": false,
                  "info": "If provided, the message will be stored in the memory.",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                },
                "_type": "CustomComponent"
              },
              "description": "Get chat inputs from the Interaction Panel.",
              "icon": "ChatInput",
              "base_classes": [
                "object",
                "Record",
                "str",
                "Text"
              ],
              "display_name": "Chat Input",
              "documentation": "",
              "custom_fields": {
                "sender": null,
                "sender_name": null,
                "input_value": null,
                "session_id": null,
                "return_record": null
              },
              "output_types": [
                "Text",
                "Record"
              ],
              "field_formatters": {},
              "frozen": false,
              "field_order": [],
              "beta": false,
              "outputs": [
                {
                  "types": [
                    "Text",
                    "Record"
                  ],
                  "selected": "Text",
                  "name": "Text | Record",
                  "display_name": "Text | Record"
                }
              ]
            },
            "id": "ChatInput-sW99D"
          },
          "selected": false,
          "width": 384,
          "height": 383
        },
        {
          "id": "ChatOutput-bcKLB",
          "type": "genericNode",
          "position": {
            "x": 2578.185269843795,
            "y": 1837.239338531694
          },
          "data": {
            "type": "ChatOutput",
            "node": {
              "template": {
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from typing import Optional, Union\n\nfrom axiestudio.base.io.chat import ChatComponent\nfrom axiestudio.field_typing import Text\nfrom axiestudio.schema import Record\n\n\nclass ChatOutput(ChatComponent):\n    display_name = \"Chat Output\"\n    description = \"Display a chat message in the Interaction Panel.\"\n    icon = \"ChatOutput\"\n\n    def build(\n        self,\n        sender: Optional[str] = \"Machine\",\n        sender_name: Optional[str] = \"AI\",\n        input_value: Optional[str] = None,\n        session_id: Optional[str] = None,\n        return_record: Optional[bool] = False,\n        record_template: Optional[str] = \"{text}\",\n    ) -> Union[Text, Record]:\n        return super().build_with_record(\n            sender=sender,\n            sender_name=sender_name,\n            input_value=input_value,\n            session_id=session_id,\n            return_record=return_record,\n            record_template=record_template or \"\",\n        )\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "input_value": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "input_value",
                  "display_name": "Message",
                  "advanced": false,
                  "input_types": [
                    "Text"
                  ],
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "record_template": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "{text}",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "record_template",
                  "display_name": "Record Template",
                  "advanced": true,
                  "dynamic": false,
                  "info": "In case of Message being a Record, this template will be used to convert it to text.",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                },
                "return_record": {
                  "type": "bool",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "return_record",
                  "display_name": "Return Record",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Return the message as a record containing the sender, sender_name, and session_id.",
                  "load_from_db": false,
                  "title_case": false
                },
                "sender": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "Machine",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "options": [
                    "Machine",
                    "User"
                  ],
                  "name": "sender",
                  "display_name": "Sender Type",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                },
                "sender_name": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "AI",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "sender_name",
                  "display_name": "Sender Name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                },
                "session_id": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "session_id",
                  "display_name": "Session ID",
                  "advanced": true,
                  "dynamic": false,
                  "info": "If provided, the message will be stored in the memory.",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                },
                "_type": "CustomComponent"
              },
              "description": "Display a chat message in the Interaction Panel.",
              "icon": "ChatOutput",
              "base_classes": [
                "object",
                "Record",
                "str",
                "Text"
              ],
              "display_name": "Chat Output",
              "documentation": "",
              "custom_fields": {
                "sender": null,
                "sender_name": null,
                "input_value": null,
                "session_id": null,
                "return_record": null,
                "record_template": null
              },
              "output_types": [
                "Text",
                "Record"
              ],
              "field_formatters": {},
              "frozen": false,
              "field_order": [],
              "beta": false
            },
            "id": "ChatOutput-bcKLB"
          },
          "selected": false,
          "width": 384,
          "height": 341
        },
        {
          "id": "CustomComponent-nNCg1",
          "type": "genericNode",
          "position": {
            "x": 281.83122780655367,
            "y": 382.1526523417341
          },
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "llm": {
                  "type": "object",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "llm",
                  "display_name": "Language Model",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "tools": {
                  "type": "Tool",
                  "required": false,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "tools",
                  "display_name": "Tools",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "backstory": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "backstory",
                  "display_name": "Backstory",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "Especialista em analisar culturas empresariais e identificar valores e necessidades chave a partir de várias fontes, incluindo sites e descrições breves."
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio import CustomComponent\r\nfrom axiestudio.field_typing import BaseLanguageModel, Tool\r\nfrom crewai import Agent\r\nfrom typing import List, Optional\r\n\r\nclass AgentCrewComponent(CustomComponent):\r\n    display_name: str = \"AgentCrew\"\r\n    description: str = \"This component initializes an agent with language model and tools.\"\r\n\r\n    def build_config(self):\r\n        return {\r\n            \"role\": {\"display_name\": \"Role\"},\r\n            \"goal\": {\"display_name\": \"Goal\"},\r\n            \"backstory\": {\"display_name\": \"Backstory\"},\r\n            \"tools\": {\"display_name\": \"Tools\", \"type\": \"list\", \"item_type\": \"object\", \"optional\": True},  # Torna a entrada opcional\r\n            \"llm\": {\"display_name\": \"Language Model\", \"field_type\": \"object\"},\r\n        }\r\n\r\n    def build(self, role: str, goal: str, backstory: str, llm: BaseLanguageModel, tools: Optional[List[Tool]] = None) -> Agent:\r\n        # Se \"tools\" não for especificado, define como uma lista vazia\r\n        if tools is None:\r\n            tools = []\r\n        \r\n        # Supondo que cada ferramenta na lista seja um objeto já inicializado e pronto para uso\r\n        return Agent(\r\n            role=role,\r\n            goal=goal,\r\n            backstory=backstory,\r\n            tools=tools,  # Passa a lista de ferramentas diretamente\r\n            llm=llm,\r\n            verbose=True\r\n        )\r\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "goal": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "goal",
                  "display_name": "Goal",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "Analisar sites de empresas e descrições fornecidas para extrair insights sobre cultura, valores e necessidades específicas."
                },
                "role": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "role",
                  "display_name": "Role",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "Analista de Pesquisa"
                },
                "_type": "CustomComponent"
              },
              "description": "This component initializes an agent with language model and tools.",
              "base_classes": [
                "Agent"
              ],
              "display_name": "AgentCrew",
              "documentation": "",
              "custom_fields": {
                "role": null,
                "goal": null,
                "backstory": null,
                "llm": null,
                "tools": null
              },
              "output_types": [
                "Agent"
              ],
              "field_formatters": {},
              "frozen": false,
              "field_order": [],
              "beta": false,
              "official": false,
              "outputs": [
                {
                  "types": [
                    "Agent"
                  ],
                  "selected": "Agent",
                  "name": "Agent",
                  "display_name": "Agent"
                }
              ]
            },
            "id": "CustomComponent-nNCg1"
          },
          "selected": false,
          "width": 384,
          "height": 593
        },
        {
          "id": "CustomComponent-9P5Rg",
          "type": "genericNode",
          "position": {
            "x": 722.3528521775029,
            "y": 366.55325696923967
          },
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "agent": {
                  "type": "Agent",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "agent",
                  "display_name": "Agent",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio import CustomComponent\r\nfrom axiestudio.field_typing import Data\r\nfrom crewai import Task, Agent\r\n\r\nclass TaskComponent(CustomComponent):\r\n    display_name: str = \"Create Task\"\r\n    description: str = \"This component creates a task for an agent.\"\r\n\r\n    def build_config(self):\r\n        return {\r\n            \"description\": {\"display_name\": \"Description\"},\r\n            \"expected_output\": {\"display_name\": \"Expected Output\"},\r\n            \"agent\": {\"display_name\": \"Agent\"},\r\n        }\r\n\r\n    def build(self, description: str, expected_output: str, agent: Agent) -> Task:\r\n        return Task(\r\n            description=description,\r\n            expected_output=expected_output,\r\n            agent=agent\r\n        )\r\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "description": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "description",
                  "display_name": "Description",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "Analisar o site da empresa fornecido e a descrição da empresa para entender a cultura, valores e missão da empresa. Identificar pontos de venda únicos e projetos ou realizações específicas destacadas no site. Compilar um relatório resumindo esses insights, especificamente como eles podem ser aproveitados em uma postagem de emprego para atrair os candidatos certos."
                },
                "expected_output": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "expected_output",
                  "display_name": "Expected Output",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "Um relatório abrangente detalhando a cultura, valores e missão da empresa, junto com pontos de venda específicos relevantes para a função. Sugestões sobre como incorporar esses insights na postagem de emprego devem ser incluídas."
                },
                "_type": "CustomComponent"
              },
              "description": "This component creates a task for an agent.",
              "base_classes": [
                "Task"
              ],
              "display_name": "TaskCrew",
              "documentation": "",
              "custom_fields": {
                "description": null,
                "expected_output": null,
                "agent": null
              },
              "output_types": [
                "Task"
              ],
              "field_formatters": {},
              "frozen": false,
              "field_order": [],
              "beta": false,
              "official": false,
              "outputs": [
                {
                  "types": [
                    "Task"
                  ],
                  "selected": "Task",
                  "name": "Task",
                  "display_name": "Task"
                }
              ]
            },
            "id": "CustomComponent-9P5Rg"
          },
          "selected": false,
          "width": 384,
          "height": 431
        },
        {
          "id": "CustomComponent-9q782",
          "type": "genericNode",
          "position": {
            "x": 1707.9260960642205,
            "y": 1118.8290977842266
          },
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "agents": {
                  "type": "Agent",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "agents",
                  "display_name": "Agents",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "tasks": {
                  "type": "Task",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "tasks",
                  "display_name": "Tasks",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio import CustomComponent\r\nfrom crewai import Crew, Task, Agent\r\nfrom typing import List, Optional\r\nfrom axiestudio.field_typing import Text\r\n\r\nclass CrewComponent(CustomComponent):\r\n    display_name: str = \"Initialize Crew\"\r\n    description: str = \"This component initializes a crew to execute tasks with multiple agents.\"\r\n\r\n    def build_config(self):\r\n        return {\r\n            \"agents\": {\"display_name\": \"Agents\", \"type\": \"list\", \"item_type\": \"Agent\"},  # Define a entrada como lista de Agent\r\n            \"tasks\": {\"display_name\": \"Tasks\", \"type\": \"list\", \"item_type\": \"Task\"},  # Define a entrada como lista de Task\r\n            \"topic\": {\"display_name\": \"Topic\", \"type\": \"str\", \"required\": False, \"value\": \"\"},  # New topic field\r\n            \"verbose\": {\"display_name\": \"Verbose Level\", \"value\": 2},\r\n            \"max_iterations\": {\"display_name\": \"Max Iterations\", \"value\": 10},\r\n        }\r\n\r\n    def build(self, agents: List[Agent], tasks: List[Task], topic: Optional[str], verbose: int, max_iterations: int) -> Text:\r\n        \"\"\"Constrói o objeto Crew e executa as tarefas com os agentes coletados.\"\"\"\r\n        if not agents or not tasks:\r\n            raise ValueError(\"No agents or tasks have been added.\")\r\n        \r\n        inputs = {\r\n            'topic':topic\r\n        }\r\n        # Use the topic to guide the tasks or modify task execution context here if necessary\r\n        response = Crew(\r\n            agents=agents,\r\n            tasks=tasks,\r\n            verbose=verbose,\r\n            max_iterations=max_iterations\r\n        )\r\n        return response.kickoff(inputs=inputs)  # Assuming kickoff returns Text type or adjust accordingly\r\n\r\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "max_iterations": {
                  "type": "int",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "2",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "max_iterations",
                  "display_name": "Max Iterations",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "topic": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "topic",
                  "display_name": "Topic",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                },
                "verbose": {
                  "type": "int",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": 2,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "verbose",
                  "display_name": "Verbose Level",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "_type": "CustomComponent"
              },
              "description": "This component initializes a crew to execute tasks with multiple agents.",
              "base_classes": [
                "object",
                "str",
                "Text"
              ],
              "display_name": "CrewAi",
              "documentation": "",
              "custom_fields": {
                "agents": null,
                "tasks": null,
                "topic": null,
                "verbose": null,
                "max_iterations": null
              },
              "output_types": [
                "Text"
              ],
              "field_formatters": {},
              "frozen": false,
              "field_order": [],
              "beta": false,
              "official": false,
              "outputs": [
                {
                  "types": [
                    "Text"
                  ],
                  "selected": "Text",
                  "name": "Text",
                  "display_name": "Text"
                }
              ]
            },
            "id": "CustomComponent-9q782"
          },
          "selected": false,
          "width": 384,
          "height": 593,
          "dragging": false
        },
        {
          "id": "ChatOpenAISpecs-FEjNe",
          "type": "genericNode",
          "position": {
            "x": -208.806423664897,
            "y": 386.1225743114659
          },
          "data": {
            "type": "ChatOpenAISpecs",
            "node": {
              "template": {
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from typing import Optional\n\nfrom langchain_community.chat_models.openai import ChatOpenAI\n\nfrom axiestudio.base.models.openai_constants import MODEL_NAMES\nfrom axiestudio.field_typing import BaseLanguageModel, NestedDict\nfrom axiestudio.interface.custom.custom_component import CustomComponent\n\n\nclass ChatOpenAIComponent(CustomComponent):\n    display_name = \"ChatOpenAI\"\n    description = \"`OpenAI` Chat large language models API.\"\n    icon = \"OpenAI\"\n\n    def build_config(self):\n        return {\n            \"max_tokens\": {\n                \"display_name\": \"Max Tokens\",\n                \"advanced\": False,\n                \"required\": False,\n            },\n            \"model_kwargs\": {\n                \"display_name\": \"Model Kwargs\",\n                \"advanced\": True,\n                \"required\": False,\n            },\n            \"model_name\": {\"display_name\": \"Model Name\", \"advanced\": False, \"options\": MODEL_NAMES},\n            \"openai_api_base\": {\n                \"display_name\": \"OpenAI API Base\",\n                \"advanced\": False,\n                \"required\": False,\n                \"info\": (\n                    \"The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\\n\\n\"\n                    \"You can change this to use other APIs like JinaChat, LocalAI and Prem.\"\n                ),\n            },\n            \"openai_api_key\": {\n                \"display_name\": \"OpenAI API Key\",\n                \"advanced\": False,\n                \"required\": False,\n                \"password\": True,\n            },\n            \"temperature\": {\n                \"display_name\": \"Temperature\",\n                \"advanced\": False,\n                \"required\": False,\n                \"value\": 0.7,\n            },\n        }\n\n    def build(\n        self,\n        max_tokens: Optional[int] = 256,\n        model_kwargs: NestedDict = {},\n        model_name: str = \"gpt-4o\",\n        openai_api_base: Optional[str] = None,\n        openai_api_key: Optional[str] = None,\n        temperature: float = 0.7,\n    ) -> BaseLanguageModel:\n        if not openai_api_base:\n            openai_api_base = \"https://api.openai.com/v1\"\n        return ChatOpenAI(\n            max_tokens=max_tokens,\n            model_kwargs=model_kwargs,\n            model=model_name,\n            base_url=openai_api_base,\n            api_key=openai_api_key,\n            temperature=temperature,\n        )\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "max_tokens": {
                  "type": "int",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "4096",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "max_tokens",
                  "display_name": "Max Tokens",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "model_kwargs": {
                  "type": "NestedDict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": {},
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "model_kwargs",
                  "display_name": "Model Kwargs",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "model_name": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "gpt-3.5-turbo",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "options": [
                    "gpt-4o",
                    "gpt-4-turbo",
                    "gpt-4-turbo-preview",
                    "gpt-3.5-turbo",
                    "gpt-3.5-turbo-0125"
                  ],
                  "name": "model_name",
                  "display_name": "Model Name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                },
                "openai_api_base": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "openai_api_base",
                  "display_name": "OpenAI API Base",
                  "advanced": false,
                  "dynamic": false,
                  "info": "The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                },
                "openai_api_key": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": true,
                  "name": "openai_api_key",
                  "display_name": "OpenAI API Key",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": ""
                },
                "temperature": {
                  "type": "float",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "0",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "temperature",
                  "display_name": "Temperature",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "rangeSpec": {
                    "step_type": "float",
                    "min": -1,
                    "max": 1,
                    "step": 0.1
                  },
                  "load_from_db": false,
                  "title_case": false
                },
                "_type": "CustomComponent"
              },
              "description": "`OpenAI` Chat large language models API.",
              "icon": "OpenAI",
              "base_classes": [
                "BaseLanguageModel",
                "Generic",
                "object",
                "Runnable",
                "RunnableSerializable",
                "Serializable"
              ],
              "display_name": "ChatOpenAI",
              "documentation": "",
              "custom_fields": {
                "max_tokens": null,
                "model_kwargs": null,
                "model_name": null,
                "openai_api_base": null,
                "openai_api_key": null,
                "temperature": null
              },
              "output_types": [
                "BaseLanguageModel"
              ],
              "field_formatters": {},
              "frozen": false,
              "field_order": [],
              "beta": false,
              "outputs": [
                {
                  "types": [
                    "BaseLanguageModel"
                  ],
                  "name": "BaseLanguageModel",
                  "display_name": "BaseLanguageModel"
                }
              ]
            },
            "id": "ChatOpenAISpecs-FEjNe"
          },
          "selected": false,
          "width": 384,
          "height": 643,
          "dragging": false
        },
        {
          "id": "CustomComponent-eb2Cw",
          "type": "genericNode",
          "position": {
            "x": 300.87425338653384,
            "y": 1211.2479826178942
          },
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "llm": {
                  "type": "object",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "llm",
                  "display_name": "Language Model",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "tools": {
                  "type": "Tool",
                  "required": false,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "tools",
                  "display_name": "Tools",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "backstory": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "backstory",
                  "display_name": "Backstory",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "Hábil em criar descrições de vagas atraentes que ressoam com os valores da empresa e atraem os candidatos certos."
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio import CustomComponent\r\nfrom axiestudio.field_typing import BaseLanguageModel, Tool\r\nfrom crewai import Agent\r\nfrom typing import List, Optional\r\n\r\nclass AgentCrewComponent(CustomComponent):\r\n    display_name: str = \"AgentCrew\"\r\n    description: str = \"This component initializes an agent with language model and tools.\"\r\n\r\n    def build_config(self):\r\n        return {\r\n            \"role\": {\"display_name\": \"Role\"},\r\n            \"goal\": {\"display_name\": \"Goal\"},\r\n            \"backstory\": {\"display_name\": \"Backstory\"},\r\n            \"tools\": {\"display_name\": \"Tools\", \"type\": \"list\", \"item_type\": \"object\", \"optional\": True},  # Torna a entrada opcional\r\n            \"llm\": {\"display_name\": \"Language Model\", \"field_type\": \"object\"},\r\n        }\r\n\r\n    def build(self, role: str, goal: str, backstory: str, llm: BaseLanguageModel, tools: Optional[List[Tool]] = None) -> Agent:\r\n        # Se \"tools\" não for especificado, define como uma lista vazia\r\n        if tools is None:\r\n            tools = []\r\n        \r\n        # Supondo que cada ferramenta na lista seja um objeto já inicializado e pronto para uso\r\n        return Agent(\r\n            role=role,\r\n            goal=goal,\r\n            backstory=backstory,\r\n            tools=tools,  # Passa a lista de ferramentas diretamente\r\n            llm=llm,\r\n            verbose=True\r\n        )\r\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "goal": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "goal",
                  "display_name": "Goal",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "Usar os insights do Analista de Pesquisa para criar uma postagem de emprego detalhada, envolvente e atraente."
                },
                "role": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "role",
                  "display_name": "Role",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "Escritor de Descrição de Vaga"
                },
                "_type": "CustomComponent"
              },
              "description": "This component initializes an agent with language model and tools.",
              "base_classes": [
                "Agent"
              ],
              "display_name": "AgentCrew",
              "documentation": "",
              "custom_fields": {
                "role": null,
                "goal": null,
                "backstory": null,
                "llm": null,
                "tools": null
              },
              "output_types": [
                "Agent"
              ],
              "field_formatters": {},
              "frozen": false,
              "field_order": [],
              "beta": false,
              "official": false,
              "outputs": [
                {
                  "types": [
                    "Agent"
                  ],
                  "selected": "Agent",
                  "name": "Agent",
                  "display_name": "Agent"
                }
              ]
            },
            "id": "CustomComponent-eb2Cw"
          },
          "selected": false,
          "width": 384,
          "height": 593
        },
        {
          "id": "CustomComponent-Kd9vu",
          "type": "genericNode",
          "position": {
            "x": 773.2259256542015,
            "y": 1207.774319777483
          },
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "agent": {
                  "type": "Agent",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "agent",
                  "display_name": "Agent",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio import CustomComponent\r\nfrom axiestudio.field_typing import Data\r\nfrom crewai import Task, Agent\r\n\r\nclass TaskComponent(CustomComponent):\r\n    display_name: str = \"Create Task\"\r\n    description: str = \"This component creates a task for an agent.\"\r\n\r\n    def build_config(self):\r\n        return {\r\n            \"description\": {\"display_name\": \"Description\"},\r\n            \"expected_output\": {\"display_name\": \"Expected Output\"},\r\n            \"agent\": {\"display_name\": \"Agent\"},\r\n        }\r\n\r\n    def build(self, description: str, expected_output: str, agent: Agent) -> Task:\r\n        return Task(\r\n            description=description,\r\n            expected_output=expected_output,\r\n            agent=agent\r\n        )\r\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "description": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "description",
                  "display_name": "Description",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "Redigir uma postagem de emprego para a função descrita pelo gerente de contratação. Use os insights sobre a empresa para iniciar com uma introdução envolvente, seguida por uma descrição detalhada da função, responsabilidades e habilidades e qualificações necessárias. Certifique-se de que o tom esteja alinhado com a cultura da empresa e incorpore quaisquer benefícios ou oportunidades únicas oferecidas pela empresa."
                },
                "expected_output": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "expected_output",
                  "display_name": "Expected Output",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "Uma postagem de emprego detalhada e envolvente que inclui uma introdução, descrição da função, responsabilidades, requisitos e benefícios únicos da empresa. O tom deve ressoar com a cultura e valores da empresa, visando atrair os candidatos certos."
                },
                "_type": "CustomComponent"
              },
              "description": "This component creates a task for an agent.",
              "base_classes": [
                "Task"
              ],
              "display_name": "TaskCrew",
              "documentation": "",
              "custom_fields": {
                "description": null,
                "expected_output": null,
                "agent": null
              },
              "output_types": [
                "Task"
              ],
              "field_formatters": {},
              "frozen": false,
              "field_order": [],
              "beta": false,
              "official": false,
              "outputs": [
                {
                  "types": [
                    "Task"
                  ],
                  "selected": "Task",
                  "name": "Task",
                  "display_name": "Task"
                }
              ]
            },
            "id": "CustomComponent-Kd9vu"
          },
          "selected": false,
          "width": 384,
          "height": 431
        },
        {
          "id": "ChatOpenAISpecs-i0rOh",
          "type": "genericNode",
          "position": {
            "x": -195.8262643509588,
            "y": 1224.3122039866885
          },
          "data": {
            "type": "ChatOpenAISpecs",
            "node": {
              "template": {
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from typing import Optional\n\nfrom langchain_community.chat_models.openai import ChatOpenAI\n\nfrom axiestudio.base.models.openai_constants import MODEL_NAMES\nfrom axiestudio.field_typing import BaseLanguageModel, NestedDict\nfrom axiestudio.interface.custom.custom_component import CustomComponent\n\n\nclass ChatOpenAIComponent(CustomComponent):\n    display_name = \"ChatOpenAI\"\n    description = \"`OpenAI` Chat large language models API.\"\n    icon = \"OpenAI\"\n\n    def build_config(self):\n        return {\n            \"max_tokens\": {\n                \"display_name\": \"Max Tokens\",\n                \"advanced\": False,\n                \"required\": False,\n            },\n            \"model_kwargs\": {\n                \"display_name\": \"Model Kwargs\",\n                \"advanced\": True,\n                \"required\": False,\n            },\n            \"model_name\": {\"display_name\": \"Model Name\", \"advanced\": False, \"options\": MODEL_NAMES},\n            \"openai_api_base\": {\n                \"display_name\": \"OpenAI API Base\",\n                \"advanced\": False,\n                \"required\": False,\n                \"info\": (\n                    \"The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\\n\\n\"\n                    \"You can change this to use other APIs like JinaChat, LocalAI and Prem.\"\n                ),\n            },\n            \"openai_api_key\": {\n                \"display_name\": \"OpenAI API Key\",\n                \"advanced\": False,\n                \"required\": False,\n                \"password\": True,\n            },\n            \"temperature\": {\n                \"display_name\": \"Temperature\",\n                \"advanced\": False,\n                \"required\": False,\n                \"value\": 0.7,\n            },\n        }\n\n    def build(\n        self,\n        max_tokens: Optional[int] = 256,\n        model_kwargs: NestedDict = {},\n        model_name: str = \"gpt-4o\",\n        openai_api_base: Optional[str] = None,\n        openai_api_key: Optional[str] = None,\n        temperature: float = 0.7,\n    ) -> BaseLanguageModel:\n        if not openai_api_base:\n            openai_api_base = \"https://api.openai.com/v1\"\n        return ChatOpenAI(\n            max_tokens=max_tokens,\n            model_kwargs=model_kwargs,\n            model=model_name,\n            base_url=openai_api_base,\n            api_key=openai_api_key,\n            temperature=temperature,\n        )\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "max_tokens": {
                  "type": "int",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "4096",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "max_tokens",
                  "display_name": "Max Tokens",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "model_kwargs": {
                  "type": "NestedDict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": {},
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "model_kwargs",
                  "display_name": "Model Kwargs",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "model_name": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "gpt-3.5-turbo",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "options": [
                    "gpt-4o",
                    "gpt-4-turbo",
                    "gpt-4-turbo-preview",
                    "gpt-3.5-turbo",
                    "gpt-3.5-turbo-0125"
                  ],
                  "name": "model_name",
                  "display_name": "Model Name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                },
                "openai_api_base": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "openai_api_base",
                  "display_name": "OpenAI API Base",
                  "advanced": false,
                  "dynamic": false,
                  "info": "The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                },
                "openai_api_key": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": true,
                  "name": "openai_api_key",
                  "display_name": "OpenAI API Key",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": ""
                },
                "temperature": {
                  "type": "float",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "0",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "temperature",
                  "display_name": "Temperature",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "rangeSpec": {
                    "step_type": "float",
                    "min": -1,
                    "max": 1,
                    "step": 0.1
                  },
                  "load_from_db": false,
                  "title_case": false
                },
                "_type": "CustomComponent"
              },
              "description": "`OpenAI` Chat large language models API.",
              "icon": "OpenAI",
              "base_classes": [
                "BaseLanguageModel",
                "Generic",
                "object",
                "Runnable",
                "RunnableSerializable",
                "Serializable"
              ],
              "display_name": "ChatOpenAI",
              "documentation": "",
              "custom_fields": {
                "max_tokens": null,
                "model_kwargs": null,
                "model_name": null,
                "openai_api_base": null,
                "openai_api_key": null,
                "temperature": null
              },
              "output_types": [
                "BaseLanguageModel"
              ],
              "field_formatters": {},
              "frozen": false,
              "field_order": [],
              "beta": false,
              "outputs": [
                {
                  "types": [
                    "BaseLanguageModel"
                  ],
                  "name": "BaseLanguageModel",
                  "display_name": "BaseLanguageModel"
                }
              ]
            },
            "id": "ChatOpenAISpecs-i0rOh"
          },
          "selected": false,
          "width": 384,
          "height": 643,
          "dragging": false
        },
        {
          "id": "CustomComponent-l4UBv",
          "type": "genericNode",
          "position": {
            "x": 301.0906606941612,
            "y": 1986.781974800998
          },
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "llm": {
                  "type": "object",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "llm",
                  "display_name": "Language Model",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "tools": {
                  "type": "Tool",
                  "required": false,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "tools",
                  "display_name": "Tools",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "backstory": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "backstory",
                  "display_name": "Backstory",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "Um editor meticuloso com um olhar para detalhes, garantindo que todo conteúdo seja claro, envolvente e gramaticalmente perfeito, além de garantir que está correto a vaga solicitada."
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio import CustomComponent\r\nfrom axiestudio.field_typing import BaseLanguageModel, Tool\r\nfrom crewai import Agent\r\nfrom typing import List, Optional\r\n\r\nclass AgentCrewComponent(CustomComponent):\r\n    display_name: str = \"AgentCrew\"\r\n    description: str = \"This component initializes an agent with language model and tools.\"\r\n\r\n    def build_config(self):\r\n        return {\r\n            \"role\": {\"display_name\": \"Role\"},\r\n            \"goal\": {\"display_name\": \"Goal\"},\r\n            \"backstory\": {\"display_name\": \"Backstory\"},\r\n            \"tools\": {\"display_name\": \"Tools\", \"type\": \"list\", \"item_type\": \"object\", \"optional\": True},  # Torna a entrada opcional\r\n            \"llm\": {\"display_name\": \"Language Model\", \"field_type\": \"object\"},\r\n        }\r\n\r\n    def build(self, role: str, goal: str, backstory: str, llm: BaseLanguageModel, tools: Optional[List[Tool]] = None) -> Agent:\r\n        # Se \"tools\" não for especificado, define como uma lista vazia\r\n        if tools is None:\r\n            tools = []\r\n        \r\n        # Supondo que cada ferramenta na lista seja um objeto já inicializado e pronto para uso\r\n        return Agent(\r\n            role=role,\r\n            goal=goal,\r\n            backstory=backstory,\r\n            tools=tools,  # Passa a lista de ferramentas diretamente\r\n            llm=llm,\r\n            verbose=True\r\n        )\r\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "goal": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "goal",
                  "display_name": "Goal",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "Revisar a postagem de emprego para clareza, envolvimento, precisão gramatical e alinhamento com os valores da empresa, refinando-a para garantir a perfeição."
                },
                "role": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "role",
                  "display_name": "Role",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "Especialista em Revisão e Edição"
                },
                "_type": "CustomComponent"
              },
              "description": "This component initializes an agent with language model and tools.",
              "base_classes": [
                "Agent"
              ],
              "display_name": "AgentCrew",
              "documentation": "",
              "custom_fields": {
                "role": null,
                "goal": null,
                "backstory": null,
                "llm": null,
                "tools": null
              },
              "output_types": [
                "Agent"
              ],
              "field_formatters": {},
              "frozen": false,
              "field_order": [],
              "beta": false,
              "official": false,
              "outputs": [
                {
                  "types": [
                    "Agent"
                  ],
                  "selected": "Agent",
                  "name": "Agent",
                  "display_name": "Agent"
                }
              ]
            },
            "id": "CustomComponent-l4UBv"
          },
          "selected": false,
          "width": 384,
          "height": 593
        },
        {
          "id": "CustomComponent-MO3RU",
          "type": "genericNode",
          "position": {
            "x": 794.5544595341948,
            "y": 1983.3083119605863
          },
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "agent": {
                  "type": "Agent",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "agent",
                  "display_name": "Agent",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio import CustomComponent\r\nfrom axiestudio.field_typing import Data\r\nfrom crewai import Task, Agent\r\n\r\nclass TaskComponent(CustomComponent):\r\n    display_name: str = \"Create Task\"\r\n    description: str = \"This component creates a task for an agent.\"\r\n\r\n    def build_config(self):\r\n        return {\r\n            \"description\": {\"display_name\": \"Description\"},\r\n            \"expected_output\": {\"display_name\": \"Expected Output\"},\r\n            \"agent\": {\"display_name\": \"Agent\"},\r\n        }\r\n\r\n    def build(self, description: str, expected_output: str, agent: Agent) -> Task:\r\n        return Task(\r\n            description=description,\r\n            expected_output=expected_output,\r\n            agent=agent\r\n        )\r\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "description": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "description",
                  "display_name": "Description",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "Revisar a postagem de emprego para a função. Verifique a clareza, envolvimento, precisão gramatical e alinhamento com a cultura e valores da empresa. Edite e refine o conteúdo, garantindo que ele fale diretamente aos candidatos desejados e reflita com precisão os benefícios e oportunidades únicas da função. Forneça feedback para quaisquer revisões necessárias."
                },
                "expected_output": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "expected_output",
                  "display_name": "Expected Output",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "Uma postagem de emprego polida e sem erros que seja clara, envolvente e perfeitamente alinhada com a cultura e valores da empresa. Feedback sobre melhorias potenciais e aprovação final para publicação. Formato em markdown."
                },
                "_type": "CustomComponent"
              },
              "description": "This component creates a task for an agent.",
              "base_classes": [
                "Task"
              ],
              "display_name": "TaskCrew",
              "documentation": "",
              "custom_fields": {
                "description": null,
                "expected_output": null,
                "agent": null
              },
              "output_types": [
                "Task"
              ],
              "field_formatters": {},
              "frozen": false,
              "field_order": [],
              "beta": false,
              "official": false,
              "outputs": [
                {
                  "types": [
                    "Task"
                  ],
                  "selected": "Task",
                  "name": "Task",
                  "display_name": "Task"
                }
              ]
            },
            "id": "CustomComponent-MO3RU"
          },
          "selected": false,
          "width": 384,
          "height": 431
        },
        {
          "id": "ChatOpenAISpecs-L8wJN",
          "type": "genericNode",
          "position": {
            "x": -222.00001525878906,
            "y": 1994.5681645267
          },
          "data": {
            "type": "ChatOpenAISpecs",
            "node": {
              "template": {
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from typing import Optional\n\nfrom langchain_community.chat_models.openai import ChatOpenAI\n\nfrom axiestudio.base.models.openai_constants import MODEL_NAMES\nfrom axiestudio.field_typing import BaseLanguageModel, NestedDict\nfrom axiestudio.interface.custom.custom_component import CustomComponent\n\n\nclass ChatOpenAIComponent(CustomComponent):\n    display_name = \"ChatOpenAI\"\n    description = \"`OpenAI` Chat large language models API.\"\n    icon = \"OpenAI\"\n\n    def build_config(self):\n        return {\n            \"max_tokens\": {\n                \"display_name\": \"Max Tokens\",\n                \"advanced\": False,\n                \"required\": False,\n            },\n            \"model_kwargs\": {\n                \"display_name\": \"Model Kwargs\",\n                \"advanced\": True,\n                \"required\": False,\n            },\n            \"model_name\": {\"display_name\": \"Model Name\", \"advanced\": False, \"options\": MODEL_NAMES},\n            \"openai_api_base\": {\n                \"display_name\": \"OpenAI API Base\",\n                \"advanced\": False,\n                \"required\": False,\n                \"info\": (\n                    \"The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\\n\\n\"\n                    \"You can change this to use other APIs like JinaChat, LocalAI and Prem.\"\n                ),\n            },\n            \"openai_api_key\": {\n                \"display_name\": \"OpenAI API Key\",\n                \"advanced\": False,\n                \"required\": False,\n                \"password\": True,\n            },\n            \"temperature\": {\n                \"display_name\": \"Temperature\",\n                \"advanced\": False,\n                \"required\": False,\n                \"value\": 0.7,\n            },\n        }\n\n    def build(\n        self,\n        max_tokens: Optional[int] = 256,\n        model_kwargs: NestedDict = {},\n        model_name: str = \"gpt-4o\",\n        openai_api_base: Optional[str] = None,\n        openai_api_key: Optional[str] = None,\n        temperature: float = 0.7,\n    ) -> BaseLanguageModel:\n        if not openai_api_base:\n            openai_api_base = \"https://api.openai.com/v1\"\n        return ChatOpenAI(\n            max_tokens=max_tokens,\n            model_kwargs=model_kwargs,\n            model=model_name,\n            base_url=openai_api_base,\n            api_key=openai_api_key,\n            temperature=temperature,\n        )\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "max_tokens": {
                  "type": "int",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "4096",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "max_tokens",
                  "display_name": "Max Tokens",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "model_kwargs": {
                  "type": "NestedDict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": {},
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "model_kwargs",
                  "display_name": "Model Kwargs",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "model_name": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "gpt-3.5-turbo",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "options": [
                    "gpt-4o",
                    "gpt-4-turbo",
                    "gpt-4-turbo-preview",
                    "gpt-3.5-turbo",
                    "gpt-3.5-turbo-0125"
                  ],
                  "name": "model_name",
                  "display_name": "Model Name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                },
                "openai_api_base": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "openai_api_base",
                  "display_name": "OpenAI API Base",
                  "advanced": false,
                  "dynamic": false,
                  "info": "The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                },
                "openai_api_key": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": true,
                  "name": "openai_api_key",
                  "display_name": "OpenAI API Key",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": ""
                },
                "temperature": {
                  "type": "float",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "0",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "temperature",
                  "display_name": "Temperature",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "rangeSpec": {
                    "step_type": "float",
                    "min": -1,
                    "max": 1,
                    "step": 0.1
                  },
                  "load_from_db": false,
                  "title_case": false
                },
                "_type": "CustomComponent"
              },
              "description": "`OpenAI` Chat large language models API.",
              "icon": "OpenAI",
              "base_classes": [
                "BaseLanguageModel",
                "Generic",
                "object",
                "Runnable",
                "RunnableSerializable",
                "Serializable"
              ],
              "display_name": "ChatOpenAI",
              "documentation": "",
              "custom_fields": {
                "max_tokens": null,
                "model_kwargs": null,
                "model_name": null,
                "openai_api_base": null,
                "openai_api_key": null,
                "temperature": null
              },
              "output_types": [
                "BaseLanguageModel"
              ],
              "field_formatters": {},
              "frozen": false,
              "field_order": [],
              "beta": false,
              "outputs": [
                {
                  "types": [
                    "BaseLanguageModel"
                  ],
                  "name": "BaseLanguageModel",
                  "display_name": "BaseLanguageModel"
                }
              ]
            },
            "id": "ChatOpenAISpecs-L8wJN"
          },
          "selected": false,
          "width": 384,
          "height": 643,
          "dragging": false
        },
        {
          "id": "SearchAPITool-juDP5",
          "type": "genericNode",
          "position": {
            "x": -195.53610929762783,
            "y": -36.017860412597656
          },
          "data": {
            "type": "SearchAPITool",
            "node": {
              "template": {
                "api_key": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": true,
                  "name": "api_key",
                  "display_name": "API Key",
                  "advanced": false,
                  "dynamic": false,
                  "info": "The API key to use SearchApi.",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": ""
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from langchain_community.tools.searchapi import SearchAPIRun\nfrom langchain_community.utilities.searchapi import SearchApiAPIWrapper\n\nfrom axiestudio.custom import CustomComponent\nfrom axiestudio.field_typing import Tool\n\n\nclass SearchApiToolComponent(CustomComponent):\n    display_name: str = \"SearchApi Tool\"\n    description: str = \"Real-time search engine results API.\"\n    documentation: str = \"https://www.searchapi.io/docs/google\"\n    field_config = {\n        \"engine\": {\n            \"display_name\": \"Engine\",\n            \"field_type\": \"str\",\n            \"info\": \"The search engine to use.\",\n        },\n        \"api_key\": {\n            \"display_name\": \"API Key\",\n            \"field_type\": \"str\",\n            \"required\": True,\n            \"password\": True,\n            \"info\": \"The API key to use SearchApi.\",\n        },\n    }\n\n    def build(\n        self,\n        engine: str,\n        api_key: str,\n    ) -> Tool:\n        search_api_wrapper = SearchApiAPIWrapper(engine=engine, searchapi_api_key=api_key)\n\n        tool = SearchAPIRun(api_wrapper=search_api_wrapper)\n\n        self.status = tool\n        return tool  # type: ignore\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "engine": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "engine",
                  "display_name": "Engine",
                  "advanced": false,
                  "dynamic": false,
                  "info": "The search engine to use.",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "google"
                },
                "_type": "CustomComponent"
              },
              "description": "Real-time search engine results API.",
              "base_classes": [
                "BaseTool",
                "Generic",
                "object",
                "Runnable",
                "RunnableSerializable",
                "Serializable",
                "Tool"
              ],
              "display_name": "SearchApi Tool",
              "documentation": "https://www.searchapi.io/docs/google",
              "custom_fields": {
                "engine": null,
                "api_key": null
              },
              "output_types": [
                "Tool"
              ],
              "field_formatters": {},
              "frozen": false,
              "field_order": [
                "engine",
                "api_key"
              ],
              "beta": false,
              "outputs": [
                {
                  "types": [
                    "Tool"
                  ],
                  "selected": "Tool",
                  "name": "Tool",
                  "display_name": "Tool"
                }
              ]
            },
            "id": "SearchAPITool-juDP5"
          },
          "selected": false,
          "width": 384,
          "height": 383
        }
      ],
      "edges": [
        {
          "source": "CustomComponent-nNCg1",
          "target": "CustomComponent-9P5Rg",
          "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-nNCg1œ,œnameœ:œAgentœ,œoutput_typesœ:[œAgentœ]}",
          "targetHandle": "{œfieldNameœ:œagentœ,œidœ:œCustomComponent-9P5Rgœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
          "id": "reactflow__edge-CustomComponent-nNCg1{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-nNCg1œ,œnameœ:œAgentœ,œoutput_typesœ:[œAgentœ]}-CustomComponent-9P5Rg{œfieldNameœ:œagentœ,œidœ:œCustomComponent-9P5Rgœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
          "data": {
            "targetHandle": {
              "fieldName": "agent",
              "id": "CustomComponent-9P5Rg",
              "inputTypes": null,
              "type": "Agent"
            },
            "sourceHandle": {
              "dataType": "CustomComponent",
              "id": "CustomComponent-nNCg1",
              "name": "Agent",
              "output_types": [
                "Agent"
              ]
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "",
          "selected": false
        },
        {
          "source": "CustomComponent-9q782",
          "target": "ChatOutput-bcKLB",
          "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-9q782œ,œnameœ:œTextœ,œoutput_typesœ:[œTextœ]}",
          "targetHandle": "{œfieldNameœ:œinput_valueœ,œidœ:œChatOutput-bcKLBœ,œinputTypesœ:[œTextœ],œtypeœ:œstrœ}",
          "id": "reactflow__edge-CustomComponent-9q782{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-9q782œ,œnameœ:œTextœ,œoutput_typesœ:[œTextœ]}-ChatOutput-bcKLB{œfieldNameœ:œinput_valueœ,œidœ:œChatOutput-bcKLBœ,œinputTypesœ:[œTextœ],œtypeœ:œstrœ}",
          "data": {
            "targetHandle": {
              "fieldName": "input_value",
              "id": "ChatOutput-bcKLB",
              "inputTypes": [
                "Text"
              ],
              "type": "str"
            },
            "sourceHandle": {
              "dataType": "CustomComponent",
              "id": "CustomComponent-9q782",
              "name": "Text",
              "output_types": [
                "Text"
              ]
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "",
          "selected": false
        },
        {
          "source": "CustomComponent-9P5Rg",
          "target": "CustomComponent-9q782",
          "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-9P5Rgœ,œnameœ:œTaskœ,œoutput_typesœ:[œTaskœ]}",
          "targetHandle": "{œfieldNameœ:œtasksœ,œidœ:œCustomComponent-9q782œ,œinputTypesœ:null,œtypeœ:œTaskœ}",
          "id": "reactflow__edge-CustomComponent-9P5Rg{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-9P5Rgœ,œnameœ:œTaskœ,œoutput_typesœ:[œTaskœ]}-CustomComponent-9q782{œfieldNameœ:œtasksœ,œidœ:œCustomComponent-9q782œ,œinputTypesœ:null,œtypeœ:œTaskœ}",
          "data": {
            "targetHandle": {
              "fieldName": "tasks",
              "id": "CustomComponent-9q782",
              "inputTypes": null,
              "type": "Task"
            },
            "sourceHandle": {
              "dataType": "CustomComponent",
              "id": "CustomComponent-9P5Rg",
              "name": "Task",
              "output_types": [
                "Task"
              ]
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "",
          "selected": false
        },
        {
          "source": "CustomComponent-nNCg1",
          "target": "CustomComponent-9q782",
          "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-nNCg1œ,œnameœ:œAgentœ,œoutput_typesœ:[œAgentœ]}",
          "targetHandle": "{œfieldNameœ:œagentsœ,œidœ:œCustomComponent-9q782œ,œinputTypesœ:null,œtypeœ:œAgentœ}",
          "id": "reactflow__edge-CustomComponent-nNCg1{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-nNCg1œ,œnameœ:œAgentœ,œoutput_typesœ:[œAgentœ]}-CustomComponent-9q782{œfieldNameœ:œagentsœ,œidœ:œCustomComponent-9q782œ,œinputTypesœ:null,œtypeœ:œAgentœ}",
          "data": {
            "targetHandle": {
              "fieldName": "agents",
              "id": "CustomComponent-9q782",
              "inputTypes": null,
              "type": "Agent"
            },
            "sourceHandle": {
              "dataType": "CustomComponent",
              "id": "CustomComponent-nNCg1",
              "name": "Agent",
              "output_types": [
                "Agent"
              ]
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "",
          "selected": false
        },
        {
          "source": "CustomComponent-eb2Cw",
          "target": "CustomComponent-Kd9vu",
          "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-eb2Cwœ,œnameœ:œAgentœ,œoutput_typesœ:[œAgentœ]}",
          "targetHandle": "{œfieldNameœ:œagentœ,œidœ:œCustomComponent-Kd9vuœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
          "id": "reactflow__edge-CustomComponent-eb2Cw{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-eb2Cwœ,œnameœ:œAgentœ,œoutput_typesœ:[œAgentœ]}-CustomComponent-Kd9vu{œfieldNameœ:œagentœ,œidœ:œCustomComponent-Kd9vuœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
          "data": {
            "targetHandle": {
              "fieldName": "agent",
              "id": "CustomComponent-Kd9vu",
              "inputTypes": null,
              "type": "Agent"
            },
            "sourceHandle": {
              "dataType": "CustomComponent",
              "id": "CustomComponent-eb2Cw",
              "name": "Agent",
              "output_types": [
                "Agent"
              ]
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "",
          "selected": false
        },
        {
          "source": "CustomComponent-Kd9vu",
          "target": "CustomComponent-9q782",
          "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-Kd9vuœ,œnameœ:œTaskœ,œoutput_typesœ:[œTaskœ]}",
          "targetHandle": "{œfieldNameœ:œtasksœ,œidœ:œCustomComponent-9q782œ,œinputTypesœ:null,œtypeœ:œTaskœ}",
          "id": "reactflow__edge-CustomComponent-Kd9vu{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-Kd9vuœ,œnameœ:œTaskœ,œoutput_typesœ:[œTaskœ]}-CustomComponent-9q782{œfieldNameœ:œtasksœ,œidœ:œCustomComponent-9q782œ,œinputTypesœ:null,œtypeœ:œTaskœ}",
          "data": {
            "targetHandle": {
              "fieldName": "tasks",
              "id": "CustomComponent-9q782",
              "inputTypes": null,
              "type": "Task"
            },
            "sourceHandle": {
              "dataType": "CustomComponent",
              "id": "CustomComponent-Kd9vu",
              "name": "Task",
              "output_types": [
                "Task"
              ]
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "",
          "selected": false
        },
        {
          "source": "CustomComponent-eb2Cw",
          "target": "CustomComponent-9q782",
          "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-eb2Cwœ,œnameœ:œAgentœ,œoutput_typesœ:[œAgentœ]}",
          "targetHandle": "{œfieldNameœ:œagentsœ,œidœ:œCustomComponent-9q782œ,œinputTypesœ:null,œtypeœ:œAgentœ}",
          "id": "reactflow__edge-CustomComponent-eb2Cw{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-eb2Cwœ,œnameœ:œAgentœ,œoutput_typesœ:[œAgentœ]}-CustomComponent-9q782{œfieldNameœ:œagentsœ,œidœ:œCustomComponent-9q782œ,œinputTypesœ:null,œtypeœ:œAgentœ}",
          "data": {
            "targetHandle": {
              "fieldName": "agents",
              "id": "CustomComponent-9q782",
              "inputTypes": null,
              "type": "Agent"
            },
            "sourceHandle": {
              "dataType": "CustomComponent",
              "id": "CustomComponent-eb2Cw",
              "name": "Agent",
              "output_types": [
                "Agent"
              ]
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "",
          "selected": false
        },
        {
          "source": "CustomComponent-l4UBv",
          "target": "CustomComponent-MO3RU",
          "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-l4UBvœ,œnameœ:œAgentœ,œoutput_typesœ:[œAgentœ]}",
          "targetHandle": "{œfieldNameœ:œagentœ,œidœ:œCustomComponent-MO3RUœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
          "id": "reactflow__edge-CustomComponent-l4UBv{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-l4UBvœ,œnameœ:œAgentœ,œoutput_typesœ:[œAgentœ]}-CustomComponent-MO3RU{œfieldNameœ:œagentœ,œidœ:œCustomComponent-MO3RUœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
          "data": {
            "targetHandle": {
              "fieldName": "agent",
              "id": "CustomComponent-MO3RU",
              "inputTypes": null,
              "type": "Agent"
            },
            "sourceHandle": {
              "dataType": "CustomComponent",
              "id": "CustomComponent-l4UBv",
              "name": "Agent",
              "output_types": [
                "Agent"
              ]
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "",
          "selected": false
        },
        {
          "source": "CustomComponent-MO3RU",
          "target": "CustomComponent-9q782",
          "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-MO3RUœ,œnameœ:œTaskœ,œoutput_typesœ:[œTaskœ]}",
          "targetHandle": "{œfieldNameœ:œtasksœ,œidœ:œCustomComponent-9q782œ,œinputTypesœ:null,œtypeœ:œTaskœ}",
          "id": "reactflow__edge-CustomComponent-MO3RU{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-MO3RUœ,œnameœ:œTaskœ,œoutput_typesœ:[œTaskœ]}-CustomComponent-9q782{œfieldNameœ:œtasksœ,œidœ:œCustomComponent-9q782œ,œinputTypesœ:null,œtypeœ:œTaskœ}",
          "data": {
            "targetHandle": {
              "fieldName": "tasks",
              "id": "CustomComponent-9q782",
              "inputTypes": null,
              "type": "Task"
            },
            "sourceHandle": {
              "dataType": "CustomComponent",
              "id": "CustomComponent-MO3RU",
              "name": "Task",
              "output_types": [
                "Task"
              ]
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "",
          "selected": false
        },
        {
          "source": "CustomComponent-l4UBv",
          "target": "CustomComponent-9q782",
          "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-l4UBvœ,œnameœ:œAgentœ,œoutput_typesœ:[œAgentœ]}",
          "targetHandle": "{œfieldNameœ:œagentsœ,œidœ:œCustomComponent-9q782œ,œinputTypesœ:null,œtypeœ:œAgentœ}",
          "id": "reactflow__edge-CustomComponent-l4UBv{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-l4UBvœ,œnameœ:œAgentœ,œoutput_typesœ:[œAgentœ]}-CustomComponent-9q782{œfieldNameœ:œagentsœ,œidœ:œCustomComponent-9q782œ,œinputTypesœ:null,œtypeœ:œAgentœ}",
          "data": {
            "targetHandle": {
              "fieldName": "agents",
              "id": "CustomComponent-9q782",
              "inputTypes": null,
              "type": "Agent"
            },
            "sourceHandle": {
              "dataType": "CustomComponent",
              "id": "CustomComponent-l4UBv",
              "name": "Agent",
              "output_types": [
                "Agent"
              ]
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "",
          "selected": false
        },
        {
          "source": "SearchAPITool-juDP5",
          "target": "CustomComponent-nNCg1",
          "sourceHandle": "{œdataTypeœ:œSearchAPIToolœ,œidœ:œSearchAPITool-juDP5œ,œnameœ:œToolœ,œoutput_typesœ:[œToolœ]}",
          "targetHandle": "{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-nNCg1œ,œinputTypesœ:null,œtypeœ:œToolœ}",
          "id": "reactflow__edge-SearchAPITool-juDP5{œdataTypeœ:œSearchAPIToolœ,œidœ:œSearchAPITool-juDP5œ,œnameœ:œToolœ,œoutput_typesœ:[œToolœ]}-CustomComponent-nNCg1{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-nNCg1œ,œinputTypesœ:null,œtypeœ:œToolœ}",
          "data": {
            "targetHandle": {
              "fieldName": "tools",
              "id": "CustomComponent-nNCg1",
              "inputTypes": null,
              "type": "Tool"
            },
            "sourceHandle": {
              "dataType": "SearchAPITool",
              "id": "SearchAPITool-juDP5",
              "name": "Tool",
              "output_types": [
                "Tool"
              ]
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "",
          "selected": false
        }
      ],
      "viewport": {
        "x": 641.2552370922988,
        "y": -7.267540413809968,
        "zoom": 0.22793062213955456
      }
    },
    "date_created": "2024-09-07T04:25:49.477Z",
    "date_updated": "2024-09-07T04:25:49.520Z",
    "status": "Public",
    "sort": null,
    "user_updated": "74384f8a-ea00-4768-8909-b8bfd6ea4539",
    "user_created": {
      "username": "Ailtondev",
      "first_name": "Mileide Lopez",
      "last_name": "Da silva",
      "id": "74384f8a-ea00-4768-8909-b8bfd6ea4539"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:08:57.720Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 62,
    "converter_version": "1.0.0"
  }
}