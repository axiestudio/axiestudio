{
  "id": "4d99631c-d711-4922-9885-215d9f2cf753",
  "name": "Translate ChatBot",
  "description": "Conversation Catalyst Engine. (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "FLOW",
  "is_component": false,
  "author": {
    "username": "mrbye",
    "first_name": "Kurwa",
    "last_name": "",
    "id": "f76455f7-ab58-4538-9cac-2891d74291d6",
    "full_name": "Kurwa"
  },
  "store_url": "https://www.langflow.store/store/component/4d99631c-d711-4922-9885-215d9f2cf753",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-03-11T07:10:06.379Z",
    "updated": "2024-03-11T07:10:06.590Z",
    "downloaded": "2025-08-19T17:50:05.829Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "0.6.7a5",
    "private": false,
    "status": "Public"
  },
  "data": {
    "nodes": [
      {
        "width": 384,
        "height": 491,
        "id": "Tool-Jhmff",
        "type": "genericNode",
        "position": {
          "x": -447.82250417399615,
          "y": -700.2336842528189
        },
        "data": {
          "type": "Tool",
          "node": {
            "template": {
              "func": {
                "type": "Callable",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "func",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "description": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "description",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "display_name": "description"
              },
              "name": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "display_name": "name"
              },
              "return_direct": {
                "type": "bool",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "return_direct",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "display_name": "return_direct"
              },
              "_type": "Tool"
            },
            "description": "Converts a chain, agent or function into a tool.",
            "base_classes": [
              "Tool",
              "BaseTool"
            ],
            "display_name": "Tool",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "field_formatters": {},
            "beta": false
          },
          "id": "Tool-Jhmff"
        },
        "selected": false,
        "positionAbsolute": {
          "x": -447.82250417399615,
          "y": -700.2336842528189
        },
        "dragging": false
      },
      {
        "width": 384,
        "height": 611,
        "data": {
          "id": "GroupNode-ibcgn",
          "type": "LLMChain",
          "node": {
            "output_types": [
              "Chain",
              "Callable",
              "LLMChain"
            ],
            "display_name": "Group",
            "documentation": "",
            "base_classes": [
              "Chain",
              "Callable",
              "LLMChain",
              "Chain"
            ],
            "description": "",
            "template": {
              "memory_LLMChain-v953s": {
                "type": "BaseMemory",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "memory",
                "display_name": "Memory",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "proxy": {
                  "id": "LLMChain-v953s",
                  "field": "memory"
                }
              },
              "code_LLMChain-v953s": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": true,
                "value": "from typing import Callable, Optional, Union\n\nfrom langchain.chains import LLMChain\n\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import (\n    BaseLanguageModel,\n    BaseMemory,\n    BasePromptTemplate,\n    Chain,\n)\n\n\nclass LLMChainComponent(CustomComponent):\n    display_name = \"LLMChain\"\n    description = \"Chain to run queries against LLMs\"\n\n    def build_config(self):\n        return {\n            \"prompt\": {\"display_name\": \"Prompt\"},\n            \"llm\": {\"display_name\": \"LLM\"},\n            \"memory\": {\"display_name\": \"Memory\"},\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        prompt: BasePromptTemplate,\n        llm: BaseLanguageModel,\n        memory: Optional[BaseMemory] = None,\n    ) -> Union[Chain, Callable, LLMChain]:\n        return LLMChain(prompt=prompt, llm=llm, memory=memory)\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "display_name": "code",
                "proxy": {
                  "id": "LLMChain-v953s",
                  "field": "code"
                }
              },
              "code_ChatOpenAI-xpOwP": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": true,
                "value": "from typing import Optional, Union\n\nfrom langchain.llms import BaseLLM\nfrom langchain_community.chat_models.openai import ChatOpenAI\n\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import BaseLanguageModel, NestedDict\n\n\nclass ChatOpenAIComponent(CustomComponent):\n    display_name = \"ChatOpenAI\"\n    description = \"`OpenAI` Chat large language models API.\"\n\n    def build_config(self):\n        return {\n            \"max_tokens\": {\n                \"display_name\": \"Max Tokens\",\n                \"field_type\": \"int\",\n                \"advanced\": False,\n                \"required\": False,\n            },\n            \"model_kwargs\": {\n                \"display_name\": \"Model Kwargs\",\n                \"field_type\": \"NestedDict\",\n                \"advanced\": True,\n                \"required\": False,\n            },\n            \"model_name\": {\n                \"display_name\": \"Model Name\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"options\": [\n                    \"gpt-4-turbo-preview\",\n                    \"gpt-4-0125-preview\",\n                    \"gpt-4-1106-preview\",\n                    \"gpt-4-vision-preview\",\n                    \"gpt-3.5-turbo-0125\",\n                    \"gpt-3.5-turbo-1106\",\n                ],\n            },\n            \"openai_api_base\": {\n                \"display_name\": \"OpenAI API Base\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"info\": (\n                    \"The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\\n\\n\"\n                    \"You can change this to use other APIs like JinaChat, LocalAI and Prem.\"\n                ),\n            },\n            \"openai_api_key\": {\n                \"display_name\": \"OpenAI API Key\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"password\": True,\n            },\n            \"temperature\": {\n                \"display_name\": \"Temperature\",\n                \"field_type\": \"float\",\n                \"advanced\": False,\n                \"required\": False,\n                \"value\": 0.7,\n            },\n        }\n\n    def build(\n        self,\n        max_tokens: Optional[int] = 256,\n        model_kwargs: NestedDict = {},\n        model_name: str = \"gpt-4-1106-preview\",\n        openai_api_base: Optional[str] = None,\n        openai_api_key: Optional[str] = \"sk-PLACEHOLDER_API_KEY\",\n        temperature: float = 0.7,\n    ) -> Union[BaseLanguageModel, BaseLLM]:\n        if not openai_api_base:\n            openai_api_base = \"https://api.openai.com/v1\"\n        return ChatOpenAI(\n            max_tokens=max_tokens,\n            model_kwargs=model_kwargs,\n            model=model_name,\n            base_url=openai_api_base,\n            api_key=openai_api_key,\n            temperature=temperature,\n        )\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "display_name": "code",
                "proxy": {
                  "id": "ChatOpenAI-xpOwP",
                  "field": "code"
                }
              },
              "max_tokens_ChatOpenAI-xpOwP": {
                "type": "int",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": 256,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "proxy": {
                  "id": "ChatOpenAI-xpOwP",
                  "field": "max_tokens"
                }
              },
              "model_kwargs_ChatOpenAI-xpOwP": {
                "type": "NestedDict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": {},
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "model_kwargs",
                "display_name": "Model Kwargs",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "proxy": {
                  "id": "ChatOpenAI-xpOwP",
                  "field": "model_kwargs"
                }
              },
              "model_name_ChatOpenAI-xpOwP": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "gpt-4-0125-preview",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "options": [
                  "gpt-4-turbo-preview",
                  "gpt-4-0125-preview",
                  "gpt-4-1106-preview",
                  "gpt-4-vision-preview",
                  "gpt-3.5-turbo-0125",
                  "gpt-3.5-turbo-1106"
                ],
                "name": "model_name",
                "display_name": "Model Name",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "proxy": {
                  "id": "ChatOpenAI-xpOwP",
                  "field": "model_name"
                }
              },
              "openai_api_base_ChatOpenAI-xpOwP": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "openai_api_base",
                "display_name": "OpenAI API Base",
                "advanced": true,
                "dynamic": false,
                "info": "The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.",
                "proxy": {
                  "id": "ChatOpenAI-xpOwP",
                  "field": "openai_api_base"
                }
              },
              "openai_api_key_ChatOpenAI-xpOwP": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": true,
                "name": "openai_api_key",
                "display_name": "OpenAI API Key",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "proxy": {
                  "id": "ChatOpenAI-xpOwP",
                  "field": "openai_api_key"
                }
              },
              "temperature_ChatOpenAI-xpOwP": {
                "type": "float",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": 0.7,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "temperature",
                "display_name": "Temperature",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "rangeSpec": {
                  "min": -1,
                  "max": 1,
                  "step": 0.1
                },
                "proxy": {
                  "id": "ChatOpenAI-xpOwP",
                  "field": "temperature"
                }
              },
              "output_parser_PromptTemplate-k6ZNb": {
                "type": "BaseOutputParser",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "output_parser",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "display_name": "output_parser",
                "proxy": {
                  "id": "PromptTemplate-k6ZNb",
                  "field": "output_parser"
                }
              },
              "input_types_PromptTemplate-k6ZNb": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "input_types",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "display_name": "input_types",
                "proxy": {
                  "id": "PromptTemplate-k6ZNb",
                  "field": "input_types"
                }
              },
              "input_variables_PromptTemplate-k6ZNb": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "input_variables",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "value": [
                  "input_language",
                  "output_language",
                  "input"
                ],
                "display_name": "input_variables",
                "proxy": {
                  "id": "PromptTemplate-k6ZNb",
                  "field": "input_variables"
                }
              },
              "metadata_PromptTemplate-k6ZNb": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "metadata",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "display_name": "metadata",
                "proxy": {
                  "id": "PromptTemplate-k6ZNb",
                  "field": "metadata"
                }
              },
              "name_PromptTemplate-k6ZNb": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "name",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "display_name": "name",
                "proxy": {
                  "id": "PromptTemplate-k6ZNb",
                  "field": "name"
                }
              },
              "partial_variables_PromptTemplate-k6ZNb": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "partial_variables",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "display_name": "partial_variables",
                "proxy": {
                  "id": "PromptTemplate-k6ZNb",
                  "field": "partial_variables"
                }
              },
              "tags_PromptTemplate-k6ZNb": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": true,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "tags",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "display_name": "tags",
                "proxy": {
                  "id": "PromptTemplate-k6ZNb",
                  "field": "tags"
                }
              },
              "template_PromptTemplate-k6ZNb": {
                "type": "prompt",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "fileTypes": [],
                "password": false,
                "name": "template",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "value": "you are a helpful assistant that translate {input_language} to {output_language}.\n\n{input}",
                "display_name": "template",
                "proxy": {
                  "id": "PromptTemplate-k6ZNb",
                  "field": "template"
                }
              },
              "template_format_PromptTemplate-k6ZNb": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": "f-string",
                "fileTypes": [],
                "password": false,
                "name": "template_format",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "display_name": "template_format",
                "proxy": {
                  "id": "PromptTemplate-k6ZNb",
                  "field": "template_format"
                }
              },
              "validate_template_PromptTemplate-k6ZNb": {
                "type": "bool",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": false,
                "fileTypes": [],
                "password": false,
                "name": "validate_template",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "display_name": "validate_template",
                "proxy": {
                  "id": "PromptTemplate-k6ZNb",
                  "field": "validate_template"
                }
              },
              "input_language_PromptTemplate-k6ZNb": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "Korean",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "input_language",
                "display_name": "input_language",
                "advanced": false,
                "input_types": [
                  "Document",
                  "BaseOutputParser"
                ],
                "dynamic": false,
                "info": "",
                "proxy": {
                  "id": "PromptTemplate-k6ZNb",
                  "field": "input_language"
                }
              },
              "output_language_PromptTemplate-k6ZNb": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "Japanese",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "output_language",
                "display_name": "output_language",
                "advanced": false,
                "input_types": [
                  "Document",
                  "BaseOutputParser"
                ],
                "dynamic": false,
                "info": "",
                "proxy": {
                  "id": "PromptTemplate-k6ZNb",
                  "field": "output_language"
                }
              },
              "input_PromptTemplate-k6ZNb": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "jfdf",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "input",
                "display_name": "input",
                "advanced": false,
                "input_types": [
                  "Document",
                  "BaseOutputParser"
                ],
                "dynamic": false,
                "info": "",
                "proxy": {
                  "id": "PromptTemplate-k6ZNb",
                  "field": "input"
                }
              }
            },
            "flow": {
              "data": {
                "nodes": [
                  {
                    "width": 384,
                    "height": 425,
                    "id": "LLMChain-v953s",
                    "type": "genericNode",
                    "position": {
                      "x": 674.2566421540855,
                      "y": -600.0600042202825
                    },
                    "data": {
                      "type": "LLMChain",
                      "node": {
                        "template": {
                          "llm": {
                            "type": "BaseLanguageModel",
                            "required": true,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "llm",
                            "display_name": "LLM",
                            "advanced": false,
                            "dynamic": false,
                            "info": ""
                          },
                          "memory": {
                            "type": "BaseMemory",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "memory",
                            "display_name": "Memory",
                            "advanced": false,
                            "dynamic": false,
                            "info": ""
                          },
                          "prompt": {
                            "type": "BasePromptTemplate",
                            "required": true,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "prompt",
                            "display_name": "Prompt",
                            "advanced": false,
                            "dynamic": false,
                            "info": ""
                          },
                          "code": {
                            "type": "code",
                            "required": true,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": true,
                            "value": "from typing import Callable, Optional, Union\n\nfrom langchain.chains import LLMChain\n\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import (\n    BaseLanguageModel,\n    BaseMemory,\n    BasePromptTemplate,\n    Chain,\n)\n\n\nclass LLMChainComponent(CustomComponent):\n    display_name = \"LLMChain\"\n    description = \"Chain to run queries against LLMs\"\n\n    def build_config(self):\n        return {\n            \"prompt\": {\"display_name\": \"Prompt\"},\n            \"llm\": {\"display_name\": \"LLM\"},\n            \"memory\": {\"display_name\": \"Memory\"},\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        prompt: BasePromptTemplate,\n        llm: BaseLanguageModel,\n        memory: Optional[BaseMemory] = None,\n    ) -> Union[Chain, Callable, LLMChain]:\n        return LLMChain(prompt=prompt, llm=llm, memory=memory)\n",
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "code",
                            "advanced": false,
                            "dynamic": true,
                            "info": "",
                            "display_name": "code"
                          },
                          "_type": "CustomComponent"
                        },
                        "description": "Chain to run queries against LLMs",
                        "base_classes": [
                          "Chain",
                          "Callable",
                          "LLMChain",
                          "Chain"
                        ],
                        "display_name": "LLMChain",
                        "documentation": "",
                        "custom_fields": {
                          "prompt": null,
                          "llm": null,
                          "memory": null
                        },
                        "output_types": [
                          "Chain",
                          "Callable",
                          "LLMChain"
                        ],
                        "field_formatters": {},
                        "beta": true
                      },
                      "id": "LLMChain-v953s"
                    },
                    "selected": true,
                    "dragging": false,
                    "positionAbsolute": {
                      "x": 674.2566421540855,
                      "y": -600.0600042202825
                    }
                  },
                  {
                    "width": 384,
                    "height": 715,
                    "id": "ChatOpenAI-xpOwP",
                    "type": "genericNode",
                    "position": {
                      "x": 101.81345493467052,
                      "y": -943.7393323559688
                    },
                    "data": {
                      "type": "ChatOpenAI",
                      "node": {
                        "template": {
                          "code": {
                            "type": "code",
                            "required": true,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": true,
                            "value": "from typing import Optional, Union\n\nfrom langchain.llms import BaseLLM\nfrom langchain_community.chat_models.openai import ChatOpenAI\n\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import BaseLanguageModel, NestedDict\n\n\nclass ChatOpenAIComponent(CustomComponent):\n    display_name = \"ChatOpenAI\"\n    description = \"`OpenAI` Chat large language models API.\"\n\n    def build_config(self):\n        return {\n            \"max_tokens\": {\n                \"display_name\": \"Max Tokens\",\n                \"field_type\": \"int\",\n                \"advanced\": False,\n                \"required\": False,\n            },\n            \"model_kwargs\": {\n                \"display_name\": \"Model Kwargs\",\n                \"field_type\": \"NestedDict\",\n                \"advanced\": True,\n                \"required\": False,\n            },\n            \"model_name\": {\n                \"display_name\": \"Model Name\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"options\": [\n                    \"gpt-4-turbo-preview\",\n                    \"gpt-4-0125-preview\",\n                    \"gpt-4-1106-preview\",\n                    \"gpt-4-vision-preview\",\n                    \"gpt-3.5-turbo-0125\",\n                    \"gpt-3.5-turbo-1106\",\n                ],\n            },\n            \"openai_api_base\": {\n                \"display_name\": \"OpenAI API Base\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"info\": (\n                    \"The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\\n\\n\"\n                    \"You can change this to use other APIs like JinaChat, LocalAI and Prem.\"\n                ),\n            },\n            \"openai_api_key\": {\n                \"display_name\": \"OpenAI API Key\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"password\": True,\n            },\n            \"temperature\": {\n                \"display_name\": \"Temperature\",\n                \"field_type\": \"float\",\n                \"advanced\": False,\n                \"required\": False,\n                \"value\": 0.7,\n            },\n        }\n\n    def build(\n        self,\n        max_tokens: Optional[int] = 256,\n        model_kwargs: NestedDict = {},\n        model_name: str = \"gpt-4-1106-preview\",\n        openai_api_base: Optional[str] = None,\n        openai_api_key: Optional[str] = \"sk-PLACEHOLDER_API_KEY\",\n        temperature: float = 0.7,\n    ) -> Union[BaseLanguageModel, BaseLLM]:\n        if not openai_api_base:\n            openai_api_base = \"https://api.openai.com/v1\"\n        return ChatOpenAI(\n            max_tokens=max_tokens,\n            model_kwargs=model_kwargs,\n            model=model_name,\n            base_url=openai_api_base,\n            api_key=openai_api_key,\n            temperature=temperature,\n        )\n",
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "code",
                            "advanced": false,
                            "dynamic": true,
                            "info": "",
                            "display_name": "code"
                          },
                          "max_tokens": {
                            "type": "int",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "value": 256,
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "max_tokens",
                            "display_name": "Max Tokens",
                            "advanced": false,
                            "dynamic": false,
                            "info": ""
                          },
                          "model_kwargs": {
                            "type": "NestedDict",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "value": {},
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "model_kwargs",
                            "display_name": "Model Kwargs",
                            "advanced": true,
                            "dynamic": false,
                            "info": ""
                          },
                          "model_name": {
                            "type": "str",
                            "required": false,
                            "placeholder": "",
                            "list": true,
                            "show": true,
                            "multiline": false,
                            "value": "gpt-4-0125-preview",
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "options": [
                              "gpt-4-turbo-preview",
                              "gpt-4-0125-preview",
                              "gpt-4-1106-preview",
                              "gpt-4-vision-preview",
                              "gpt-3.5-turbo-0125",
                              "gpt-3.5-turbo-1106"
                            ],
                            "name": "model_name",
                            "display_name": "Model Name",
                            "advanced": false,
                            "dynamic": false,
                            "info": ""
                          },
                          "openai_api_base": {
                            "type": "str",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "openai_api_base",
                            "display_name": "OpenAI API Base",
                            "advanced": false,
                            "dynamic": false,
                            "info": "The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem."
                          },
                          "openai_api_key": {
                            "type": "str",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "value": null,
                            "fileTypes": [],
                            "file_path": "",
                            "password": true,
                            "name": "openai_api_key",
                            "display_name": "OpenAI API Key",
                            "advanced": false,
                            "dynamic": false,
                            "info": ""
                          },
                          "temperature": {
                            "type": "float",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "value": 0.7,
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "temperature",
                            "display_name": "Temperature",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "rangeSpec": {
                              "min": -1,
                              "max": 1,
                              "step": 0.1
                            }
                          },
                          "_type": "CustomComponent"
                        },
                        "description": "`OpenAI` Chat large language models API.",
                        "base_classes": [
                          "BaseLanguageModel",
                          "BaseLLM",
                          "BaseLanguageModel"
                        ],
                        "display_name": "ChatOpenAI",
                        "documentation": "",
                        "custom_fields": {
                          "max_tokens": null,
                          "model_kwargs": null,
                          "model_name": null,
                          "openai_api_base": null,
                          "openai_api_key": null,
                          "temperature": null
                        },
                        "output_types": [
                          "BaseLanguageModel",
                          "BaseLLM"
                        ],
                        "field_formatters": {},
                        "beta": true
                      },
                      "id": "ChatOpenAI-xpOwP",
                      "description": "`OpenAI` Chat large language models API.",
                      "display_name": "ChatOpenAI"
                    },
                    "selected": true,
                    "positionAbsolute": {
                      "x": 101.81345493467052,
                      "y": -943.7393323559688
                    },
                    "dragging": false
                  },
                  {
                    "width": 384,
                    "height": 563,
                    "id": "PromptTemplate-k6ZNb",
                    "type": "genericNode",
                    "position": {
                      "x": 104.42026613299777,
                      "y": -190.8790440718118
                    },
                    "data": {
                      "type": "PromptTemplate",
                      "node": {
                        "template": {
                          "output_parser": {
                            "type": "BaseOutputParser",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": false,
                            "multiline": false,
                            "fileTypes": [],
                            "password": false,
                            "name": "output_parser",
                            "advanced": false,
                            "dynamic": true,
                            "info": "",
                            "display_name": "output_parser"
                          },
                          "input_types": {
                            "type": "dict",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": false,
                            "multiline": false,
                            "fileTypes": [],
                            "password": false,
                            "name": "input_types",
                            "advanced": false,
                            "dynamic": true,
                            "info": "",
                            "display_name": "input_types"
                          },
                          "input_variables": {
                            "type": "str",
                            "required": true,
                            "placeholder": "",
                            "list": true,
                            "show": false,
                            "multiline": false,
                            "fileTypes": [],
                            "password": false,
                            "name": "input_variables",
                            "advanced": false,
                            "dynamic": true,
                            "info": "",
                            "value": [
                              "input_language",
                              "output_language",
                              "input"
                            ],
                            "display_name": "input_variables"
                          },
                          "metadata": {
                            "type": "dict",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": false,
                            "multiline": false,
                            "fileTypes": [],
                            "password": false,
                            "name": "metadata",
                            "advanced": false,
                            "dynamic": true,
                            "info": "",
                            "display_name": "metadata"
                          },
                          "name": {
                            "type": "str",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": false,
                            "multiline": false,
                            "fileTypes": [],
                            "password": false,
                            "name": "name",
                            "advanced": false,
                            "dynamic": true,
                            "info": "",
                            "display_name": "name"
                          },
                          "partial_variables": {
                            "type": "dict",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": false,
                            "multiline": false,
                            "fileTypes": [],
                            "password": false,
                            "name": "partial_variables",
                            "advanced": false,
                            "dynamic": true,
                            "info": "",
                            "display_name": "partial_variables"
                          },
                          "tags": {
                            "type": "str",
                            "required": false,
                            "placeholder": "",
                            "list": true,
                            "show": false,
                            "multiline": false,
                            "fileTypes": [],
                            "password": false,
                            "name": "tags",
                            "advanced": false,
                            "dynamic": true,
                            "info": "",
                            "display_name": "tags"
                          },
                          "template": {
                            "type": "prompt",
                            "required": true,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": true,
                            "fileTypes": [],
                            "password": false,
                            "name": "template",
                            "advanced": false,
                            "dynamic": true,
                            "info": "",
                            "value": "you are a helpful assistant that translate {input_language} to {output_language}.\n\n{input}",
                            "display_name": "template"
                          },
                          "template_format": {
                            "type": "str",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": false,
                            "multiline": false,
                            "value": "f-string",
                            "fileTypes": [],
                            "password": false,
                            "name": "template_format",
                            "advanced": false,
                            "dynamic": true,
                            "info": "",
                            "display_name": "template_format"
                          },
                          "validate_template": {
                            "type": "bool",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": false,
                            "multiline": false,
                            "value": false,
                            "fileTypes": [],
                            "password": false,
                            "name": "validate_template",
                            "advanced": false,
                            "dynamic": true,
                            "info": "",
                            "display_name": "validate_template"
                          },
                          "_type": "PromptTemplate",
                          "input_language": {
                            "type": "str",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": true,
                            "value": "Korean",
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "input_language",
                            "display_name": "input_language",
                            "advanced": false,
                            "input_types": [
                              "Document",
                              "BaseOutputParser"
                            ],
                            "dynamic": false,
                            "info": ""
                          },
                          "output_language": {
                            "type": "str",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": true,
                            "value": "Japanese",
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "output_language",
                            "display_name": "output_language",
                            "advanced": false,
                            "input_types": [
                              "Document",
                              "BaseOutputParser"
                            ],
                            "dynamic": false,
                            "info": ""
                          },
                          "input": {
                            "type": "str",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": true,
                            "value": "",
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "input",
                            "display_name": "input",
                            "advanced": false,
                            "input_types": [
                              "Document",
                              "BaseOutputParser"
                            ],
                            "dynamic": false,
                            "info": ""
                          }
                        },
                        "description": "A prompt template for a language model.",
                        "icon": null,
                        "base_classes": [
                          "StringPromptTemplate",
                          "BasePromptTemplate",
                          "PromptTemplate"
                        ],
                        "name": "",
                        "display_name": "PromptTemplate",
                        "documentation": "https://python.langchain.com/docs/modules/model_io/prompts/prompt_templates/",
                        "custom_fields": {
                          "": [
                            "input_language",
                            "output_language",
                            "input"
                          ]
                        },
                        "output_types": [],
                        "full_path": null,
                        "field_formatters": {},
                        "beta": false,
                        "error": null
                      },
                      "id": "PromptTemplate-k6ZNb",
                      "description": "A prompt template for a language model.",
                      "display_name": "PromptTemplate"
                    },
                    "selected": true,
                    "positionAbsolute": {
                      "x": 104.42026613299777,
                      "y": -190.8790440718118
                    },
                    "dragging": false
                  }
                ],
                "edges": [
                  {
                    "source": "ChatOpenAI-xpOwP",
                    "sourceHandle": "{œbaseClassesœ:[œBaseLanguageModelœ,œBaseLLMœ,œBaseLanguageModelœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-xpOwPœ}",
                    "target": "LLMChain-v953s",
                    "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œLLMChain-v953sœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}",
                    "data": {
                      "targetHandle": {
                        "fieldName": "llm",
                        "id": "LLMChain-v953s",
                        "inputTypes": null,
                        "type": "BaseLanguageModel"
                      },
                      "sourceHandle": {
                        "baseClasses": [
                          "BaseLanguageModel",
                          "BaseLLM",
                          "BaseLanguageModel"
                        ],
                        "dataType": "ChatOpenAI",
                        "id": "ChatOpenAI-xpOwP"
                      }
                    },
                    "style": {
                      "stroke": "#555"
                    },
                    "className": "stroke-gray-900  stroke-connection",
                    "animated": false,
                    "id": "reactflow__edge-ChatOpenAI-xpOwP{œbaseClassesœ:[œBaseLanguageModelœ,œBaseLLMœ,œBaseLanguageModelœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-xpOwPœ}-LLMChain-v953s{œfieldNameœ:œllmœ,œidœ:œLLMChain-v953sœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}",
                    "selected": true
                  },
                  {
                    "source": "PromptTemplate-k6ZNb",
                    "sourceHandle": "{œbaseClassesœ:[œStringPromptTemplateœ,œBasePromptTemplateœ,œPromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-k6ZNbœ}",
                    "target": "LLMChain-v953s",
                    "targetHandle": "{œfieldNameœ:œpromptœ,œidœ:œLLMChain-v953sœ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}",
                    "data": {
                      "targetHandle": {
                        "fieldName": "prompt",
                        "id": "LLMChain-v953s",
                        "inputTypes": null,
                        "type": "BasePromptTemplate"
                      },
                      "sourceHandle": {
                        "baseClasses": [
                          "StringPromptTemplate",
                          "BasePromptTemplate",
                          "PromptTemplate"
                        ],
                        "dataType": "PromptTemplate",
                        "id": "PromptTemplate-k6ZNb"
                      }
                    },
                    "style": {
                      "stroke": "#555"
                    },
                    "className": "stroke-gray-900  stroke-connection",
                    "animated": false,
                    "id": "reactflow__edge-PromptTemplate-k6ZNb{œbaseClassesœ:[œStringPromptTemplateœ,œBasePromptTemplateœ,œPromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-k6ZNbœ}-LLMChain-v953s{œfieldNameœ:œpromptœ,œidœ:œLLMChain-v953sœ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}",
                    "selected": true
                  }
                ],
                "viewport": {
                  "zoom": 1,
                  "x": 0,
                  "y": 0
                }
              },
              "is_component": false,
              "name": "Cocky Mestorf",
              "description": "",
              "id": "lEBE9"
            }
          }
        },
        "id": "GroupNode-ibcgn",
        "position": {
          "x": -1859.1707070898585,
          "y": -1052.374249795048
        },
        "type": "genericNode",
        "selected": true,
        "positionAbsolute": {
          "x": -1859.1707070898585,
          "y": -1052.374249795048
        },
        "dragging": false
      },
      {
        "id": "Document-u7ZYV",
        "type": "genericNode",
        "position": {
          "x": -1148.3502025604957,
          "y": -1135.9375803750909
        },
        "data": {
          "type": "Document",
          "node": {
            "template": {
              "llm": {
                "type": "BaseLLM",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "llm",
                "display_name": "LLM",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "prompt": {
                "type": "PromptTemplate",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "prompt",
                "display_name": "Prompt Template",
                "advanced": false,
                "dynamic": false,
                "info": "Make sure the prompt has all variables filled."
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from langchain.llms.base import BaseLLM\nfrom langchain.prompts import PromptTemplate\nfrom langchain_core.documents import Document\n\nfrom axiestudio import CustomComponent\n\n\nclass PromptRunner(CustomComponent):\n    display_name: str = \"Prompt Runner\"\n    description: str = \"Run a Chain with the given PromptTemplate\"\n    beta: bool = True\n    field_config = {\n        \"llm\": {\"display_name\": \"LLM\"},\n        \"prompt\": {\n            \"display_name\": \"Prompt Template\",\n            \"info\": \"Make sure the prompt has all variables filled.\",\n        },\n        \"code\": {\"show\": False},\n    }\n\n    def build(self, llm: BaseLLM, prompt: PromptTemplate, inputs: dict = {}) -> Document:\n        chain = prompt | llm\n        # The input is an empty dict because the prompt is already filled\n        result = chain.invoke(input=inputs)\n        if hasattr(result, \"content\"):\n            result = result.content\n        self.repr_value = result\n        return Document(page_content=str(result))\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": false,
                "dynamic": true,
                "info": ""
              },
              "inputs": {
                "type": "dict",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": [
                  {
                    "": ""
                  }
                ],
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "inputs",
                "display_name": "inputs",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "_type": "CustomComponent"
            },
            "description": "Run a Chain with the given PromptTemplate",
            "base_classes": [
              "Document"
            ],
            "display_name": "Prompt Runner",
            "documentation": "",
            "custom_fields": {
              "llm": null,
              "prompt": null,
              "inputs": null
            },
            "output_types": [
              "Document"
            ],
            "field_formatters": {},
            "beta": true
          },
          "id": "Document-u7ZYV"
        },
        "selected": false,
        "width": 384,
        "height": 463,
        "positionAbsolute": {
          "x": -1148.3502025604957,
          "y": -1135.9375803750909
        },
        "dragging": false
      },
      {
        "id": "InfoSQLDatabaseTool-HhzN5",
        "type": "genericNode",
        "position": {
          "x": -954.238060126414,
          "y": -336.0077030862531
        },
        "data": {
          "type": "InfoSQLDatabaseTool",
          "node": {
            "template": {
              "args_schema": {
                "type": "Type[pydantic.v1.main.BaseModel]",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "args_schema",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "callbacks": {
                "type": "langchain_core.callbacks.base.BaseCallbackHandler",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "callbacks",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "db": {
                "type": "SQLDatabase",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "db",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "handle_tool_error": {
                "type": "bool",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "handle_tool_error",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "handle_validation_error": {
                "type": "bool",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "handle_validation_error",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "metadata": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "metadata",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "tags": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "tags",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "_type": "InfoSQLDatabaseTool"
            },
            "description": "",
            "base_classes": [
              "Tool",
              "BaseTool",
              "BaseTool",
              "InfoSQLDatabaseTool",
              "BaseSQLDatabaseTool"
            ],
            "display_name": "InfoSQLDatabaseTool",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "field_formatters": {},
            "beta": false
          },
          "id": "InfoSQLDatabaseTool-HhzN5"
        },
        "selected": false,
        "width": 384,
        "height": 203,
        "positionAbsolute": {
          "x": -954.238060126414,
          "y": -336.0077030862531
        },
        "dragging": false
      },
      {
        "id": "JsonListKeysTool-gNeft",
        "type": "genericNode",
        "position": {
          "x": -472.0885450482104,
          "y": -69.8862174911407
        },
        "data": {
          "type": "JsonListKeysTool",
          "node": {
            "template": {
              "args_schema": {
                "type": "Type[pydantic.v1.main.BaseModel]",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "args_schema",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "callbacks": {
                "type": "langchain_core.callbacks.base.BaseCallbackHandler",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "callbacks",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "spec": {
                "type": "JsonSpec",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "spec",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "handle_tool_error": {
                "type": "bool",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "handle_tool_error",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "handle_validation_error": {
                "type": "bool",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "handle_validation_error",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "metadata": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "metadata",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "tags": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "tags",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "_type": "JsonListKeysTool"
            },
            "description": "",
            "base_classes": [
              "Tool",
              "BaseTool",
              "BaseTool",
              "JsonListKeysTool"
            ],
            "display_name": "JsonListKeysTool",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "field_formatters": {},
            "beta": false
          },
          "id": "JsonListKeysTool-gNeft"
        },
        "selected": false,
        "width": 384,
        "height": 203,
        "positionAbsolute": {
          "x": -472.0885450482104,
          "y": -69.8862174911407
        },
        "dragging": false
      },
      {
        "id": "Search-23UJP",
        "type": "genericNode",
        "position": {
          "x": -1603.4552779588612,
          "y": -347.57993260526786
        },
        "data": {
          "type": "Search",
          "node": {
            "template": {
              "aiosession": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "aiosession",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "serpapi_api_key": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": true,
                "name": "serpapi_api_key",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "_type": "Search"
            },
            "description": "A search engine. Useful for when you need to answer questions about current events. Input should be a search query.",
            "base_classes": [
              "Tool",
              "BaseTool"
            ],
            "display_name": "Search",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "field_formatters": {},
            "beta": false
          },
          "id": "Search-23UJP"
        },
        "selected": false,
        "width": 384,
        "height": 321,
        "positionAbsolute": {
          "x": -1603.4552779588612,
          "y": -347.57993260526786
        },
        "dragging": false
      },
      {
        "id": "RequestsPatchTool-Aj6G5",
        "type": "genericNode",
        "position": {
          "x": -295.19602815263556,
          "y": -1004.4422580810353
        },
        "data": {
          "type": "RequestsPatchTool",
          "node": {
            "template": {
              "args_schema": {
                "type": "Type[pydantic.v1.main.BaseModel]",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "args_schema",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "callbacks": {
                "type": "langchain_core.callbacks.base.BaseCallbackHandler",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "callbacks",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "requests_wrapper": {
                "type": "GenericRequestsWrapper",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "requests_wrapper",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "handle_tool_error": {
                "type": "bool",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "handle_tool_error",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "handle_validation_error": {
                "type": "bool",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "handle_validation_error",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "metadata": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "metadata",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "tags": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "tags",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "_type": "RequestsPatchTool"
            },
            "description": "",
            "base_classes": [
              "Tool",
              "BaseTool",
              "BaseTool",
              "RequestsPatchTool",
              "BaseRequestsTool"
            ],
            "display_name": "RequestsPatchTool",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "field_formatters": {},
            "beta": false
          },
          "id": "RequestsPatchTool-Aj6G5"
        },
        "selected": false,
        "width": 384,
        "height": 203,
        "positionAbsolute": {
          "x": -295.19602815263556,
          "y": -1004.4422580810353
        },
        "dragging": false
      },
      {
        "id": "AgentInitializer-8WoLV",
        "type": "genericNode",
        "position": {
          "x": -1037.3643910582173,
          "y": -1868.1262137463657
        },
        "data": {
          "type": "AgentInitializer",
          "node": {
            "template": {
              "llm": {
                "type": "BaseLanguageModel",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "llm",
                "display_name": "Language Model",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "memory": {
                "type": "BaseChatMemory",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "memory",
                "display_name": "Memory",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "tools": {
                "type": "Tool",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "tools",
                "display_name": "Tools",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "agent": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "zero-shot-react-description",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "options": [
                  "zero-shot-react-description",
                  "react-docstore",
                  "self-ask-with-search",
                  "conversational-react-description",
                  "chat-zero-shot-react-description",
                  "chat-conversational-react-description",
                  "structured-chat-zero-shot-react-description",
                  "openai-functions",
                  "openai-multi-functions",
                  "JsonAgent",
                  "CSVAgent",
                  "VectorStoreAgent",
                  "VectorStoreRouterAgent",
                  "SQLAgent"
                ],
                "name": "agent",
                "display_name": "Agent Type",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from typing import Callable, List, Optional, Union\n\nfrom langchain.agents import AgentExecutor, AgentType, initialize_agent, types\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import BaseChatMemory, BaseLanguageModel, Tool\n\n\nclass AgentInitializerComponent(CustomComponent):\n    display_name: str = \"Agent Initializer\"\n    description: str = \"Initialize a Langchain Agent.\"\n    documentation: str = \"https://python.langchain.com/docs/modules/agents/agent_types/\"\n\n    def build_config(self):\n        agents = list(types.AGENT_TO_CLASS.keys())\n        # field_type and required are optional\n        return {\n            \"agent\": {\"options\": agents, \"value\": agents[0], \"display_name\": \"Agent Type\"},\n            \"max_iterations\": {\"display_name\": \"Max Iterations\", \"value\": 10},\n            \"memory\": {\"display_name\": \"Memory\"},\n            \"tools\": {\"display_name\": \"Tools\"},\n            \"llm\": {\"display_name\": \"Language Model\"},\n            \"code\": {\"advanced\": True},\n        }\n\n    def build(\n        self,\n        agent: str,\n        llm: BaseLanguageModel,\n        tools: List[Tool],\n        max_iterations: int,\n        memory: Optional[BaseChatMemory] = None,\n    ) -> Union[AgentExecutor, Callable]:\n        agent = AgentType(agent)\n        if memory:\n            return initialize_agent(\n                tools=tools,\n                llm=llm,\n                agent=agent,\n                memory=memory,\n                return_intermediate_steps=True,\n                handle_parsing_errors=True,\n                max_iterations=max_iterations,\n            )\n        return initialize_agent(\n            tools=tools,\n            llm=llm,\n            agent=agent,\n            return_intermediate_steps=True,\n            handle_parsing_errors=True,\n            max_iterations=max_iterations,\n        )\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": ""
              },
              "max_iterations": {
                "type": "int",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": 10,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "max_iterations",
                "display_name": "Max Iterations",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "_type": "CustomComponent"
            },
            "description": "Initialize a Langchain Agent.",
            "base_classes": [
              "AgentExecutor",
              "Chain",
              "Callable"
            ],
            "display_name": "Agent Initializer",
            "documentation": "https://python.langchain.com/docs/modules/agents/agent_types/",
            "custom_fields": {
              "agent": null,
              "llm": null,
              "tools": null,
              "max_iterations": null,
              "memory": null
            },
            "output_types": [
              "AgentExecutor",
              "Callable"
            ],
            "field_formatters": {},
            "beta": true
          },
          "id": "AgentInitializer-8WoLV"
        },
        "selected": false,
        "width": 384,
        "height": 515,
        "dragging": false,
        "positionAbsolute": {
          "x": -1037.3643910582173,
          "y": -1868.1262137463657
        }
      }
    ],
    "edges": [
      {
        "source": "GroupNode-ibcgn",
        "sourceHandle": "{œbaseClassesœ:[œChainœ,œCallableœ,œLLMChainœ,œChainœ],œdataTypeœ:œLLMChainœ,œidœ:œGroupNode-ibcgnœ}",
        "target": "Tool-Jhmff",
        "targetHandle": "{œfieldNameœ:œfuncœ,œidœ:œTool-Jhmffœ,œinputTypesœ:null,œtypeœ:œCallableœ}",
        "data": {
          "targetHandle": {
            "fieldName": "func",
            "id": "Tool-Jhmff",
            "inputTypes": null,
            "type": "Callable"
          },
          "sourceHandle": {
            "baseClasses": [
              "Chain",
              "Callable",
              "LLMChain",
              "Chain"
            ],
            "dataType": "LLMChain",
            "id": "GroupNode-ibcgn"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-gray-900  stroke-connection",
        "animated": false,
        "id": "reactflow__edge-GroupNode-ibcgn{œbaseClassesœ:[œChainœ,œCallableœ,œLLMChainœ,œChainœ],œdataTypeœ:œLLMChainœ,œidœ:œGroupNode-ibcgnœ}-Tool-Jhmff{œfieldNameœ:œfuncœ,œidœ:œTool-Jhmffœ,œinputTypesœ:null,œtypeœ:œCallableœ}",
        "selected": false
      }
    ],
    "viewport": {
      "x": 1435.4961484230867,
      "y": 723.2965587814303,
      "zoom": 0.6909592043546574
    }
  },
  "metadata": {
    "Tool": {
      "count": 1
    },
    "GroupNode": {
      "count": 1
    },
    "Document": {
      "count": 1
    },
    "InfoSQLDatabaseTool": {
      "count": 1
    },
    "JsonListKeysTool": {
      "count": 1
    },
    "Search": {
      "count": 1
    },
    "RequestsPatchTool": {
      "count": 1
    },
    "AgentInitializer": {
      "count": 1
    },
    "total": 8
  },
  "original": {
    "id": "4d99631c-d711-4922-9885-215d9f2cf753",
    "name": "Translate ChatBot",
    "description": "Conversation Catalyst Engine.",
    "is_component": false,
    "liked_by_count": "30",
    "downloads_count": "326",
    "metadata": {
      "Tool": {
        "count": 1
      },
      "GroupNode": {
        "count": 1
      },
      "Document": {
        "count": 1
      },
      "InfoSQLDatabaseTool": {
        "count": 1
      },
      "JsonListKeysTool": {
        "count": 1
      },
      "Search": {
        "count": 1
      },
      "RequestsPatchTool": {
        "count": 1
      },
      "AgentInitializer": {
        "count": 1
      },
      "total": 8
    },
    "last_tested_version": "0.6.7a5",
    "private": false,
    "data": {
      "nodes": [
        {
          "width": 384,
          "height": 491,
          "id": "Tool-Jhmff",
          "type": "genericNode",
          "position": {
            "x": -447.82250417399615,
            "y": -700.2336842528189
          },
          "data": {
            "type": "Tool",
            "node": {
              "template": {
                "func": {
                  "type": "Callable",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "func",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "description": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "description",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "display_name": "description"
                },
                "name": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "display_name": "name"
                },
                "return_direct": {
                  "type": "bool",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "return_direct",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "display_name": "return_direct"
                },
                "_type": "Tool"
              },
              "description": "Converts a chain, agent or function into a tool.",
              "base_classes": [
                "Tool",
                "BaseTool"
              ],
              "display_name": "Tool",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "field_formatters": {},
              "beta": false
            },
            "id": "Tool-Jhmff"
          },
          "selected": false,
          "positionAbsolute": {
            "x": -447.82250417399615,
            "y": -700.2336842528189
          },
          "dragging": false
        },
        {
          "width": 384,
          "height": 611,
          "data": {
            "id": "GroupNode-ibcgn",
            "type": "LLMChain",
            "node": {
              "output_types": [
                "Chain",
                "Callable",
                "LLMChain"
              ],
              "display_name": "Group",
              "documentation": "",
              "base_classes": [
                "Chain",
                "Callable",
                "LLMChain",
                "Chain"
              ],
              "description": "",
              "template": {
                "memory_LLMChain-v953s": {
                  "type": "BaseMemory",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "memory",
                  "display_name": "Memory",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "proxy": {
                    "id": "LLMChain-v953s",
                    "field": "memory"
                  }
                },
                "code_LLMChain-v953s": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": true,
                  "value": "from typing import Callable, Optional, Union\n\nfrom langchain.chains import LLMChain\n\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import (\n    BaseLanguageModel,\n    BaseMemory,\n    BasePromptTemplate,\n    Chain,\n)\n\n\nclass LLMChainComponent(CustomComponent):\n    display_name = \"LLMChain\"\n    description = \"Chain to run queries against LLMs\"\n\n    def build_config(self):\n        return {\n            \"prompt\": {\"display_name\": \"Prompt\"},\n            \"llm\": {\"display_name\": \"LLM\"},\n            \"memory\": {\"display_name\": \"Memory\"},\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        prompt: BasePromptTemplate,\n        llm: BaseLanguageModel,\n        memory: Optional[BaseMemory] = None,\n    ) -> Union[Chain, Callable, LLMChain]:\n        return LLMChain(prompt=prompt, llm=llm, memory=memory)\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "display_name": "code",
                  "proxy": {
                    "id": "LLMChain-v953s",
                    "field": "code"
                  }
                },
                "code_ChatOpenAI-xpOwP": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": true,
                  "value": "from typing import Optional, Union\n\nfrom langchain.llms import BaseLLM\nfrom langchain_community.chat_models.openai import ChatOpenAI\n\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import BaseLanguageModel, NestedDict\n\n\nclass ChatOpenAIComponent(CustomComponent):\n    display_name = \"ChatOpenAI\"\n    description = \"`OpenAI` Chat large language models API.\"\n\n    def build_config(self):\n        return {\n            \"max_tokens\": {\n                \"display_name\": \"Max Tokens\",\n                \"field_type\": \"int\",\n                \"advanced\": False,\n                \"required\": False,\n            },\n            \"model_kwargs\": {\n                \"display_name\": \"Model Kwargs\",\n                \"field_type\": \"NestedDict\",\n                \"advanced\": True,\n                \"required\": False,\n            },\n            \"model_name\": {\n                \"display_name\": \"Model Name\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"options\": [\n                    \"gpt-4-turbo-preview\",\n                    \"gpt-4-0125-preview\",\n                    \"gpt-4-1106-preview\",\n                    \"gpt-4-vision-preview\",\n                    \"gpt-3.5-turbo-0125\",\n                    \"gpt-3.5-turbo-1106\",\n                ],\n            },\n            \"openai_api_base\": {\n                \"display_name\": \"OpenAI API Base\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"info\": (\n                    \"The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\\n\\n\"\n                    \"You can change this to use other APIs like JinaChat, LocalAI and Prem.\"\n                ),\n            },\n            \"openai_api_key\": {\n                \"display_name\": \"OpenAI API Key\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"password\": True,\n            },\n            \"temperature\": {\n                \"display_name\": \"Temperature\",\n                \"field_type\": \"float\",\n                \"advanced\": False,\n                \"required\": False,\n                \"value\": 0.7,\n            },\n        }\n\n    def build(\n        self,\n        max_tokens: Optional[int] = 256,\n        model_kwargs: NestedDict = {},\n        model_name: str = \"gpt-4-1106-preview\",\n        openai_api_base: Optional[str] = None,\n        openai_api_key: Optional[str] = \"sk-PLACEHOLDER_API_KEY\",\n        temperature: float = 0.7,\n    ) -> Union[BaseLanguageModel, BaseLLM]:\n        if not openai_api_base:\n            openai_api_base = \"https://api.openai.com/v1\"\n        return ChatOpenAI(\n            max_tokens=max_tokens,\n            model_kwargs=model_kwargs,\n            model=model_name,\n            base_url=openai_api_base,\n            api_key=openai_api_key,\n            temperature=temperature,\n        )\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "display_name": "code",
                  "proxy": {
                    "id": "ChatOpenAI-xpOwP",
                    "field": "code"
                  }
                },
                "max_tokens_ChatOpenAI-xpOwP": {
                  "type": "int",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": 256,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "max_tokens",
                  "display_name": "Max Tokens",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "proxy": {
                    "id": "ChatOpenAI-xpOwP",
                    "field": "max_tokens"
                  }
                },
                "model_kwargs_ChatOpenAI-xpOwP": {
                  "type": "NestedDict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": {},
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "model_kwargs",
                  "display_name": "Model Kwargs",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "proxy": {
                    "id": "ChatOpenAI-xpOwP",
                    "field": "model_kwargs"
                  }
                },
                "model_name_ChatOpenAI-xpOwP": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "gpt-4-0125-preview",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "options": [
                    "gpt-4-turbo-preview",
                    "gpt-4-0125-preview",
                    "gpt-4-1106-preview",
                    "gpt-4-vision-preview",
                    "gpt-3.5-turbo-0125",
                    "gpt-3.5-turbo-1106"
                  ],
                  "name": "model_name",
                  "display_name": "Model Name",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "proxy": {
                    "id": "ChatOpenAI-xpOwP",
                    "field": "model_name"
                  }
                },
                "openai_api_base_ChatOpenAI-xpOwP": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "openai_api_base",
                  "display_name": "OpenAI API Base",
                  "advanced": true,
                  "dynamic": false,
                  "info": "The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.",
                  "proxy": {
                    "id": "ChatOpenAI-xpOwP",
                    "field": "openai_api_base"
                  }
                },
                "openai_api_key_ChatOpenAI-xpOwP": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": true,
                  "name": "openai_api_key",
                  "display_name": "OpenAI API Key",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "proxy": {
                    "id": "ChatOpenAI-xpOwP",
                    "field": "openai_api_key"
                  }
                },
                "temperature_ChatOpenAI-xpOwP": {
                  "type": "float",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": 0.7,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "temperature",
                  "display_name": "Temperature",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "rangeSpec": {
                    "min": -1,
                    "max": 1,
                    "step": 0.1
                  },
                  "proxy": {
                    "id": "ChatOpenAI-xpOwP",
                    "field": "temperature"
                  }
                },
                "output_parser_PromptTemplate-k6ZNb": {
                  "type": "BaseOutputParser",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "output_parser",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "display_name": "output_parser",
                  "proxy": {
                    "id": "PromptTemplate-k6ZNb",
                    "field": "output_parser"
                  }
                },
                "input_types_PromptTemplate-k6ZNb": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "input_types",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "display_name": "input_types",
                  "proxy": {
                    "id": "PromptTemplate-k6ZNb",
                    "field": "input_types"
                  }
                },
                "input_variables_PromptTemplate-k6ZNb": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "input_variables",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "value": [
                    "input_language",
                    "output_language",
                    "input"
                  ],
                  "display_name": "input_variables",
                  "proxy": {
                    "id": "PromptTemplate-k6ZNb",
                    "field": "input_variables"
                  }
                },
                "metadata_PromptTemplate-k6ZNb": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "metadata",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "display_name": "metadata",
                  "proxy": {
                    "id": "PromptTemplate-k6ZNb",
                    "field": "metadata"
                  }
                },
                "name_PromptTemplate-k6ZNb": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "name",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "display_name": "name",
                  "proxy": {
                    "id": "PromptTemplate-k6ZNb",
                    "field": "name"
                  }
                },
                "partial_variables_PromptTemplate-k6ZNb": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "partial_variables",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "display_name": "partial_variables",
                  "proxy": {
                    "id": "PromptTemplate-k6ZNb",
                    "field": "partial_variables"
                  }
                },
                "tags_PromptTemplate-k6ZNb": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": true,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "tags",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "display_name": "tags",
                  "proxy": {
                    "id": "PromptTemplate-k6ZNb",
                    "field": "tags"
                  }
                },
                "template_PromptTemplate-k6ZNb": {
                  "type": "prompt",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "fileTypes": [],
                  "password": false,
                  "name": "template",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "value": "you are a helpful assistant that translate {input_language} to {output_language}.\n\n{input}",
                  "display_name": "template",
                  "proxy": {
                    "id": "PromptTemplate-k6ZNb",
                    "field": "template"
                  }
                },
                "template_format_PromptTemplate-k6ZNb": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": "f-string",
                  "fileTypes": [],
                  "password": false,
                  "name": "template_format",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "display_name": "template_format",
                  "proxy": {
                    "id": "PromptTemplate-k6ZNb",
                    "field": "template_format"
                  }
                },
                "validate_template_PromptTemplate-k6ZNb": {
                  "type": "bool",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "validate_template",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "display_name": "validate_template",
                  "proxy": {
                    "id": "PromptTemplate-k6ZNb",
                    "field": "validate_template"
                  }
                },
                "input_language_PromptTemplate-k6ZNb": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "Korean",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "input_language",
                  "display_name": "input_language",
                  "advanced": false,
                  "input_types": [
                    "Document",
                    "BaseOutputParser"
                  ],
                  "dynamic": false,
                  "info": "",
                  "proxy": {
                    "id": "PromptTemplate-k6ZNb",
                    "field": "input_language"
                  }
                },
                "output_language_PromptTemplate-k6ZNb": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "Japanese",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "output_language",
                  "display_name": "output_language",
                  "advanced": false,
                  "input_types": [
                    "Document",
                    "BaseOutputParser"
                  ],
                  "dynamic": false,
                  "info": "",
                  "proxy": {
                    "id": "PromptTemplate-k6ZNb",
                    "field": "output_language"
                  }
                },
                "input_PromptTemplate-k6ZNb": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "jfdf",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "input",
                  "display_name": "input",
                  "advanced": false,
                  "input_types": [
                    "Document",
                    "BaseOutputParser"
                  ],
                  "dynamic": false,
                  "info": "",
                  "proxy": {
                    "id": "PromptTemplate-k6ZNb",
                    "field": "input"
                  }
                }
              },
              "flow": {
                "data": {
                  "nodes": [
                    {
                      "width": 384,
                      "height": 425,
                      "id": "LLMChain-v953s",
                      "type": "genericNode",
                      "position": {
                        "x": 674.2566421540855,
                        "y": -600.0600042202825
                      },
                      "data": {
                        "type": "LLMChain",
                        "node": {
                          "template": {
                            "llm": {
                              "type": "BaseLanguageModel",
                              "required": true,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "llm",
                              "display_name": "LLM",
                              "advanced": false,
                              "dynamic": false,
                              "info": ""
                            },
                            "memory": {
                              "type": "BaseMemory",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "memory",
                              "display_name": "Memory",
                              "advanced": false,
                              "dynamic": false,
                              "info": ""
                            },
                            "prompt": {
                              "type": "BasePromptTemplate",
                              "required": true,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "prompt",
                              "display_name": "Prompt",
                              "advanced": false,
                              "dynamic": false,
                              "info": ""
                            },
                            "code": {
                              "type": "code",
                              "required": true,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": true,
                              "value": "from typing import Callable, Optional, Union\n\nfrom langchain.chains import LLMChain\n\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import (\n    BaseLanguageModel,\n    BaseMemory,\n    BasePromptTemplate,\n    Chain,\n)\n\n\nclass LLMChainComponent(CustomComponent):\n    display_name = \"LLMChain\"\n    description = \"Chain to run queries against LLMs\"\n\n    def build_config(self):\n        return {\n            \"prompt\": {\"display_name\": \"Prompt\"},\n            \"llm\": {\"display_name\": \"LLM\"},\n            \"memory\": {\"display_name\": \"Memory\"},\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        prompt: BasePromptTemplate,\n        llm: BaseLanguageModel,\n        memory: Optional[BaseMemory] = None,\n    ) -> Union[Chain, Callable, LLMChain]:\n        return LLMChain(prompt=prompt, llm=llm, memory=memory)\n",
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "code",
                              "advanced": false,
                              "dynamic": true,
                              "info": "",
                              "display_name": "code"
                            },
                            "_type": "CustomComponent"
                          },
                          "description": "Chain to run queries against LLMs",
                          "base_classes": [
                            "Chain",
                            "Callable",
                            "LLMChain",
                            "Chain"
                          ],
                          "display_name": "LLMChain",
                          "documentation": "",
                          "custom_fields": {
                            "prompt": null,
                            "llm": null,
                            "memory": null
                          },
                          "output_types": [
                            "Chain",
                            "Callable",
                            "LLMChain"
                          ],
                          "field_formatters": {},
                          "beta": true
                        },
                        "id": "LLMChain-v953s"
                      },
                      "selected": true,
                      "dragging": false,
                      "positionAbsolute": {
                        "x": 674.2566421540855,
                        "y": -600.0600042202825
                      }
                    },
                    {
                      "width": 384,
                      "height": 715,
                      "id": "ChatOpenAI-xpOwP",
                      "type": "genericNode",
                      "position": {
                        "x": 101.81345493467052,
                        "y": -943.7393323559688
                      },
                      "data": {
                        "type": "ChatOpenAI",
                        "node": {
                          "template": {
                            "code": {
                              "type": "code",
                              "required": true,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": true,
                              "value": "from typing import Optional, Union\n\nfrom langchain.llms import BaseLLM\nfrom langchain_community.chat_models.openai import ChatOpenAI\n\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import BaseLanguageModel, NestedDict\n\n\nclass ChatOpenAIComponent(CustomComponent):\n    display_name = \"ChatOpenAI\"\n    description = \"`OpenAI` Chat large language models API.\"\n\n    def build_config(self):\n        return {\n            \"max_tokens\": {\n                \"display_name\": \"Max Tokens\",\n                \"field_type\": \"int\",\n                \"advanced\": False,\n                \"required\": False,\n            },\n            \"model_kwargs\": {\n                \"display_name\": \"Model Kwargs\",\n                \"field_type\": \"NestedDict\",\n                \"advanced\": True,\n                \"required\": False,\n            },\n            \"model_name\": {\n                \"display_name\": \"Model Name\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"options\": [\n                    \"gpt-4-turbo-preview\",\n                    \"gpt-4-0125-preview\",\n                    \"gpt-4-1106-preview\",\n                    \"gpt-4-vision-preview\",\n                    \"gpt-3.5-turbo-0125\",\n                    \"gpt-3.5-turbo-1106\",\n                ],\n            },\n            \"openai_api_base\": {\n                \"display_name\": \"OpenAI API Base\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"info\": (\n                    \"The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\\n\\n\"\n                    \"You can change this to use other APIs like JinaChat, LocalAI and Prem.\"\n                ),\n            },\n            \"openai_api_key\": {\n                \"display_name\": \"OpenAI API Key\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"password\": True,\n            },\n            \"temperature\": {\n                \"display_name\": \"Temperature\",\n                \"field_type\": \"float\",\n                \"advanced\": False,\n                \"required\": False,\n                \"value\": 0.7,\n            },\n        }\n\n    def build(\n        self,\n        max_tokens: Optional[int] = 256,\n        model_kwargs: NestedDict = {},\n        model_name: str = \"gpt-4-1106-preview\",\n        openai_api_base: Optional[str] = None,\n        openai_api_key: Optional[str] = \"sk-PLACEHOLDER_API_KEY\",\n        temperature: float = 0.7,\n    ) -> Union[BaseLanguageModel, BaseLLM]:\n        if not openai_api_base:\n            openai_api_base = \"https://api.openai.com/v1\"\n        return ChatOpenAI(\n            max_tokens=max_tokens,\n            model_kwargs=model_kwargs,\n            model=model_name,\n            base_url=openai_api_base,\n            api_key=openai_api_key,\n            temperature=temperature,\n        )\n",
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "code",
                              "advanced": false,
                              "dynamic": true,
                              "info": "",
                              "display_name": "code"
                            },
                            "max_tokens": {
                              "type": "int",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "value": 256,
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "max_tokens",
                              "display_name": "Max Tokens",
                              "advanced": false,
                              "dynamic": false,
                              "info": ""
                            },
                            "model_kwargs": {
                              "type": "NestedDict",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "value": {},
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "model_kwargs",
                              "display_name": "Model Kwargs",
                              "advanced": true,
                              "dynamic": false,
                              "info": ""
                            },
                            "model_name": {
                              "type": "str",
                              "required": false,
                              "placeholder": "",
                              "list": true,
                              "show": true,
                              "multiline": false,
                              "value": "gpt-4-0125-preview",
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "options": [
                                "gpt-4-turbo-preview",
                                "gpt-4-0125-preview",
                                "gpt-4-1106-preview",
                                "gpt-4-vision-preview",
                                "gpt-3.5-turbo-0125",
                                "gpt-3.5-turbo-1106"
                              ],
                              "name": "model_name",
                              "display_name": "Model Name",
                              "advanced": false,
                              "dynamic": false,
                              "info": ""
                            },
                            "openai_api_base": {
                              "type": "str",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "openai_api_base",
                              "display_name": "OpenAI API Base",
                              "advanced": false,
                              "dynamic": false,
                              "info": "The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem."
                            },
                            "openai_api_key": {
                              "type": "str",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "value": null,
                              "fileTypes": [],
                              "file_path": "",
                              "password": true,
                              "name": "openai_api_key",
                              "display_name": "OpenAI API Key",
                              "advanced": false,
                              "dynamic": false,
                              "info": ""
                            },
                            "temperature": {
                              "type": "float",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "value": 0.7,
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "temperature",
                              "display_name": "Temperature",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "rangeSpec": {
                                "min": -1,
                                "max": 1,
                                "step": 0.1
                              }
                            },
                            "_type": "CustomComponent"
                          },
                          "description": "`OpenAI` Chat large language models API.",
                          "base_classes": [
                            "BaseLanguageModel",
                            "BaseLLM",
                            "BaseLanguageModel"
                          ],
                          "display_name": "ChatOpenAI",
                          "documentation": "",
                          "custom_fields": {
                            "max_tokens": null,
                            "model_kwargs": null,
                            "model_name": null,
                            "openai_api_base": null,
                            "openai_api_key": null,
                            "temperature": null
                          },
                          "output_types": [
                            "BaseLanguageModel",
                            "BaseLLM"
                          ],
                          "field_formatters": {},
                          "beta": true
                        },
                        "id": "ChatOpenAI-xpOwP",
                        "description": "`OpenAI` Chat large language models API.",
                        "display_name": "ChatOpenAI"
                      },
                      "selected": true,
                      "positionAbsolute": {
                        "x": 101.81345493467052,
                        "y": -943.7393323559688
                      },
                      "dragging": false
                    },
                    {
                      "width": 384,
                      "height": 563,
                      "id": "PromptTemplate-k6ZNb",
                      "type": "genericNode",
                      "position": {
                        "x": 104.42026613299777,
                        "y": -190.8790440718118
                      },
                      "data": {
                        "type": "PromptTemplate",
                        "node": {
                          "template": {
                            "output_parser": {
                              "type": "BaseOutputParser",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": false,
                              "multiline": false,
                              "fileTypes": [],
                              "password": false,
                              "name": "output_parser",
                              "advanced": false,
                              "dynamic": true,
                              "info": "",
                              "display_name": "output_parser"
                            },
                            "input_types": {
                              "type": "dict",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": false,
                              "multiline": false,
                              "fileTypes": [],
                              "password": false,
                              "name": "input_types",
                              "advanced": false,
                              "dynamic": true,
                              "info": "",
                              "display_name": "input_types"
                            },
                            "input_variables": {
                              "type": "str",
                              "required": true,
                              "placeholder": "",
                              "list": true,
                              "show": false,
                              "multiline": false,
                              "fileTypes": [],
                              "password": false,
                              "name": "input_variables",
                              "advanced": false,
                              "dynamic": true,
                              "info": "",
                              "value": [
                                "input_language",
                                "output_language",
                                "input"
                              ],
                              "display_name": "input_variables"
                            },
                            "metadata": {
                              "type": "dict",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": false,
                              "multiline": false,
                              "fileTypes": [],
                              "password": false,
                              "name": "metadata",
                              "advanced": false,
                              "dynamic": true,
                              "info": "",
                              "display_name": "metadata"
                            },
                            "name": {
                              "type": "str",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": false,
                              "multiline": false,
                              "fileTypes": [],
                              "password": false,
                              "name": "name",
                              "advanced": false,
                              "dynamic": true,
                              "info": "",
                              "display_name": "name"
                            },
                            "partial_variables": {
                              "type": "dict",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": false,
                              "multiline": false,
                              "fileTypes": [],
                              "password": false,
                              "name": "partial_variables",
                              "advanced": false,
                              "dynamic": true,
                              "info": "",
                              "display_name": "partial_variables"
                            },
                            "tags": {
                              "type": "str",
                              "required": false,
                              "placeholder": "",
                              "list": true,
                              "show": false,
                              "multiline": false,
                              "fileTypes": [],
                              "password": false,
                              "name": "tags",
                              "advanced": false,
                              "dynamic": true,
                              "info": "",
                              "display_name": "tags"
                            },
                            "template": {
                              "type": "prompt",
                              "required": true,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": true,
                              "fileTypes": [],
                              "password": false,
                              "name": "template",
                              "advanced": false,
                              "dynamic": true,
                              "info": "",
                              "value": "you are a helpful assistant that translate {input_language} to {output_language}.\n\n{input}",
                              "display_name": "template"
                            },
                            "template_format": {
                              "type": "str",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": false,
                              "multiline": false,
                              "value": "f-string",
                              "fileTypes": [],
                              "password": false,
                              "name": "template_format",
                              "advanced": false,
                              "dynamic": true,
                              "info": "",
                              "display_name": "template_format"
                            },
                            "validate_template": {
                              "type": "bool",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": false,
                              "multiline": false,
                              "value": false,
                              "fileTypes": [],
                              "password": false,
                              "name": "validate_template",
                              "advanced": false,
                              "dynamic": true,
                              "info": "",
                              "display_name": "validate_template"
                            },
                            "_type": "PromptTemplate",
                            "input_language": {
                              "type": "str",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": true,
                              "value": "Korean",
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "input_language",
                              "display_name": "input_language",
                              "advanced": false,
                              "input_types": [
                                "Document",
                                "BaseOutputParser"
                              ],
                              "dynamic": false,
                              "info": ""
                            },
                            "output_language": {
                              "type": "str",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": true,
                              "value": "Japanese",
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "output_language",
                              "display_name": "output_language",
                              "advanced": false,
                              "input_types": [
                                "Document",
                                "BaseOutputParser"
                              ],
                              "dynamic": false,
                              "info": ""
                            },
                            "input": {
                              "type": "str",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": true,
                              "value": "",
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "input",
                              "display_name": "input",
                              "advanced": false,
                              "input_types": [
                                "Document",
                                "BaseOutputParser"
                              ],
                              "dynamic": false,
                              "info": ""
                            }
                          },
                          "description": "A prompt template for a language model.",
                          "icon": null,
                          "base_classes": [
                            "StringPromptTemplate",
                            "BasePromptTemplate",
                            "PromptTemplate"
                          ],
                          "name": "",
                          "display_name": "PromptTemplate",
                          "documentation": "https://python.langchain.com/docs/modules/model_io/prompts/prompt_templates/",
                          "custom_fields": {
                            "": [
                              "input_language",
                              "output_language",
                              "input"
                            ]
                          },
                          "output_types": [],
                          "full_path": null,
                          "field_formatters": {},
                          "beta": false,
                          "error": null
                        },
                        "id": "PromptTemplate-k6ZNb",
                        "description": "A prompt template for a language model.",
                        "display_name": "PromptTemplate"
                      },
                      "selected": true,
                      "positionAbsolute": {
                        "x": 104.42026613299777,
                        "y": -190.8790440718118
                      },
                      "dragging": false
                    }
                  ],
                  "edges": [
                    {
                      "source": "ChatOpenAI-xpOwP",
                      "sourceHandle": "{œbaseClassesœ:[œBaseLanguageModelœ,œBaseLLMœ,œBaseLanguageModelœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-xpOwPœ}",
                      "target": "LLMChain-v953s",
                      "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œLLMChain-v953sœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}",
                      "data": {
                        "targetHandle": {
                          "fieldName": "llm",
                          "id": "LLMChain-v953s",
                          "inputTypes": null,
                          "type": "BaseLanguageModel"
                        },
                        "sourceHandle": {
                          "baseClasses": [
                            "BaseLanguageModel",
                            "BaseLLM",
                            "BaseLanguageModel"
                          ],
                          "dataType": "ChatOpenAI",
                          "id": "ChatOpenAI-xpOwP"
                        }
                      },
                      "style": {
                        "stroke": "#555"
                      },
                      "className": "stroke-gray-900  stroke-connection",
                      "animated": false,
                      "id": "reactflow__edge-ChatOpenAI-xpOwP{œbaseClassesœ:[œBaseLanguageModelœ,œBaseLLMœ,œBaseLanguageModelœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-xpOwPœ}-LLMChain-v953s{œfieldNameœ:œllmœ,œidœ:œLLMChain-v953sœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}",
                      "selected": true
                    },
                    {
                      "source": "PromptTemplate-k6ZNb",
                      "sourceHandle": "{œbaseClassesœ:[œStringPromptTemplateœ,œBasePromptTemplateœ,œPromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-k6ZNbœ}",
                      "target": "LLMChain-v953s",
                      "targetHandle": "{œfieldNameœ:œpromptœ,œidœ:œLLMChain-v953sœ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}",
                      "data": {
                        "targetHandle": {
                          "fieldName": "prompt",
                          "id": "LLMChain-v953s",
                          "inputTypes": null,
                          "type": "BasePromptTemplate"
                        },
                        "sourceHandle": {
                          "baseClasses": [
                            "StringPromptTemplate",
                            "BasePromptTemplate",
                            "PromptTemplate"
                          ],
                          "dataType": "PromptTemplate",
                          "id": "PromptTemplate-k6ZNb"
                        }
                      },
                      "style": {
                        "stroke": "#555"
                      },
                      "className": "stroke-gray-900  stroke-connection",
                      "animated": false,
                      "id": "reactflow__edge-PromptTemplate-k6ZNb{œbaseClassesœ:[œStringPromptTemplateœ,œBasePromptTemplateœ,œPromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-k6ZNbœ}-LLMChain-v953s{œfieldNameœ:œpromptœ,œidœ:œLLMChain-v953sœ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}",
                      "selected": true
                    }
                  ],
                  "viewport": {
                    "zoom": 1,
                    "x": 0,
                    "y": 0
                  }
                },
                "is_component": false,
                "name": "Cocky Mestorf",
                "description": "",
                "id": "lEBE9"
              }
            }
          },
          "id": "GroupNode-ibcgn",
          "position": {
            "x": -1859.1707070898585,
            "y": -1052.374249795048
          },
          "type": "genericNode",
          "selected": true,
          "positionAbsolute": {
            "x": -1859.1707070898585,
            "y": -1052.374249795048
          },
          "dragging": false
        },
        {
          "id": "Document-u7ZYV",
          "type": "genericNode",
          "position": {
            "x": -1148.3502025604957,
            "y": -1135.9375803750909
          },
          "data": {
            "type": "Document",
            "node": {
              "template": {
                "llm": {
                  "type": "BaseLLM",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "llm",
                  "display_name": "LLM",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "prompt": {
                  "type": "PromptTemplate",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "prompt",
                  "display_name": "Prompt Template",
                  "advanced": false,
                  "dynamic": false,
                  "info": "Make sure the prompt has all variables filled."
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from langchain.llms.base import BaseLLM\nfrom langchain.prompts import PromptTemplate\nfrom langchain_core.documents import Document\n\nfrom axiestudio import CustomComponent\n\n\nclass PromptRunner(CustomComponent):\n    display_name: str = \"Prompt Runner\"\n    description: str = \"Run a Chain with the given PromptTemplate\"\n    beta: bool = True\n    field_config = {\n        \"llm\": {\"display_name\": \"LLM\"},\n        \"prompt\": {\n            \"display_name\": \"Prompt Template\",\n            \"info\": \"Make sure the prompt has all variables filled.\",\n        },\n        \"code\": {\"show\": False},\n    }\n\n    def build(self, llm: BaseLLM, prompt: PromptTemplate, inputs: dict = {}) -> Document:\n        chain = prompt | llm\n        # The input is an empty dict because the prompt is already filled\n        result = chain.invoke(input=inputs)\n        if hasattr(result, \"content\"):\n            result = result.content\n        self.repr_value = result\n        return Document(page_content=str(result))\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": false,
                  "dynamic": true,
                  "info": ""
                },
                "inputs": {
                  "type": "dict",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": [
                    {
                      "": ""
                    }
                  ],
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "inputs",
                  "display_name": "inputs",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "_type": "CustomComponent"
              },
              "description": "Run a Chain with the given PromptTemplate",
              "base_classes": [
                "Document"
              ],
              "display_name": "Prompt Runner",
              "documentation": "",
              "custom_fields": {
                "llm": null,
                "prompt": null,
                "inputs": null
              },
              "output_types": [
                "Document"
              ],
              "field_formatters": {},
              "beta": true
            },
            "id": "Document-u7ZYV"
          },
          "selected": false,
          "width": 384,
          "height": 463,
          "positionAbsolute": {
            "x": -1148.3502025604957,
            "y": -1135.9375803750909
          },
          "dragging": false
        },
        {
          "id": "InfoSQLDatabaseTool-HhzN5",
          "type": "genericNode",
          "position": {
            "x": -954.238060126414,
            "y": -336.0077030862531
          },
          "data": {
            "type": "InfoSQLDatabaseTool",
            "node": {
              "template": {
                "args_schema": {
                  "type": "Type[pydantic.v1.main.BaseModel]",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "args_schema",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "callbacks": {
                  "type": "langchain_core.callbacks.base.BaseCallbackHandler",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "callbacks",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "db": {
                  "type": "SQLDatabase",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "db",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "handle_tool_error": {
                  "type": "bool",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "handle_tool_error",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "handle_validation_error": {
                  "type": "bool",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "handle_validation_error",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "metadata": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "metadata",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "tags": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "tags",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "_type": "InfoSQLDatabaseTool"
              },
              "description": "",
              "base_classes": [
                "Tool",
                "BaseTool",
                "BaseTool",
                "InfoSQLDatabaseTool",
                "BaseSQLDatabaseTool"
              ],
              "display_name": "InfoSQLDatabaseTool",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "field_formatters": {},
              "beta": false
            },
            "id": "InfoSQLDatabaseTool-HhzN5"
          },
          "selected": false,
          "width": 384,
          "height": 203,
          "positionAbsolute": {
            "x": -954.238060126414,
            "y": -336.0077030862531
          },
          "dragging": false
        },
        {
          "id": "JsonListKeysTool-gNeft",
          "type": "genericNode",
          "position": {
            "x": -472.0885450482104,
            "y": -69.8862174911407
          },
          "data": {
            "type": "JsonListKeysTool",
            "node": {
              "template": {
                "args_schema": {
                  "type": "Type[pydantic.v1.main.BaseModel]",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "args_schema",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "callbacks": {
                  "type": "langchain_core.callbacks.base.BaseCallbackHandler",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "callbacks",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "spec": {
                  "type": "JsonSpec",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "spec",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "handle_tool_error": {
                  "type": "bool",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "handle_tool_error",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "handle_validation_error": {
                  "type": "bool",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "handle_validation_error",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "metadata": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "metadata",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "tags": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "tags",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "_type": "JsonListKeysTool"
              },
              "description": "",
              "base_classes": [
                "Tool",
                "BaseTool",
                "BaseTool",
                "JsonListKeysTool"
              ],
              "display_name": "JsonListKeysTool",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "field_formatters": {},
              "beta": false
            },
            "id": "JsonListKeysTool-gNeft"
          },
          "selected": false,
          "width": 384,
          "height": 203,
          "positionAbsolute": {
            "x": -472.0885450482104,
            "y": -69.8862174911407
          },
          "dragging": false
        },
        {
          "id": "Search-23UJP",
          "type": "genericNode",
          "position": {
            "x": -1603.4552779588612,
            "y": -347.57993260526786
          },
          "data": {
            "type": "Search",
            "node": {
              "template": {
                "aiosession": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "aiosession",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "serpapi_api_key": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": true,
                  "name": "serpapi_api_key",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "_type": "Search"
              },
              "description": "A search engine. Useful for when you need to answer questions about current events. Input should be a search query.",
              "base_classes": [
                "Tool",
                "BaseTool"
              ],
              "display_name": "Search",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "field_formatters": {},
              "beta": false
            },
            "id": "Search-23UJP"
          },
          "selected": false,
          "width": 384,
          "height": 321,
          "positionAbsolute": {
            "x": -1603.4552779588612,
            "y": -347.57993260526786
          },
          "dragging": false
        },
        {
          "id": "RequestsPatchTool-Aj6G5",
          "type": "genericNode",
          "position": {
            "x": -295.19602815263556,
            "y": -1004.4422580810353
          },
          "data": {
            "type": "RequestsPatchTool",
            "node": {
              "template": {
                "args_schema": {
                  "type": "Type[pydantic.v1.main.BaseModel]",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "args_schema",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "callbacks": {
                  "type": "langchain_core.callbacks.base.BaseCallbackHandler",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "callbacks",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "requests_wrapper": {
                  "type": "GenericRequestsWrapper",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "requests_wrapper",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "handle_tool_error": {
                  "type": "bool",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "handle_tool_error",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "handle_validation_error": {
                  "type": "bool",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "handle_validation_error",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "metadata": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "metadata",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "tags": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "tags",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "_type": "RequestsPatchTool"
              },
              "description": "",
              "base_classes": [
                "Tool",
                "BaseTool",
                "BaseTool",
                "RequestsPatchTool",
                "BaseRequestsTool"
              ],
              "display_name": "RequestsPatchTool",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "field_formatters": {},
              "beta": false
            },
            "id": "RequestsPatchTool-Aj6G5"
          },
          "selected": false,
          "width": 384,
          "height": 203,
          "positionAbsolute": {
            "x": -295.19602815263556,
            "y": -1004.4422580810353
          },
          "dragging": false
        },
        {
          "id": "AgentInitializer-8WoLV",
          "type": "genericNode",
          "position": {
            "x": -1037.3643910582173,
            "y": -1868.1262137463657
          },
          "data": {
            "type": "AgentInitializer",
            "node": {
              "template": {
                "llm": {
                  "type": "BaseLanguageModel",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "llm",
                  "display_name": "Language Model",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "memory": {
                  "type": "BaseChatMemory",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "memory",
                  "display_name": "Memory",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "tools": {
                  "type": "Tool",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "tools",
                  "display_name": "Tools",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "agent": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "zero-shot-react-description",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "options": [
                    "zero-shot-react-description",
                    "react-docstore",
                    "self-ask-with-search",
                    "conversational-react-description",
                    "chat-zero-shot-react-description",
                    "chat-conversational-react-description",
                    "structured-chat-zero-shot-react-description",
                    "openai-functions",
                    "openai-multi-functions",
                    "JsonAgent",
                    "CSVAgent",
                    "VectorStoreAgent",
                    "VectorStoreRouterAgent",
                    "SQLAgent"
                  ],
                  "name": "agent",
                  "display_name": "Agent Type",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from typing import Callable, List, Optional, Union\n\nfrom langchain.agents import AgentExecutor, AgentType, initialize_agent, types\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import BaseChatMemory, BaseLanguageModel, Tool\n\n\nclass AgentInitializerComponent(CustomComponent):\n    display_name: str = \"Agent Initializer\"\n    description: str = \"Initialize a Langchain Agent.\"\n    documentation: str = \"https://python.langchain.com/docs/modules/agents/agent_types/\"\n\n    def build_config(self):\n        agents = list(types.AGENT_TO_CLASS.keys())\n        # field_type and required are optional\n        return {\n            \"agent\": {\"options\": agents, \"value\": agents[0], \"display_name\": \"Agent Type\"},\n            \"max_iterations\": {\"display_name\": \"Max Iterations\", \"value\": 10},\n            \"memory\": {\"display_name\": \"Memory\"},\n            \"tools\": {\"display_name\": \"Tools\"},\n            \"llm\": {\"display_name\": \"Language Model\"},\n            \"code\": {\"advanced\": True},\n        }\n\n    def build(\n        self,\n        agent: str,\n        llm: BaseLanguageModel,\n        tools: List[Tool],\n        max_iterations: int,\n        memory: Optional[BaseChatMemory] = None,\n    ) -> Union[AgentExecutor, Callable]:\n        agent = AgentType(agent)\n        if memory:\n            return initialize_agent(\n                tools=tools,\n                llm=llm,\n                agent=agent,\n                memory=memory,\n                return_intermediate_steps=True,\n                handle_parsing_errors=True,\n                max_iterations=max_iterations,\n            )\n        return initialize_agent(\n            tools=tools,\n            llm=llm,\n            agent=agent,\n            return_intermediate_steps=True,\n            handle_parsing_errors=True,\n            max_iterations=max_iterations,\n        )\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": ""
                },
                "max_iterations": {
                  "type": "int",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": 10,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "max_iterations",
                  "display_name": "Max Iterations",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "_type": "CustomComponent"
              },
              "description": "Initialize a Langchain Agent.",
              "base_classes": [
                "AgentExecutor",
                "Chain",
                "Callable"
              ],
              "display_name": "Agent Initializer",
              "documentation": "https://python.langchain.com/docs/modules/agents/agent_types/",
              "custom_fields": {
                "agent": null,
                "llm": null,
                "tools": null,
                "max_iterations": null,
                "memory": null
              },
              "output_types": [
                "AgentExecutor",
                "Callable"
              ],
              "field_formatters": {},
              "beta": true
            },
            "id": "AgentInitializer-8WoLV"
          },
          "selected": false,
          "width": 384,
          "height": 515,
          "dragging": false,
          "positionAbsolute": {
            "x": -1037.3643910582173,
            "y": -1868.1262137463657
          }
        }
      ],
      "edges": [
        {
          "source": "GroupNode-ibcgn",
          "sourceHandle": "{œbaseClassesœ:[œChainœ,œCallableœ,œLLMChainœ,œChainœ],œdataTypeœ:œLLMChainœ,œidœ:œGroupNode-ibcgnœ}",
          "target": "Tool-Jhmff",
          "targetHandle": "{œfieldNameœ:œfuncœ,œidœ:œTool-Jhmffœ,œinputTypesœ:null,œtypeœ:œCallableœ}",
          "data": {
            "targetHandle": {
              "fieldName": "func",
              "id": "Tool-Jhmff",
              "inputTypes": null,
              "type": "Callable"
            },
            "sourceHandle": {
              "baseClasses": [
                "Chain",
                "Callable",
                "LLMChain",
                "Chain"
              ],
              "dataType": "LLMChain",
              "id": "GroupNode-ibcgn"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-gray-900  stroke-connection",
          "animated": false,
          "id": "reactflow__edge-GroupNode-ibcgn{œbaseClassesœ:[œChainœ,œCallableœ,œLLMChainœ,œChainœ],œdataTypeœ:œLLMChainœ,œidœ:œGroupNode-ibcgnœ}-Tool-Jhmff{œfieldNameœ:œfuncœ,œidœ:œTool-Jhmffœ,œinputTypesœ:null,œtypeœ:œCallableœ}",
          "selected": false
        }
      ],
      "viewport": {
        "x": 1435.4961484230867,
        "y": 723.2965587814303,
        "zoom": 0.6909592043546574
      }
    },
    "date_created": "2024-03-11T07:10:06.379Z",
    "date_updated": "2024-03-11T07:10:06.590Z",
    "status": "Public",
    "sort": null,
    "user_updated": "f76455f7-ab58-4538-9cac-2891d74291d6",
    "user_created": {
      "username": "mrbye",
      "first_name": "Kurwa",
      "last_name": null,
      "id": "f76455f7-ab58-4538-9cac-2891d74291d6"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:08:57.695Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 22,
    "converter_version": "1.0.0"
  }
}