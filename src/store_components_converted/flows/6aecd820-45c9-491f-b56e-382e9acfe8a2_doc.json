{
  "id": "6aecd820-45c9-491f-b56e-382e9acfe8a2",
  "name": "docから回答",
  "description": "Unlock the Power of AI in Your Business Conversations. (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "FLOW",
  "is_component": false,
  "author": {
    "username": "ysekiy",
    "first_name": "Yuki",
    "last_name": "Sekiya",
    "id": "cb801276-0d44-4b3d-a5ec-d3332021ed1e",
    "full_name": "Yuki Sekiya"
  },
  "store_url": "https://www.langflow.store/store/component/6aecd820-45c9-491f-b56e-382e9acfe8a2",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-04-04T14:13:13.546Z",
    "updated": "2024-04-04T14:13:14.240Z",
    "downloaded": "2025-08-19T17:50:04.997Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "0.6.10",
    "private": false,
    "status": "Public"
  },
  "data": {
    "edges": [
      {
        "id": "reactflow__edge-CustomComponent-jfjaG{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-jfjaGœ}-FAISS-swWt9{œfieldNameœ:œdocumentsœ,œidœ:œFAISS-swWt9œ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
        "data": {
          "sourceHandle": {
            "id": "CustomComponent-jfjaG",
            "dataType": "CustomComponent",
            "baseClasses": [
              "Document"
            ]
          },
          "targetHandle": {
            "id": "FAISS-swWt9",
            "type": "Document",
            "fieldName": "documents",
            "inputTypes": null
          }
        },
        "style": {
          "stroke": "#555"
        },
        "source": "CustomComponent-jfjaG",
        "target": "FAISS-swWt9",
        "animated": false,
        "className": "stroke-gray-900  stroke-connection",
        "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-jfjaGœ}",
        "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œFAISS-swWt9œ,œinputTypesœ:null,œtypeœ:œDocumentœ}"
      },
      {
        "id": "reactflow__edge-Embeddings-aofX5{œbaseClassesœ:[œEmbeddingsœ],œdataTypeœ:œEmbeddingsœ,œidœ:œEmbeddings-aofX5œ}-FAISS-swWt9{œfieldNameœ:œembeddingœ,œidœ:œFAISS-swWt9œ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}",
        "data": {
          "sourceHandle": {
            "id": "Embeddings-aofX5",
            "dataType": "Embeddings",
            "baseClasses": [
              "Embeddings"
            ]
          },
          "targetHandle": {
            "id": "FAISS-swWt9",
            "type": "Embeddings",
            "fieldName": "embedding",
            "inputTypes": null
          }
        },
        "style": {
          "stroke": "#555"
        },
        "source": "Embeddings-aofX5",
        "target": "FAISS-swWt9",
        "animated": false,
        "className": "stroke-gray-900  stroke-connection",
        "sourceHandle": "{œbaseClassesœ:[œEmbeddingsœ],œdataTypeœ:œEmbeddingsœ,œidœ:œEmbeddings-aofX5œ}",
        "targetHandle": "{œfieldNameœ:œembeddingœ,œidœ:œFAISS-swWt9œ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}"
      },
      {
        "id": "reactflow__edge-FAISS-swWt9{œbaseClassesœ:[œVectorStoreœ,œVectorStoreœ,œFAISSœ,œBaseRetrieverœ],œdataTypeœ:œFAISSœ,œidœ:œFAISS-swWt9œ}-RetrievalQA-7EJ4f{œfieldNameœ:œretrieverœ,œidœ:œRetrievalQA-7EJ4fœ,œinputTypesœ:null,œtypeœ:œBaseRetrieverœ}",
        "data": {
          "sourceHandle": {
            "id": "FAISS-swWt9",
            "dataType": "FAISS",
            "baseClasses": [
              "VectorStore",
              "VectorStore",
              "FAISS",
              "BaseRetriever"
            ]
          },
          "targetHandle": {
            "id": "RetrievalQA-7EJ4f",
            "type": "BaseRetriever",
            "fieldName": "retriever",
            "inputTypes": null
          }
        },
        "style": {
          "stroke": "#555"
        },
        "source": "FAISS-swWt9",
        "target": "RetrievalQA-7EJ4f",
        "animated": false,
        "className": "stroke-gray-900  stroke-connection",
        "sourceHandle": "{œbaseClassesœ:[œVectorStoreœ,œVectorStoreœ,œFAISSœ,œBaseRetrieverœ],œdataTypeœ:œFAISSœ,œidœ:œFAISS-swWt9œ}",
        "targetHandle": "{œfieldNameœ:œretrieverœ,œidœ:œRetrievalQA-7EJ4fœ,œinputTypesœ:null,œtypeœ:œBaseRetrieverœ}"
      },
      {
        "id": "reactflow__edge-CombineDocsChain-PwL9a{œbaseClassesœ:[œBaseCombineDocumentsChainœ,œCallableœ],œdataTypeœ:œCombineDocsChainœ,œidœ:œCombineDocsChain-PwL9aœ}-RetrievalQA-7EJ4f{œfieldNameœ:œcombine_documents_chainœ,œidœ:œRetrievalQA-7EJ4fœ,œinputTypesœ:null,œtypeœ:œBaseCombineDocumentsChainœ}",
        "data": {
          "sourceHandle": {
            "id": "CombineDocsChain-PwL9a",
            "dataType": "CombineDocsChain",
            "baseClasses": [
              "BaseCombineDocumentsChain",
              "Callable"
            ]
          },
          "targetHandle": {
            "id": "RetrievalQA-7EJ4f",
            "type": "BaseCombineDocumentsChain",
            "fieldName": "combine_documents_chain",
            "inputTypes": null
          }
        },
        "style": {
          "stroke": "#555"
        },
        "source": "CombineDocsChain-PwL9a",
        "target": "RetrievalQA-7EJ4f",
        "animated": false,
        "className": "stroke-gray-900  stroke-connection",
        "sourceHandle": "{œbaseClassesœ:[œBaseCombineDocumentsChainœ,œCallableœ],œdataTypeœ:œCombineDocsChainœ,œidœ:œCombineDocsChain-PwL9aœ}",
        "targetHandle": "{œfieldNameœ:œcombine_documents_chainœ,œidœ:œRetrievalQA-7EJ4fœ,œinputTypesœ:null,œtypeœ:œBaseCombineDocumentsChainœ}"
      },
      {
        "id": "reactflow__edge-Data-1Bn5x{œbaseClassesœ:[œBaseLLMœ,œBaseLanguageModelœ],œdataTypeœ:œDataœ,œidœ:œData-1Bn5xœ}-CombineDocsChain-PwL9a{œfieldNameœ:œllmœ,œidœ:œCombineDocsChain-PwL9aœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}",
        "data": {
          "sourceHandle": {
            "id": "Data-1Bn5x",
            "dataType": "Data",
            "baseClasses": [
              "BaseLLM",
              "BaseLanguageModel"
            ]
          },
          "targetHandle": {
            "id": "CombineDocsChain-PwL9a",
            "type": "BaseLanguageModel",
            "fieldName": "llm",
            "inputTypes": null
          }
        },
        "style": {
          "stroke": "#555"
        },
        "source": "Data-1Bn5x",
        "target": "CombineDocsChain-PwL9a",
        "animated": false,
        "className": "stroke-gray-900  stroke-connection",
        "sourceHandle": "{œbaseClassesœ:[œBaseLLMœ,œBaseLanguageModelœ],œdataTypeœ:œDataœ,œidœ:œData-1Bn5xœ}",
        "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œCombineDocsChain-PwL9aœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}"
      }
    ],
    "nodes": [
      {
        "id": "CustomComponent-jfjaG",
        "data": {
          "id": "CustomComponent-jfjaG",
          "node": {
            "beta": true,
            "error": null,
            "official": false,
            "template": {
              "code": {
                "list": false,
                "name": "code",
                "show": true,
                "type": "code",
                "value": "from axiestudio import CustomComponent\nfrom langchain.schema import Document\nfrom typing import Any, Dict, List\n\nclass FileLoaderComponent(CustomComponent):\n    display_name: str = \"File Loader\"\n    description: str = \"A generic loader that auto-detects file types.\"\n    beta = True\n    loaders_info: List[Dict[str, Any]] = [\n    {\n        \"loader\": \"AirbyteJSONLoader\",\n        \"name\": \"Airbyte JSON (.jsonl)\",\n        \"import\": \"langchain.document_loaders.AirbyteJSONLoader\",\n        \"defaultFor\": [\"jsonl\"],\n        \"allowdTypes\": [\"jsonl\"],\n    },\n    {\n        \"loader\": \"JSONLoader\",\n        \"name\": \"JSON (.json)\",\n        \"import\": \"langchain.document_loaders.JSONLoader\",\n        \"defaultFor\": [\"json\"],\n        \"allowdTypes\": [\"json\"],\n    },\n    {\n        \"loader\": \"BSHTMLLoader\",\n        \"name\": \"BeautifulSoup4 HTML (.html, .htm)\",\n        \"import\": \"langchain.document_loaders.BSHTMLLoader\",\n        \"allowdTypes\": [\"html\", \"htm\"],\n    },\n    {\n        \"loader\": \"CSVLoader\",\n        \"name\": \"CSV (.csv)\",\n        \"import\": \"langchain.document_loaders.CSVLoader\",\n        \"defaultFor\": [\"csv\"],\n        \"allowdTypes\": [\"csv\"],\n    },\n    {\n        \"loader\": \"CoNLLULoader\",\n        \"name\": \"CoNLL-U (.conllu)\",\n        \"import\": \"langchain.document_loaders.CoNLLULoader\",\n        \"defaultFor\": [\"conllu\"],\n        \"allowdTypes\": [\"conllu\"],\n    },\n    {\n        \"loader\": \"EverNoteLoader\",\n        \"name\": \"EverNote (.enex)\",\n        \"import\": \"langchain.document_loaders.EverNoteLoader\",\n        \"defaultFor\": [\"enex\"],\n        \"allowdTypes\": [\"enex\"],\n    },\n    {\n        \"loader\": \"FacebookChatLoader\",\n        \"name\": \"Facebook Chat (.json)\",\n        \"import\": \"langchain.document_loaders.FacebookChatLoader\",\n        \"allowdTypes\": [\"json\"],\n    },\n    {\n        \"loader\": \"OutlookMessageLoader\",\n        \"name\": \"Outlook Message (.msg)\",\n        \"import\": \"langchain.document_loaders.OutlookMessageLoader\",\n        \"defaultFor\": [\"msg\"],\n        \"allowdTypes\": [\"msg\"],\n    },\n    {\n        \"loader\": \"PyPDFLoader\",\n        \"name\": \"PyPDF (.pdf)\",\n        \"import\": \"langchain.document_loaders.PyPDFLoader\",\n        \"defaultFor\": [\"pdf\"],\n        \"allowdTypes\": [\"pdf\"],\n    },\n    {\n        \"loader\": \"STRLoader\",\n        \"name\": \"Subtitle (.str)\",\n        \"import\": \"langchain.document_loaders.STRLoader\",\n        \"defaultFor\": [\"str\"],\n        \"allowdTypes\": [\"str\"],\n    },\n    {\n        \"loader\": \"TextLoader\",\n        \"name\": \"Text (.txt)\",\n        \"import\": \"langchain.document_loaders.TextLoader\",\n        \"defaultFor\": [\"txt\"],\n        \"allowdTypes\": [\"txt\"],\n    },\n    {\n        \"loader\": \"UnstructuredEmailLoader\",\n        \"name\": \"Unstructured Email (.eml)\",\n        \"import\": \"langchain.document_loaders.UnstructuredEmailLoader\",\n        \"defaultFor\": [\"eml\"],\n        \"allowdTypes\": [\"eml\"],\n    },\n    {\n        \"loader\": \"UnstructuredHTMLLoader\",\n        \"name\": \"Unstructured HTML (.html, .htm)\",\n        \"import\": \"langchain.document_loaders.UnstructuredHTMLLoader\",\n        \"defaultFor\": [\"html\", \"htm\"],\n        \"allowdTypes\": [\"html\", \"htm\"],\n    },\n    {\n        \"loader\": \"UnstructuredMarkdownLoader\",\n        \"name\": \"Unstructured Markdown (.md)\",\n        \"import\": \"langchain.document_loaders.UnstructuredMarkdownLoader\",\n        \"defaultFor\": [\"md\"],\n        \"allowdTypes\": [\"md\"],\n    },\n    {\n        \"loader\": \"UnstructuredPowerPointLoader\",\n        \"name\": \"Unstructured PowerPoint (.pptx)\",\n        \"import\": \"langchain.document_loaders.UnstructuredPowerPointLoader\",\n        \"defaultFor\": [\"pptx\"],\n        \"allowdTypes\": [\"pptx\"],\n    },\n    {\n        \"loader\": \"UnstructuredWordLoader\",\n        \"name\": \"Unstructured Word (.docx)\",\n        \"import\": \"langchain.document_loaders.UnstructuredWordLoader\",\n        \"defaultFor\": [\"docx\"],\n        \"allowdTypes\": [\"docx\"],\n    },\n]\n\n    def build_config(self):\n        loader_options = [\"Automatic\"] + [\n            loader_info[\"name\"] for loader_info in self.loaders_info\n        ]\n\n        file_types = []\n        suffixes = []\n\n        for loader_info in self.loaders_info:\n            if \"allowedTypes\" in loader_info:\n                file_types.extend(loader_info[\"allowedTypes\"])\n                suffixes.extend([f\".{ext}\" for ext in loader_info[\"allowedTypes\"]])\n\n        return {\n            \"file_path\": {\n                \"display_name\": \"File Path\",\n                \"required\": True,\n                \"field_type\": \"file\",\n                \"file_types\": [\n                    \"json\",\n                    \"txt\",\n                    \"csv\",\n                    \"jsonl\",\n                    \"html\",\n                    \"htm\",\n                    \"conllu\",\n                    \"enex\",\n                    \"msg\",\n                    \"pdf\",\n                    \"srt\",\n                    \"eml\",\n                    \"md\",\n                    \"pptx\",\n                    \"docx\",\n                ],\n                \"suffixes\": [\n                    \".json\",\n                    \".txt\",\n                    \".csv\",\n                    \".jsonl\",\n                    \".html\",\n                    \".htm\",\n                    \".conllu\",\n                    \".enex\",\n                    \".msg\",\n                    \".pdf\",\n                    \".srt\",\n                    \".eml\",\n                    \".md\",\n                    \".pptx\",\n                    \".docx\",\n                ],\n                # \"file_types\" : file_types,\n                # \"suffixes\": suffixes,\n            },\n            \"loader\": {\n                \"display_name\": \"Loader\",\n                \"is_list\": True,\n                \"required\": True,\n                \"options\": loader_options,\n                \"value\": \"Automatic\",\n            },\n        }\n\n    def build(self, file_path: str, loader: str) -> Document:\n        file_type = file_path.split(\".\")[-1]\n\n        # Mapeie o nome do loader selecionado para suas informações\n        selected_loader_info = None\n        for loader_info in self.loaders_info:\n            if loader_info[\"name\"] == loader:\n                selected_loader_info = loader_info\n                break\n\n        if selected_loader_info is None and loader != \"Automatic\":\n            raise ValueError(f\"Loader {loader} not found in the loader info list\")\n\n        if loader == \"Automatic\":\n            # Determine o loader automaticamente com base na extensão do arquivo\n            default_loader_info = None\n            for info in self.loaders_info:\n                if \"defaultFor\" in info and file_type in info[\"defaultFor\"]:\n                    default_loader_info = info\n                    break\n\n            if default_loader_info is None:\n                raise ValueError(f\"No default loader found for file type: {file_type}\")\n\n            selected_loader_info = default_loader_info\n        if isinstance(selected_loader_info, dict):\n            loader_import: str = selected_loader_info[\"import\"]\n        else:\n            raise ValueError(\n                f\"Loader info for {loader} is not a dict\\nLoader info:\\n{selected_loader_info}\"\n            )\n        module_name, class_name = loader_import.rsplit(\".\", 1)\n\n        try:\n            # Importe o loader dinamicamente\n            loader_module = __import__(module_name, fromlist=[class_name])\n            loader_instance = getattr(loader_module, class_name)\n        except ImportError as e:\n            raise ValueError(\n                f\"Loader {loader} could not be imported\\nLoader info:\\n{selected_loader_info}\"\n            ) from e\n\n        result = loader_instance(file_path=file_path)\n        result = result.load()\n        self.status = result\n        return result",
                "dynamic": true,
                "advanced": false,
                "password": false,
                "required": true,
                "multiline": true,
                "placeholder": ""
              },
              "_type": "CustomComponent",
              "loader": {
                "info": "",
                "list": true,
                "name": "loader",
                "show": true,
                "type": "str",
                "value": "Text (.txt)",
                "dynamic": false,
                "options": [
                  "Automatic",
                  "Airbyte JSON (.jsonl)",
                  "JSON (.json)",
                  "BeautifulSoup4 HTML (.html, .htm)",
                  "CSV (.csv)",
                  "CoNLL-U (.conllu)",
                  "EverNote (.enex)",
                  "Facebook Chat (.json)",
                  "Outlook Message (.msg)",
                  "PyPDF (.pdf)",
                  "Subtitle (.str)",
                  "Text (.txt)",
                  "Unstructured Email (.eml)",
                  "Unstructured HTML (.html, .htm)",
                  "Unstructured Markdown (.md)",
                  "Unstructured PowerPoint (.pptx)",
                  "Unstructured Word (.docx)"
                ],
                "advanced": false,
                "password": false,
                "required": true,
                "multiline": false,
                "placeholder": "",
                "display_name": "Loader"
              },
              "file_path": {
                "info": "",
                "list": false,
                "name": "file_path",
                "show": true,
                "type": "file",
                "value": "",
                "dynamic": false,
                "advanced": false,
                "password": false,
                "required": true,
                "fileTypes": [
                  "json",
                  "txt",
                  "csv",
                  "jsonl",
                  "html",
                  "htm",
                  "conllu",
                  "enex",
                  "msg",
                  "pdf",
                  "srt",
                  "eml",
                  "md",
                  "pptx",
                  "docx"
                ],
                "file_path": "/root/.cache/axiestudio/f985fd18-0260-4f3f-a86d-0390831f736b/61b3c59e5a74504549c18bbb425dbd6bae1350459173d09b4579f16bdcf03563.html",
                "multiline": false,
                "placeholder": "",
                "display_name": "File Path"
              }
            },
            "description": "A generic loader that auto-detects file types.",
            "base_classes": [
              "Document"
            ],
            "display_name": "File Loader",
            "output_types": [
              "Document"
            ],
            "custom_fields": {
              "loader": null,
              "file_path": null
            },
            "documentation": ""
          },
          "type": "CustomComponent"
        },
        "type": "genericNode",
        "width": 384,
        "height": 457,
        "dragging": false,
        "position": {
          "x": -40.69865172718096,
          "y": 188.7494312332077
        },
        "selected": true,
        "positionAbsolute": {
          "x": -40.69865172718096,
          "y": 188.7494312332077
        }
      },
      {
        "id": "Data-1Bn5x",
        "data": {
          "id": "Data-1Bn5x",
          "node": {
            "beta": true,
            "official": false,
            "template": {
              "code": {
                "info": "",
                "list": false,
                "name": "code",
                "show": true,
                "type": "code",
                "value": "from typing import Optional\n\nfrom langchain.llms.base import BaseLLM\nfrom langchain.llms.bedrock import Bedrock\nfrom axiestudio import CustomComponent\n\n\nclass AmazonBedrockComponent(CustomComponent):\n    display_name: str = \"Amazon Bedrock\"\n    description: str = \"LLM model from Amazon Bedrock.\"\n\n    def build_config(self):\n        return {\n            \"model_id\": {\n                \"display_name\": \"Model Id\",\n                \"options\": [\n                    \"ai21.j2-grande-instruct\",\n                    \"ai21.j2-jumbo-instruct\",\n                    \"ai21.j2-mid\",\n                    \"ai21.j2-mid-v1\",\n                    \"ai21.j2-ultra\",\n                    \"ai21.j2-ultra-v1\",\n                    \"anthropic.claude-instant-v1\",\n                    \"anthropic.claude-v1\",\n                    \"anthropic.claude-v2\",\n                    \"cohere.command-text-v14\",\n                ],\n            },\n            \"credentials_profile_name\": {\"display_name\": \"Credentials Profile Name\"},\n            \"streaming\": {\"display_name\": \"Streaming\", \"field_type\": \"bool\"},\n            \"endpoint_url\": {\"display_name\": \"Endpoint URL\"},\n            \"region_name\": {\"display_name\": \"Region Name\"},\n            \"model_kwargs\": {\"display_name\": \"Model Kwargs\"},\n            \"cache\": {\"display_name\": \"Cache\"},\n            \"code\": {\"advanced\": True},\n        }\n\n    def build(\n        self,\n        model_id: str = \"anthropic.claude-instant-v1\",\n        credentials_profile_name: Optional[str] = None,\n        region_name: Optional[str] = None,\n        model_kwargs: Optional[dict] = None,\n        endpoint_url: Optional[str] = None,\n        streaming: bool = False,\n        cache: Optional[bool] = None,\n    ) -> BaseLLM:\n        try:\n            output = Bedrock(\n                credentials_profile_name=credentials_profile_name,\n                model_id=model_id,\n                region_name=region_name,\n                model_kwargs=model_kwargs,\n                endpoint_url=endpoint_url,\n                streaming=streaming,\n                cache=cache,\n            )  # type: ignore\n        except Exception as e:\n            raise ValueError(\"Could not connect to AmazonBedrock API.\") from e\n        return output",
                "dynamic": true,
                "advanced": true,
                "password": false,
                "required": true,
                "fileTypes": [],
                "file_path": "",
                "multiline": true,
                "title_case": true,
                "placeholder": ""
              },
              "_type": "CustomComponent",
              "cache": {
                "info": "",
                "list": false,
                "name": "cache",
                "show": true,
                "type": "bool",
                "value": false,
                "dynamic": false,
                "advanced": false,
                "password": false,
                "required": false,
                "fileTypes": [],
                "file_path": "",
                "multiline": false,
                "title_case": true,
                "placeholder": "",
                "display_name": "Cache"
              },
              "model_id": {
                "info": "",
                "list": true,
                "name": "model_id",
                "show": true,
                "type": "str",
                "value": "anthropic.claude-v2",
                "dynamic": false,
                "options": [
                  "ai21.j2-grande-instruct",
                  "ai21.j2-jumbo-instruct",
                  "ai21.j2-mid",
                  "ai21.j2-mid-v1",
                  "ai21.j2-ultra",
                  "ai21.j2-ultra-v1",
                  "anthropic.claude-instant-v1",
                  "anthropic.claude-v1",
                  "anthropic.claude-v2",
                  "cohere.command-text-v14"
                ],
                "advanced": false,
                "password": false,
                "required": true,
                "fileTypes": [],
                "file_path": "",
                "multiline": false,
                "title_case": true,
                "placeholder": "",
                "display_name": "Model Id"
              },
              "streaming": {
                "info": "",
                "list": false,
                "name": "streaming",
                "show": true,
                "type": "bool",
                "value": false,
                "dynamic": false,
                "advanced": false,
                "password": false,
                "required": true,
                "fileTypes": [],
                "file_path": "",
                "multiline": false,
                "title_case": true,
                "placeholder": "",
                "display_name": "Streaming"
              },
              "region_name": {
                "info": "",
                "list": false,
                "name": "region_name",
                "show": true,
                "type": "str",
                "dynamic": false,
                "advanced": false,
                "password": false,
                "required": false,
                "fileTypes": [],
                "file_path": "",
                "multiline": false,
                "title_case": true,
                "placeholder": "",
                "display_name": "Region Name"
              },
              "endpoint_url": {
                "info": "",
                "list": false,
                "name": "endpoint_url",
                "show": true,
                "type": "str",
                "dynamic": false,
                "advanced": false,
                "password": false,
                "required": false,
                "fileTypes": [],
                "file_path": "",
                "multiline": false,
                "title_case": true,
                "placeholder": "",
                "display_name": "Endpoint URL"
              },
              "model_kwargs": {
                "info": "",
                "list": false,
                "name": "model_kwargs",
                "show": true,
                "type": "dict",
                "value": [
                  {
                    "max_tokens_to_sample": 300
                  },
                  {
                    "temperature": 0.3
                  },
                  {
                    "top_k": 250
                  },
                  {
                    "top_p": 0.999
                  },
                  {
                    "anthropic_version": "bedrock-2023-05-31"
                  }
                ],
                "dynamic": false,
                "advanced": false,
                "password": false,
                "required": false,
                "fileTypes": [],
                "file_path": "",
                "multiline": false,
                "title_case": true,
                "placeholder": "",
                "display_name": "Model Kwargs"
              },
              "credentials_profile_name": {
                "info": "",
                "list": false,
                "name": "credentials_profile_name",
                "show": true,
                "type": "str",
                "dynamic": false,
                "advanced": false,
                "password": false,
                "required": false,
                "fileTypes": [],
                "file_path": "",
                "multiline": false,
                "title_case": true,
                "placeholder": "",
                "display_name": "Credentials Profile Name"
              }
            },
            "description": "LLM model from Amazon Bedrock.",
            "base_classes": [
              "BaseLLM",
              "BaseLanguageModel"
            ],
            "display_name": "Amazon Bedrock",
            "output_types": [
              "BaseLLM"
            ],
            "custom_fields": {
              "cache": null,
              "model_id": null,
              "streaming": null,
              "region_name": null,
              "endpoint_url": null,
              "model_kwargs": null,
              "credentials_profile_name": null
            },
            "documentation": "",
            "field_formatters": {}
          },
          "type": "Data"
        },
        "type": "genericNode",
        "width": 384,
        "height": 1005,
        "dragging": false,
        "position": {
          "x": 480.4254370503958,
          "y": -865.2967469362724
        },
        "selected": false,
        "positionAbsolute": {
          "x": 480.4254370503958,
          "y": -865.2967469362724
        }
      },
      {
        "id": "FAISS-swWt9",
        "data": {
          "id": "FAISS-swWt9",
          "node": {
            "beta": true,
            "template": {
              "code": {
                "info": "",
                "list": false,
                "name": "code",
                "show": true,
                "type": "code",
                "value": "from typing import List, Union\n\nfrom langchain.schema import BaseRetriever\nfrom langchain_community.vectorstores import VectorStore\nfrom langchain_community.vectorstores.faiss import FAISS\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import Document, Embeddings\n\n\nclass FAISSComponent(CustomComponent):\n    display_name = \"FAISS\"\n    description = \"Construct FAISS wrapper from raw documents.\"\n    documentation = \"https://python.langchain.com/docs/modules/data_connection/vectorstores/integrations/faiss\"\n\n    def build_config(self):\n        return {\n            \"documents\": {\"display_name\": \"Documents\"},\n            \"embedding\": {\"display_name\": \"Embedding\"},\n        }\n\n    def build(\n        self,\n        embedding: Embeddings,\n        documents: List[Document],\n    ) -> Union[VectorStore, FAISS, BaseRetriever]:\n        return FAISS.from_documents(documents=documents, embedding=embedding)\n",
                "dynamic": true,
                "advanced": false,
                "password": false,
                "required": true,
                "fileTypes": [],
                "file_path": "",
                "multiline": true,
                "title_case": true,
                "placeholder": ""
              },
              "_type": "CustomComponent",
              "documents": {
                "info": "",
                "list": true,
                "name": "documents",
                "show": true,
                "type": "Document",
                "dynamic": false,
                "advanced": false,
                "password": false,
                "required": true,
                "fileTypes": [],
                "file_path": "",
                "multiline": false,
                "title_case": true,
                "placeholder": "",
                "display_name": "Documents"
              },
              "embedding": {
                "info": "",
                "list": false,
                "name": "embedding",
                "show": true,
                "type": "Embeddings",
                "dynamic": false,
                "advanced": false,
                "password": false,
                "required": true,
                "fileTypes": [],
                "file_path": "",
                "multiline": false,
                "title_case": true,
                "placeholder": "",
                "display_name": "Embedding"
              }
            },
            "description": "Construct FAISS wrapper from raw documents.",
            "base_classes": [
              "VectorStore",
              "VectorStore",
              "FAISS",
              "BaseRetriever"
            ],
            "display_name": "FAISS",
            "output_types": [
              "VectorStore",
              "FAISS",
              "BaseRetriever"
            ],
            "custom_fields": {
              "documents": null,
              "embedding": null
            },
            "documentation": "https://python.langchain.com/docs/modules/data_connection/vectorstores/integrations/faiss",
            "field_formatters": {}
          },
          "type": "FAISS"
        },
        "type": "genericNode",
        "width": 384,
        "height": 377,
        "dragging": false,
        "position": {
          "x": 517.4837708542835,
          "y": 498.3765126886312
        },
        "selected": false,
        "positionAbsolute": {
          "x": 517.4837708542835,
          "y": 498.3765126886312
        }
      },
      {
        "id": "Embeddings-aofX5",
        "data": {
          "id": "Embeddings-aofX5",
          "node": {
            "beta": true,
            "template": {
              "code": {
                "info": "",
                "list": false,
                "name": "code",
                "show": true,
                "type": "code",
                "value": "from typing import Optional\n\nfrom langchain.embeddings import BedrockEmbeddings\nfrom langchain.embeddings.base import Embeddings\nfrom axiestudio import CustomComponent\n\n\nclass AmazonBedrockEmeddingsComponent(CustomComponent):\n    \"\"\"\n    A custom component for implementing an Embeddings Model using Amazon Bedrock.\n    \"\"\"\n\n    display_name: str = \"Amazon Bedrock Embeddings\"\n    description: str = \"Embeddings model from Amazon Bedrock.\"\n    documentation = \"https://python.langchain.com/docs/modules/data_connection/text_embedding/integrations/bedrock\"\n    beta = True\n\n    def build_config(self):\n        return {\n            \"model_id\": {\n                \"display_name\": \"Model Id\",\n                \"options\": [\"amazon.titan-embed-text-v1\"],\n            },\n            \"credentials_profile_name\": {\"display_name\": \"Credentials Profile Name\"},\n            \"endpoint_url\": {\"display_name\": \"Bedrock Endpoint URL\"},\n            \"region_name\": {\"display_name\": \"AWS Region\"},\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        model_id: str = \"amazon.titan-embed-text-v1\",\n        credentials_profile_name: Optional[str] = None,\n        endpoint_url: Optional[str] = None,\n        region_name: Optional[str] = None,\n    ) -> Embeddings:\n        try:\n            output = BedrockEmbeddings(\n                credentials_profile_name=credentials_profile_name,\n                model_id=model_id,\n                endpoint_url=endpoint_url,\n                region_name=region_name,\n            )  # type: ignore\n        except Exception as e:\n            raise ValueError(\"Could not connect to AmazonBedrock API.\") from e\n        return output\n",
                "dynamic": true,
                "advanced": false,
                "password": false,
                "required": true,
                "fileTypes": [],
                "file_path": "",
                "multiline": true,
                "title_case": true,
                "placeholder": ""
              },
              "_type": "CustomComponent",
              "model_id": {
                "info": "",
                "list": true,
                "name": "model_id",
                "show": true,
                "type": "str",
                "value": "amazon.titan-embed-text-v1",
                "dynamic": false,
                "options": [
                  "amazon.titan-embed-text-v1"
                ],
                "advanced": false,
                "password": false,
                "required": true,
                "fileTypes": [],
                "file_path": "",
                "multiline": false,
                "title_case": true,
                "placeholder": "",
                "display_name": "Model Id"
              },
              "region_name": {
                "info": "",
                "list": false,
                "name": "region_name",
                "show": true,
                "type": "str",
                "dynamic": false,
                "advanced": false,
                "password": false,
                "required": false,
                "fileTypes": [],
                "file_path": "",
                "multiline": false,
                "title_case": true,
                "placeholder": "",
                "display_name": "AWS Region"
              },
              "endpoint_url": {
                "info": "",
                "list": false,
                "name": "endpoint_url",
                "show": true,
                "type": "str",
                "dynamic": false,
                "advanced": false,
                "password": false,
                "required": false,
                "fileTypes": [],
                "file_path": "",
                "multiline": false,
                "title_case": true,
                "placeholder": "",
                "display_name": "Bedrock Endpoint URL"
              },
              "credentials_profile_name": {
                "info": "",
                "list": false,
                "name": "credentials_profile_name",
                "show": true,
                "type": "str",
                "dynamic": false,
                "advanced": false,
                "password": false,
                "required": false,
                "fileTypes": [],
                "file_path": "",
                "multiline": false,
                "title_case": true,
                "placeholder": "",
                "display_name": "Credentials Profile Name"
              }
            },
            "description": "Embeddings model from Amazon Bedrock.",
            "base_classes": [
              "Embeddings"
            ],
            "display_name": "Amazon Bedrock Embeddings",
            "output_types": [
              "Embeddings"
            ],
            "custom_fields": {
              "model_id": null,
              "region_name": null,
              "endpoint_url": null,
              "credentials_profile_name": null
            },
            "documentation": "https://python.langchain.com/docs/modules/data_connection/text_embedding/integrations/bedrock",
            "field_formatters": {}
          },
          "type": "Embeddings"
        },
        "type": "genericNode",
        "width": 384,
        "height": 653,
        "dragging": false,
        "position": {
          "x": -6.359286980220645,
          "y": 670.8285765215468
        },
        "selected": false,
        "positionAbsolute": {
          "x": -6.359286980220645,
          "y": 670.8285765215468
        }
      },
      {
        "id": "RetrievalQA-7EJ4f",
        "data": {
          "id": "RetrievalQA-7EJ4f",
          "node": {
            "beta": true,
            "template": {
              "code": {
                "info": "",
                "list": false,
                "name": "code",
                "show": true,
                "type": "code",
                "value": "from typing import Callable, Optional, Union\n\nfrom langchain.chains.combine_documents.base import BaseCombineDocumentsChain\nfrom langchain.chains.retrieval_qa.base import BaseRetrievalQA, RetrievalQA\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import BaseMemory, BaseRetriever\n\n\nclass RetrievalQAComponent(CustomComponent):\n    display_name = \"RetrievalQA\"\n    description = \"Chain for question-answering against an index.\"\n\n    def build_config(self):\n        return {\n            \"combine_documents_chain\": {\"display_name\": \"Combine Documents Chain\"},\n            \"retriever\": {\"display_name\": \"Retriever\"},\n            \"memory\": {\"display_name\": \"Memory\", \"required\": False},\n            \"input_key\": {\"display_name\": \"Input Key\", \"advanced\": True},\n            \"output_key\": {\"display_name\": \"Output Key\", \"advanced\": True},\n            \"return_source_documents\": {\"display_name\": \"Return Source Documents\"},\n        }\n\n    def build(\n        self,\n        combine_documents_chain: BaseCombineDocumentsChain,\n        retriever: BaseRetriever,\n        memory: Optional[BaseMemory] = None,\n        input_key: str = \"query\",\n        output_key: str = \"result\",\n        return_source_documents: bool = True,\n    ) -> Union[BaseRetrievalQA, Callable]:\n        return RetrievalQA(\n            combine_documents_chain=combine_documents_chain,\n            retriever=retriever,\n            memory=memory,\n            input_key=input_key,\n            output_key=output_key,\n            return_source_documents=return_source_documents,\n        )\n",
                "dynamic": true,
                "advanced": false,
                "password": false,
                "required": true,
                "fileTypes": [],
                "file_path": "",
                "multiline": true,
                "title_case": true,
                "placeholder": ""
              },
              "_type": "CustomComponent",
              "memory": {
                "info": "",
                "list": false,
                "name": "memory",
                "show": true,
                "type": "BaseMemory",
                "dynamic": false,
                "advanced": false,
                "password": false,
                "required": false,
                "fileTypes": [],
                "file_path": "",
                "multiline": false,
                "title_case": true,
                "placeholder": "",
                "display_name": "Memory"
              },
              "input_key": {
                "info": "",
                "list": false,
                "name": "input_key",
                "show": true,
                "type": "str",
                "value": "query",
                "dynamic": false,
                "advanced": true,
                "password": false,
                "required": true,
                "fileTypes": [],
                "file_path": "",
                "multiline": false,
                "title_case": true,
                "placeholder": "",
                "display_name": "Input Key"
              },
              "retriever": {
                "info": "",
                "list": false,
                "name": "retriever",
                "show": true,
                "type": "BaseRetriever",
                "dynamic": false,
                "advanced": false,
                "password": false,
                "required": true,
                "fileTypes": [],
                "file_path": "",
                "multiline": false,
                "title_case": true,
                "placeholder": "",
                "display_name": "Retriever"
              },
              "output_key": {
                "info": "",
                "list": false,
                "name": "output_key",
                "show": true,
                "type": "str",
                "value": "result",
                "dynamic": false,
                "advanced": true,
                "password": false,
                "required": true,
                "fileTypes": [],
                "file_path": "",
                "multiline": false,
                "title_case": true,
                "placeholder": "",
                "display_name": "Output Key"
              },
              "combine_documents_chain": {
                "info": "",
                "list": false,
                "name": "combine_documents_chain",
                "show": true,
                "type": "BaseCombineDocumentsChain",
                "dynamic": false,
                "advanced": false,
                "password": false,
                "required": true,
                "fileTypes": [],
                "file_path": "",
                "multiline": false,
                "title_case": true,
                "placeholder": "",
                "display_name": "Combine Documents Chain"
              },
              "return_source_documents": {
                "info": "",
                "list": false,
                "name": "return_source_documents",
                "show": true,
                "type": "bool",
                "value": true,
                "dynamic": false,
                "advanced": false,
                "password": false,
                "required": true,
                "fileTypes": [],
                "file_path": "",
                "multiline": false,
                "title_case": true,
                "placeholder": "",
                "display_name": "Return Source Documents"
              }
            },
            "description": "Chain for question-answering against an index.",
            "base_classes": [
              "BaseRetrievalQA",
              "Chain",
              "Callable"
            ],
            "display_name": "RetrievalQA",
            "output_types": [
              "BaseRetrievalQA",
              "Callable"
            ],
            "custom_fields": {
              "memory": null,
              "input_key": null,
              "retriever": null,
              "output_key": null,
              "combine_documents_chain": null,
              "return_source_documents": null
            },
            "documentation": "",
            "field_formatters": {}
          },
          "type": "RetrievalQA"
        },
        "type": "genericNode",
        "width": 384,
        "height": 501,
        "dragging": false,
        "position": {
          "x": 1415.7779115965243,
          "y": 372.549419151441
        },
        "selected": false,
        "positionAbsolute": {
          "x": 1415.7779115965243,
          "y": 372.549419151441
        }
      },
      {
        "id": "CombineDocsChain-PwL9a",
        "data": {
          "id": "CombineDocsChain-PwL9a",
          "node": {
            "beta": false,
            "template": {
              "llm": {
                "info": "",
                "list": false,
                "name": "llm",
                "show": true,
                "type": "BaseLanguageModel",
                "value": "",
                "dynamic": false,
                "advanced": false,
                "password": false,
                "required": true,
                "fileTypes": [],
                "file_path": "",
                "multiline": false,
                "title_case": true,
                "placeholder": "",
                "display_name": "LLM"
              },
              "_type": "load_qa_chain",
              "chain_type": {
                "info": "",
                "list": true,
                "name": "chain_type",
                "show": true,
                "type": "str",
                "value": "stuff",
                "dynamic": false,
                "options": [
                  "stuff",
                  "map_reduce",
                  "map_rerank",
                  "refine"
                ],
                "advanced": false,
                "password": false,
                "required": true,
                "fileTypes": [],
                "file_path": "",
                "multiline": false,
                "title_case": true,
                "placeholder": ""
              }
            },
            "description": "Load question answering chain.",
            "base_classes": [
              "BaseCombineDocumentsChain",
              "Callable"
            ],
            "display_name": "CombineDocsChain",
            "output_types": [],
            "custom_fields": {},
            "documentation": "",
            "field_formatters": {}
          },
          "type": "CombineDocsChain"
        },
        "type": "genericNode",
        "width": 384,
        "height": 333,
        "dragging": false,
        "position": {
          "x": 969.3327916653956,
          "y": 237.34837336788135
        },
        "selected": false,
        "positionAbsolute": {
          "x": 969.3327916653956,
          "y": 237.34837336788135
        }
      }
    ],
    "viewport": {
      "x": 105.84799994770918,
      "y": 163.251446296007,
      "zoom": 0.5509525579383081
    }
  },
  "metadata": {
    "CustomComponent": {
      "count": 1
    },
    "Data": {
      "count": 1
    },
    "FAISS": {
      "count": 1
    },
    "Embeddings": {
      "count": 1
    },
    "RetrievalQA": {
      "count": 1
    },
    "CombineDocsChain": {
      "count": 1
    },
    "total": 6
  },
  "original": {
    "id": "6aecd820-45c9-491f-b56e-382e9acfe8a2",
    "name": "docから回答",
    "description": "Unlock the Power of AI in Your Business Conversations.",
    "is_component": false,
    "liked_by_count": "1",
    "downloads_count": "23",
    "metadata": {
      "CustomComponent": {
        "count": 1
      },
      "Data": {
        "count": 1
      },
      "FAISS": {
        "count": 1
      },
      "Embeddings": {
        "count": 1
      },
      "RetrievalQA": {
        "count": 1
      },
      "CombineDocsChain": {
        "count": 1
      },
      "total": 6
    },
    "last_tested_version": "0.6.10",
    "private": false,
    "data": {
      "edges": [
        {
          "id": "reactflow__edge-CustomComponent-jfjaG{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-jfjaGœ}-FAISS-swWt9{œfieldNameœ:œdocumentsœ,œidœ:œFAISS-swWt9œ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
          "data": {
            "sourceHandle": {
              "id": "CustomComponent-jfjaG",
              "dataType": "CustomComponent",
              "baseClasses": [
                "Document"
              ]
            },
            "targetHandle": {
              "id": "FAISS-swWt9",
              "type": "Document",
              "fieldName": "documents",
              "inputTypes": null
            }
          },
          "style": {
            "stroke": "#555"
          },
          "source": "CustomComponent-jfjaG",
          "target": "FAISS-swWt9",
          "animated": false,
          "className": "stroke-gray-900  stroke-connection",
          "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-jfjaGœ}",
          "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œFAISS-swWt9œ,œinputTypesœ:null,œtypeœ:œDocumentœ}"
        },
        {
          "id": "reactflow__edge-Embeddings-aofX5{œbaseClassesœ:[œEmbeddingsœ],œdataTypeœ:œEmbeddingsœ,œidœ:œEmbeddings-aofX5œ}-FAISS-swWt9{œfieldNameœ:œembeddingœ,œidœ:œFAISS-swWt9œ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}",
          "data": {
            "sourceHandle": {
              "id": "Embeddings-aofX5",
              "dataType": "Embeddings",
              "baseClasses": [
                "Embeddings"
              ]
            },
            "targetHandle": {
              "id": "FAISS-swWt9",
              "type": "Embeddings",
              "fieldName": "embedding",
              "inputTypes": null
            }
          },
          "style": {
            "stroke": "#555"
          },
          "source": "Embeddings-aofX5",
          "target": "FAISS-swWt9",
          "animated": false,
          "className": "stroke-gray-900  stroke-connection",
          "sourceHandle": "{œbaseClassesœ:[œEmbeddingsœ],œdataTypeœ:œEmbeddingsœ,œidœ:œEmbeddings-aofX5œ}",
          "targetHandle": "{œfieldNameœ:œembeddingœ,œidœ:œFAISS-swWt9œ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}"
        },
        {
          "id": "reactflow__edge-FAISS-swWt9{œbaseClassesœ:[œVectorStoreœ,œVectorStoreœ,œFAISSœ,œBaseRetrieverœ],œdataTypeœ:œFAISSœ,œidœ:œFAISS-swWt9œ}-RetrievalQA-7EJ4f{œfieldNameœ:œretrieverœ,œidœ:œRetrievalQA-7EJ4fœ,œinputTypesœ:null,œtypeœ:œBaseRetrieverœ}",
          "data": {
            "sourceHandle": {
              "id": "FAISS-swWt9",
              "dataType": "FAISS",
              "baseClasses": [
                "VectorStore",
                "VectorStore",
                "FAISS",
                "BaseRetriever"
              ]
            },
            "targetHandle": {
              "id": "RetrievalQA-7EJ4f",
              "type": "BaseRetriever",
              "fieldName": "retriever",
              "inputTypes": null
            }
          },
          "style": {
            "stroke": "#555"
          },
          "source": "FAISS-swWt9",
          "target": "RetrievalQA-7EJ4f",
          "animated": false,
          "className": "stroke-gray-900  stroke-connection",
          "sourceHandle": "{œbaseClassesœ:[œVectorStoreœ,œVectorStoreœ,œFAISSœ,œBaseRetrieverœ],œdataTypeœ:œFAISSœ,œidœ:œFAISS-swWt9œ}",
          "targetHandle": "{œfieldNameœ:œretrieverœ,œidœ:œRetrievalQA-7EJ4fœ,œinputTypesœ:null,œtypeœ:œBaseRetrieverœ}"
        },
        {
          "id": "reactflow__edge-CombineDocsChain-PwL9a{œbaseClassesœ:[œBaseCombineDocumentsChainœ,œCallableœ],œdataTypeœ:œCombineDocsChainœ,œidœ:œCombineDocsChain-PwL9aœ}-RetrievalQA-7EJ4f{œfieldNameœ:œcombine_documents_chainœ,œidœ:œRetrievalQA-7EJ4fœ,œinputTypesœ:null,œtypeœ:œBaseCombineDocumentsChainœ}",
          "data": {
            "sourceHandle": {
              "id": "CombineDocsChain-PwL9a",
              "dataType": "CombineDocsChain",
              "baseClasses": [
                "BaseCombineDocumentsChain",
                "Callable"
              ]
            },
            "targetHandle": {
              "id": "RetrievalQA-7EJ4f",
              "type": "BaseCombineDocumentsChain",
              "fieldName": "combine_documents_chain",
              "inputTypes": null
            }
          },
          "style": {
            "stroke": "#555"
          },
          "source": "CombineDocsChain-PwL9a",
          "target": "RetrievalQA-7EJ4f",
          "animated": false,
          "className": "stroke-gray-900  stroke-connection",
          "sourceHandle": "{œbaseClassesœ:[œBaseCombineDocumentsChainœ,œCallableœ],œdataTypeœ:œCombineDocsChainœ,œidœ:œCombineDocsChain-PwL9aœ}",
          "targetHandle": "{œfieldNameœ:œcombine_documents_chainœ,œidœ:œRetrievalQA-7EJ4fœ,œinputTypesœ:null,œtypeœ:œBaseCombineDocumentsChainœ}"
        },
        {
          "id": "reactflow__edge-Data-1Bn5x{œbaseClassesœ:[œBaseLLMœ,œBaseLanguageModelœ],œdataTypeœ:œDataœ,œidœ:œData-1Bn5xœ}-CombineDocsChain-PwL9a{œfieldNameœ:œllmœ,œidœ:œCombineDocsChain-PwL9aœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}",
          "data": {
            "sourceHandle": {
              "id": "Data-1Bn5x",
              "dataType": "Data",
              "baseClasses": [
                "BaseLLM",
                "BaseLanguageModel"
              ]
            },
            "targetHandle": {
              "id": "CombineDocsChain-PwL9a",
              "type": "BaseLanguageModel",
              "fieldName": "llm",
              "inputTypes": null
            }
          },
          "style": {
            "stroke": "#555"
          },
          "source": "Data-1Bn5x",
          "target": "CombineDocsChain-PwL9a",
          "animated": false,
          "className": "stroke-gray-900  stroke-connection",
          "sourceHandle": "{œbaseClassesœ:[œBaseLLMœ,œBaseLanguageModelœ],œdataTypeœ:œDataœ,œidœ:œData-1Bn5xœ}",
          "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œCombineDocsChain-PwL9aœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}"
        }
      ],
      "nodes": [
        {
          "id": "CustomComponent-jfjaG",
          "data": {
            "id": "CustomComponent-jfjaG",
            "node": {
              "beta": true,
              "error": null,
              "official": false,
              "template": {
                "code": {
                  "list": false,
                  "name": "code",
                  "show": true,
                  "type": "code",
                  "value": "from axiestudio import CustomComponent\nfrom langchain.schema import Document\nfrom typing import Any, Dict, List\n\nclass FileLoaderComponent(CustomComponent):\n    display_name: str = \"File Loader\"\n    description: str = \"A generic loader that auto-detects file types.\"\n    beta = True\n    loaders_info: List[Dict[str, Any]] = [\n    {\n        \"loader\": \"AirbyteJSONLoader\",\n        \"name\": \"Airbyte JSON (.jsonl)\",\n        \"import\": \"langchain.document_loaders.AirbyteJSONLoader\",\n        \"defaultFor\": [\"jsonl\"],\n        \"allowdTypes\": [\"jsonl\"],\n    },\n    {\n        \"loader\": \"JSONLoader\",\n        \"name\": \"JSON (.json)\",\n        \"import\": \"langchain.document_loaders.JSONLoader\",\n        \"defaultFor\": [\"json\"],\n        \"allowdTypes\": [\"json\"],\n    },\n    {\n        \"loader\": \"BSHTMLLoader\",\n        \"name\": \"BeautifulSoup4 HTML (.html, .htm)\",\n        \"import\": \"langchain.document_loaders.BSHTMLLoader\",\n        \"allowdTypes\": [\"html\", \"htm\"],\n    },\n    {\n        \"loader\": \"CSVLoader\",\n        \"name\": \"CSV (.csv)\",\n        \"import\": \"langchain.document_loaders.CSVLoader\",\n        \"defaultFor\": [\"csv\"],\n        \"allowdTypes\": [\"csv\"],\n    },\n    {\n        \"loader\": \"CoNLLULoader\",\n        \"name\": \"CoNLL-U (.conllu)\",\n        \"import\": \"langchain.document_loaders.CoNLLULoader\",\n        \"defaultFor\": [\"conllu\"],\n        \"allowdTypes\": [\"conllu\"],\n    },\n    {\n        \"loader\": \"EverNoteLoader\",\n        \"name\": \"EverNote (.enex)\",\n        \"import\": \"langchain.document_loaders.EverNoteLoader\",\n        \"defaultFor\": [\"enex\"],\n        \"allowdTypes\": [\"enex\"],\n    },\n    {\n        \"loader\": \"FacebookChatLoader\",\n        \"name\": \"Facebook Chat (.json)\",\n        \"import\": \"langchain.document_loaders.FacebookChatLoader\",\n        \"allowdTypes\": [\"json\"],\n    },\n    {\n        \"loader\": \"OutlookMessageLoader\",\n        \"name\": \"Outlook Message (.msg)\",\n        \"import\": \"langchain.document_loaders.OutlookMessageLoader\",\n        \"defaultFor\": [\"msg\"],\n        \"allowdTypes\": [\"msg\"],\n    },\n    {\n        \"loader\": \"PyPDFLoader\",\n        \"name\": \"PyPDF (.pdf)\",\n        \"import\": \"langchain.document_loaders.PyPDFLoader\",\n        \"defaultFor\": [\"pdf\"],\n        \"allowdTypes\": [\"pdf\"],\n    },\n    {\n        \"loader\": \"STRLoader\",\n        \"name\": \"Subtitle (.str)\",\n        \"import\": \"langchain.document_loaders.STRLoader\",\n        \"defaultFor\": [\"str\"],\n        \"allowdTypes\": [\"str\"],\n    },\n    {\n        \"loader\": \"TextLoader\",\n        \"name\": \"Text (.txt)\",\n        \"import\": \"langchain.document_loaders.TextLoader\",\n        \"defaultFor\": [\"txt\"],\n        \"allowdTypes\": [\"txt\"],\n    },\n    {\n        \"loader\": \"UnstructuredEmailLoader\",\n        \"name\": \"Unstructured Email (.eml)\",\n        \"import\": \"langchain.document_loaders.UnstructuredEmailLoader\",\n        \"defaultFor\": [\"eml\"],\n        \"allowdTypes\": [\"eml\"],\n    },\n    {\n        \"loader\": \"UnstructuredHTMLLoader\",\n        \"name\": \"Unstructured HTML (.html, .htm)\",\n        \"import\": \"langchain.document_loaders.UnstructuredHTMLLoader\",\n        \"defaultFor\": [\"html\", \"htm\"],\n        \"allowdTypes\": [\"html\", \"htm\"],\n    },\n    {\n        \"loader\": \"UnstructuredMarkdownLoader\",\n        \"name\": \"Unstructured Markdown (.md)\",\n        \"import\": \"langchain.document_loaders.UnstructuredMarkdownLoader\",\n        \"defaultFor\": [\"md\"],\n        \"allowdTypes\": [\"md\"],\n    },\n    {\n        \"loader\": \"UnstructuredPowerPointLoader\",\n        \"name\": \"Unstructured PowerPoint (.pptx)\",\n        \"import\": \"langchain.document_loaders.UnstructuredPowerPointLoader\",\n        \"defaultFor\": [\"pptx\"],\n        \"allowdTypes\": [\"pptx\"],\n    },\n    {\n        \"loader\": \"UnstructuredWordLoader\",\n        \"name\": \"Unstructured Word (.docx)\",\n        \"import\": \"langchain.document_loaders.UnstructuredWordLoader\",\n        \"defaultFor\": [\"docx\"],\n        \"allowdTypes\": [\"docx\"],\n    },\n]\n\n    def build_config(self):\n        loader_options = [\"Automatic\"] + [\n            loader_info[\"name\"] for loader_info in self.loaders_info\n        ]\n\n        file_types = []\n        suffixes = []\n\n        for loader_info in self.loaders_info:\n            if \"allowedTypes\" in loader_info:\n                file_types.extend(loader_info[\"allowedTypes\"])\n                suffixes.extend([f\".{ext}\" for ext in loader_info[\"allowedTypes\"]])\n\n        return {\n            \"file_path\": {\n                \"display_name\": \"File Path\",\n                \"required\": True,\n                \"field_type\": \"file\",\n                \"file_types\": [\n                    \"json\",\n                    \"txt\",\n                    \"csv\",\n                    \"jsonl\",\n                    \"html\",\n                    \"htm\",\n                    \"conllu\",\n                    \"enex\",\n                    \"msg\",\n                    \"pdf\",\n                    \"srt\",\n                    \"eml\",\n                    \"md\",\n                    \"pptx\",\n                    \"docx\",\n                ],\n                \"suffixes\": [\n                    \".json\",\n                    \".txt\",\n                    \".csv\",\n                    \".jsonl\",\n                    \".html\",\n                    \".htm\",\n                    \".conllu\",\n                    \".enex\",\n                    \".msg\",\n                    \".pdf\",\n                    \".srt\",\n                    \".eml\",\n                    \".md\",\n                    \".pptx\",\n                    \".docx\",\n                ],\n                # \"file_types\" : file_types,\n                # \"suffixes\": suffixes,\n            },\n            \"loader\": {\n                \"display_name\": \"Loader\",\n                \"is_list\": True,\n                \"required\": True,\n                \"options\": loader_options,\n                \"value\": \"Automatic\",\n            },\n        }\n\n    def build(self, file_path: str, loader: str) -> Document:\n        file_type = file_path.split(\".\")[-1]\n\n        # Mapeie o nome do loader selecionado para suas informações\n        selected_loader_info = None\n        for loader_info in self.loaders_info:\n            if loader_info[\"name\"] == loader:\n                selected_loader_info = loader_info\n                break\n\n        if selected_loader_info is None and loader != \"Automatic\":\n            raise ValueError(f\"Loader {loader} not found in the loader info list\")\n\n        if loader == \"Automatic\":\n            # Determine o loader automaticamente com base na extensão do arquivo\n            default_loader_info = None\n            for info in self.loaders_info:\n                if \"defaultFor\" in info and file_type in info[\"defaultFor\"]:\n                    default_loader_info = info\n                    break\n\n            if default_loader_info is None:\n                raise ValueError(f\"No default loader found for file type: {file_type}\")\n\n            selected_loader_info = default_loader_info\n        if isinstance(selected_loader_info, dict):\n            loader_import: str = selected_loader_info[\"import\"]\n        else:\n            raise ValueError(\n                f\"Loader info for {loader} is not a dict\\nLoader info:\\n{selected_loader_info}\"\n            )\n        module_name, class_name = loader_import.rsplit(\".\", 1)\n\n        try:\n            # Importe o loader dinamicamente\n            loader_module = __import__(module_name, fromlist=[class_name])\n            loader_instance = getattr(loader_module, class_name)\n        except ImportError as e:\n            raise ValueError(\n                f\"Loader {loader} could not be imported\\nLoader info:\\n{selected_loader_info}\"\n            ) from e\n\n        result = loader_instance(file_path=file_path)\n        result = result.load()\n        self.status = result\n        return result",
                  "dynamic": true,
                  "advanced": false,
                  "password": false,
                  "required": true,
                  "multiline": true,
                  "placeholder": ""
                },
                "_type": "CustomComponent",
                "loader": {
                  "info": "",
                  "list": true,
                  "name": "loader",
                  "show": true,
                  "type": "str",
                  "value": "Text (.txt)",
                  "dynamic": false,
                  "options": [
                    "Automatic",
                    "Airbyte JSON (.jsonl)",
                    "JSON (.json)",
                    "BeautifulSoup4 HTML (.html, .htm)",
                    "CSV (.csv)",
                    "CoNLL-U (.conllu)",
                    "EverNote (.enex)",
                    "Facebook Chat (.json)",
                    "Outlook Message (.msg)",
                    "PyPDF (.pdf)",
                    "Subtitle (.str)",
                    "Text (.txt)",
                    "Unstructured Email (.eml)",
                    "Unstructured HTML (.html, .htm)",
                    "Unstructured Markdown (.md)",
                    "Unstructured PowerPoint (.pptx)",
                    "Unstructured Word (.docx)"
                  ],
                  "advanced": false,
                  "password": false,
                  "required": true,
                  "multiline": false,
                  "placeholder": "",
                  "display_name": "Loader"
                },
                "file_path": {
                  "info": "",
                  "list": false,
                  "name": "file_path",
                  "show": true,
                  "type": "file",
                  "value": "",
                  "dynamic": false,
                  "advanced": false,
                  "password": false,
                  "required": true,
                  "fileTypes": [
                    "json",
                    "txt",
                    "csv",
                    "jsonl",
                    "html",
                    "htm",
                    "conllu",
                    "enex",
                    "msg",
                    "pdf",
                    "srt",
                    "eml",
                    "md",
                    "pptx",
                    "docx"
                  ],
                  "file_path": "/root/.cache/axiestudio/f985fd18-0260-4f3f-a86d-0390831f736b/61b3c59e5a74504549c18bbb425dbd6bae1350459173d09b4579f16bdcf03563.html",
                  "multiline": false,
                  "placeholder": "",
                  "display_name": "File Path"
                }
              },
              "description": "A generic loader that auto-detects file types.",
              "base_classes": [
                "Document"
              ],
              "display_name": "File Loader",
              "output_types": [
                "Document"
              ],
              "custom_fields": {
                "loader": null,
                "file_path": null
              },
              "documentation": ""
            },
            "type": "CustomComponent"
          },
          "type": "genericNode",
          "width": 384,
          "height": 457,
          "dragging": false,
          "position": {
            "x": -40.69865172718096,
            "y": 188.7494312332077
          },
          "selected": true,
          "positionAbsolute": {
            "x": -40.69865172718096,
            "y": 188.7494312332077
          }
        },
        {
          "id": "Data-1Bn5x",
          "data": {
            "id": "Data-1Bn5x",
            "node": {
              "beta": true,
              "official": false,
              "template": {
                "code": {
                  "info": "",
                  "list": false,
                  "name": "code",
                  "show": true,
                  "type": "code",
                  "value": "from typing import Optional\n\nfrom langchain.llms.base import BaseLLM\nfrom langchain.llms.bedrock import Bedrock\nfrom axiestudio import CustomComponent\n\n\nclass AmazonBedrockComponent(CustomComponent):\n    display_name: str = \"Amazon Bedrock\"\n    description: str = \"LLM model from Amazon Bedrock.\"\n\n    def build_config(self):\n        return {\n            \"model_id\": {\n                \"display_name\": \"Model Id\",\n                \"options\": [\n                    \"ai21.j2-grande-instruct\",\n                    \"ai21.j2-jumbo-instruct\",\n                    \"ai21.j2-mid\",\n                    \"ai21.j2-mid-v1\",\n                    \"ai21.j2-ultra\",\n                    \"ai21.j2-ultra-v1\",\n                    \"anthropic.claude-instant-v1\",\n                    \"anthropic.claude-v1\",\n                    \"anthropic.claude-v2\",\n                    \"cohere.command-text-v14\",\n                ],\n            },\n            \"credentials_profile_name\": {\"display_name\": \"Credentials Profile Name\"},\n            \"streaming\": {\"display_name\": \"Streaming\", \"field_type\": \"bool\"},\n            \"endpoint_url\": {\"display_name\": \"Endpoint URL\"},\n            \"region_name\": {\"display_name\": \"Region Name\"},\n            \"model_kwargs\": {\"display_name\": \"Model Kwargs\"},\n            \"cache\": {\"display_name\": \"Cache\"},\n            \"code\": {\"advanced\": True},\n        }\n\n    def build(\n        self,\n        model_id: str = \"anthropic.claude-instant-v1\",\n        credentials_profile_name: Optional[str] = None,\n        region_name: Optional[str] = None,\n        model_kwargs: Optional[dict] = None,\n        endpoint_url: Optional[str] = None,\n        streaming: bool = False,\n        cache: Optional[bool] = None,\n    ) -> BaseLLM:\n        try:\n            output = Bedrock(\n                credentials_profile_name=credentials_profile_name,\n                model_id=model_id,\n                region_name=region_name,\n                model_kwargs=model_kwargs,\n                endpoint_url=endpoint_url,\n                streaming=streaming,\n                cache=cache,\n            )  # type: ignore\n        except Exception as e:\n            raise ValueError(\"Could not connect to AmazonBedrock API.\") from e\n        return output",
                  "dynamic": true,
                  "advanced": true,
                  "password": false,
                  "required": true,
                  "fileTypes": [],
                  "file_path": "",
                  "multiline": true,
                  "title_case": true,
                  "placeholder": ""
                },
                "_type": "CustomComponent",
                "cache": {
                  "info": "",
                  "list": false,
                  "name": "cache",
                  "show": true,
                  "type": "bool",
                  "value": false,
                  "dynamic": false,
                  "advanced": false,
                  "password": false,
                  "required": false,
                  "fileTypes": [],
                  "file_path": "",
                  "multiline": false,
                  "title_case": true,
                  "placeholder": "",
                  "display_name": "Cache"
                },
                "model_id": {
                  "info": "",
                  "list": true,
                  "name": "model_id",
                  "show": true,
                  "type": "str",
                  "value": "anthropic.claude-v2",
                  "dynamic": false,
                  "options": [
                    "ai21.j2-grande-instruct",
                    "ai21.j2-jumbo-instruct",
                    "ai21.j2-mid",
                    "ai21.j2-mid-v1",
                    "ai21.j2-ultra",
                    "ai21.j2-ultra-v1",
                    "anthropic.claude-instant-v1",
                    "anthropic.claude-v1",
                    "anthropic.claude-v2",
                    "cohere.command-text-v14"
                  ],
                  "advanced": false,
                  "password": false,
                  "required": true,
                  "fileTypes": [],
                  "file_path": "",
                  "multiline": false,
                  "title_case": true,
                  "placeholder": "",
                  "display_name": "Model Id"
                },
                "streaming": {
                  "info": "",
                  "list": false,
                  "name": "streaming",
                  "show": true,
                  "type": "bool",
                  "value": false,
                  "dynamic": false,
                  "advanced": false,
                  "password": false,
                  "required": true,
                  "fileTypes": [],
                  "file_path": "",
                  "multiline": false,
                  "title_case": true,
                  "placeholder": "",
                  "display_name": "Streaming"
                },
                "region_name": {
                  "info": "",
                  "list": false,
                  "name": "region_name",
                  "show": true,
                  "type": "str",
                  "dynamic": false,
                  "advanced": false,
                  "password": false,
                  "required": false,
                  "fileTypes": [],
                  "file_path": "",
                  "multiline": false,
                  "title_case": true,
                  "placeholder": "",
                  "display_name": "Region Name"
                },
                "endpoint_url": {
                  "info": "",
                  "list": false,
                  "name": "endpoint_url",
                  "show": true,
                  "type": "str",
                  "dynamic": false,
                  "advanced": false,
                  "password": false,
                  "required": false,
                  "fileTypes": [],
                  "file_path": "",
                  "multiline": false,
                  "title_case": true,
                  "placeholder": "",
                  "display_name": "Endpoint URL"
                },
                "model_kwargs": {
                  "info": "",
                  "list": false,
                  "name": "model_kwargs",
                  "show": true,
                  "type": "dict",
                  "value": [
                    {
                      "max_tokens_to_sample": 300
                    },
                    {
                      "temperature": 0.3
                    },
                    {
                      "top_k": 250
                    },
                    {
                      "top_p": 0.999
                    },
                    {
                      "anthropic_version": "bedrock-2023-05-31"
                    }
                  ],
                  "dynamic": false,
                  "advanced": false,
                  "password": false,
                  "required": false,
                  "fileTypes": [],
                  "file_path": "",
                  "multiline": false,
                  "title_case": true,
                  "placeholder": "",
                  "display_name": "Model Kwargs"
                },
                "credentials_profile_name": {
                  "info": "",
                  "list": false,
                  "name": "credentials_profile_name",
                  "show": true,
                  "type": "str",
                  "dynamic": false,
                  "advanced": false,
                  "password": false,
                  "required": false,
                  "fileTypes": [],
                  "file_path": "",
                  "multiline": false,
                  "title_case": true,
                  "placeholder": "",
                  "display_name": "Credentials Profile Name"
                }
              },
              "description": "LLM model from Amazon Bedrock.",
              "base_classes": [
                "BaseLLM",
                "BaseLanguageModel"
              ],
              "display_name": "Amazon Bedrock",
              "output_types": [
                "BaseLLM"
              ],
              "custom_fields": {
                "cache": null,
                "model_id": null,
                "streaming": null,
                "region_name": null,
                "endpoint_url": null,
                "model_kwargs": null,
                "credentials_profile_name": null
              },
              "documentation": "",
              "field_formatters": {}
            },
            "type": "Data"
          },
          "type": "genericNode",
          "width": 384,
          "height": 1005,
          "dragging": false,
          "position": {
            "x": 480.4254370503958,
            "y": -865.2967469362724
          },
          "selected": false,
          "positionAbsolute": {
            "x": 480.4254370503958,
            "y": -865.2967469362724
          }
        },
        {
          "id": "FAISS-swWt9",
          "data": {
            "id": "FAISS-swWt9",
            "node": {
              "beta": true,
              "template": {
                "code": {
                  "info": "",
                  "list": false,
                  "name": "code",
                  "show": true,
                  "type": "code",
                  "value": "from typing import List, Union\n\nfrom langchain.schema import BaseRetriever\nfrom langchain_community.vectorstores import VectorStore\nfrom langchain_community.vectorstores.faiss import FAISS\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import Document, Embeddings\n\n\nclass FAISSComponent(CustomComponent):\n    display_name = \"FAISS\"\n    description = \"Construct FAISS wrapper from raw documents.\"\n    documentation = \"https://python.langchain.com/docs/modules/data_connection/vectorstores/integrations/faiss\"\n\n    def build_config(self):\n        return {\n            \"documents\": {\"display_name\": \"Documents\"},\n            \"embedding\": {\"display_name\": \"Embedding\"},\n        }\n\n    def build(\n        self,\n        embedding: Embeddings,\n        documents: List[Document],\n    ) -> Union[VectorStore, FAISS, BaseRetriever]:\n        return FAISS.from_documents(documents=documents, embedding=embedding)\n",
                  "dynamic": true,
                  "advanced": false,
                  "password": false,
                  "required": true,
                  "fileTypes": [],
                  "file_path": "",
                  "multiline": true,
                  "title_case": true,
                  "placeholder": ""
                },
                "_type": "CustomComponent",
                "documents": {
                  "info": "",
                  "list": true,
                  "name": "documents",
                  "show": true,
                  "type": "Document",
                  "dynamic": false,
                  "advanced": false,
                  "password": false,
                  "required": true,
                  "fileTypes": [],
                  "file_path": "",
                  "multiline": false,
                  "title_case": true,
                  "placeholder": "",
                  "display_name": "Documents"
                },
                "embedding": {
                  "info": "",
                  "list": false,
                  "name": "embedding",
                  "show": true,
                  "type": "Embeddings",
                  "dynamic": false,
                  "advanced": false,
                  "password": false,
                  "required": true,
                  "fileTypes": [],
                  "file_path": "",
                  "multiline": false,
                  "title_case": true,
                  "placeholder": "",
                  "display_name": "Embedding"
                }
              },
              "description": "Construct FAISS wrapper from raw documents.",
              "base_classes": [
                "VectorStore",
                "VectorStore",
                "FAISS",
                "BaseRetriever"
              ],
              "display_name": "FAISS",
              "output_types": [
                "VectorStore",
                "FAISS",
                "BaseRetriever"
              ],
              "custom_fields": {
                "documents": null,
                "embedding": null
              },
              "documentation": "https://python.langchain.com/docs/modules/data_connection/vectorstores/integrations/faiss",
              "field_formatters": {}
            },
            "type": "FAISS"
          },
          "type": "genericNode",
          "width": 384,
          "height": 377,
          "dragging": false,
          "position": {
            "x": 517.4837708542835,
            "y": 498.3765126886312
          },
          "selected": false,
          "positionAbsolute": {
            "x": 517.4837708542835,
            "y": 498.3765126886312
          }
        },
        {
          "id": "Embeddings-aofX5",
          "data": {
            "id": "Embeddings-aofX5",
            "node": {
              "beta": true,
              "template": {
                "code": {
                  "info": "",
                  "list": false,
                  "name": "code",
                  "show": true,
                  "type": "code",
                  "value": "from typing import Optional\n\nfrom langchain.embeddings import BedrockEmbeddings\nfrom langchain.embeddings.base import Embeddings\nfrom axiestudio import CustomComponent\n\n\nclass AmazonBedrockEmeddingsComponent(CustomComponent):\n    \"\"\"\n    A custom component for implementing an Embeddings Model using Amazon Bedrock.\n    \"\"\"\n\n    display_name: str = \"Amazon Bedrock Embeddings\"\n    description: str = \"Embeddings model from Amazon Bedrock.\"\n    documentation = \"https://python.langchain.com/docs/modules/data_connection/text_embedding/integrations/bedrock\"\n    beta = True\n\n    def build_config(self):\n        return {\n            \"model_id\": {\n                \"display_name\": \"Model Id\",\n                \"options\": [\"amazon.titan-embed-text-v1\"],\n            },\n            \"credentials_profile_name\": {\"display_name\": \"Credentials Profile Name\"},\n            \"endpoint_url\": {\"display_name\": \"Bedrock Endpoint URL\"},\n            \"region_name\": {\"display_name\": \"AWS Region\"},\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        model_id: str = \"amazon.titan-embed-text-v1\",\n        credentials_profile_name: Optional[str] = None,\n        endpoint_url: Optional[str] = None,\n        region_name: Optional[str] = None,\n    ) -> Embeddings:\n        try:\n            output = BedrockEmbeddings(\n                credentials_profile_name=credentials_profile_name,\n                model_id=model_id,\n                endpoint_url=endpoint_url,\n                region_name=region_name,\n            )  # type: ignore\n        except Exception as e:\n            raise ValueError(\"Could not connect to AmazonBedrock API.\") from e\n        return output\n",
                  "dynamic": true,
                  "advanced": false,
                  "password": false,
                  "required": true,
                  "fileTypes": [],
                  "file_path": "",
                  "multiline": true,
                  "title_case": true,
                  "placeholder": ""
                },
                "_type": "CustomComponent",
                "model_id": {
                  "info": "",
                  "list": true,
                  "name": "model_id",
                  "show": true,
                  "type": "str",
                  "value": "amazon.titan-embed-text-v1",
                  "dynamic": false,
                  "options": [
                    "amazon.titan-embed-text-v1"
                  ],
                  "advanced": false,
                  "password": false,
                  "required": true,
                  "fileTypes": [],
                  "file_path": "",
                  "multiline": false,
                  "title_case": true,
                  "placeholder": "",
                  "display_name": "Model Id"
                },
                "region_name": {
                  "info": "",
                  "list": false,
                  "name": "region_name",
                  "show": true,
                  "type": "str",
                  "dynamic": false,
                  "advanced": false,
                  "password": false,
                  "required": false,
                  "fileTypes": [],
                  "file_path": "",
                  "multiline": false,
                  "title_case": true,
                  "placeholder": "",
                  "display_name": "AWS Region"
                },
                "endpoint_url": {
                  "info": "",
                  "list": false,
                  "name": "endpoint_url",
                  "show": true,
                  "type": "str",
                  "dynamic": false,
                  "advanced": false,
                  "password": false,
                  "required": false,
                  "fileTypes": [],
                  "file_path": "",
                  "multiline": false,
                  "title_case": true,
                  "placeholder": "",
                  "display_name": "Bedrock Endpoint URL"
                },
                "credentials_profile_name": {
                  "info": "",
                  "list": false,
                  "name": "credentials_profile_name",
                  "show": true,
                  "type": "str",
                  "dynamic": false,
                  "advanced": false,
                  "password": false,
                  "required": false,
                  "fileTypes": [],
                  "file_path": "",
                  "multiline": false,
                  "title_case": true,
                  "placeholder": "",
                  "display_name": "Credentials Profile Name"
                }
              },
              "description": "Embeddings model from Amazon Bedrock.",
              "base_classes": [
                "Embeddings"
              ],
              "display_name": "Amazon Bedrock Embeddings",
              "output_types": [
                "Embeddings"
              ],
              "custom_fields": {
                "model_id": null,
                "region_name": null,
                "endpoint_url": null,
                "credentials_profile_name": null
              },
              "documentation": "https://python.langchain.com/docs/modules/data_connection/text_embedding/integrations/bedrock",
              "field_formatters": {}
            },
            "type": "Embeddings"
          },
          "type": "genericNode",
          "width": 384,
          "height": 653,
          "dragging": false,
          "position": {
            "x": -6.359286980220645,
            "y": 670.8285765215468
          },
          "selected": false,
          "positionAbsolute": {
            "x": -6.359286980220645,
            "y": 670.8285765215468
          }
        },
        {
          "id": "RetrievalQA-7EJ4f",
          "data": {
            "id": "RetrievalQA-7EJ4f",
            "node": {
              "beta": true,
              "template": {
                "code": {
                  "info": "",
                  "list": false,
                  "name": "code",
                  "show": true,
                  "type": "code",
                  "value": "from typing import Callable, Optional, Union\n\nfrom langchain.chains.combine_documents.base import BaseCombineDocumentsChain\nfrom langchain.chains.retrieval_qa.base import BaseRetrievalQA, RetrievalQA\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import BaseMemory, BaseRetriever\n\n\nclass RetrievalQAComponent(CustomComponent):\n    display_name = \"RetrievalQA\"\n    description = \"Chain for question-answering against an index.\"\n\n    def build_config(self):\n        return {\n            \"combine_documents_chain\": {\"display_name\": \"Combine Documents Chain\"},\n            \"retriever\": {\"display_name\": \"Retriever\"},\n            \"memory\": {\"display_name\": \"Memory\", \"required\": False},\n            \"input_key\": {\"display_name\": \"Input Key\", \"advanced\": True},\n            \"output_key\": {\"display_name\": \"Output Key\", \"advanced\": True},\n            \"return_source_documents\": {\"display_name\": \"Return Source Documents\"},\n        }\n\n    def build(\n        self,\n        combine_documents_chain: BaseCombineDocumentsChain,\n        retriever: BaseRetriever,\n        memory: Optional[BaseMemory] = None,\n        input_key: str = \"query\",\n        output_key: str = \"result\",\n        return_source_documents: bool = True,\n    ) -> Union[BaseRetrievalQA, Callable]:\n        return RetrievalQA(\n            combine_documents_chain=combine_documents_chain,\n            retriever=retriever,\n            memory=memory,\n            input_key=input_key,\n            output_key=output_key,\n            return_source_documents=return_source_documents,\n        )\n",
                  "dynamic": true,
                  "advanced": false,
                  "password": false,
                  "required": true,
                  "fileTypes": [],
                  "file_path": "",
                  "multiline": true,
                  "title_case": true,
                  "placeholder": ""
                },
                "_type": "CustomComponent",
                "memory": {
                  "info": "",
                  "list": false,
                  "name": "memory",
                  "show": true,
                  "type": "BaseMemory",
                  "dynamic": false,
                  "advanced": false,
                  "password": false,
                  "required": false,
                  "fileTypes": [],
                  "file_path": "",
                  "multiline": false,
                  "title_case": true,
                  "placeholder": "",
                  "display_name": "Memory"
                },
                "input_key": {
                  "info": "",
                  "list": false,
                  "name": "input_key",
                  "show": true,
                  "type": "str",
                  "value": "query",
                  "dynamic": false,
                  "advanced": true,
                  "password": false,
                  "required": true,
                  "fileTypes": [],
                  "file_path": "",
                  "multiline": false,
                  "title_case": true,
                  "placeholder": "",
                  "display_name": "Input Key"
                },
                "retriever": {
                  "info": "",
                  "list": false,
                  "name": "retriever",
                  "show": true,
                  "type": "BaseRetriever",
                  "dynamic": false,
                  "advanced": false,
                  "password": false,
                  "required": true,
                  "fileTypes": [],
                  "file_path": "",
                  "multiline": false,
                  "title_case": true,
                  "placeholder": "",
                  "display_name": "Retriever"
                },
                "output_key": {
                  "info": "",
                  "list": false,
                  "name": "output_key",
                  "show": true,
                  "type": "str",
                  "value": "result",
                  "dynamic": false,
                  "advanced": true,
                  "password": false,
                  "required": true,
                  "fileTypes": [],
                  "file_path": "",
                  "multiline": false,
                  "title_case": true,
                  "placeholder": "",
                  "display_name": "Output Key"
                },
                "combine_documents_chain": {
                  "info": "",
                  "list": false,
                  "name": "combine_documents_chain",
                  "show": true,
                  "type": "BaseCombineDocumentsChain",
                  "dynamic": false,
                  "advanced": false,
                  "password": false,
                  "required": true,
                  "fileTypes": [],
                  "file_path": "",
                  "multiline": false,
                  "title_case": true,
                  "placeholder": "",
                  "display_name": "Combine Documents Chain"
                },
                "return_source_documents": {
                  "info": "",
                  "list": false,
                  "name": "return_source_documents",
                  "show": true,
                  "type": "bool",
                  "value": true,
                  "dynamic": false,
                  "advanced": false,
                  "password": false,
                  "required": true,
                  "fileTypes": [],
                  "file_path": "",
                  "multiline": false,
                  "title_case": true,
                  "placeholder": "",
                  "display_name": "Return Source Documents"
                }
              },
              "description": "Chain for question-answering against an index.",
              "base_classes": [
                "BaseRetrievalQA",
                "Chain",
                "Callable"
              ],
              "display_name": "RetrievalQA",
              "output_types": [
                "BaseRetrievalQA",
                "Callable"
              ],
              "custom_fields": {
                "memory": null,
                "input_key": null,
                "retriever": null,
                "output_key": null,
                "combine_documents_chain": null,
                "return_source_documents": null
              },
              "documentation": "",
              "field_formatters": {}
            },
            "type": "RetrievalQA"
          },
          "type": "genericNode",
          "width": 384,
          "height": 501,
          "dragging": false,
          "position": {
            "x": 1415.7779115965243,
            "y": 372.549419151441
          },
          "selected": false,
          "positionAbsolute": {
            "x": 1415.7779115965243,
            "y": 372.549419151441
          }
        },
        {
          "id": "CombineDocsChain-PwL9a",
          "data": {
            "id": "CombineDocsChain-PwL9a",
            "node": {
              "beta": false,
              "template": {
                "llm": {
                  "info": "",
                  "list": false,
                  "name": "llm",
                  "show": true,
                  "type": "BaseLanguageModel",
                  "value": "",
                  "dynamic": false,
                  "advanced": false,
                  "password": false,
                  "required": true,
                  "fileTypes": [],
                  "file_path": "",
                  "multiline": false,
                  "title_case": true,
                  "placeholder": "",
                  "display_name": "LLM"
                },
                "_type": "load_qa_chain",
                "chain_type": {
                  "info": "",
                  "list": true,
                  "name": "chain_type",
                  "show": true,
                  "type": "str",
                  "value": "stuff",
                  "dynamic": false,
                  "options": [
                    "stuff",
                    "map_reduce",
                    "map_rerank",
                    "refine"
                  ],
                  "advanced": false,
                  "password": false,
                  "required": true,
                  "fileTypes": [],
                  "file_path": "",
                  "multiline": false,
                  "title_case": true,
                  "placeholder": ""
                }
              },
              "description": "Load question answering chain.",
              "base_classes": [
                "BaseCombineDocumentsChain",
                "Callable"
              ],
              "display_name": "CombineDocsChain",
              "output_types": [],
              "custom_fields": {},
              "documentation": "",
              "field_formatters": {}
            },
            "type": "CombineDocsChain"
          },
          "type": "genericNode",
          "width": 384,
          "height": 333,
          "dragging": false,
          "position": {
            "x": 969.3327916653956,
            "y": 237.34837336788135
          },
          "selected": false,
          "positionAbsolute": {
            "x": 969.3327916653956,
            "y": 237.34837336788135
          }
        }
      ],
      "viewport": {
        "x": 105.84799994770918,
        "y": 163.251446296007,
        "zoom": 0.5509525579383081
      }
    },
    "date_created": "2024-04-04T14:13:13.546Z",
    "date_updated": "2024-04-04T14:13:14.240Z",
    "status": "Public",
    "sort": null,
    "user_updated": "cb801276-0d44-4b3d-a5ec-d3332021ed1e",
    "user_created": {
      "username": "ysekiy",
      "first_name": "Yuki",
      "last_name": "Sekiya",
      "id": "cb801276-0d44-4b3d-a5ec-d3332021ed1e"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:08:59.558Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 16,
    "converter_version": "1.0.0"
  }
}