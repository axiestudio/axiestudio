{
  "id": "d72afee1-be28-4d61-bd96-2fb396006f0c",
  "name": "Small Document QA",
  "description": "Basic prompting to answer questions given a small document. (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "FLOW",
  "is_component": false,
  "author": {
    "username": "智链",
    "first_name": "qh",
    "last_name": "zheng",
    "id": "e8af2b46-9355-4b04-803d-1b2c71397a68",
    "full_name": "qh zheng"
  },
  "store_url": "https://www.langflow.store/store/component/d72afee1-be28-4d61-bd96-2fb396006f0c",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-07-26T08:20:44.850Z",
    "updated": "2024-07-26T08:32:28.637Z",
    "downloaded": "2025-08-19T17:50:04.977Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "1.0.7",
    "private": false,
    "status": "Public"
  },
  "data": {
    "nodes": [
      {
        "width": 384,
        "height": 457,
        "id": "CustomComponent-z0WLA",
        "type": "genericNode",
        "position": {
          "x": 110,
          "y": 100.6953125
        },
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "code": {
                "dynamic": true,
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": true,
                "value": "from axiestudio import CustomComponent\nfrom langchain.schema import Document\nfrom typing import Any, Dict, List\n\nclass FileLoaderComponent(CustomComponent):\n    display_name: str = \"File Loader\"\n    description: str = \"A generic loader that auto-detects file types.\"\n    beta = True\n    loaders_info: List[Dict[str, Any]] = [\n    {\n        \"loader\": \"AirbyteJSONLoader\",\n        \"name\": \"Airbyte JSON (.jsonl)\",\n        \"import\": \"langchain.document_loaders.AirbyteJSONLoader\",\n        \"defaultFor\": [\"jsonl\"],\n        \"allowdTypes\": [\"jsonl\"],\n    },\n    {\n        \"loader\": \"JSONLoader\",\n        \"name\": \"JSON (.json)\",\n        \"import\": \"langchain.document_loaders.JSONLoader\",\n        \"defaultFor\": [\"json\"],\n        \"allowdTypes\": [\"json\"],\n    },\n    {\n        \"loader\": \"BSHTMLLoader\",\n        \"name\": \"BeautifulSoup4 HTML (.html, .htm)\",\n        \"import\": \"langchain.document_loaders.BSHTMLLoader\",\n        \"allowdTypes\": [\"html\", \"htm\"],\n    },\n    {\n        \"loader\": \"CSVLoader\",\n        \"name\": \"CSV (.csv)\",\n        \"import\": \"langchain.document_loaders.CSVLoader\",\n        \"defaultFor\": [\"csv\"],\n        \"allowdTypes\": [\"csv\"],\n    },\n    {\n        \"loader\": \"CoNLLULoader\",\n        \"name\": \"CoNLL-U (.conllu)\",\n        \"import\": \"langchain.document_loaders.CoNLLULoader\",\n        \"defaultFor\": [\"conllu\"],\n        \"allowdTypes\": [\"conllu\"],\n    },\n    {\n        \"loader\": \"EverNoteLoader\",\n        \"name\": \"EverNote (.enex)\",\n        \"import\": \"langchain.document_loaders.EverNoteLoader\",\n        \"defaultFor\": [\"enex\"],\n        \"allowdTypes\": [\"enex\"],\n    },\n    {\n        \"loader\": \"FacebookChatLoader\",\n        \"name\": \"Facebook Chat (.json)\",\n        \"import\": \"langchain.document_loaders.FacebookChatLoader\",\n        \"allowdTypes\": [\"json\"],\n    },\n    {\n        \"loader\": \"OutlookMessageLoader\",\n        \"name\": \"Outlook Message (.msg)\",\n        \"import\": \"langchain.document_loaders.OutlookMessageLoader\",\n        \"defaultFor\": [\"msg\"],\n        \"allowdTypes\": [\"msg\"],\n    },\n    {\n        \"loader\": \"PyPDFLoader\",\n        \"name\": \"PyPDF (.pdf)\",\n        \"import\": \"langchain.document_loaders.PyPDFLoader\",\n        \"defaultFor\": [\"pdf\"],\n        \"allowdTypes\": [\"pdf\"],\n    },\n    {\n        \"loader\": \"STRLoader\",\n        \"name\": \"Subtitle (.str)\",\n        \"import\": \"langchain.document_loaders.STRLoader\",\n        \"defaultFor\": [\"str\"],\n        \"allowdTypes\": [\"str\"],\n    },\n    {\n        \"loader\": \"TextLoader\",\n        \"name\": \"Text (.txt)\",\n        \"import\": \"langchain.document_loaders.TextLoader\",\n        \"defaultFor\": [\"txt\"],\n        \"allowdTypes\": [\"txt\"],\n    },\n    {\n        \"loader\": \"UnstructuredEmailLoader\",\n        \"name\": \"Unstructured Email (.eml)\",\n        \"import\": \"langchain.document_loaders.UnstructuredEmailLoader\",\n        \"defaultFor\": [\"eml\"],\n        \"allowdTypes\": [\"eml\"],\n    },\n    {\n        \"loader\": \"UnstructuredHTMLLoader\",\n        \"name\": \"Unstructured HTML (.html, .htm)\",\n        \"import\": \"langchain.document_loaders.UnstructuredHTMLLoader\",\n        \"defaultFor\": [\"html\", \"htm\"],\n        \"allowdTypes\": [\"html\", \"htm\"],\n    },\n    {\n        \"loader\": \"UnstructuredMarkdownLoader\",\n        \"name\": \"Unstructured Markdown (.md)\",\n        \"import\": \"langchain.document_loaders.UnstructuredMarkdownLoader\",\n        \"defaultFor\": [\"md\"],\n        \"allowdTypes\": [\"md\"],\n    },\n    {\n        \"loader\": \"UnstructuredPowerPointLoader\",\n        \"name\": \"Unstructured PowerPoint (.pptx)\",\n        \"import\": \"langchain.document_loaders.UnstructuredPowerPointLoader\",\n        \"defaultFor\": [\"pptx\"],\n        \"allowdTypes\": [\"pptx\"],\n    },\n    {\n        \"loader\": \"UnstructuredWordLoader\",\n        \"name\": \"Unstructured Word (.docx)\",\n        \"import\": \"langchain.document_loaders.UnstructuredWordLoader\",\n        \"defaultFor\": [\"docx\"],\n        \"allowdTypes\": [\"docx\"],\n    },\n]\n\n    def build_config(self):\n        loader_options = [\"Automatic\"] + [\n            loader_info[\"name\"] for loader_info in self.loaders_info\n        ]\n\n        file_types = []\n        suffixes = []\n\n        for loader_info in self.loaders_info:\n            if \"allowedTypes\" in loader_info:\n                file_types.extend(loader_info[\"allowedTypes\"])\n                suffixes.extend([f\".{ext}\" for ext in loader_info[\"allowedTypes\"]])\n\n        return {\n            \"file_path\": {\n                \"display_name\": \"File Path\",\n                \"required\": True,\n                \"field_type\": \"file\",\n                \"file_types\": [\n                    \"json\",\n                    \"txt\",\n                    \"csv\",\n                    \"jsonl\",\n                    \"html\",\n                    \"htm\",\n                    \"conllu\",\n                    \"enex\",\n                    \"msg\",\n                    \"pdf\",\n                    \"srt\",\n                    \"eml\",\n                    \"md\",\n                    \"pptx\",\n                    \"docx\",\n                ],\n                \"suffixes\": [\n                    \".json\",\n                    \".txt\",\n                    \".csv\",\n                    \".jsonl\",\n                    \".html\",\n                    \".htm\",\n                    \".conllu\",\n                    \".enex\",\n                    \".msg\",\n                    \".pdf\",\n                    \".srt\",\n                    \".eml\",\n                    \".md\",\n                    \".pptx\",\n                    \".docx\",\n                ],\n                # \"file_types\" : file_types,\n                # \"suffixes\": suffixes,\n            },\n            \"loader\": {\n                \"display_name\": \"Loader\",\n                \"is_list\": True,\n                \"required\": True,\n                \"options\": loader_options,\n                \"value\": \"Automatic\",\n            },\n        }\n\n    def build(self, file_path: str, loader: str) -> Document:\n        file_type = file_path.split(\".\")[-1]\n\n        # Mapeie o nome do loader selecionado para suas informações\n        selected_loader_info = None\n        for loader_info in self.loaders_info:\n            if loader_info[\"name\"] == loader:\n                selected_loader_info = loader_info\n                break\n\n        if selected_loader_info is None and loader != \"Automatic\":\n            raise ValueError(f\"Loader {loader} not found in the loader info list\")\n\n        if loader == \"Automatic\":\n            # Determine o loader automaticamente com base na extensão do arquivo\n            default_loader_info = None\n            for info in self.loaders_info:\n                if \"defaultFor\" in info and file_type in info[\"defaultFor\"]:\n                    default_loader_info = info\n                    break\n\n            if default_loader_info is None:\n                raise ValueError(f\"No default loader found for file type: {file_type}\")\n\n            selected_loader_info = default_loader_info\n        if isinstance(selected_loader_info, dict):\n            loader_import: str = selected_loader_info[\"import\"]\n        else:\n            raise ValueError(\n                f\"Loader info for {loader} is not a dict\\nLoader info:\\n{selected_loader_info}\"\n            )\n        module_name, class_name = loader_import.rsplit(\".\", 1)\n\n        try:\n            # Importe o loader dinamicamente\n            loader_module = __import__(module_name, fromlist=[class_name])\n            loader_instance = getattr(loader_module, class_name)\n        except ImportError as e:\n            raise ValueError(\n                f\"Loader {loader} could not be imported\\nLoader info:\\n{selected_loader_info}\"\n            ) from e\n\n        result = loader_instance(file_path=file_path)\n        result = result.load()\n        self.status = result\n        return result",
                "password": false,
                "name": "code",
                "advanced": false,
                "type": "code",
                "list": false
              },
              "_type": "CustomComponent",
              "file_path": {
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "file_path",
                "display_name": "File Path",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "file",
                "list": false,
                "fileTypes": [
                  "json",
                  "txt",
                  "csv",
                  "jsonl",
                  "html",
                  "htm",
                  "conllu",
                  "enex",
                  "msg",
                  "pdf",
                  "srt",
                  "eml",
                  "md",
                  "pptx",
                  "docx"
                ],
                "file_path": null,
                "value": ""
              },
              "loader": {
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "Automatic",
                "password": false,
                "options": [
                  "Automatic",
                  "Airbyte JSON (.jsonl)",
                  "JSON (.json)",
                  "BeautifulSoup4 HTML (.html, .htm)",
                  "CSV (.csv)",
                  "CoNLL-U (.conllu)",
                  "EverNote (.enex)",
                  "Facebook Chat (.json)",
                  "Outlook Message (.msg)",
                  "PyPDF (.pdf)",
                  "Subtitle (.str)",
                  "Text (.txt)",
                  "Unstructured Email (.eml)",
                  "Unstructured HTML (.html, .htm)",
                  "Unstructured Markdown (.md)",
                  "Unstructured PowerPoint (.pptx)",
                  "Unstructured Word (.docx)"
                ],
                "name": "loader",
                "display_name": "Loader",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": true
              }
            },
            "description": "A generic loader that auto-detects file types.",
            "base_classes": [
              "Document"
            ],
            "display_name": "File Loader",
            "custom_fields": {
              "file_path": null,
              "loader": null
            },
            "output_types": [
              "Document"
            ],
            "documentation": "",
            "beta": true,
            "error": null,
            "official": false,
            "outputs": [
              {
                "types": [
                  "Document"
                ],
                "selected": "Document",
                "name": "Document",
                "display_name": "Document",
                "hidden": false
              }
            ]
          },
          "id": "CustomComponent-z0WLA"
        },
        "selected": false,
        "positionAbsolute": {
          "x": 110,
          "y": 100.6953125
        },
        "dragging": false
      },
      {
        "width": 384,
        "height": 469,
        "id": "PromptTemplate-jQGwP",
        "type": "genericNode",
        "position": {
          "x": 651.3914617750878,
          "y": 170.71291470481205
        },
        "data": {
          "type": "PromptTemplate",
          "node": {
            "template": {
              "output_parser": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "output_parser",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "type": "BaseOutputParser",
                "list": false
              },
              "input_types": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "input_types",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "type": "dict",
                "list": false
              },
              "input_variables": {
                "required": true,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "input_variables",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "type": "str",
                "list": true,
                "value": [
                  "document",
                  "question"
                ]
              },
              "partial_variables": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "partial_variables",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "type": "dict",
                "list": false
              },
              "template": {
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": true,
                "password": false,
                "name": "template",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "type": "prompt",
                "list": false,
                "value": "Answer user's questions based on the document below:\n\n---\n\n{document}\n\n---\n\nQuestion:\n{question}\n\nAnswer:\n"
              },
              "template_format": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "value": "f-string",
                "password": false,
                "name": "template_format",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "type": "str",
                "list": false
              },
              "validate_template": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "value": false,
                "password": false,
                "name": "validate_template",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "type": "bool",
                "list": false
              },
              "_type": "PromptTemplate",
              "document": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": true,
                "value": "",
                "password": false,
                "name": "document",
                "display_name": "document",
                "advanced": false,
                "input_types": [
                  "Document",
                  "BaseOutputParser"
                ],
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false
              },
              "question": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": true,
                "value": "",
                "password": false,
                "name": "question",
                "display_name": "question",
                "advanced": false,
                "input_types": [
                  "Document",
                  "BaseOutputParser"
                ],
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false
              }
            },
            "description": "A prompt template for a language model.",
            "base_classes": [
              "StringPromptTemplate",
              "BasePromptTemplate",
              "PromptTemplate"
            ],
            "name": "",
            "display_name": "PromptTemplate",
            "documentation": "https://python.langchain.com/docs/modules/model_io/prompts/prompt_templates/",
            "custom_fields": {
              "": [
                "document",
                "question"
              ]
            },
            "output_types": [],
            "full_path": null,
            "field_formatters": {},
            "beta": false,
            "error": null,
            "outputs": [
              {
                "types": [],
                "name": "",
                "display_name": "",
                "hidden": false
              }
            ]
          },
          "id": "PromptTemplate-jQGwP"
        },
        "selected": false,
        "positionAbsolute": {
          "x": 651.3914617750878,
          "y": 170.71291470481205
        },
        "dragging": false
      },
      {
        "width": 384,
        "height": 553,
        "id": "LLMChain-HNuUr",
        "type": "genericNode",
        "position": {
          "x": 1168.1325155574266,
          "y": 270.20253697114623
        },
        "data": {
          "type": "LLMChain",
          "node": {
            "output_types": [
              "LLMChain"
            ],
            "display_name": "OpenAI Runner",
            "documentation": "",
            "base_classes": [
              "Chain",
              "Callable"
            ],
            "description": "double click to edit description",
            "template": {
              "callbacks_ChatOpenAI-UUprY": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "callbacks",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "langchain_core.callbacks.base.BaseCallbackHandler",
                "list": true,
                "proxy": {
                  "id": "ChatOpenAI-5MaFm",
                  "field": "callbacks"
                },
                "display_name": "Callbacks"
              },
              "async_client_ChatOpenAI-UUprY": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "async_client",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "Any",
                "list": false,
                "proxy": {
                  "id": "ChatOpenAI-5MaFm",
                  "field": "async_client"
                },
                "display_name": "Async Client"
              },
              "cache_ChatOpenAI-UUprY": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "cache",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "bool",
                "list": false,
                "proxy": {
                  "id": "ChatOpenAI-5MaFm",
                  "field": "cache"
                },
                "display_name": "Cache"
              },
              "client_ChatOpenAI-UUprY": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "client",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "Any",
                "list": false,
                "proxy": {
                  "id": "ChatOpenAI-5MaFm",
                  "field": "client"
                },
                "display_name": "Client"
              },
              "default_headers_ChatOpenAI-UUprY": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "default_headers",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "dict",
                "list": false,
                "proxy": {
                  "id": "ChatOpenAI-5MaFm",
                  "field": "default_headers"
                },
                "display_name": "Default Headers"
              },
              "default_query_ChatOpenAI-UUprY": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "default_query",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "dict",
                "list": false,
                "proxy": {
                  "id": "ChatOpenAI-5MaFm",
                  "field": "default_query"
                },
                "display_name": "Default Query"
              },
              "http_client_ChatOpenAI-UUprY": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "http_client",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "Any",
                "list": false,
                "proxy": {
                  "id": "ChatOpenAI-5MaFm",
                  "field": "http_client"
                },
                "display_name": "Http Client"
              },
              "max_retries_ChatOpenAI-UUprY": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "value": 2,
                "password": false,
                "name": "max_retries",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "int",
                "list": false,
                "proxy": {
                  "id": "ChatOpenAI-5MaFm",
                  "field": "max_retries"
                },
                "display_name": "Max Retries"
              },
              "max_tokens_ChatOpenAI-UUprY": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": true,
                "name": "max_tokens",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "int",
                "list": false,
                "proxy": {
                  "id": "ChatOpenAI-5MaFm",
                  "field": "max_tokens"
                },
                "display_name": "Max Tokens",
                "value": ""
              },
              "metadata_ChatOpenAI-UUprY": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "metadata",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "dict",
                "list": false,
                "proxy": {
                  "id": "ChatOpenAI-5MaFm",
                  "field": "metadata"
                },
                "display_name": "Metadata"
              },
              "model_kwargs_ChatOpenAI-UUprY": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "model_kwargs",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "dict",
                "list": false,
                "proxy": {
                  "id": "ChatOpenAI-5MaFm",
                  "field": "model_kwargs"
                },
                "display_name": "Model Kwargs"
              },
              "model_name_ChatOpenAI-UUprY": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "gpt-4-1106-preview",
                "password": false,
                "options": [
                  "gpt-4-1106-preview",
                  "gpt-4-vision-preview",
                  "gpt-4",
                  "gpt-4-32k",
                  "gpt-3.5-turbo",
                  "gpt-3.5-turbo-16k"
                ],
                "name": "model_name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": true,
                "proxy": {
                  "id": "ChatOpenAI-5MaFm",
                  "field": "model_name"
                },
                "display_name": "Model Name"
              },
              "n_ChatOpenAI-UUprY": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "value": 1,
                "password": false,
                "name": "n",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "int",
                "list": false,
                "proxy": {
                  "id": "ChatOpenAI-5MaFm",
                  "field": "n"
                },
                "display_name": "N"
              },
              "openai_api_base_ChatOpenAI-UUprY": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "openai_api_base",
                "display_name": "OpenAI API Base",
                "advanced": true,
                "dynamic": false,
                "info": "\nThe base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.\n",
                "type": "str",
                "list": false,
                "proxy": {
                  "id": "ChatOpenAI-5MaFm",
                  "field": "openai_api_base"
                }
              },
              "openai_api_key_ChatOpenAI-UUprY": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "",
                "password": true,
                "name": "openai_api_key",
                "display_name": "OpenAI API Key",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false,
                "proxy": {
                  "id": "ChatOpenAI-5MaFm",
                  "field": "openai_api_key"
                }
              },
              "openai_organization_ChatOpenAI-UUprY": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "openai_organization",
                "display_name": "OpenAI Organization",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false,
                "proxy": {
                  "id": "ChatOpenAI-5MaFm",
                  "field": "openai_organization"
                }
              },
              "openai_proxy_ChatOpenAI-UUprY": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "openai_proxy",
                "display_name": "OpenAI Proxy",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false,
                "proxy": {
                  "id": "ChatOpenAI-5MaFm",
                  "field": "openai_proxy"
                }
              },
              "request_timeout_ChatOpenAI-UUprY": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "request_timeout",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "float",
                "list": false,
                "proxy": {
                  "id": "ChatOpenAI-5MaFm",
                  "field": "request_timeout"
                },
                "display_name": "Request Timeout"
              },
              "streaming_ChatOpenAI-UUprY": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "value": false,
                "password": false,
                "name": "streaming",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "bool",
                "list": false,
                "proxy": {
                  "id": "ChatOpenAI-5MaFm",
                  "field": "streaming"
                },
                "display_name": "Streaming"
              },
              "tags_ChatOpenAI-UUprY": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "tags",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": true,
                "proxy": {
                  "id": "ChatOpenAI-5MaFm",
                  "field": "tags"
                },
                "display_name": "Tags"
              },
              "temperature_ChatOpenAI-UUprY": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "0.1",
                "password": false,
                "name": "temperature",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "float",
                "list": false,
                "proxy": {
                  "id": "ChatOpenAI-5MaFm",
                  "field": "temperature"
                },
                "display_name": "Temperature"
              },
              "tiktoken_model_name_ChatOpenAI-UUprY": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "tiktoken_model_name",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false,
                "proxy": {
                  "id": "ChatOpenAI-5MaFm",
                  "field": "tiktoken_model_name"
                },
                "display_name": "Tiktoken Model Name"
              },
              "verbose_ChatOpenAI-UUprY": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "value": false,
                "password": false,
                "name": "verbose",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "bool",
                "list": false,
                "proxy": {
                  "id": "ChatOpenAI-5MaFm",
                  "field": "verbose"
                },
                "display_name": "Verbose"
              },
              "code_LLMChain-IUiMS": {
                "dynamic": true,
                "required": true,
                "placeholder": "",
                "show": false,
                "multiline": true,
                "value": "from typing import Callable, Optional, Union\n\nfrom langchain.chains import LLMChain\n\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import (\n    BaseLanguageModel,\n    BaseMemory,\n    BasePromptTemplate,\n    Chain,\n)\n\n\nclass LLMChainComponent(CustomComponent):\n    display_name = \"LLMChain\"\n    description = \"Chain to run queries against LLMs\"\n\n    def build_config(self):\n        return {\n            \"prompt\": {\"display_name\": \"Prompt\"},\n            \"llm\": {\"display_name\": \"LLM\"},\n            \"memory\": {\"display_name\": \"Memory\"},\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        prompt: BasePromptTemplate,\n        llm: BaseLanguageModel,\n        memory: Optional[BaseMemory] = None,\n    ) -> Union[Chain, Callable]:\n        return LLMChain(prompt=prompt, llm=llm, memory=memory)\n",
                "password": false,
                "name": "code",
                "advanced": false,
                "type": "code",
                "list": false,
                "proxy": {
                  "id": "LLMChain-tVH7b",
                  "field": "code"
                },
                "display_name": "Code"
              },
              "memory_LLMChain-IUiMS": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "memory",
                "display_name": "Memory",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "BaseMemory",
                "list": false,
                "proxy": {
                  "id": "LLMChain-tVH7b",
                  "field": "memory"
                }
              },
              "prompt_LLMChain-IUiMS": {
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "prompt",
                "display_name": "Prompt",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "BasePromptTemplate",
                "list": false,
                "proxy": {
                  "id": "LLMChain-tVH7b",
                  "field": "prompt"
                }
              }
            },
            "flow": {
              "data": {
                "nodes": [
                  {
                    "width": 384,
                    "height": 629,
                    "id": "ChatOpenAI-5MaFm",
                    "type": "genericNode",
                    "position": {
                      "x": 880.5692501813826,
                      "y": 59.58244540558999
                    },
                    "data": {
                      "type": "ChatOpenAI",
                      "node": {
                        "template": {
                          "callbacks": {
                            "required": false,
                            "placeholder": "",
                            "show": false,
                            "multiline": false,
                            "password": false,
                            "name": "callbacks",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "type": "langchain_core.callbacks.base.BaseCallbackHandler",
                            "list": true
                          },
                          "async_client": {
                            "required": false,
                            "placeholder": "",
                            "show": false,
                            "multiline": false,
                            "password": false,
                            "name": "async_client",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "type": "Any",
                            "list": false
                          },
                          "cache": {
                            "required": false,
                            "placeholder": "",
                            "show": false,
                            "multiline": false,
                            "password": false,
                            "name": "cache",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "type": "bool",
                            "list": false
                          },
                          "client": {
                            "required": false,
                            "placeholder": "",
                            "show": false,
                            "multiline": false,
                            "password": false,
                            "name": "client",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "type": "Any",
                            "list": false
                          },
                          "default_headers": {
                            "required": false,
                            "placeholder": "",
                            "show": false,
                            "multiline": false,
                            "password": false,
                            "name": "default_headers",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "type": "dict",
                            "list": false
                          },
                          "default_query": {
                            "required": false,
                            "placeholder": "",
                            "show": false,
                            "multiline": false,
                            "password": false,
                            "name": "default_query",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "type": "dict",
                            "list": false
                          },
                          "http_client": {
                            "required": false,
                            "placeholder": "",
                            "show": false,
                            "multiline": false,
                            "password": false,
                            "name": "http_client",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "type": "Any",
                            "list": false
                          },
                          "max_retries": {
                            "required": false,
                            "placeholder": "",
                            "show": false,
                            "multiline": false,
                            "value": 2,
                            "password": false,
                            "name": "max_retries",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "type": "int",
                            "list": false
                          },
                          "max_tokens": {
                            "required": false,
                            "placeholder": "",
                            "show": true,
                            "multiline": false,
                            "password": true,
                            "name": "max_tokens",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "type": "int",
                            "list": false
                          },
                          "metadata": {
                            "required": false,
                            "placeholder": "",
                            "show": false,
                            "multiline": false,
                            "password": false,
                            "name": "metadata",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "type": "dict",
                            "list": false
                          },
                          "model_kwargs": {
                            "required": false,
                            "placeholder": "",
                            "show": true,
                            "multiline": false,
                            "password": false,
                            "name": "model_kwargs",
                            "advanced": true,
                            "dynamic": false,
                            "info": "",
                            "type": "dict",
                            "list": false
                          },
                          "model_name": {
                            "required": false,
                            "placeholder": "",
                            "show": true,
                            "multiline": false,
                            "value": "gpt-3.5-turbo",
                            "password": false,
                            "options": [
                              "gpt-4-1106-preview",
                              "gpt-4-vision-preview",
                              "gpt-4",
                              "gpt-4-32k",
                              "gpt-3.5-turbo",
                              "gpt-3.5-turbo-16k"
                            ],
                            "name": "model_name",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "type": "str",
                            "list": true
                          },
                          "n": {
                            "required": false,
                            "placeholder": "",
                            "show": false,
                            "multiline": false,
                            "value": 1,
                            "password": false,
                            "name": "n",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "type": "int",
                            "list": false
                          },
                          "openai_api_base": {
                            "required": false,
                            "placeholder": "",
                            "show": true,
                            "multiline": false,
                            "password": false,
                            "name": "openai_api_base",
                            "display_name": "OpenAI API Base",
                            "advanced": false,
                            "dynamic": false,
                            "info": "\nThe base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.\n",
                            "type": "str",
                            "list": false
                          },
                          "openai_api_key": {
                            "required": false,
                            "placeholder": "",
                            "show": true,
                            "multiline": false,
                            "value": "",
                            "password": true,
                            "name": "openai_api_key",
                            "display_name": "OpenAI API Key",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "type": "str",
                            "list": false
                          },
                          "openai_organization": {
                            "required": false,
                            "placeholder": "",
                            "show": false,
                            "multiline": false,
                            "password": false,
                            "name": "openai_organization",
                            "display_name": "OpenAI Organization",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "type": "str",
                            "list": false
                          },
                          "openai_proxy": {
                            "required": false,
                            "placeholder": "",
                            "show": false,
                            "multiline": false,
                            "password": false,
                            "name": "openai_proxy",
                            "display_name": "OpenAI Proxy",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "type": "str",
                            "list": false
                          },
                          "request_timeout": {
                            "required": false,
                            "placeholder": "",
                            "show": false,
                            "multiline": false,
                            "password": false,
                            "name": "request_timeout",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "type": "float",
                            "list": false
                          },
                          "streaming": {
                            "required": false,
                            "placeholder": "",
                            "show": false,
                            "multiline": false,
                            "value": false,
                            "password": false,
                            "name": "streaming",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "type": "bool",
                            "list": false
                          },
                          "tags": {
                            "required": false,
                            "placeholder": "",
                            "show": false,
                            "multiline": false,
                            "password": false,
                            "name": "tags",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "type": "str",
                            "list": true
                          },
                          "temperature": {
                            "required": false,
                            "placeholder": "",
                            "show": true,
                            "multiline": false,
                            "value": 0.7,
                            "password": false,
                            "name": "temperature",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "type": "float",
                            "list": false
                          },
                          "tiktoken_model_name": {
                            "required": false,
                            "placeholder": "",
                            "show": false,
                            "multiline": false,
                            "password": false,
                            "name": "tiktoken_model_name",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "type": "str",
                            "list": false
                          },
                          "verbose": {
                            "required": false,
                            "placeholder": "",
                            "show": false,
                            "multiline": false,
                            "value": false,
                            "password": false,
                            "name": "verbose",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "type": "bool",
                            "list": false
                          },
                          "_type": "ChatOpenAI"
                        },
                        "description": "`OpenAI` Chat large language models API.",
                        "base_classes": [
                          "BaseChatModel",
                          "BaseLanguageModel",
                          "ChatOpenAI",
                          "BaseLLM"
                        ],
                        "display_name": "ChatOpenAI",
                        "custom_fields": {},
                        "output_types": [],
                        "documentation": "https://python.langchain.com/docs/modules/model_io/models/chat/integrations/openai",
                        "beta": false,
                        "error": null
                      },
                      "id": "ChatOpenAI-5MaFm"
                    },
                    "selected": true,
                    "dragging": false,
                    "positionAbsolute": {
                      "x": 880.5692501813826,
                      "y": 59.58244540558999
                    }
                  },
                  {
                    "width": 384,
                    "height": 339,
                    "id": "LLMChain-tVH7b",
                    "type": "genericNode",
                    "position": {
                      "x": 1421.622948027733,
                      "y": 75.44175267730185
                    },
                    "data": {
                      "type": "LLMChain",
                      "node": {
                        "template": {
                          "code": {
                            "dynamic": true,
                            "required": true,
                            "placeholder": "",
                            "show": false,
                            "multiline": true,
                            "value": "from typing import Callable, Optional, Union\n\nfrom langchain.chains import LLMChain\n\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import (\n    BaseLanguageModel,\n    BaseMemory,\n    BasePromptTemplate,\n    Chain,\n)\n\n\nclass LLMChainComponent(CustomComponent):\n    display_name = \"LLMChain\"\n    description = \"Chain to run queries against LLMs\"\n\n    def build_config(self):\n        return {\n            \"prompt\": {\"display_name\": \"Prompt\"},\n            \"llm\": {\"display_name\": \"LLM\"},\n            \"memory\": {\"display_name\": \"Memory\"},\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        prompt: BasePromptTemplate,\n        llm: BaseLanguageModel,\n        memory: Optional[BaseMemory] = None,\n    ) -> Union[Chain, Callable]:\n        return LLMChain(prompt=prompt, llm=llm, memory=memory)\n",
                            "password": false,
                            "name": "code",
                            "advanced": false,
                            "type": "code",
                            "list": false
                          },
                          "_type": "CustomComponent",
                          "llm": {
                            "required": true,
                            "placeholder": "",
                            "show": true,
                            "multiline": false,
                            "password": false,
                            "name": "llm",
                            "display_name": "LLM",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "type": "BaseLanguageModel",
                            "list": false
                          },
                          "memory": {
                            "required": false,
                            "placeholder": "",
                            "show": true,
                            "multiline": false,
                            "password": false,
                            "name": "memory",
                            "display_name": "Memory",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "type": "BaseMemory",
                            "list": false
                          },
                          "prompt": {
                            "required": true,
                            "placeholder": "",
                            "show": true,
                            "multiline": false,
                            "password": false,
                            "name": "prompt",
                            "display_name": "Prompt",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "type": "BasePromptTemplate",
                            "list": false
                          }
                        },
                        "description": "Chain to run queries against LLMs",
                        "base_classes": [
                          "Chain",
                          "Callable"
                        ],
                        "display_name": "LLMChain",
                        "custom_fields": {
                          "llm": null,
                          "memory": null,
                          "prompt": null
                        },
                        "output_types": [
                          "LLMChain"
                        ],
                        "documentation": "",
                        "beta": true,
                        "error": null
                      },
                      "id": "LLMChain-tVH7b"
                    },
                    "selected": true,
                    "positionAbsolute": {
                      "x": 1421.622948027733,
                      "y": 75.44175267730185
                    },
                    "dragging": false
                  }
                ],
                "edges": [
                  {
                    "source": "ChatOpenAI-5MaFm",
                    "sourceHandle": "{œbaseClassesœ:[œBaseChatModelœ,œBaseLanguageModelœ,œChatOpenAIœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-5MaFmœ}",
                    "target": "LLMChain-tVH7b",
                    "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œLLMChain-tVH7bœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}",
                    "data": {
                      "targetHandle": {
                        "fieldName": "llm",
                        "id": "LLMChain-tVH7b",
                        "inputTypes": null,
                        "type": "BaseLanguageModel"
                      },
                      "sourceHandle": {
                        "baseClasses": [
                          "BaseChatModel",
                          "BaseLanguageModel",
                          "ChatOpenAI",
                          "BaseLLM"
                        ],
                        "dataType": "ChatOpenAI",
                        "id": "ChatOpenAI-5MaFm"
                      }
                    },
                    "style": {
                      "stroke": "#555"
                    },
                    "className": "stroke-gray-900  stroke-connection",
                    "animated": false,
                    "id": "reactflow__edge-ChatOpenAI-5MaFm{œbaseClassesœ:[œBaseChatModelœ,œBaseLanguageModelœ,œChatOpenAIœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-5MaFmœ}-LLMChain-tVH7b{œfieldNameœ:œllmœ,œidœ:œLLMChain-tVH7bœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}",
                    "selected": true
                  }
                ],
                "viewport": {
                  "x": 168.47352424578798,
                  "y": 172.82191343441917,
                  "zoom": 0.5403627010196765
                }
              },
              "is_component": false,
              "name": "Joyous Pasteur",
              "description": "",
              "id": "fYTxi"
            },
            "official": false
          },
          "id": "LLMChain-HNuUr"
        },
        "selected": false,
        "positionAbsolute": {
          "x": 1168.1325155574266,
          "y": 270.20253697114623
        },
        "dragging": false
      }
    ],
    "edges": [
      {
        "source": "CustomComponent-z0WLA",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-z0WLAœ,œnameœ:œDocumentœ,œoutput_typesœ:[œDocumentœ]}",
        "target": "PromptTemplate-jQGwP",
        "targetHandle": "{œfieldNameœ:œdocumentœ,œidœ:œPromptTemplate-jQGwPœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}",
        "data": {
          "targetHandle": {
            "fieldName": "document",
            "id": "PromptTemplate-jQGwP",
            "inputTypes": [
              "Document",
              "BaseOutputParser"
            ],
            "type": "str"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-z0WLA",
            "name": "Document",
            "output_types": [
              "Document"
            ]
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "",
        "animated": false,
        "id": "reactflow__edge-CustomComponent-z0WLA{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-z0WLAœ,œnameœ:œDocumentœ,œoutput_typesœ:[œDocumentœ]}-PromptTemplate-jQGwP{œfieldNameœ:œdocumentœ,œidœ:œPromptTemplate-jQGwPœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}"
      },
      {
        "source": "PromptTemplate-jQGwP",
        "sourceHandle": "{œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-jQGwPœ,œnameœ:œœ,œoutput_typesœ:[null]}",
        "target": "LLMChain-HNuUr",
        "targetHandle": "{œfieldNameœ:œprompt_LLMChain-IUiMSœ,œidœ:œLLMChain-HNuUrœ,œinputTypesœ:null,œproxyœ:{œfieldœ:œpromptœ,œidœ:œLLMChain-tVH7bœ},œtypeœ:œBasePromptTemplateœ}",
        "data": {
          "targetHandle": {
            "fieldName": "prompt_LLMChain-IUiMS",
            "id": "LLMChain-HNuUr",
            "inputTypes": null,
            "proxy": {
              "field": "prompt",
              "id": "LLMChain-tVH7b"
            },
            "type": "BasePromptTemplate"
          },
          "sourceHandle": {
            "dataType": "PromptTemplate",
            "id": "PromptTemplate-jQGwP",
            "name": "",
            "output_types": [
              null
            ]
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "",
        "animated": false,
        "id": "reactflow__edge-PromptTemplate-jQGwP{œdataTypeœ:œPromptTemplateœ,œid��:œPromptTemplate-jQGwPœ,œnameœ:œœ,œoutput_typesœ:[null]}-LLMChain-HNuUr{œfieldNameœ:œprompt_LLMChain-IUiMSœ,œidœ:œLLMChain-HNuUrœ,œinputTypesœ:null,œproxyœ:{œfieldœ:œpromptœ,œidœ:œLLMChain-IUiMSœ},œtypeœ:œBasePromptTemplateœ}"
      }
    ],
    "viewport": {
      "x": 0,
      "y": 0,
      "zoom": 1
    }
  },
  "metadata": {
    "CustomComponent": {
      "count": 1
    },
    "PromptTemplate": {
      "count": 1
    },
    "LLMChain": {
      "count": 1
    },
    "total": 3
  },
  "original": {
    "id": "d72afee1-be28-4d61-bd96-2fb396006f0c",
    "name": "Small Document QA",
    "description": "Basic prompting to answer questions given a small document.",
    "is_component": false,
    "liked_by_count": "0",
    "downloads_count": "10",
    "metadata": {
      "CustomComponent": {
        "count": 1
      },
      "PromptTemplate": {
        "count": 1
      },
      "LLMChain": {
        "count": 1
      },
      "total": 3
    },
    "last_tested_version": "1.0.7",
    "private": false,
    "data": {
      "nodes": [
        {
          "width": 384,
          "height": 457,
          "id": "CustomComponent-z0WLA",
          "type": "genericNode",
          "position": {
            "x": 110,
            "y": 100.6953125
          },
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "code": {
                  "dynamic": true,
                  "required": true,
                  "placeholder": "",
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio import CustomComponent\nfrom langchain.schema import Document\nfrom typing import Any, Dict, List\n\nclass FileLoaderComponent(CustomComponent):\n    display_name: str = \"File Loader\"\n    description: str = \"A generic loader that auto-detects file types.\"\n    beta = True\n    loaders_info: List[Dict[str, Any]] = [\n    {\n        \"loader\": \"AirbyteJSONLoader\",\n        \"name\": \"Airbyte JSON (.jsonl)\",\n        \"import\": \"langchain.document_loaders.AirbyteJSONLoader\",\n        \"defaultFor\": [\"jsonl\"],\n        \"allowdTypes\": [\"jsonl\"],\n    },\n    {\n        \"loader\": \"JSONLoader\",\n        \"name\": \"JSON (.json)\",\n        \"import\": \"langchain.document_loaders.JSONLoader\",\n        \"defaultFor\": [\"json\"],\n        \"allowdTypes\": [\"json\"],\n    },\n    {\n        \"loader\": \"BSHTMLLoader\",\n        \"name\": \"BeautifulSoup4 HTML (.html, .htm)\",\n        \"import\": \"langchain.document_loaders.BSHTMLLoader\",\n        \"allowdTypes\": [\"html\", \"htm\"],\n    },\n    {\n        \"loader\": \"CSVLoader\",\n        \"name\": \"CSV (.csv)\",\n        \"import\": \"langchain.document_loaders.CSVLoader\",\n        \"defaultFor\": [\"csv\"],\n        \"allowdTypes\": [\"csv\"],\n    },\n    {\n        \"loader\": \"CoNLLULoader\",\n        \"name\": \"CoNLL-U (.conllu)\",\n        \"import\": \"langchain.document_loaders.CoNLLULoader\",\n        \"defaultFor\": [\"conllu\"],\n        \"allowdTypes\": [\"conllu\"],\n    },\n    {\n        \"loader\": \"EverNoteLoader\",\n        \"name\": \"EverNote (.enex)\",\n        \"import\": \"langchain.document_loaders.EverNoteLoader\",\n        \"defaultFor\": [\"enex\"],\n        \"allowdTypes\": [\"enex\"],\n    },\n    {\n        \"loader\": \"FacebookChatLoader\",\n        \"name\": \"Facebook Chat (.json)\",\n        \"import\": \"langchain.document_loaders.FacebookChatLoader\",\n        \"allowdTypes\": [\"json\"],\n    },\n    {\n        \"loader\": \"OutlookMessageLoader\",\n        \"name\": \"Outlook Message (.msg)\",\n        \"import\": \"langchain.document_loaders.OutlookMessageLoader\",\n        \"defaultFor\": [\"msg\"],\n        \"allowdTypes\": [\"msg\"],\n    },\n    {\n        \"loader\": \"PyPDFLoader\",\n        \"name\": \"PyPDF (.pdf)\",\n        \"import\": \"langchain.document_loaders.PyPDFLoader\",\n        \"defaultFor\": [\"pdf\"],\n        \"allowdTypes\": [\"pdf\"],\n    },\n    {\n        \"loader\": \"STRLoader\",\n        \"name\": \"Subtitle (.str)\",\n        \"import\": \"langchain.document_loaders.STRLoader\",\n        \"defaultFor\": [\"str\"],\n        \"allowdTypes\": [\"str\"],\n    },\n    {\n        \"loader\": \"TextLoader\",\n        \"name\": \"Text (.txt)\",\n        \"import\": \"langchain.document_loaders.TextLoader\",\n        \"defaultFor\": [\"txt\"],\n        \"allowdTypes\": [\"txt\"],\n    },\n    {\n        \"loader\": \"UnstructuredEmailLoader\",\n        \"name\": \"Unstructured Email (.eml)\",\n        \"import\": \"langchain.document_loaders.UnstructuredEmailLoader\",\n        \"defaultFor\": [\"eml\"],\n        \"allowdTypes\": [\"eml\"],\n    },\n    {\n        \"loader\": \"UnstructuredHTMLLoader\",\n        \"name\": \"Unstructured HTML (.html, .htm)\",\n        \"import\": \"langchain.document_loaders.UnstructuredHTMLLoader\",\n        \"defaultFor\": [\"html\", \"htm\"],\n        \"allowdTypes\": [\"html\", \"htm\"],\n    },\n    {\n        \"loader\": \"UnstructuredMarkdownLoader\",\n        \"name\": \"Unstructured Markdown (.md)\",\n        \"import\": \"langchain.document_loaders.UnstructuredMarkdownLoader\",\n        \"defaultFor\": [\"md\"],\n        \"allowdTypes\": [\"md\"],\n    },\n    {\n        \"loader\": \"UnstructuredPowerPointLoader\",\n        \"name\": \"Unstructured PowerPoint (.pptx)\",\n        \"import\": \"langchain.document_loaders.UnstructuredPowerPointLoader\",\n        \"defaultFor\": [\"pptx\"],\n        \"allowdTypes\": [\"pptx\"],\n    },\n    {\n        \"loader\": \"UnstructuredWordLoader\",\n        \"name\": \"Unstructured Word (.docx)\",\n        \"import\": \"langchain.document_loaders.UnstructuredWordLoader\",\n        \"defaultFor\": [\"docx\"],\n        \"allowdTypes\": [\"docx\"],\n    },\n]\n\n    def build_config(self):\n        loader_options = [\"Automatic\"] + [\n            loader_info[\"name\"] for loader_info in self.loaders_info\n        ]\n\n        file_types = []\n        suffixes = []\n\n        for loader_info in self.loaders_info:\n            if \"allowedTypes\" in loader_info:\n                file_types.extend(loader_info[\"allowedTypes\"])\n                suffixes.extend([f\".{ext}\" for ext in loader_info[\"allowedTypes\"]])\n\n        return {\n            \"file_path\": {\n                \"display_name\": \"File Path\",\n                \"required\": True,\n                \"field_type\": \"file\",\n                \"file_types\": [\n                    \"json\",\n                    \"txt\",\n                    \"csv\",\n                    \"jsonl\",\n                    \"html\",\n                    \"htm\",\n                    \"conllu\",\n                    \"enex\",\n                    \"msg\",\n                    \"pdf\",\n                    \"srt\",\n                    \"eml\",\n                    \"md\",\n                    \"pptx\",\n                    \"docx\",\n                ],\n                \"suffixes\": [\n                    \".json\",\n                    \".txt\",\n                    \".csv\",\n                    \".jsonl\",\n                    \".html\",\n                    \".htm\",\n                    \".conllu\",\n                    \".enex\",\n                    \".msg\",\n                    \".pdf\",\n                    \".srt\",\n                    \".eml\",\n                    \".md\",\n                    \".pptx\",\n                    \".docx\",\n                ],\n                # \"file_types\" : file_types,\n                # \"suffixes\": suffixes,\n            },\n            \"loader\": {\n                \"display_name\": \"Loader\",\n                \"is_list\": True,\n                \"required\": True,\n                \"options\": loader_options,\n                \"value\": \"Automatic\",\n            },\n        }\n\n    def build(self, file_path: str, loader: str) -> Document:\n        file_type = file_path.split(\".\")[-1]\n\n        # Mapeie o nome do loader selecionado para suas informações\n        selected_loader_info = None\n        for loader_info in self.loaders_info:\n            if loader_info[\"name\"] == loader:\n                selected_loader_info = loader_info\n                break\n\n        if selected_loader_info is None and loader != \"Automatic\":\n            raise ValueError(f\"Loader {loader} not found in the loader info list\")\n\n        if loader == \"Automatic\":\n            # Determine o loader automaticamente com base na extensão do arquivo\n            default_loader_info = None\n            for info in self.loaders_info:\n                if \"defaultFor\" in info and file_type in info[\"defaultFor\"]:\n                    default_loader_info = info\n                    break\n\n            if default_loader_info is None:\n                raise ValueError(f\"No default loader found for file type: {file_type}\")\n\n            selected_loader_info = default_loader_info\n        if isinstance(selected_loader_info, dict):\n            loader_import: str = selected_loader_info[\"import\"]\n        else:\n            raise ValueError(\n                f\"Loader info for {loader} is not a dict\\nLoader info:\\n{selected_loader_info}\"\n            )\n        module_name, class_name = loader_import.rsplit(\".\", 1)\n\n        try:\n            # Importe o loader dinamicamente\n            loader_module = __import__(module_name, fromlist=[class_name])\n            loader_instance = getattr(loader_module, class_name)\n        except ImportError as e:\n            raise ValueError(\n                f\"Loader {loader} could not be imported\\nLoader info:\\n{selected_loader_info}\"\n            ) from e\n\n        result = loader_instance(file_path=file_path)\n        result = result.load()\n        self.status = result\n        return result",
                  "password": false,
                  "name": "code",
                  "advanced": false,
                  "type": "code",
                  "list": false
                },
                "_type": "CustomComponent",
                "file_path": {
                  "required": true,
                  "placeholder": "",
                  "show": true,
                  "multiline": false,
                  "password": false,
                  "name": "file_path",
                  "display_name": "File Path",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "file",
                  "list": false,
                  "fileTypes": [
                    "json",
                    "txt",
                    "csv",
                    "jsonl",
                    "html",
                    "htm",
                    "conllu",
                    "enex",
                    "msg",
                    "pdf",
                    "srt",
                    "eml",
                    "md",
                    "pptx",
                    "docx"
                  ],
                  "file_path": null,
                  "value": ""
                },
                "loader": {
                  "required": true,
                  "placeholder": "",
                  "show": true,
                  "multiline": false,
                  "value": "Automatic",
                  "password": false,
                  "options": [
                    "Automatic",
                    "Airbyte JSON (.jsonl)",
                    "JSON (.json)",
                    "BeautifulSoup4 HTML (.html, .htm)",
                    "CSV (.csv)",
                    "CoNLL-U (.conllu)",
                    "EverNote (.enex)",
                    "Facebook Chat (.json)",
                    "Outlook Message (.msg)",
                    "PyPDF (.pdf)",
                    "Subtitle (.str)",
                    "Text (.txt)",
                    "Unstructured Email (.eml)",
                    "Unstructured HTML (.html, .htm)",
                    "Unstructured Markdown (.md)",
                    "Unstructured PowerPoint (.pptx)",
                    "Unstructured Word (.docx)"
                  ],
                  "name": "loader",
                  "display_name": "Loader",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "str",
                  "list": true
                }
              },
              "description": "A generic loader that auto-detects file types.",
              "base_classes": [
                "Document"
              ],
              "display_name": "File Loader",
              "custom_fields": {
                "file_path": null,
                "loader": null
              },
              "output_types": [
                "Document"
              ],
              "documentation": "",
              "beta": true,
              "error": null,
              "official": false,
              "outputs": [
                {
                  "types": [
                    "Document"
                  ],
                  "selected": "Document",
                  "name": "Document",
                  "display_name": "Document",
                  "hidden": false
                }
              ]
            },
            "id": "CustomComponent-z0WLA"
          },
          "selected": false,
          "positionAbsolute": {
            "x": 110,
            "y": 100.6953125
          },
          "dragging": false
        },
        {
          "width": 384,
          "height": 469,
          "id": "PromptTemplate-jQGwP",
          "type": "genericNode",
          "position": {
            "x": 651.3914617750878,
            "y": 170.71291470481205
          },
          "data": {
            "type": "PromptTemplate",
            "node": {
              "template": {
                "output_parser": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "output_parser",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "type": "BaseOutputParser",
                  "list": false
                },
                "input_types": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "input_types",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "type": "dict",
                  "list": false
                },
                "input_variables": {
                  "required": true,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "input_variables",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "type": "str",
                  "list": true,
                  "value": [
                    "document",
                    "question"
                  ]
                },
                "partial_variables": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "partial_variables",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "type": "dict",
                  "list": false
                },
                "template": {
                  "required": true,
                  "placeholder": "",
                  "show": true,
                  "multiline": true,
                  "password": false,
                  "name": "template",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "type": "prompt",
                  "list": false,
                  "value": "Answer user's questions based on the document below:\n\n---\n\n{document}\n\n---\n\nQuestion:\n{question}\n\nAnswer:\n"
                },
                "template_format": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "value": "f-string",
                  "password": false,
                  "name": "template_format",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "type": "str",
                  "list": false
                },
                "validate_template": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "value": false,
                  "password": false,
                  "name": "validate_template",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "type": "bool",
                  "list": false
                },
                "_type": "PromptTemplate",
                "document": {
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "multiline": true,
                  "value": "",
                  "password": false,
                  "name": "document",
                  "display_name": "document",
                  "advanced": false,
                  "input_types": [
                    "Document",
                    "BaseOutputParser"
                  ],
                  "dynamic": false,
                  "info": "",
                  "type": "str",
                  "list": false
                },
                "question": {
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "multiline": true,
                  "value": "",
                  "password": false,
                  "name": "question",
                  "display_name": "question",
                  "advanced": false,
                  "input_types": [
                    "Document",
                    "BaseOutputParser"
                  ],
                  "dynamic": false,
                  "info": "",
                  "type": "str",
                  "list": false
                }
              },
              "description": "A prompt template for a language model.",
              "base_classes": [
                "StringPromptTemplate",
                "BasePromptTemplate",
                "PromptTemplate"
              ],
              "name": "",
              "display_name": "PromptTemplate",
              "documentation": "https://python.langchain.com/docs/modules/model_io/prompts/prompt_templates/",
              "custom_fields": {
                "": [
                  "document",
                  "question"
                ]
              },
              "output_types": [],
              "full_path": null,
              "field_formatters": {},
              "beta": false,
              "error": null,
              "outputs": [
                {
                  "types": [],
                  "name": "",
                  "display_name": "",
                  "hidden": false
                }
              ]
            },
            "id": "PromptTemplate-jQGwP"
          },
          "selected": false,
          "positionAbsolute": {
            "x": 651.3914617750878,
            "y": 170.71291470481205
          },
          "dragging": false
        },
        {
          "width": 384,
          "height": 553,
          "id": "LLMChain-HNuUr",
          "type": "genericNode",
          "position": {
            "x": 1168.1325155574266,
            "y": 270.20253697114623
          },
          "data": {
            "type": "LLMChain",
            "node": {
              "output_types": [
                "LLMChain"
              ],
              "display_name": "OpenAI Runner",
              "documentation": "",
              "base_classes": [
                "Chain",
                "Callable"
              ],
              "description": "double click to edit description",
              "template": {
                "callbacks_ChatOpenAI-UUprY": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "callbacks",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "langchain_core.callbacks.base.BaseCallbackHandler",
                  "list": true,
                  "proxy": {
                    "id": "ChatOpenAI-5MaFm",
                    "field": "callbacks"
                  },
                  "display_name": "Callbacks"
                },
                "async_client_ChatOpenAI-UUprY": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "async_client",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "Any",
                  "list": false,
                  "proxy": {
                    "id": "ChatOpenAI-5MaFm",
                    "field": "async_client"
                  },
                  "display_name": "Async Client"
                },
                "cache_ChatOpenAI-UUprY": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "cache",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "type": "bool",
                  "list": false,
                  "proxy": {
                    "id": "ChatOpenAI-5MaFm",
                    "field": "cache"
                  },
                  "display_name": "Cache"
                },
                "client_ChatOpenAI-UUprY": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "client",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "Any",
                  "list": false,
                  "proxy": {
                    "id": "ChatOpenAI-5MaFm",
                    "field": "client"
                  },
                  "display_name": "Client"
                },
                "default_headers_ChatOpenAI-UUprY": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "default_headers",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "type": "dict",
                  "list": false,
                  "proxy": {
                    "id": "ChatOpenAI-5MaFm",
                    "field": "default_headers"
                  },
                  "display_name": "Default Headers"
                },
                "default_query_ChatOpenAI-UUprY": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "default_query",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "type": "dict",
                  "list": false,
                  "proxy": {
                    "id": "ChatOpenAI-5MaFm",
                    "field": "default_query"
                  },
                  "display_name": "Default Query"
                },
                "http_client_ChatOpenAI-UUprY": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "http_client",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "Any",
                  "list": false,
                  "proxy": {
                    "id": "ChatOpenAI-5MaFm",
                    "field": "http_client"
                  },
                  "display_name": "Http Client"
                },
                "max_retries_ChatOpenAI-UUprY": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "value": 2,
                  "password": false,
                  "name": "max_retries",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "type": "int",
                  "list": false,
                  "proxy": {
                    "id": "ChatOpenAI-5MaFm",
                    "field": "max_retries"
                  },
                  "display_name": "Max Retries"
                },
                "max_tokens_ChatOpenAI-UUprY": {
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "multiline": false,
                  "password": true,
                  "name": "max_tokens",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "type": "int",
                  "list": false,
                  "proxy": {
                    "id": "ChatOpenAI-5MaFm",
                    "field": "max_tokens"
                  },
                  "display_name": "Max Tokens",
                  "value": ""
                },
                "metadata_ChatOpenAI-UUprY": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "metadata",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "type": "dict",
                  "list": false,
                  "proxy": {
                    "id": "ChatOpenAI-5MaFm",
                    "field": "metadata"
                  },
                  "display_name": "Metadata"
                },
                "model_kwargs_ChatOpenAI-UUprY": {
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "multiline": false,
                  "password": false,
                  "name": "model_kwargs",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "type": "dict",
                  "list": false,
                  "proxy": {
                    "id": "ChatOpenAI-5MaFm",
                    "field": "model_kwargs"
                  },
                  "display_name": "Model Kwargs"
                },
                "model_name_ChatOpenAI-UUprY": {
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "multiline": false,
                  "value": "gpt-4-1106-preview",
                  "password": false,
                  "options": [
                    "gpt-4-1106-preview",
                    "gpt-4-vision-preview",
                    "gpt-4",
                    "gpt-4-32k",
                    "gpt-3.5-turbo",
                    "gpt-3.5-turbo-16k"
                  ],
                  "name": "model_name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "str",
                  "list": true,
                  "proxy": {
                    "id": "ChatOpenAI-5MaFm",
                    "field": "model_name"
                  },
                  "display_name": "Model Name"
                },
                "n_ChatOpenAI-UUprY": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "value": 1,
                  "password": false,
                  "name": "n",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "type": "int",
                  "list": false,
                  "proxy": {
                    "id": "ChatOpenAI-5MaFm",
                    "field": "n"
                  },
                  "display_name": "N"
                },
                "openai_api_base_ChatOpenAI-UUprY": {
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "multiline": false,
                  "password": false,
                  "name": "openai_api_base",
                  "display_name": "OpenAI API Base",
                  "advanced": true,
                  "dynamic": false,
                  "info": "\nThe base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.\n",
                  "type": "str",
                  "list": false,
                  "proxy": {
                    "id": "ChatOpenAI-5MaFm",
                    "field": "openai_api_base"
                  }
                },
                "openai_api_key_ChatOpenAI-UUprY": {
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "multiline": false,
                  "value": "",
                  "password": true,
                  "name": "openai_api_key",
                  "display_name": "OpenAI API Key",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "str",
                  "list": false,
                  "proxy": {
                    "id": "ChatOpenAI-5MaFm",
                    "field": "openai_api_key"
                  }
                },
                "openai_organization_ChatOpenAI-UUprY": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "openai_organization",
                  "display_name": "OpenAI Organization",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "type": "str",
                  "list": false,
                  "proxy": {
                    "id": "ChatOpenAI-5MaFm",
                    "field": "openai_organization"
                  }
                },
                "openai_proxy_ChatOpenAI-UUprY": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "openai_proxy",
                  "display_name": "OpenAI Proxy",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "type": "str",
                  "list": false,
                  "proxy": {
                    "id": "ChatOpenAI-5MaFm",
                    "field": "openai_proxy"
                  }
                },
                "request_timeout_ChatOpenAI-UUprY": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "request_timeout",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "type": "float",
                  "list": false,
                  "proxy": {
                    "id": "ChatOpenAI-5MaFm",
                    "field": "request_timeout"
                  },
                  "display_name": "Request Timeout"
                },
                "streaming_ChatOpenAI-UUprY": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "value": false,
                  "password": false,
                  "name": "streaming",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "type": "bool",
                  "list": false,
                  "proxy": {
                    "id": "ChatOpenAI-5MaFm",
                    "field": "streaming"
                  },
                  "display_name": "Streaming"
                },
                "tags_ChatOpenAI-UUprY": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "tags",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "type": "str",
                  "list": true,
                  "proxy": {
                    "id": "ChatOpenAI-5MaFm",
                    "field": "tags"
                  },
                  "display_name": "Tags"
                },
                "temperature_ChatOpenAI-UUprY": {
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "multiline": false,
                  "value": "0.1",
                  "password": false,
                  "name": "temperature",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "float",
                  "list": false,
                  "proxy": {
                    "id": "ChatOpenAI-5MaFm",
                    "field": "temperature"
                  },
                  "display_name": "Temperature"
                },
                "tiktoken_model_name_ChatOpenAI-UUprY": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "tiktoken_model_name",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "type": "str",
                  "list": false,
                  "proxy": {
                    "id": "ChatOpenAI-5MaFm",
                    "field": "tiktoken_model_name"
                  },
                  "display_name": "Tiktoken Model Name"
                },
                "verbose_ChatOpenAI-UUprY": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "value": false,
                  "password": false,
                  "name": "verbose",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "type": "bool",
                  "list": false,
                  "proxy": {
                    "id": "ChatOpenAI-5MaFm",
                    "field": "verbose"
                  },
                  "display_name": "Verbose"
                },
                "code_LLMChain-IUiMS": {
                  "dynamic": true,
                  "required": true,
                  "placeholder": "",
                  "show": false,
                  "multiline": true,
                  "value": "from typing import Callable, Optional, Union\n\nfrom langchain.chains import LLMChain\n\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import (\n    BaseLanguageModel,\n    BaseMemory,\n    BasePromptTemplate,\n    Chain,\n)\n\n\nclass LLMChainComponent(CustomComponent):\n    display_name = \"LLMChain\"\n    description = \"Chain to run queries against LLMs\"\n\n    def build_config(self):\n        return {\n            \"prompt\": {\"display_name\": \"Prompt\"},\n            \"llm\": {\"display_name\": \"LLM\"},\n            \"memory\": {\"display_name\": \"Memory\"},\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        prompt: BasePromptTemplate,\n        llm: BaseLanguageModel,\n        memory: Optional[BaseMemory] = None,\n    ) -> Union[Chain, Callable]:\n        return LLMChain(prompt=prompt, llm=llm, memory=memory)\n",
                  "password": false,
                  "name": "code",
                  "advanced": false,
                  "type": "code",
                  "list": false,
                  "proxy": {
                    "id": "LLMChain-tVH7b",
                    "field": "code"
                  },
                  "display_name": "Code"
                },
                "memory_LLMChain-IUiMS": {
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "multiline": false,
                  "password": false,
                  "name": "memory",
                  "display_name": "Memory",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "BaseMemory",
                  "list": false,
                  "proxy": {
                    "id": "LLMChain-tVH7b",
                    "field": "memory"
                  }
                },
                "prompt_LLMChain-IUiMS": {
                  "required": true,
                  "placeholder": "",
                  "show": true,
                  "multiline": false,
                  "password": false,
                  "name": "prompt",
                  "display_name": "Prompt",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "BasePromptTemplate",
                  "list": false,
                  "proxy": {
                    "id": "LLMChain-tVH7b",
                    "field": "prompt"
                  }
                }
              },
              "flow": {
                "data": {
                  "nodes": [
                    {
                      "width": 384,
                      "height": 629,
                      "id": "ChatOpenAI-5MaFm",
                      "type": "genericNode",
                      "position": {
                        "x": 880.5692501813826,
                        "y": 59.58244540558999
                      },
                      "data": {
                        "type": "ChatOpenAI",
                        "node": {
                          "template": {
                            "callbacks": {
                              "required": false,
                              "placeholder": "",
                              "show": false,
                              "multiline": false,
                              "password": false,
                              "name": "callbacks",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "type": "langchain_core.callbacks.base.BaseCallbackHandler",
                              "list": true
                            },
                            "async_client": {
                              "required": false,
                              "placeholder": "",
                              "show": false,
                              "multiline": false,
                              "password": false,
                              "name": "async_client",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "type": "Any",
                              "list": false
                            },
                            "cache": {
                              "required": false,
                              "placeholder": "",
                              "show": false,
                              "multiline": false,
                              "password": false,
                              "name": "cache",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "type": "bool",
                              "list": false
                            },
                            "client": {
                              "required": false,
                              "placeholder": "",
                              "show": false,
                              "multiline": false,
                              "password": false,
                              "name": "client",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "type": "Any",
                              "list": false
                            },
                            "default_headers": {
                              "required": false,
                              "placeholder": "",
                              "show": false,
                              "multiline": false,
                              "password": false,
                              "name": "default_headers",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "type": "dict",
                              "list": false
                            },
                            "default_query": {
                              "required": false,
                              "placeholder": "",
                              "show": false,
                              "multiline": false,
                              "password": false,
                              "name": "default_query",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "type": "dict",
                              "list": false
                            },
                            "http_client": {
                              "required": false,
                              "placeholder": "",
                              "show": false,
                              "multiline": false,
                              "password": false,
                              "name": "http_client",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "type": "Any",
                              "list": false
                            },
                            "max_retries": {
                              "required": false,
                              "placeholder": "",
                              "show": false,
                              "multiline": false,
                              "value": 2,
                              "password": false,
                              "name": "max_retries",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "type": "int",
                              "list": false
                            },
                            "max_tokens": {
                              "required": false,
                              "placeholder": "",
                              "show": true,
                              "multiline": false,
                              "password": true,
                              "name": "max_tokens",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "type": "int",
                              "list": false
                            },
                            "metadata": {
                              "required": false,
                              "placeholder": "",
                              "show": false,
                              "multiline": false,
                              "password": false,
                              "name": "metadata",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "type": "dict",
                              "list": false
                            },
                            "model_kwargs": {
                              "required": false,
                              "placeholder": "",
                              "show": true,
                              "multiline": false,
                              "password": false,
                              "name": "model_kwargs",
                              "advanced": true,
                              "dynamic": false,
                              "info": "",
                              "type": "dict",
                              "list": false
                            },
                            "model_name": {
                              "required": false,
                              "placeholder": "",
                              "show": true,
                              "multiline": false,
                              "value": "gpt-3.5-turbo",
                              "password": false,
                              "options": [
                                "gpt-4-1106-preview",
                                "gpt-4-vision-preview",
                                "gpt-4",
                                "gpt-4-32k",
                                "gpt-3.5-turbo",
                                "gpt-3.5-turbo-16k"
                              ],
                              "name": "model_name",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "type": "str",
                              "list": true
                            },
                            "n": {
                              "required": false,
                              "placeholder": "",
                              "show": false,
                              "multiline": false,
                              "value": 1,
                              "password": false,
                              "name": "n",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "type": "int",
                              "list": false
                            },
                            "openai_api_base": {
                              "required": false,
                              "placeholder": "",
                              "show": true,
                              "multiline": false,
                              "password": false,
                              "name": "openai_api_base",
                              "display_name": "OpenAI API Base",
                              "advanced": false,
                              "dynamic": false,
                              "info": "\nThe base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.\n",
                              "type": "str",
                              "list": false
                            },
                            "openai_api_key": {
                              "required": false,
                              "placeholder": "",
                              "show": true,
                              "multiline": false,
                              "value": "",
                              "password": true,
                              "name": "openai_api_key",
                              "display_name": "OpenAI API Key",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "type": "str",
                              "list": false
                            },
                            "openai_organization": {
                              "required": false,
                              "placeholder": "",
                              "show": false,
                              "multiline": false,
                              "password": false,
                              "name": "openai_organization",
                              "display_name": "OpenAI Organization",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "type": "str",
                              "list": false
                            },
                            "openai_proxy": {
                              "required": false,
                              "placeholder": "",
                              "show": false,
                              "multiline": false,
                              "password": false,
                              "name": "openai_proxy",
                              "display_name": "OpenAI Proxy",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "type": "str",
                              "list": false
                            },
                            "request_timeout": {
                              "required": false,
                              "placeholder": "",
                              "show": false,
                              "multiline": false,
                              "password": false,
                              "name": "request_timeout",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "type": "float",
                              "list": false
                            },
                            "streaming": {
                              "required": false,
                              "placeholder": "",
                              "show": false,
                              "multiline": false,
                              "value": false,
                              "password": false,
                              "name": "streaming",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "type": "bool",
                              "list": false
                            },
                            "tags": {
                              "required": false,
                              "placeholder": "",
                              "show": false,
                              "multiline": false,
                              "password": false,
                              "name": "tags",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "type": "str",
                              "list": true
                            },
                            "temperature": {
                              "required": false,
                              "placeholder": "",
                              "show": true,
                              "multiline": false,
                              "value": 0.7,
                              "password": false,
                              "name": "temperature",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "type": "float",
                              "list": false
                            },
                            "tiktoken_model_name": {
                              "required": false,
                              "placeholder": "",
                              "show": false,
                              "multiline": false,
                              "password": false,
                              "name": "tiktoken_model_name",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "type": "str",
                              "list": false
                            },
                            "verbose": {
                              "required": false,
                              "placeholder": "",
                              "show": false,
                              "multiline": false,
                              "value": false,
                              "password": false,
                              "name": "verbose",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "type": "bool",
                              "list": false
                            },
                            "_type": "ChatOpenAI"
                          },
                          "description": "`OpenAI` Chat large language models API.",
                          "base_classes": [
                            "BaseChatModel",
                            "BaseLanguageModel",
                            "ChatOpenAI",
                            "BaseLLM"
                          ],
                          "display_name": "ChatOpenAI",
                          "custom_fields": {},
                          "output_types": [],
                          "documentation": "https://python.langchain.com/docs/modules/model_io/models/chat/integrations/openai",
                          "beta": false,
                          "error": null
                        },
                        "id": "ChatOpenAI-5MaFm"
                      },
                      "selected": true,
                      "dragging": false,
                      "positionAbsolute": {
                        "x": 880.5692501813826,
                        "y": 59.58244540558999
                      }
                    },
                    {
                      "width": 384,
                      "height": 339,
                      "id": "LLMChain-tVH7b",
                      "type": "genericNode",
                      "position": {
                        "x": 1421.622948027733,
                        "y": 75.44175267730185
                      },
                      "data": {
                        "type": "LLMChain",
                        "node": {
                          "template": {
                            "code": {
                              "dynamic": true,
                              "required": true,
                              "placeholder": "",
                              "show": false,
                              "multiline": true,
                              "value": "from typing import Callable, Optional, Union\n\nfrom langchain.chains import LLMChain\n\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import (\n    BaseLanguageModel,\n    BaseMemory,\n    BasePromptTemplate,\n    Chain,\n)\n\n\nclass LLMChainComponent(CustomComponent):\n    display_name = \"LLMChain\"\n    description = \"Chain to run queries against LLMs\"\n\n    def build_config(self):\n        return {\n            \"prompt\": {\"display_name\": \"Prompt\"},\n            \"llm\": {\"display_name\": \"LLM\"},\n            \"memory\": {\"display_name\": \"Memory\"},\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        prompt: BasePromptTemplate,\n        llm: BaseLanguageModel,\n        memory: Optional[BaseMemory] = None,\n    ) -> Union[Chain, Callable]:\n        return LLMChain(prompt=prompt, llm=llm, memory=memory)\n",
                              "password": false,
                              "name": "code",
                              "advanced": false,
                              "type": "code",
                              "list": false
                            },
                            "_type": "CustomComponent",
                            "llm": {
                              "required": true,
                              "placeholder": "",
                              "show": true,
                              "multiline": false,
                              "password": false,
                              "name": "llm",
                              "display_name": "LLM",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "type": "BaseLanguageModel",
                              "list": false
                            },
                            "memory": {
                              "required": false,
                              "placeholder": "",
                              "show": true,
                              "multiline": false,
                              "password": false,
                              "name": "memory",
                              "display_name": "Memory",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "type": "BaseMemory",
                              "list": false
                            },
                            "prompt": {
                              "required": true,
                              "placeholder": "",
                              "show": true,
                              "multiline": false,
                              "password": false,
                              "name": "prompt",
                              "display_name": "Prompt",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "type": "BasePromptTemplate",
                              "list": false
                            }
                          },
                          "description": "Chain to run queries against LLMs",
                          "base_classes": [
                            "Chain",
                            "Callable"
                          ],
                          "display_name": "LLMChain",
                          "custom_fields": {
                            "llm": null,
                            "memory": null,
                            "prompt": null
                          },
                          "output_types": [
                            "LLMChain"
                          ],
                          "documentation": "",
                          "beta": true,
                          "error": null
                        },
                        "id": "LLMChain-tVH7b"
                      },
                      "selected": true,
                      "positionAbsolute": {
                        "x": 1421.622948027733,
                        "y": 75.44175267730185
                      },
                      "dragging": false
                    }
                  ],
                  "edges": [
                    {
                      "source": "ChatOpenAI-5MaFm",
                      "sourceHandle": "{œbaseClassesœ:[œBaseChatModelœ,œBaseLanguageModelœ,œChatOpenAIœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-5MaFmœ}",
                      "target": "LLMChain-tVH7b",
                      "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œLLMChain-tVH7bœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}",
                      "data": {
                        "targetHandle": {
                          "fieldName": "llm",
                          "id": "LLMChain-tVH7b",
                          "inputTypes": null,
                          "type": "BaseLanguageModel"
                        },
                        "sourceHandle": {
                          "baseClasses": [
                            "BaseChatModel",
                            "BaseLanguageModel",
                            "ChatOpenAI",
                            "BaseLLM"
                          ],
                          "dataType": "ChatOpenAI",
                          "id": "ChatOpenAI-5MaFm"
                        }
                      },
                      "style": {
                        "stroke": "#555"
                      },
                      "className": "stroke-gray-900  stroke-connection",
                      "animated": false,
                      "id": "reactflow__edge-ChatOpenAI-5MaFm{œbaseClassesœ:[œBaseChatModelœ,œBaseLanguageModelœ,œChatOpenAIœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-5MaFmœ}-LLMChain-tVH7b{œfieldNameœ:œllmœ,œidœ:œLLMChain-tVH7bœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}",
                      "selected": true
                    }
                  ],
                  "viewport": {
                    "x": 168.47352424578798,
                    "y": 172.82191343441917,
                    "zoom": 0.5403627010196765
                  }
                },
                "is_component": false,
                "name": "Joyous Pasteur",
                "description": "",
                "id": "fYTxi"
              },
              "official": false
            },
            "id": "LLMChain-HNuUr"
          },
          "selected": false,
          "positionAbsolute": {
            "x": 1168.1325155574266,
            "y": 270.20253697114623
          },
          "dragging": false
        }
      ],
      "edges": [
        {
          "source": "CustomComponent-z0WLA",
          "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-z0WLAœ,œnameœ:œDocumentœ,œoutput_typesœ:[œDocumentœ]}",
          "target": "PromptTemplate-jQGwP",
          "targetHandle": "{œfieldNameœ:œdocumentœ,œidœ:œPromptTemplate-jQGwPœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}",
          "data": {
            "targetHandle": {
              "fieldName": "document",
              "id": "PromptTemplate-jQGwP",
              "inputTypes": [
                "Document",
                "BaseOutputParser"
              ],
              "type": "str"
            },
            "sourceHandle": {
              "dataType": "CustomComponent",
              "id": "CustomComponent-z0WLA",
              "name": "Document",
              "output_types": [
                "Document"
              ]
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "",
          "animated": false,
          "id": "reactflow__edge-CustomComponent-z0WLA{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-z0WLAœ,œnameœ:œDocumentœ,œoutput_typesœ:[œDocumentœ]}-PromptTemplate-jQGwP{œfieldNameœ:œdocumentœ,œidœ:œPromptTemplate-jQGwPœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}"
        },
        {
          "source": "PromptTemplate-jQGwP",
          "sourceHandle": "{œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-jQGwPœ,œnameœ:œœ,œoutput_typesœ:[null]}",
          "target": "LLMChain-HNuUr",
          "targetHandle": "{œfieldNameœ:œprompt_LLMChain-IUiMSœ,œidœ:œLLMChain-HNuUrœ,œinputTypesœ:null,œproxyœ:{œfieldœ:œpromptœ,œidœ:œLLMChain-tVH7bœ},œtypeœ:œBasePromptTemplateœ}",
          "data": {
            "targetHandle": {
              "fieldName": "prompt_LLMChain-IUiMS",
              "id": "LLMChain-HNuUr",
              "inputTypes": null,
              "proxy": {
                "field": "prompt",
                "id": "LLMChain-tVH7b"
              },
              "type": "BasePromptTemplate"
            },
            "sourceHandle": {
              "dataType": "PromptTemplate",
              "id": "PromptTemplate-jQGwP",
              "name": "",
              "output_types": [
                null
              ]
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "",
          "animated": false,
          "id": "reactflow__edge-PromptTemplate-jQGwP{œdataTypeœ:œPromptTemplateœ,œid��:œPromptTemplate-jQGwPœ,œnameœ:œœ,œoutput_typesœ:[null]}-LLMChain-HNuUr{œfieldNameœ:œprompt_LLMChain-IUiMSœ,œidœ:œLLMChain-HNuUrœ,œinputTypesœ:null,œproxyœ:{œfieldœ:œpromptœ,œidœ:œLLMChain-IUiMSœ},œtypeœ:œBasePromptTemplateœ}"
        }
      ],
      "viewport": {
        "x": 0,
        "y": 0,
        "zoom": 1
      }
    },
    "date_created": "2024-07-26T08:20:44.850Z",
    "date_updated": "2024-07-26T08:32:28.637Z",
    "status": "Public",
    "sort": null,
    "user_updated": "e8af2b46-9355-4b04-803d-1b2c71397a68",
    "user_created": {
      "username": "智链",
      "first_name": "qh",
      "last_name": "zheng",
      "id": "e8af2b46-9355-4b04-803d-1b2c71397a68"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:06.304Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 10,
    "converter_version": "1.0.0"
  }
}