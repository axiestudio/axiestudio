{
  "id": "2045ccd3-8086-4a68-a990-b456417838b3",
  "name": "WB - Youtube IFrame",
  "description": "Cria o IFrame de um link do youtube para exibição em página web. (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "FLOW",
  "is_component": false,
  "author": {
    "username": "wagner",
    "first_name": "Wagner",
    "last_name": "Bittencourt",
    "id": "00808143-7274-457d-a5b8-75c89231a3dd",
    "full_name": "Wagner Bittencourt"
  },
  "store_url": "https://www.langflow.store/store/component/2045ccd3-8086-4a68-a990-b456417838b3",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-09-11T22:43:01.548Z",
    "updated": "2024-09-11T22:43:01.587Z",
    "downloaded": "2025-08-19T17:50:06.981Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "1.0.16",
    "private": false,
    "status": "Public"
  },
  "data": {
    "nodes": [
      {
        "id": "YouTubeVideoDisplayComponent-hSiSo",
        "type": "genericNode",
        "position": {
          "x": 852,
          "y": 265.21875
        },
        "data": {
          "type": "YouTubeVideoDisplayComponent",
          "node": {
            "template": {
              "_type": "Component",
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio.custom import Component\nfrom axiestudio.inputs import MessageTextInput\nfrom axiestudio.template import Output\n\nclass YouTubeVideoDisplayComponent(Component):\n    display_name = \"YouTube Video Display\"\n    description = \"Displays a YouTube video in the output.\"\n    icon = \"youtube\"  # Optional: Add an icon that represents this component\n\n    inputs = [\n        MessageTextInput(\n            name=\"url\",\n            display_name=\"YouTube URL\",\n            info=\"URL of the YouTube video.\",\n\n        ),\n    ]\n\n    outputs = [\n        Output(display_name=\"HTML Output\", name=\"html_output\", method=\"generate_html\"),\n    ]\n\n    def generate_html(self) -> str:\n        # Verifica se a URL foi corretamente atribuída\n        if not hasattr(self, 'url') or not self.url:\n            raise ValueError(\"URL não foi fornecida ou está vazia. Certifique-se de preencher o campo corretamente.\")\n        \n        # Extrai o ID do vídeo do URL fornecido\n        video_id = self.extract_video_id(self.url)\n        \n        # Gera o código HTML para incorporar o vídeo do YouTube\n        html_output = f\"\"\"\n        <iframe width=\"560\" height=\"315\" \n                src=\"https://www.youtube.com/embed/{video_id}\" \n                title=\"YouTube video player\" \n                frameborder=\"0\" \n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" \n                allowfullscreen>\n        </iframe>\n        \"\"\"\n        return html_output\n\n    def extract_video_id(self, url: str) -> str:\n        # Este método extrai o ID do vídeo de uma URL do YouTube\n        if \"youtube.com/watch?v=\" in url:\n            return url.split(\"v=\")[1]\n        elif \"youtu.be/\" in url:\n            return url.split(\"youtu.be/\")[1]\n        else:\n            raise ValueError(\"URL do YouTube inválida. Por favor, forneça uma URL válida.\")\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "url": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "url",
                "value": "https://www.youtube.com/watch?v=q6QLGS306d0&t=45s",
                "display_name": "YouTube URL",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "URL of the YouTube video.",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              }
            },
            "description": "Cria um IFrame de um link do youtube para ser reproduzido em página web",
            "icon": "youtube",
            "base_classes": [
              "Text"
            ],
            "display_name": "WB - Youtube IFrame ",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Text"
                ],
                "selected": "Text",
                "name": "html_output",
                "display_name": "HTML Output",
                "method": "generate_html",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "url"
            ],
            "beta": false,
            "edited": true,
            "lf_version": "1.0.16",
            "official": false
          },
          "id": "YouTubeVideoDisplayComponent-hSiSo"
        },
        "selected": true,
        "width": 384,
        "height": 326,
        "dragging": false
      }
    ],
    "edges": [],
    "viewport": {
      "x": 0,
      "y": 0,
      "zoom": 1
    }
  },
  "metadata": {
    "YouTubeVideoDisplayComponent": {
      "count": 1
    },
    "total": 1
  },
  "original": {
    "id": "2045ccd3-8086-4a68-a990-b456417838b3",
    "name": "WB - Youtube IFrame",
    "description": "Cria o IFrame de um link do youtube para exibição em página web.",
    "is_component": false,
    "liked_by_count": "2",
    "downloads_count": "9",
    "metadata": {
      "YouTubeVideoDisplayComponent": {
        "count": 1
      },
      "total": 1
    },
    "last_tested_version": "1.0.16",
    "private": false,
    "data": {
      "nodes": [
        {
          "id": "YouTubeVideoDisplayComponent-hSiSo",
          "type": "genericNode",
          "position": {
            "x": 852,
            "y": 265.21875
          },
          "data": {
            "type": "YouTubeVideoDisplayComponent",
            "node": {
              "template": {
                "_type": "Component",
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio.custom import Component\nfrom axiestudio.inputs import MessageTextInput\nfrom axiestudio.template import Output\n\nclass YouTubeVideoDisplayComponent(Component):\n    display_name = \"YouTube Video Display\"\n    description = \"Displays a YouTube video in the output.\"\n    icon = \"youtube\"  # Optional: Add an icon that represents this component\n\n    inputs = [\n        MessageTextInput(\n            name=\"url\",\n            display_name=\"YouTube URL\",\n            info=\"URL of the YouTube video.\",\n\n        ),\n    ]\n\n    outputs = [\n        Output(display_name=\"HTML Output\", name=\"html_output\", method=\"generate_html\"),\n    ]\n\n    def generate_html(self) -> str:\n        # Verifica se a URL foi corretamente atribuída\n        if not hasattr(self, 'url') or not self.url:\n            raise ValueError(\"URL não foi fornecida ou está vazia. Certifique-se de preencher o campo corretamente.\")\n        \n        # Extrai o ID do vídeo do URL fornecido\n        video_id = self.extract_video_id(self.url)\n        \n        # Gera o código HTML para incorporar o vídeo do YouTube\n        html_output = f\"\"\"\n        <iframe width=\"560\" height=\"315\" \n                src=\"https://www.youtube.com/embed/{video_id}\" \n                title=\"YouTube video player\" \n                frameborder=\"0\" \n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" \n                allowfullscreen>\n        </iframe>\n        \"\"\"\n        return html_output\n\n    def extract_video_id(self, url: str) -> str:\n        # Este método extrai o ID do vídeo de uma URL do YouTube\n        if \"youtube.com/watch?v=\" in url:\n            return url.split(\"v=\")[1]\n        elif \"youtu.be/\" in url:\n            return url.split(\"youtu.be/\")[1]\n        else:\n            raise ValueError(\"URL do YouTube inválida. Por favor, forneça uma URL válida.\")\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "url": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "url",
                  "value": "https://www.youtube.com/watch?v=q6QLGS306d0&t=45s",
                  "display_name": "YouTube URL",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "URL of the YouTube video.",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MessageTextInput"
                }
              },
              "description": "Cria um IFrame de um link do youtube para ser reproduzido em página web",
              "icon": "youtube",
              "base_classes": [
                "Text"
              ],
              "display_name": "WB - Youtube IFrame ",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Text"
                  ],
                  "selected": "Text",
                  "name": "html_output",
                  "display_name": "HTML Output",
                  "method": "generate_html",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "url"
              ],
              "beta": false,
              "edited": true,
              "lf_version": "1.0.16",
              "official": false
            },
            "id": "YouTubeVideoDisplayComponent-hSiSo"
          },
          "selected": true,
          "width": 384,
          "height": 326,
          "dragging": false
        }
      ],
      "edges": [],
      "viewport": {
        "x": 0,
        "y": 0,
        "zoom": 1
      }
    },
    "date_created": "2024-09-11T22:43:01.548Z",
    "date_updated": "2024-09-11T22:43:01.587Z",
    "status": "Public",
    "sort": null,
    "user_updated": "00808143-7274-457d-a5b8-75c89231a3dd",
    "user_created": {
      "username": "wagner",
      "first_name": "Wagner",
      "last_name": "Bittencourt",
      "id": "00808143-7274-457d-a5b8-75c89231a3dd"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:08:55.030Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 6,
    "converter_version": "1.0.0"
  }
}