{
  "id": "2527171c-39b2-4826-ae18-6aa3b83f5253",
  "name": "Crewai Flow - AGM date extraction",
  "description": "AGM date extraction using CrewAI custom component (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "FLOW",
  "is_component": false,
  "author": {
    "username": "buntyshah",
    "first_name": "bunty",
    "last_name": "shah",
    "id": "0d23bade-f781-490d-b0c0-6bd302713bc5",
    "full_name": "bunty shah"
  },
  "store_url": "https://www.langflow.store/store/component/2527171c-39b2-4826-ae18-6aa3b83f5253",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-07-04T11:35:26.776Z",
    "updated": "2024-07-04T11:35:38.920Z",
    "downloaded": "2025-08-19T17:50:05.728Z"
  },
  "tags": [
    {
      "tags_id": {
        "name": "Agent",
        "id": "ccabb590-c9e8-4e56-9d6c-309955936c6c"
      }
    }
  ],
  "technical": {
    "last_tested_version": "1.0.5",
    "private": true,
    "status": "Public"
  },
  "data": {
    "nodes": [
      {
        "id": "CustomComponent-i9KaY",
        "type": "genericNode",
        "position": {
          "x": -558.3167551174221,
          "y": 605.8711642071464
        },
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "_type": "CustomComponent",
              "llm": {
                "type": "LanguageModel",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "llm",
                "display_name": "Language Model",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "backstory": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "backstory",
                "display_name": "Backstory",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "Identify AGM dates or annual general meeting dates for year 2024 for given company {company} your goal is to accurately identify AGM date"
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio import CustomComponent\r\nfrom axiestudio.field_typing import LanguageModel, Tool\r\nfrom crewai import Agent\r\nfrom typing import List, Optional\r\n\r\nclass AgentCrewComponent(CustomComponent):\r\n    display_name: str = \"AgentCrew\"\r\n    description: str = \"This component initializes an agent with language model and tools.\"\r\n\r\n    def build_config(self):\r\n        return {\r\n            \"role\": {\"display_name\": \"Role\"},\r\n            \"goal\": {\"display_name\": \"Goal\"},\r\n            \"backstory\": {\"display_name\": \"Backstory\"},\r\n            # \"tools\": {\"display_name\": \"Tools\", \"type\": \"list\", \"item_type\": \"object\", \"optional\": True},  # Torna a entrada opcional\r\n            \"llm\": {\"display_name\": \"Language Model\", \"field_type\": \"object\"},\r\n        }\r\n\r\n    # def build(self, role: str, goal: str, backstory: str, llm: LanguageModel, tools: Optional[List[Tool]] = None) -> Agent:\r\n    def build(self, role: str, goal: str, backstory: str, llm: LanguageModel) -> Agent:\r\n\r\n        # # Se \"tools\" não for especificado, define como uma lista vazia\r\n        # if tools is None:\r\n        #     tools = []\r\n        \r\n        try:\r\n            agent = Agent(\r\n            role=role,\r\n            goal=goal,\r\n            backstory=backstory,\r\n            llm=llm,\r\n            verbose=True\r\n            )\r\n        except Exception as e:\r\n            print(f\"Error in AGM Research Agent agent with error {e}\")\r\n        \r\n        # Supondo que cada ferramenta na lista seja um objeto já inicializado e pronto para uso\r\n        return agent\r\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "goal": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "goal",
                "display_name": "Goal",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "As a part of the AGM research analyst team, your mission is to identify AGM dates for year 2024 for company {company}. Make sure you do a comprehensive research and identify high quality source for company like stock exchange websites or company websites etc. Since you are an expert you know that Ordinary General Meeting of Shareholders or special General Meeting of Shareholders is different from Annual general meeting. We are only interested in annual general meeting or AGM date. You should also search within financial results documents for AGM date. You should take below path for search 1. First do a internet search 2. Look for official website or exchange results 3. If you dont find details, take a path of looking at official website and then find AGM date using website search tool or look for financial documents"
              },
              "role": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "role",
                "display_name": "Role",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "AGM research analyst"
              }
            },
            "description": "This component initializes an agent with language model and tools.",
            "base_classes": [
              "Agent",
              "BaseAgent"
            ],
            "display_name": "AGM Research Agent",
            "documentation": "",
            "custom_fields": {
              "role": null,
              "goal": null,
              "backstory": null,
              "llm": null
            },
            "output_types": [
              "Agent"
            ],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Agent"
                ],
                "selected": "Agent",
                "name": "agent",
                "hidden": false,
                "display_name": "Agent",
                "method": null,
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [],
            "beta": false,
            "edited": true
          },
          "id": "CustomComponent-i9KaY",
          "description": "This component initializes an agent with language model and tools.",
          "display_name": "AGM Research Agent"
        },
        "selected": false,
        "width": 384,
        "height": 573,
        "positionAbsolute": {
          "x": -558.3167551174221,
          "y": 605.8711642071464
        },
        "dragging": false
      },
      {
        "id": "CustomComponent-VUwou",
        "type": "genericNode",
        "position": {
          "x": 208.05430105134667,
          "y": 103.31039667717869
        },
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "_type": "CustomComponent",
              "agent": {
                "type": "Agent",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "agent",
                "display_name": "Agent",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "tools": {
                "type": "Tool",
                "required": false,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "tools",
                "display_name": "Tools",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio import CustomComponent\r\nfrom axiestudio.field_typing import Data\r\nfrom crewai import Task, Agent\r\n\r\nclass TaskComponent(CustomComponent):\r\n    display_name: str = \"Create Task\"\r\n    description: str = \"This component creates a task for an agent.\"\r\n\r\n    def build_config(self):\r\n        return {\r\n            \"description\": {\"display_name\": \"Description\"},\r\n            \"expected_output\": {\"display_name\": \"Expected Output\"},\r\n            \"tools\": {\"display_name\": \"Tools\", \"type\": \"list\", \"item_type\": \"object\", \"optional\": True},\r\n            \"agent\": {\"display_name\": \"Agent\"},\r\n        }\r\n\r\n    def build(self, description: str, expected_output: str, agent: Agent,tools: Optional[List[Tool]] = None) -> Task:\r\n        try:\r\n            task = Task(\r\n            description=description,\r\n            expected_output=expected_output,\r\n            tools=tools,\r\n            agent=agent\r\n            )\r\n        except Exception as e:\r\n            print(f\"Error in Date Extraction task with error {e}\")\r\n        return task\r\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "description": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "description",
                "display_name": "Description",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "Conduct an in-depth search for AGM date or annual general meeting date for year 2024 for company {company}. Utilize all available data sources to compile a detailed analysis, focusing on getting multiple AGM dates from different sources. Don’t make assumptions and only use information you absolutely sure about. If there are document links within website, try to load document and search for date using pdf search tool. Since you are an expert you know that Ordinary General Meeting of Shareholders or special General Meeting of Shareholders is different from Annual general meeting. We are only interested in annual general meeting or AGM date. If you find official website then you can also look into relevant Financial Results documents to find the AGM date using PDF Search tool."
              },
              "expected_output": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "expected_output",
                "display_name": "Expected Output",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "A comprehensive report on AGM dates with its source urls for year 2024 for given company {company}, Make sure its as detailed as possible"
              }
            },
            "description": "This component creates a task for an agent.",
            "base_classes": [
              "Task"
            ],
            "display_name": "Search For AGM Date",
            "documentation": "",
            "custom_fields": {
              "description": null,
              "expected_output": null,
              "agent": null,
              "tools": null
            },
            "output_types": [
              "Task"
            ],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Task"
                ],
                "selected": "Task",
                "name": "task",
                "hidden": false,
                "display_name": "Task",
                "method": null,
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [],
            "beta": false,
            "edited": true
          },
          "id": "CustomComponent-VUwou",
          "description": "This component creates a task for an agent.",
          "display_name": "Search For AGM Date"
        },
        "selected": false,
        "width": 384,
        "height": 499,
        "dragging": false,
        "positionAbsolute": {
          "x": 208.05430105134667,
          "y": 103.31039667717869
        }
      },
      {
        "id": "CustomComponent-y0WMh",
        "type": "genericNode",
        "position": {
          "x": 1207.2398017997143,
          "y": 256.78893770039446
        },
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "_type": "CustomComponent",
              "agents": {
                "type": "Agent",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "agents",
                "display_name": "Agents",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "company": {
                "type": "Message",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "company",
                "display_name": "company name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "llm": {
                "type": "LanguageModel",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "llm",
                "display_name": "Language Model",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "tasks": {
                "type": "Task",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "tasks",
                "display_name": "Tasks",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio import CustomComponent\r\nfrom crewai import Crew, Task, Agent\r\nfrom typing import List, Optional\r\nfrom axiestudio.field_typing import Text,LanguageModel\r\nfrom axiestudio.schema.message import Message\r\n\r\nimport os\r\n\r\nfrom crewai.telemetry import Telemetry\r\n\r\n\r\n\r\n\r\nclass CrewComponent(CustomComponent):\r\n    display_name: str = \"Initialize Crew\"\r\n    description: str = \"This component initializes a crew to execute tasks with multiple agents.\"\r\n\r\n    def build_config(self):\r\n        return {\r\n            \"agents\": {\"display_name\": \"Agents\", \"type\": \"list\", \"item_type\": \"Agent\"},  # Define a entrada como lista de Agent\r\n            \"tasks\": {\"display_name\": \"Tasks\", \"type\": \"list\", \"item_type\": \"Task\"},  # Define a entrada como lista de Task\r\n            \"company\": {\"display_name\": \"company name\", \"type\": \"Message\"},  # New topic field\r\n            \"verbose\": {\"display_name\": \"Verbose Level\", \"value\": 2},\r\n            \"max_iterations\": {\"display_name\": \"Max Iterations\", \"value\": 10},\r\n           \"llm\": {\"display_name\": \"Language Model\", \"field_type\": \"object\"},\r\n        }\r\n\r\n    def build(self, agents: List[Agent], tasks: List[Task], company:Message, verbose: int, max_iterations: int,llm: LanguageModel) -> Message:\r\n        \"\"\"Constrói o objeto Crew e executa as tarefas com os agentes coletados.\"\"\"\r\n        \r\n        os.environ[\"OTEL_SDK_DISABLED\"] = \"true\"\r\n        def noop(*args, **kwargs):\r\n            print(\"Telemetry method called and noop'd\\n\")\r\n            pass\r\n        \r\n        \r\n        for attr in dir(Telemetry):\r\n            if callable(getattr(Telemetry, attr)) and not attr.startswith(\"__\"):\r\n                setattr(Telemetry, attr, noop)\r\n        if not agents or not tasks:\r\n            raise ValueError(\"No agents or tasks have been added.\")\r\n        \r\n        inputs = {\r\n            'company':company\r\n        }\r\n        # Use the topic to guide the tasks or modify task execution context here if necessary\r\n        response = Crew(\r\n            agents=agents,\r\n            tasks=tasks,\r\n            verbose=verbose,\r\n            max_iterations=max_iterations,\r\n            memory=False,\r\n            llm=llm\r\n        )\r\n        \r\n        try:\r\n            result = response.kickoff(inputs=inputs)\r\n        except Exception as e:\r\n            print(f\"Error in kickoff function with {e}\")\r\n        \r\n        message = Message(\r\n            text=result,\r\n        )\r\n\r\n        return message  # Assuming kickoff returns Text type or adjust accordingly\r\n\r\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "max_iterations": {
                "type": "int",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "2",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "max_iterations",
                "display_name": "Max Iterations",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "verbose": {
                "type": "int",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": 2,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "verbose",
                "display_name": "Verbose Level",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              }
            },
            "description": "This component initializes a crew to execute tasks with multiple agents.",
            "base_classes": [
              "Data",
              "Message"
            ],
            "display_name": "CrewAi",
            "documentation": "",
            "custom_fields": {
              "agents": null,
              "tasks": null,
              "company": null,
              "verbose": null,
              "max_iterations": null,
              "llm": null
            },
            "output_types": [
              "Message"
            ],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "message",
                "hidden": false,
                "display_name": "Message",
                "method": null,
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [],
            "beta": false,
            "edited": false
          },
          "id": "CustomComponent-y0WMh",
          "description": "This component initializes a crew to execute tasks with multiple agents.",
          "display_name": "CrewAi"
        },
        "selected": true,
        "width": 384,
        "height": 607,
        "dragging": false,
        "positionAbsolute": {
          "x": 1207.2398017997143,
          "y": 256.78893770039446
        }
      },
      {
        "id": "AzureOpenAIModel-lZgTt",
        "type": "genericNode",
        "position": {
          "x": -1330.3479764092604,
          "y": 407.3517128898295
        },
        "data": {
          "type": "AzureOpenAIModel",
          "node": {
            "template": {
              "_type": "Component",
              "api_key": {
                "load_from_db": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "",
                "name": "api_key",
                "display_name": "API Key",
                "advanced": false,
                "input_types": [],
                "dynamic": false,
                "info": "",
                "title_case": false,
                "password": true,
                "type": "str"
              },
              "api_version": {
                "trace_as_metadata": true,
                "options": [
                  "2023-03-15-preview",
                  "2023-05-15",
                  "2023-06-01-preview",
                  "2023-07-01-preview",
                  "2023-08-01-preview",
                  "2023-09-01-preview",
                  "2023-12-01-preview",
                  "2024-04-09",
                  "2024-05-13"
                ],
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "2023-07-01-preview",
                "name": "api_version",
                "display_name": "API Version",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str"
              },
              "azure_deployment": {
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "vanilla-gpt-35-turbo-16k",
                "name": "azure_deployment",
                "display_name": "Deployment Name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str"
              },
              "azure_endpoint": {
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "https://cser-dva2-dp-openapi002.openai.azure.com/",
                "name": "azure_endpoint",
                "display_name": "Azure Endpoint",
                "advanced": false,
                "dynamic": false,
                "info": "Your Azure endpoint, including the resource. Example: `https://example-resource.azure.openai.com/`",
                "title_case": false,
                "type": "str"
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from langchain_openai import AzureChatOpenAI\nfrom pydantic.v1 import SecretStr\n\nfrom axiestudio.base.constants import STREAM_INFO_TEXT\nfrom axiestudio.base.models.model import LCModelComponent\nfrom axiestudio.field_typing import LanguageModel\nfrom axiestudio.io import BoolInput, DropdownInput, FloatInput, IntInput, MessageInput, Output, SecretStrInput, StrInput\n\n\nclass AzureChatOpenAIComponent(LCModelComponent):\n    display_name: str = \"Azure OpenAI\"\n    description: str = \"Generate text using Azure OpenAI LLMs.\"\n    documentation: str = \"https://python.langchain.com/docs/integrations/llms/azure_openai\"\n    beta = False\n    icon = \"Azure\"\n\n    AZURE_OPENAI_MODELS = [\n        \"gpt-35-turbo\",\n        \"gpt-35-turbo-16k\",\n        \"gpt-35-turbo-instruct\",\n        \"gpt-4\",\n        \"gpt-4-32k\",\n        \"gpt-4o\",\n        \"gpt-4-turbo\",\n    ]\n\n    AZURE_OPENAI_API_VERSIONS = [\n        \"2023-03-15-preview\",\n        \"2023-05-15\",\n        \"2023-06-01-preview\",\n        \"2023-07-01-preview\",\n        \"2023-08-01-preview\",\n        \"2023-09-01-preview\",\n        \"2023-12-01-preview\",\n        \"2024-04-09\",\n        \"2024-05-13\",\n    ]\n\n    inputs = [\n        DropdownInput(\n            name=\"model\",\n            display_name=\"Model Name\",\n            options=AZURE_OPENAI_MODELS,\n            value=AZURE_OPENAI_MODELS[0],\n        ),\n        StrInput(\n            name=\"azure_endpoint\",\n            display_name=\"Azure Endpoint\",\n            info=\"Your Azure endpoint, including the resource. Example: `https://example-resource.azure.openai.com/`\",\n        ),\n        StrInput(name=\"azure_deployment\", display_name=\"Deployment Name\"),\n        DropdownInput(\n            name=\"api_version\",\n            display_name=\"API Version\",\n            options=AZURE_OPENAI_API_VERSIONS,\n            value=AZURE_OPENAI_API_VERSIONS[-1],\n            advanced=True,\n        ),\n        SecretStrInput(name=\"api_key\", display_name=\"API Key\", password=True),\n        FloatInput(name=\"temperature\", display_name=\"Temperature\", value=0.7),\n        IntInput(\n            name=\"max_tokens\",\n            display_name=\"Max Tokens\",\n            advanced=True,\n            info=\"The maximum number of tokens to generate. Set to 0 for unlimited tokens.\",\n        ),\n        MessageInput(name=\"input_value\", display_name=\"Input\"),\n        BoolInput(name=\"stream\", display_name=\"Stream\", info=STREAM_INFO_TEXT, advanced=True),\n        StrInput(\n            name=\"system_message\",\n            display_name=\"System Message\",\n            advanced=True,\n            info=\"System message to pass to the model.\",\n        ),\n    ]\n    outputs = [\n        Output(display_name=\"Text\", name=\"text_output\", method=\"text_response\"),\n        Output(display_name=\"Language Model\", name=\"model_output\", method=\"model_response\"),\n    ]\n\n    def model_response(self) -> LanguageModel:\n        model = self.model\n        azure_endpoint = self.azure_endpoint\n        azure_deployment = self.azure_deployment\n        api_version = self.api_version\n        api_key = self.api_key\n        temperature = self.temperature\n        max_tokens = self.max_tokens\n        stream = self.stream\n\n        if api_key:\n            secret_api_key = SecretStr(api_key)\n        else:\n            secret_api_key = None\n\n        try:\n            output = AzureChatOpenAI(\n                model=model,\n                azure_endpoint=azure_endpoint,\n                azure_deployment=azure_deployment,\n                api_version=api_version,\n                api_key=secret_api_key,\n                temperature=temperature,\n                max_tokens=max_tokens or None,\n                streaming=stream,\n            )\n        except Exception as e:\n            raise ValueError(\"Could not connect to AzureOpenAI API.\") from e\n\n        return output\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "input_value": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "Hey",
                "name": "input_value",
                "display_name": "Input",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str"
              },
              "max_tokens": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "",
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "advanced": true,
                "dynamic": false,
                "info": "The maximum number of tokens to generate. Set to 0 for unlimited tokens.",
                "title_case": false,
                "type": "int"
              },
              "model": {
                "trace_as_metadata": true,
                "options": [
                  "gpt-35-turbo",
                  "gpt-35-turbo-16k",
                  "gpt-35-turbo-instruct",
                  "gpt-4",
                  "gpt-4-32k",
                  "gpt-4o",
                  "gpt-4-turbo"
                ],
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "gpt-35-turbo-16k",
                "name": "model",
                "display_name": "Model Name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str"
              },
              "stream": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": false,
                "name": "stream",
                "display_name": "Stream",
                "advanced": true,
                "dynamic": false,
                "info": "Stream the response from the model. Streaming works only in Chat.",
                "title_case": false,
                "type": "bool"
              },
              "system_message": {
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "You are a helpful assistant",
                "name": "system_message",
                "display_name": "System Message",
                "advanced": false,
                "dynamic": false,
                "info": "System message to pass to the model.",
                "title_case": false,
                "type": "str"
              },
              "temperature": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "0.1",
                "name": "temperature",
                "display_name": "Temperature",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "float"
              }
            },
            "description": "Generate text using Azure OpenAI LLMs.",
            "icon": "Azure",
            "base_classes": [
              "LanguageModel",
              "Message"
            ],
            "display_name": "Azure OpenAI",
            "documentation": "https://python.langchain.com/docs/integrations/llms/azure_openai",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "text_output",
                "display_name": "Text",
                "method": "text_response",
                "value": "__UNDEFINED__",
                "cache": true
              },
              {
                "types": [
                  "LanguageModel"
                ],
                "selected": "LanguageModel",
                "name": "model_output",
                "display_name": "Language Model",
                "method": "model_response",
                "value": "__UNDEFINED__",
                "cache": true,
                "hidden": false
              }
            ],
            "field_order": [
              "model",
              "azure_endpoint",
              "azure_deployment",
              "api_version",
              "api_key",
              "temperature",
              "max_tokens",
              "input_value",
              "stream",
              "system_message"
            ],
            "beta": false,
            "edited": false
          },
          "id": "AzureOpenAIModel-lZgTt",
          "description": "Generate text using Azure OpenAI LLMs.",
          "display_name": "Azure OpenAI"
        },
        "selected": false,
        "width": 384,
        "height": 970,
        "positionAbsolute": {
          "x": -1330.3479764092604,
          "y": 407.3517128898295
        },
        "dragging": false
      },
      {
        "id": "ChatOutput-2QY5Z",
        "type": "genericNode",
        "position": {
          "x": 2150.115322445363,
          "y": 821.9814565948226
        },
        "data": {
          "type": "ChatOutput",
          "node": {
            "template": {
              "_type": "Component",
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio.base.io.chat import ChatComponent\nfrom axiestudio.io import DropdownInput, MessageTextInput, Output\nfrom axiestudio.schema.message import Message\n\n\nclass ChatOutput(ChatComponent):\n    display_name = \"Chat Output\"\n    description = \"Display a chat message in the Playground.\"\n    icon = \"ChatOutput\"\n\n    inputs = [\n        MessageTextInput(\n            name=\"input_value\",\n            display_name=\"Text\",\n            info=\"Message to be passed as output.\",\n        ),\n        DropdownInput(\n            name=\"sender\",\n            display_name=\"Sender Type\",\n            options=[\"Machine\", \"User\"],\n            value=\"Machine\",\n            advanced=True,\n            info=\"Type of sender.\",\n        ),\n        MessageTextInput(\n            name=\"sender_name\", display_name=\"Sender Name\", info=\"Name of the sender.\", value=\"AI\", advanced=True\n        ),\n        MessageTextInput(\n            name=\"session_id\", display_name=\"Session ID\", info=\"Session ID for the message.\", advanced=True\n        ),\n        MessageTextInput(\n            name=\"data_template\",\n            display_name=\"Data Template\",\n            value=\"{text}\",\n            advanced=True,\n            info=\"Template to convert Data to Text. If left empty, it will be dynamically set to the Data's text key.\",\n        ),\n    ]\n    outputs = [\n        Output(display_name=\"Message\", name=\"message\", method=\"message_response\"),\n    ]\n\n    def message_response(self) -> Message:\n        message = Message(\n            text=self.input_value,\n            sender=self.sender,\n            sender_name=self.sender_name,\n            session_id=self.session_id,\n        )\n        if self.session_id and isinstance(message, Message) and isinstance(message.text, str):\n            self.store_message(message)\n            self.message.value = message\n\n        self.status = message\n        return message\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "data_template": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "{text}",
                "name": "data_template",
                "display_name": "Data Template",
                "advanced": true,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Template to convert Data to Text. If left empty, it will be dynamically set to the Data's text key.",
                "title_case": false,
                "type": "str"
              },
              "input_value": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "",
                "name": "input_value",
                "display_name": "Text",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Message to be passed as output.",
                "title_case": false,
                "type": "str"
              },
              "sender": {
                "trace_as_metadata": true,
                "options": [
                  "Machine",
                  "User"
                ],
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "Machine",
                "name": "sender",
                "display_name": "Sender Type",
                "advanced": true,
                "dynamic": false,
                "info": "Type of sender.",
                "title_case": false,
                "type": "str"
              },
              "sender_name": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "AI",
                "name": "sender_name",
                "display_name": "Sender Name",
                "advanced": true,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Name of the sender.",
                "title_case": false,
                "type": "str"
              },
              "session_id": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "",
                "name": "session_id",
                "display_name": "Session ID",
                "advanced": true,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Session ID for the message.",
                "title_case": false,
                "type": "str"
              }
            },
            "description": "Display a chat message in the Playground.",
            "icon": "ChatOutput",
            "base_classes": [
              "Message"
            ],
            "display_name": "Chat Output",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "message",
                "display_name": "Message",
                "method": "message_response",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "input_value",
              "sender",
              "sender_name",
              "session_id",
              "data_template"
            ],
            "beta": false,
            "edited": false
          },
          "id": "ChatOutput-2QY5Z"
        },
        "selected": false,
        "width": 384,
        "height": 309,
        "dragging": false
      },
      {
        "id": "ChatInput-PxARz",
        "type": "genericNode",
        "position": {
          "x": 726.8382889804051,
          "y": -251.61571593163248
        },
        "data": {
          "type": "ChatInput",
          "node": {
            "template": {
              "_type": "Component",
              "files": {
                "trace_as_metadata": true,
                "file_path": "",
                "fileTypes": [
                  "txt",
                  "md",
                  "mdx",
                  "csv",
                  "json",
                  "yaml",
                  "yml",
                  "xml",
                  "html",
                  "htm",
                  "pdf",
                  "docx",
                  "py",
                  "sh",
                  "sql",
                  "js",
                  "ts",
                  "tsx",
                  "jpg",
                  "jpeg",
                  "png",
                  "bmp",
                  "image"
                ],
                "list": true,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "",
                "name": "files",
                "display_name": "Files",
                "advanced": true,
                "dynamic": false,
                "info": "Files to be sent with the message.",
                "title_case": false,
                "type": "file"
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio.base.data.utils import IMG_FILE_TYPES, TEXT_FILE_TYPES\nfrom axiestudio.base.io.chat import ChatComponent\nfrom axiestudio.io import DropdownInput, FileInput, MessageTextInput, MultilineInput, Output\nfrom axiestudio.schema.message import Message\n\n\nclass ChatInput(ChatComponent):\n    display_name = \"Chat Input\"\n    description = \"Get chat inputs from the Playground.\"\n    icon = \"ChatInput\"\n\n    inputs = [\n        MultilineInput(\n            name=\"input_value\",\n            display_name=\"Text\",\n            value=\"\",\n            info=\"Message to be passed as input.\",\n        ),\n        DropdownInput(\n            name=\"sender\",\n            display_name=\"Sender Type\",\n            options=[\"Machine\", \"User\"],\n            value=\"User\",\n            info=\"Type of sender.\",\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\"sender_name\",\n            display_name=\"Sender Name\",\n            info=\"Name of the sender.\",\n            value=\"User\",\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\"session_id\", display_name=\"Session ID\", info=\"Session ID for the message.\", advanced=True\n        ),\n        FileInput(\n            name=\"files\",\n            display_name=\"Files\",\n            file_types=TEXT_FILE_TYPES + IMG_FILE_TYPES,\n            info=\"Files to be sent with the message.\",\n            advanced=True,\n            is_list=True,\n        ),\n    ]\n    outputs = [\n        Output(display_name=\"Message\", name=\"message\", method=\"message_response\"),\n    ]\n\n    def message_response(self) -> Message:\n        message = Message(\n            text=self.input_value,\n            sender=self.sender,\n            sender_name=self.sender_name,\n            session_id=self.session_id,\n            files=self.files,\n        )\n        if self.session_id and isinstance(message, Message) and isinstance(message.text, str):\n            self.store_message(message)\n            self.message.value = message\n\n        self.status = message\n        return message\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "input_value": {
                "trace_as_input": true,
                "multiline": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "Find AGM date for Nvidia 2024",
                "name": "input_value",
                "display_name": "Text",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Message to be passed as input.",
                "title_case": false,
                "type": "str"
              },
              "sender": {
                "trace_as_metadata": true,
                "options": [
                  "Machine",
                  "User"
                ],
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "User",
                "name": "sender",
                "display_name": "Sender Type",
                "advanced": true,
                "dynamic": false,
                "info": "Type of sender.",
                "title_case": false,
                "type": "str"
              },
              "sender_name": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "User",
                "name": "sender_name",
                "display_name": "Sender Name",
                "advanced": true,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Name of the sender.",
                "title_case": false,
                "type": "str"
              },
              "session_id": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "",
                "name": "session_id",
                "display_name": "Session ID",
                "advanced": true,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Session ID for the message.",
                "title_case": false,
                "type": "str"
              }
            },
            "description": "Get chat inputs from the Playground.",
            "icon": "ChatInput",
            "base_classes": [
              "Message"
            ],
            "display_name": "Chat Input",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "message",
                "display_name": "Message",
                "method": "message_response",
                "value": "__UNDEFINED__",
                "cache": true,
                "hidden": false
              }
            ],
            "field_order": [
              "input_value",
              "sender",
              "sender_name",
              "session_id",
              "files"
            ],
            "beta": false,
            "edited": false
          },
          "id": "ChatInput-PxARz"
        },
        "selected": false,
        "width": 384,
        "height": 309,
        "positionAbsolute": {
          "x": 726.8382889804051,
          "y": -251.61571593163248
        },
        "dragging": false
      },
      {
        "id": "CustomComponent-ClTw1",
        "type": "genericNode",
        "position": {
          "x": -680.7239375090176,
          "y": -296.4324141753614
        },
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "_type": "CustomComponent",
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio.custom import CustomComponent\r\nfrom axiestudio.field_typing import Tool\r\nfrom crewai_tools import ScrapeWebsiteTool\r\n\r\nclass SearchWebsiteComp(CustomComponent):\r\n    display_name: str = \"Website Scrapping Tool\"\r\n    description: str = \"Real-time Website Scrapping Tool\"\r\n    def build(\r\n        self\r\n    ) -> Tool:\r\n        try:\r\n            website_scrapping_tool = ScrapeWebsiteTool()\r\n            self.status = website_scrapping_tool\r\n        except Exception as e:\r\n            print(f\"Error in website scrapping tool with error {e}\")\r\n        return website_scrapping_tool  # type: ignore",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              }
            },
            "description": "Real-time Website Scrapping Tool",
            "base_classes": [
              "BaseTool",
              "Generic",
              "object",
              "Runnable",
              "RunnableSerializable",
              "Serializable",
              "Tool"
            ],
            "display_name": "Website Scrapping Tool",
            "documentation": "",
            "custom_fields": {},
            "output_types": [
              "Tool"
            ],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Tool"
                ],
                "selected": "Tool",
                "name": "tool",
                "hidden": false,
                "display_name": "Tool",
                "method": null,
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [],
            "beta": false,
            "edited": true
          },
          "id": "CustomComponent-ClTw1",
          "description": "Real-time Website Scrapping Tool",
          "display_name": "Website Scrapping Tool"
        },
        "selected": false,
        "width": 384,
        "height": 219,
        "dragging": false,
        "positionAbsolute": {
          "x": -680.7239375090176,
          "y": -296.4324141753614
        }
      },
      {
        "id": "CustomComponent-2lsSs",
        "type": "genericNode",
        "position": {
          "x": -668.4654281593733,
          "y": -1811.698139141321
        },
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "_type": "CustomComponent",
              "azure_api_key": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": true,
                "name": "azure_api_key",
                "display_name": "Provide Azure API key",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": ""
              },
              "azure_deployment_name": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "azure_deployment_name",
                "display_name": "Provide Azure deployment name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "vanilla-gpt-35-turbo-16k"
              },
              "azure_openai_api_version": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "2023-07-01-preview",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "options": [
                  "2023-03-15-preview",
                  "2023-05-15",
                  "2023-06-01-preview",
                  "2023-07-01-preview",
                  "2023-08-01-preview",
                  "2023-09-01-preview",
                  "2023-12-01-preview",
                  "2024-04-09",
                  "2024-05-13"
                ],
                "name": "azure_openai_api_version",
                "display_name": "Provide Azure OpenAI API version",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              },
              "azure_openai_model": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "gpt-35-turbo-16k",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "options": [
                  "gpt-35-turbo",
                  "gpt-35-turbo-16k",
                  "gpt-35-turbo-instruct",
                  "gpt-4",
                  "gpt-4-32k",
                  "gpt-4o",
                  "gpt-4-turbo"
                ],
                "name": "azure_openai_model",
                "display_name": "Provide Azure OpenAI model",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              },
              "azure_opnai_endpoint": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "azure_opnai_endpoint",
                "display_name": "Provide Azure OpenAI endpoint",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "https://cser-dva2-dp-openapi002.openai.azure.com/"
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from langchain_community.tools.searchapi import SearchAPIRun\r\nfrom langchain_community.utilities.searchapi import SearchApiAPIWrapper\r\nfrom langchain_openai import AzureChatOpenAI\r\nfrom pydantic.v1 import SecretStr\r\n\r\nfrom axiestudio.base.constants import STREAM_INFO_TEXT\r\nfrom axiestudio.base.models.model import LCModelComponent\r\nfrom axiestudio.field_typing import LanguageModel\r\nfrom axiestudio.custom import CustomComponent\r\nfrom axiestudio.field_typing import Tool\r\nfrom axiestudio.io import BoolInput, DropdownInput, FloatInput, IntInput, MessageInput, Output, SecretStrInput, StrInput\r\nfrom crewai_tools import PDFSearchTool\r\nimport os\r\n\r\nclass pdfdocumentsearch(CustomComponent):\r\n    display_name: str = \"PDF Document RAG tool\"\r\n    description: str = \"If you have a long PDF document, this tool helps you to search relevant information in the document.\"\r\n    def build_config(self):\r\n        LLM_PROVIDERS = [\r\n        \"azure_openai\",\r\n        \"google\",\r\n        \"openai\",\r\n        \"anthropic\",\r\n        \"llama2\"\r\n        ]\r\n        EMBEDDING_PROVIDERS = [\r\n        \"azure_openai\",\r\n        \"google\",\r\n        \"openai\",\r\n        \"anthropic\",\r\n        \"llama2\"\r\n        ]\r\n\r\n        EMBEDDING_MODEL = ['text-embedding-3-small']\r\n\r\n        EMBEDDING_DEPLOYMENT = ['vanilla-text-embedding-3-small']\r\n\r\n        AZURE_OPENAI_MODELS = [\r\n            \"gpt-35-turbo\",\r\n            \"gpt-35-turbo-16k\",\r\n            \"gpt-35-turbo-instruct\",\r\n            \"gpt-4\",\r\n            \"gpt-4-32k\",\r\n            \"gpt-4o\",\r\n            \"gpt-4-turbo\",\r\n        ]\r\n\r\n        AZURE_OPENAI_API_VERSIONS = [\r\n            \"2023-03-15-preview\",\r\n            \"2023-05-15\",\r\n            \"2023-06-01-preview\",\r\n            \"2023-07-01-preview\",\r\n            \"2023-08-01-preview\",\r\n            \"2023-09-01-preview\",\r\n            \"2023-12-01-preview\",\r\n            \"2024-04-09\",\r\n            \"2024-05-13\",\r\n        ]\r\n        return {\r\n            \"llm_model_provider\": {\"display_name\": \"Provide LLM provider\",\"options\": LLM_PROVIDERS,\r\n                    \"value\": LLM_PROVIDERS[0]},\r\n            \"embedding_model_provider\": {\"display_name\": \"Provide Embedding provider\",\"options\": EMBEDDING_PROVIDERS,\r\n                    \"value\": EMBEDDING_PROVIDERS[0]},\r\n            \"embedding_model\": {\"display_name\": \"Provide Embedding model\",\"options\": EMBEDDING_MODEL,\r\n                    \"value\": EMBEDDING_MODEL[0]},\r\n            \"embedding_deployment\": {\"display_name\": \"Provide Embedding deployment\",\"options\": EMBEDDING_DEPLOYMENT,\r\n                    \"value\": EMBEDDING_DEPLOYMENT[0]},\r\n            \"azure_openai_model\": {\"display_name\": \"Provide Azure OpenAI model\",\"options\": AZURE_OPENAI_MODELS,\r\n                    \"value\": AZURE_OPENAI_MODELS[0]},\r\n            \"azure_openai_api_version\": {\"display_name\": \"Provide Azure OpenAI API version\",\"options\": AZURE_OPENAI_API_VERSIONS,\r\n                    \"value\": AZURE_OPENAI_API_VERSIONS[0]},\r\n            \"azure_deployment_name\": {\"display_name\": \"Provide Azure deployment name\"},\r\n            \"azure_api_key\": {\"display_name\": \"Provide Azure API key\",\"field_type\": \"str\",\"required\": True,\"password\": True},\r\n            \"azure_opnai_endpoint\": {\"display_name\": \"Provide Azure OpenAI endpoint\",\"field_type\": \"str\",\"required\": True}, \r\n                    \r\n        }\r\n    \r\n    def build(self, llm_model_provider:str,embedding_model_provider:str,embedding_model:str,embedding_deployment:str,azure_openai_model:str,azure_openai_api_version:str,azure_deployment_name:str,azure_api_key:str,azure_opnai_endpoint:str) -> Tool:\r\n        try:\r\n            # if azure_api_key:\r\n            #     secret_api_key = SecretStr(azure_api_key)\r\n            # else:\r\n            #     secret_api_key = None\r\n            os.environ[\"AZURE_OPENAI_API_KEY\"] = azure_api_key\r\n            os.environ['AZURE_OPENAI_ENDPOINT'] = azure_opnai_endpoint\r\n            pdf_search = PDFSearchTool(\r\n            config=dict(\r\n            llm=dict(\r\n            provider=llm_model_provider, # or google, openai, anthropic, llama2, ...\r\n            config=dict(\r\n                model =azure_openai_model,\r\n            deployment_name=azure_deployment_name,\r\n            api_key=azure_api_key,\r\n            ),\r\n            ),\r\n            embedder=dict(\r\n            provider=embedding_model_provider, # or openai, ollama, ...\r\n            config=dict(\r\n            model=embedding_model,\r\n            deployment_name=embedding_deployment,\r\n            api_key=azure_api_key,\r\n            ),\r\n            ),\r\n            )\r\n            )\r\n        except Exception as e:\r\n            raise ValueError(f\"Could not load PDF file tool with error {e}\") from e\r\n\r\n        return pdf_search",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "embedding_deployment": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "vanilla-text-embedding-3-small",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "options": [
                  "vanilla-text-embedding-3-small"
                ],
                "name": "embedding_deployment",
                "display_name": "Provide Embedding deployment",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              },
              "embedding_model": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "text-embedding-3-small",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "options": [
                  "text-embedding-3-small"
                ],
                "name": "embedding_model",
                "display_name": "Provide Embedding model",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              },
              "embedding_model_provider": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "azure_openai",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "options": [
                  "azure_openai",
                  "google",
                  "openai",
                  "anthropic",
                  "llama2"
                ],
                "name": "embedding_model_provider",
                "display_name": "Provide Embedding provider",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              },
              "llm_model_provider": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "azure_openai",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "options": [
                  "azure_openai",
                  "google",
                  "openai",
                  "anthropic",
                  "llama2"
                ],
                "name": "llm_model_provider",
                "display_name": "Provide LLM provider",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              }
            },
            "description": "If you have a long PDF document, this tool helps you to search relevant information in the document.",
            "base_classes": [
              "BaseTool",
              "Generic",
              "object",
              "Runnable",
              "RunnableSerializable",
              "Serializable",
              "Tool"
            ],
            "display_name": "PDF Document Search",
            "documentation": "",
            "custom_fields": {
              "llm_model_provider": null,
              "embedding_model_provider": null,
              "embedding_model": null,
              "embedding_deployment": null,
              "azure_openai_model": null,
              "azure_openai_api_version": null,
              "azure_deployment_name": null,
              "azure_api_key": null,
              "azure_opnai_endpoint": null
            },
            "output_types": [
              "Tool"
            ],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Tool"
                ],
                "selected": "Tool",
                "name": "tool",
                "hidden": false,
                "display_name": "Tool",
                "method": null,
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [],
            "beta": false,
            "edited": false
          },
          "id": "CustomComponent-2lsSs",
          "description": "If you have a long PDF document, this tool helps you to search relevant information in the document.",
          "display_name": "PDF Document Search"
        },
        "selected": false,
        "width": 384,
        "height": 1117,
        "dragging": false,
        "positionAbsolute": {
          "x": -668.4654281593733,
          "y": -1811.698139141321
        }
      },
      {
        "id": "CustomComponent-kGnTe",
        "type": "genericNode",
        "position": {
          "x": -675.8265196755565,
          "y": -575.0904374850011
        },
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "_type": "CustomComponent",
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from langchain_community.tools.searchapi import SearchAPIRun\r\nfrom langchain_community.utilities.searchapi import SearchApiAPIWrapper\r\n\r\nfrom axiestudio.custom import CustomComponent\r\nfrom axiestudio.field_typing import Tool\r\nfrom crewai_tools import FileReadTool\r\n\r\nclass SearchApiToolComponent(CustomComponent):\r\n    display_name: str = \"Read a file Tool\"\r\n    description: str = \"Read a file tool\"\r\n\r\n    def build(\r\n        self,\r\n    ) -> Tool:\r\n        try:\r\n            file_reading_tool = FileReadTool()\r\n            self.status = file_reading_tool\r\n        except Exception as e:\r\n            print(f\"Error in file reading tool with error {e}\")\r\n        return file_reading_tool  # type: ignore\r\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              }
            },
            "description": "Read a file tool",
            "base_classes": [
              "BaseTool",
              "Generic",
              "object",
              "Runnable",
              "RunnableSerializable",
              "Serializable",
              "Tool"
            ],
            "display_name": "Read File",
            "documentation": "",
            "custom_fields": {},
            "output_types": [
              "Tool"
            ],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Tool"
                ],
                "selected": "Tool",
                "name": "tool",
                "hidden": false,
                "display_name": "Tool",
                "method": null,
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [],
            "beta": false,
            "edited": true
          },
          "id": "CustomComponent-kGnTe",
          "description": "Read a file tool",
          "display_name": "Read File"
        },
        "selected": false,
        "width": 384,
        "height": 219,
        "dragging": false,
        "positionAbsolute": {
          "x": -675.8265196755565,
          "y": -575.0904374850011
        }
      },
      {
        "id": "CustomComponent-g1iqe",
        "type": "genericNode",
        "position": {
          "x": -267.32153504455493,
          "y": 1636.2503803765997
        },
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "_type": "CustomComponent",
              "llm": {
                "type": "LanguageModel",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "llm",
                "display_name": "Language Model",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "backstory": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "backstory",
                "display_name": "Backstory",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "As a part of the Lead AGM quality analyst team, your mission is to validate the AGM dates for year 2024 for company {company} Make sure you do a comprehensive research and identify high quality source for company like stock exchange websites or company websites etc. You should also validate a couple of more sources to identify the correct date, the idea is to get the correct date as much as possible. You can also identify the quality of the AGM date looking at the source or document."
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio import CustomComponent\r\nfrom axiestudio.field_typing import LanguageModel, Tool\r\nfrom crewai import Agent\r\nfrom typing import List, Optional\r\n\r\nclass AgentCrewComponent(CustomComponent):\r\n    display_name: str = \"AgentCrew\"\r\n    description: str = \"This component initializes an agent with language model and tools.\"\r\n\r\n    def build_config(self):\r\n        return {\r\n            \"role\": {\"display_name\": \"Role\"},\r\n            \"goal\": {\"display_name\": \"Goal\"},\r\n            \"backstory\": {\"display_name\": \"Backstory\"},\r\n            # \"tools\": {\"display_name\": \"Tools\", \"type\": \"list\", \"item_type\": \"object\", \"optional\": True},  # Torna a entrada opcional\r\n            \"llm\": {\"display_name\": \"Language Model\", \"field_type\": \"object\"},\r\n        }\r\n\r\n    def build(self, role: str, goal: str, backstory: str, llm: LanguageModel) -> Agent:\r\n        # Se \"tools\" não for especificado, define como uma lista vazia\r\n        \r\n        try:\r\n            task=Agent(\r\n            role=role,\r\n            goal=goal,\r\n            backstory=backstory,\r\n            # tools=tools,  # Passa a lista de ferramentas diretamente\r\n            llm=llm,\r\n            verbose=True\r\n            )\r\n        except Exception as e:\r\n            print(f\"Error in Date Extraction task with error {e}\")\r\n        # Supondo que cada ferramenta na lista seja um objeto já inicializado e pronto para uso\r\n        return task\r\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "goal": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "goal",
                "display_name": "Goal",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "verify the quality of AGM dates or annual general meeting dates for year 2024 for given company {company} Your goal is to accurately identify AGM date and its source"
              },
              "role": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "role",
                "display_name": "Role",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "Lead AGM quality analyst"
              }
            },
            "description": "This component initializes an agent with language model and tools.",
            "base_classes": [
              "Agent",
              "BaseAgent"
            ],
            "display_name": "Lead AGM quality analyst",
            "documentation": "",
            "custom_fields": {
              "role": null,
              "goal": null,
              "backstory": null,
              "llm": null
            },
            "output_types": [
              "Agent"
            ],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Agent"
                ],
                "selected": "Agent",
                "name": "agent",
                "hidden": false,
                "display_name": "Agent",
                "method": null,
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [],
            "beta": false,
            "edited": true
          },
          "id": "CustomComponent-g1iqe",
          "description": "This component initializes an agent with language model and tools.",
          "display_name": "Lead AGM quality analyst"
        },
        "selected": false,
        "width": 384,
        "height": 573,
        "dragging": false
      },
      {
        "id": "CustomComponent-9Mc0i",
        "type": "genericNode",
        "position": {
          "x": 574.9855628022606,
          "y": 1678.1327085718447
        },
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "_type": "CustomComponent",
              "agent": {
                "type": "Agent",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "agent",
                "display_name": "Agent",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "tools": {
                "type": "Tool",
                "required": false,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "tools",
                "display_name": "Tools",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio import CustomComponent\r\nfrom axiestudio.field_typing import Data\r\nfrom crewai import Task, Agent\r\n\r\nclass TaskComponent(CustomComponent):\r\n    display_name: str = \"Create Task\"\r\n    description: str = \"This component creates a task for an agent.\"\r\n\r\n    def build_config(self):\r\n        return {\r\n            \"description\": {\"display_name\": \"Description\"},\r\n            \"expected_output\": {\"display_name\": \"Expected Output\"},\r\n            \"tools\": {\"display_name\": \"Tools\", \"type\": \"list\", \"item_type\": \"object\", \"optional\": True},\r\n            \"agent\": {\"display_name\": \"Agent\"},\r\n        }\r\n\r\n    def build(self, description: str, expected_output: str, agent: Agent,tools: Optional[List[Tool]] = None) -> Task:\r\n        return Task(\r\n            description=description,\r\n            expected_output=expected_output,\r\n            tools=tools,\r\n            agent=agent\r\n        )\r\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "description": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "description",
                "display_name": "Description",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "Conduct a detailed quality check on AGM date or annual general meeting date for year 2024 for company {company}, make sure you suggest best practice around utilizing best sources, compile multiple AGM dates from multiple sources and advise on best quality source, you might focus on single best source or take a majority vote to get correct date, always make sure that it’s an AGM date and not any other date, verify that the date provided is not Ordinary General Meeting of Shareholders or Special General Meeting of Shareholders as it’s different from Annual General Meeting"
              },
              "expected_output": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "expected_output",
                "display_name": "Expected Output",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "A quality analysis report on AGM dates with its source URLs for year 2024 for given company {company}, provide multiple AGM dates and its source URLs, always provide best final AGM date and its source URL which has very high confidence, make sure it’s as detailed as possible, always make sure AGM date is for given year 2024, always make sure that it’s an AGM date, it’s possible that sometimes AGM date is yet to be published. You can say NA in that case, always double check the Year, it should be 2024."
              }
            },
            "description": "This component creates a task for an agent.",
            "base_classes": [
              "Task"
            ],
            "display_name": "QA Task",
            "documentation": "",
            "custom_fields": {
              "description": null,
              "expected_output": null,
              "agent": null,
              "tools": null
            },
            "output_types": [
              "Task"
            ],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Task"
                ],
                "selected": "Task",
                "name": "task",
                "hidden": false,
                "display_name": "Task",
                "method": null,
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [],
            "beta": false,
            "edited": true
          },
          "id": "CustomComponent-9Mc0i",
          "description": "This component creates a task for an agent.",
          "display_name": "Custom Component"
        },
        "selected": false,
        "width": 384,
        "height": 499,
        "dragging": false
      },
      {
        "id": "CustomComponent-5KUly",
        "type": "genericNode",
        "position": {
          "x": -643.8535253516926,
          "y": 2622.803816443849
        },
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "_type": "CustomComponent",
              "llm": {
                "type": "LanguageModel",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "llm",
                "display_name": "Language Model",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "backstory": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "backstory",
                "display_name": "Backstory",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "As a part of the Lead AGM Extractor team, your mission is to extract AGM dates for year 2024 for company {company}, extract AGM date as a JSON with 3 keys, ‘AGM_Date’, ‘Complete_Source_URL’, ‘Source’, it’s possible that AGM date for company is not yet published, in such case try to say NA, your job is to double validate if date given is actually an AGM date."
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio import CustomComponent\r\nfrom axiestudio.field_typing import LanguageModel, Tool\r\nfrom crewai import Agent\r\nfrom typing import List, Optional\r\n\r\nclass AgentCrewComponent(CustomComponent):\r\n    display_name: str = \"AgentCrew\"\r\n    description: str = \"This component initializes an agent with language model and tools.\"\r\n\r\n    def build_config(self):\r\n        return {\r\n            \"role\": {\"display_name\": \"Role\"},\r\n            \"goal\": {\"display_name\": \"Goal\"},\r\n            \"backstory\": {\"display_name\": \"Backstory\"},\r\n            # \"tools\": {\"display_name\": \"Tools\", \"type\": \"list\", \"item_type\": \"object\", \"optional\": True},  # Torna a entrada opcional\r\n            \"llm\": {\"display_name\": \"Language Model\", \"field_type\": \"object\"},\r\n        }\r\n\r\n    def build(self, role: str, goal: str, backstory: str, llm: LanguageModel) -> Agent:\r\n        \r\n        try:\r\n            task =Agent(\r\n            role=role,\r\n            goal=goal,\r\n            backstory=backstory,\r\n            # tools=tools,  # Passa a lista de ferramentas diretamente\r\n            llm=llm,\r\n            verbose=True\r\n            )\r\n        # Se \"tools\" não for especificado, define como uma lista vazia\r\n        except Exception as e:\r\n            print(f\"Error in Date Extraction task with error {e}\")\r\n      \r\n        \r\n        # Supondo que cada ferramenta na lista seja um objeto já inicializado e pronto para uso\r\n        return task\r\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "goal": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "goal",
                "display_name": "Goal",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "Your goal is to extract AGM dates or annual general meeting dates for year 2024 for given company {company} your goal is to accurately extract validated AGM date"
              },
              "role": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "role",
                "display_name": "Role",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "Lead AGM Extractor"
              }
            },
            "description": "This component initializes an agent with language model and tools.",
            "base_classes": [
              "Agent",
              "BaseAgent"
            ],
            "display_name": "Lead AGM Extractor",
            "documentation": "",
            "custom_fields": {
              "role": null,
              "goal": null,
              "backstory": null,
              "llm": null
            },
            "output_types": [
              "Agent"
            ],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Agent"
                ],
                "selected": "Agent",
                "name": "agent",
                "hidden": false,
                "display_name": "Agent",
                "method": null,
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [],
            "beta": false,
            "edited": true
          },
          "id": "CustomComponent-5KUly",
          "description": "This component initializes an agent with language model and tools.",
          "display_name": "Lead AGM Extractor"
        },
        "selected": false,
        "width": 384,
        "height": 573,
        "dragging": false
      },
      {
        "id": "CustomComponent-9KcwH",
        "type": "genericNode",
        "position": {
          "x": 462.85933320569774,
          "y": 2587.7584200067167
        },
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "_type": "CustomComponent",
              "agent": {
                "type": "Agent",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "agent",
                "display_name": "Agent",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio import CustomComponent\r\nfrom axiestudio.field_typing import Data\r\nfrom crewai import Task, Agent\r\n\r\nclass TaskComponent(CustomComponent):\r\n    display_name: str = \"Create Task\"\r\n    description: str = \"This component creates a task for an agent.\"\r\n\r\n    def build_config(self):\r\n        return {\r\n            \"description\": {\"display_name\": \"Description\"},\r\n            \"expected_output\": {\"display_name\": \"Expected Output\"},\r\n            # \"tools\": {\"display_name\": \"Tools\", \"type\": \"list\", \"item_type\": \"object\", \"optional\": True},\r\n            \"agent\": {\"display_name\": \"Agent\"},\r\n        }\r\n\r\n    def build(self, description: str, expected_output: str, agent: Agent) -> Task:\r\n        \r\n        try:\r\n            task = Task(\r\n            description=description,\r\n            expected_output=expected_output,\r\n            # tools=tools,\r\n            agent=agent\r\n            )\r\n        except Exception as e:\r\n            print(f\"Error in Date Extraction task with error {e}\")\r\n        return task\r\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "description": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "description",
                "display_name": "Description",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "Extract AGM date or annual general meeting date for year 2024 for company {company},  Make sure you provide AGM date, its original source url and source name"
              },
              "expected_output": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "expected_output",
                "display_name": "Expected Output",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "Provide extraction as a user friendly text as well as markdown code with a JSON inside it.   Friendly text: Provide AGM date and where you found this information with a url of source. Do not include \"Friendly text\" it should feel like a chat output. markdown code with a JSON inside : Extract JSON with 3 keys, 'AGM_Date', 'Complete_Source_URL', 'Source' for year 2024 for company {company}, Always validate the JSON format If data is taken from a document, directly provide source url as document link."
              }
            },
            "description": "This component creates a task for an agent.",
            "base_classes": [
              "Task"
            ],
            "display_name": "Extraction Task",
            "documentation": "",
            "custom_fields": {
              "description": null,
              "expected_output": null,
              "agent": null
            },
            "output_types": [
              "Task"
            ],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Task"
                ],
                "selected": "Task",
                "name": "task",
                "hidden": false,
                "display_name": "Task",
                "method": null,
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [],
            "beta": false,
            "edited": false
          },
          "id": "CustomComponent-9KcwH",
          "description": "This component creates a task for an agent.",
          "display_name": "Extraction Task"
        },
        "selected": false,
        "width": 384,
        "height": 451,
        "dragging": false
      },
      {
        "id": "CustomComponent-AS3fl",
        "type": "genericNode",
        "position": {
          "x": -718.9604752858913,
          "y": 65.51464721404214
        },
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "_type": "CustomComponent",
              "api_key": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": true,
                "name": "api_key",
                "display_name": "Provide API key",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": ""
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio.custom import CustomComponent\r\nfrom axiestudio.field_typing import Tool\r\nfrom crewai_tools import SerperDevTool\r\nimport os\r\n\r\nclass SearchGoogleComp(CustomComponent):\r\n    display_name: str = \"Google search Tool\"\r\n    description: str = \"Real-time google search Tool\"\r\n\r\n    def build_config(self):\r\n        return  {\"api_key\": {\"display_name\": \"Provide API key\",\"field_type\": \"str\",\"required\": True,\"password\": True},}\r\n    def build(\r\n        self,api_key:str\r\n    ) -> Tool:\r\n        os.environ[\"SERPER_API_KEY\"] = api_key\r\n        try:\r\n            google_search = SerperDevTool()\r\n            self.status = google_search\r\n        except Exception as e:\r\n            print(f\"Error in google search tool with error {e}\")\r\n        return google_search  # type: ignore",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              }
            },
            "description": "Real-time google search Tool",
            "base_classes": [
              "BaseTool",
              "Generic",
              "object",
              "Runnable",
              "RunnableSerializable",
              "Serializable",
              "Tool"
            ],
            "display_name": "serper.dev API",
            "documentation": "",
            "custom_fields": {
              "api_key": null
            },
            "output_types": [
              "Tool"
            ],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Tool"
                ],
                "selected": "Tool",
                "name": "tool",
                "hidden": false,
                "display_name": "Tool",
                "method": null,
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [],
            "beta": false,
            "edited": true
          },
          "id": "CustomComponent-AS3fl",
          "description": "Real-time google search Tool",
          "display_name": "Custom Component"
        },
        "selected": false,
        "width": 384,
        "height": 309,
        "dragging": false,
        "positionAbsolute": {
          "x": -718.9604752858913,
          "y": 65.51464721404214
        }
      }
    ],
    "edges": [
      {
        "source": "AzureOpenAIModel-lZgTt",
        "sourceHandle": "{œdataTypeœ:œAzureOpenAIModelœ,œidœ:œAzureOpenAIModel-lZgTtœ,œnameœ:œmodel_outputœ,œoutput_typesœ:[œLanguageModelœ]}",
        "target": "CustomComponent-i9KaY",
        "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œCustomComponent-i9KaYœ,œinputTypesœ:null,œtypeœ:œLanguageModelœ}",
        "data": {
          "targetHandle": {
            "fieldName": "llm",
            "id": "CustomComponent-i9KaY",
            "inputTypes": null,
            "type": "LanguageModel"
          },
          "sourceHandle": {
            "dataType": "AzureOpenAIModel",
            "id": "AzureOpenAIModel-lZgTt",
            "name": "model_output",
            "output_types": [
              "LanguageModel"
            ]
          }
        },
        "id": "reactflow__edge-AzureOpenAIModel-lZgTt{œdataTypeœ:œAzureOpenAIModelœ,œidœ:œAzureOpenAIModel-lZgTtœ,œnameœ:œmodel_outputœ,œoutput_typesœ:[œLanguageModelœ]}-CustomComponent-i9KaY{œfieldNameœ:œllmœ,œidœ:œCustomComponent-i9KaYœ,œinputTypesœ:null,œtypeœ:œLanguageModelœ}",
        "className": ""
      },
      {
        "source": "CustomComponent-i9KaY",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-i9KaYœ,œnameœ:œagentœ,œoutput_typesœ:[œAgentœ]}",
        "target": "CustomComponent-VUwou",
        "targetHandle": "{œfieldNameœ:œagentœ,œidœ:œCustomComponent-VUwouœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
        "data": {
          "targetHandle": {
            "fieldName": "agent",
            "id": "CustomComponent-VUwou",
            "inputTypes": null,
            "type": "Agent"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-i9KaY",
            "name": "agent",
            "output_types": [
              "Agent"
            ]
          }
        },
        "id": "reactflow__edge-CustomComponent-i9KaY{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-i9KaYœ,œnameœ:œagentœ,œoutput_typesœ:[œAgentœ]}-CustomComponent-VUwou{œfieldNameœ:œagentœ,œidœ:œCustomComponent-VUwouœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
        "className": ""
      },
      {
        "source": "CustomComponent-i9KaY",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-i9KaYœ,œnameœ:œagentœ,œoutput_typesœ:[œAgentœ]}",
        "target": "CustomComponent-y0WMh",
        "targetHandle": "{œfieldNameœ:œagentsœ,œidœ:œCustomComponent-y0WMhœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
        "data": {
          "targetHandle": {
            "fieldName": "agents",
            "id": "CustomComponent-y0WMh",
            "inputTypes": null,
            "type": "Agent"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-i9KaY",
            "name": "agent",
            "output_types": [
              "Agent"
            ]
          }
        },
        "id": "reactflow__edge-CustomComponent-i9KaY{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-i9KaYœ,œnameœ:œagentœ,œoutput_typesœ:[œAgentœ]}-CustomComponent-y0WMh{œfieldNameœ:œagentsœ,œidœ:œCustomComponent-y0WMhœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
        "className": ""
      },
      {
        "source": "AzureOpenAIModel-lZgTt",
        "sourceHandle": "{œdataTypeœ:œAzureOpenAIModelœ,œidœ:œAzureOpenAIModel-lZgTtœ,œnameœ:œmodel_outputœ,œoutput_typesœ:[œLanguageModelœ]}",
        "target": "CustomComponent-y0WMh",
        "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œCustomComponent-y0WMhœ,œinputTypesœ:null,œtypeœ:œLanguageModelœ}",
        "data": {
          "targetHandle": {
            "fieldName": "llm",
            "id": "CustomComponent-y0WMh",
            "inputTypes": null,
            "type": "LanguageModel"
          },
          "sourceHandle": {
            "dataType": "AzureOpenAIModel",
            "id": "AzureOpenAIModel-lZgTt",
            "name": "model_output",
            "output_types": [
              "LanguageModel"
            ]
          }
        },
        "id": "reactflow__edge-AzureOpenAIModel-lZgTt{œdataTypeœ:œAzureOpenAIModelœ,œidœ:œAzureOpenAIModel-lZgTtœ,œnameœ:œmodel_outputœ,œoutput_typesœ:[œLanguageModelœ]}-CustomComponent-y0WMh{œfieldNameœ:œllmœ,œidœ:œCustomComponent-y0WMhœ,œinputTypesœ:null,œtypeœ:œLanguageModelœ}",
        "className": "",
        "selected": false
      },
      {
        "source": "CustomComponent-VUwou",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-VUwouœ,œnameœ:œtaskœ,œoutput_typesœ:[œTaskœ]}",
        "target": "CustomComponent-y0WMh",
        "targetHandle": "{œfieldNameœ:œtasksœ,œidœ:œCustomComponent-y0WMhœ,œinputTypesœ:null,œtypeœ:œTaskœ}",
        "data": {
          "targetHandle": {
            "fieldName": "tasks",
            "id": "CustomComponent-y0WMh",
            "inputTypes": null,
            "type": "Task"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-VUwou",
            "name": "task",
            "output_types": [
              "Task"
            ]
          }
        },
        "id": "reactflow__edge-CustomComponent-VUwou{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-VUwouœ,œnameœ:œtaskœ,œoutput_typesœ:[œTaskœ]}-CustomComponent-y0WMh{œfieldNameœ:œtasksœ,œidœ:œCustomComponent-y0WMhœ,œinputTypesœ:null,œtypeœ:œTaskœ}",
        "className": ""
      },
      {
        "source": "CustomComponent-y0WMh",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-y0WMhœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}",
        "target": "ChatOutput-2QY5Z",
        "targetHandle": "{œfieldNameœ:œinput_valueœ,œidœ:œChatOutput-2QY5Zœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
        "data": {
          "targetHandle": {
            "fieldName": "input_value",
            "id": "ChatOutput-2QY5Z",
            "inputTypes": [
              "Message"
            ],
            "type": "str"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-y0WMh",
            "name": "message",
            "output_types": [
              "Message"
            ]
          }
        },
        "id": "reactflow__edge-CustomComponent-y0WMh{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-y0WMhœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}-ChatOutput-2QY5Z{œfieldNameœ:œinput_valueœ,œidœ:œChatOutput-2QY5Zœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
        "className": ""
      },
      {
        "source": "ChatInput-PxARz",
        "sourceHandle": "{œdataTypeœ:œChatInputœ,œidœ:œChatInput-PxARzœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}",
        "target": "CustomComponent-y0WMh",
        "targetHandle": "{œfieldNameœ:œcompanyœ,œidœ:œCustomComponent-y0WMhœ,œinputTypesœ:null,œtypeœ:œMessageœ}",
        "data": {
          "targetHandle": {
            "fieldName": "company",
            "id": "CustomComponent-y0WMh",
            "inputTypes": null,
            "type": "Message"
          },
          "sourceHandle": {
            "dataType": "ChatInput",
            "id": "ChatInput-PxARz",
            "name": "message",
            "output_types": [
              "Message"
            ]
          }
        },
        "id": "reactflow__edge-ChatInput-PxARz{œdataTypeœ:œChatInputœ,œidœ:œChatInput-PxARzœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}-CustomComponent-y0WMh{œfieldNameœ:œcompanyœ,œidœ:œCustomComponent-y0WMhœ,œinputTypesœ:null,œtypeœ:œMessageœ}",
        "className": ""
      },
      {
        "source": "CustomComponent-ClTw1",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-ClTw1œ,œnameœ:œtoolœ,œoutput_typesœ:[œToolœ]}",
        "target": "CustomComponent-VUwou",
        "targetHandle": "{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-VUwouœ,œinputTypesœ:null,œtypeœ:œToolœ}",
        "data": {
          "targetHandle": {
            "fieldName": "tools",
            "id": "CustomComponent-VUwou",
            "inputTypes": null,
            "type": "Tool"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-ClTw1",
            "name": "tool",
            "output_types": [
              "Tool"
            ]
          }
        },
        "id": "reactflow__edge-CustomComponent-ClTw1{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-ClTw1œ,œnameœ:œtoolœ,œoutput_typesœ:[œToolœ]}-CustomComponent-VUwou{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-VUwouœ,œinputTypesœ:null,œtypeœ:œToolœ}",
        "className": ""
      },
      {
        "source": "CustomComponent-2lsSs",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-2lsSsœ,œnameœ:œtoolœ,œoutput_typesœ:[œToolœ]}",
        "target": "CustomComponent-VUwou",
        "targetHandle": "{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-VUwouœ,œinputTypesœ:null,œtypeœ:œToolœ}",
        "data": {
          "targetHandle": {
            "fieldName": "tools",
            "id": "CustomComponent-VUwou",
            "inputTypes": null,
            "type": "Tool"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-2lsSs",
            "name": "tool",
            "output_types": [
              "Tool"
            ]
          }
        },
        "id": "reactflow__edge-CustomComponent-2lsSs{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-2lsSsœ,œnameœ:œtoolœ,œoutput_typesœ:[œToolœ]}-CustomComponent-VUwou{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-VUwouœ,œinputTypesœ:null,œtypeœ:œToolœ}",
        "className": ""
      },
      {
        "source": "CustomComponent-kGnTe",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-kGnTeœ,œnameœ:œtoolœ,œoutput_typesœ:[œToolœ]}",
        "target": "CustomComponent-VUwou",
        "targetHandle": "{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-VUwouœ,œinputTypesœ:null,œtypeœ:œToolœ}",
        "data": {
          "targetHandle": {
            "fieldName": "tools",
            "id": "CustomComponent-VUwou",
            "inputTypes": null,
            "type": "Tool"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-kGnTe",
            "name": "tool",
            "output_types": [
              "Tool"
            ]
          }
        },
        "id": "reactflow__edge-CustomComponent-kGnTe{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-kGnTeœ,œnameœ:œtoolœ,œoutput_typesœ:[œToolœ]}-CustomComponent-VUwou{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-VUwouœ,œinputTypesœ:null,œtypeœ:œToolœ}",
        "className": ""
      },
      {
        "source": "AzureOpenAIModel-lZgTt",
        "sourceHandle": "{œdataTypeœ:œAzureOpenAIModelœ,œidœ:œAzureOpenAIModel-lZgTtœ,œnameœ:œmodel_outputœ,œoutput_typesœ:[œLanguageModelœ]}",
        "target": "CustomComponent-g1iqe",
        "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œCustomComponent-g1iqeœ,œinputTypesœ:null,œtypeœ:œLanguageModelœ}",
        "data": {
          "targetHandle": {
            "fieldName": "llm",
            "id": "CustomComponent-g1iqe",
            "inputTypes": null,
            "type": "LanguageModel"
          },
          "sourceHandle": {
            "dataType": "AzureOpenAIModel",
            "id": "AzureOpenAIModel-lZgTt",
            "name": "model_output",
            "output_types": [
              "LanguageModel"
            ]
          }
        },
        "id": "reactflow__edge-AzureOpenAIModel-lZgTt{œdataTypeœ:œAzureOpenAIModelœ,œidœ:œAzureOpenAIModel-lZgTtœ,œnameœ:œmodel_outputœ,œoutput_typesœ:[œLanguageModelœ]}-CustomComponent-g1iqe{œfieldNameœ:œllmœ,œidœ:œCustomComponent-g1iqeœ,œinputTypesœ:null,œtypeœ:œLanguageModelœ}",
        "className": ""
      },
      {
        "source": "CustomComponent-g1iqe",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-g1iqeœ,œnameœ:œagentœ,œoutput_typesœ:[œAgentœ]}",
        "target": "CustomComponent-9Mc0i",
        "targetHandle": "{œfieldNameœ:œagentœ,œidœ:œCustomComponent-9Mc0iœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
        "data": {
          "targetHandle": {
            "fieldName": "agent",
            "id": "CustomComponent-9Mc0i",
            "inputTypes": null,
            "type": "Agent"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-g1iqe",
            "name": "agent",
            "output_types": [
              "Agent"
            ]
          }
        },
        "id": "reactflow__edge-CustomComponent-g1iqe{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-g1iqeœ,œnameœ:œagentœ,œoutput_typesœ:[œAgentœ]}-CustomComponent-9Mc0i{œfieldNameœ:œagentœ,œidœ:œCustomComponent-9Mc0iœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
        "className": ""
      },
      {
        "source": "CustomComponent-ClTw1",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-ClTw1œ,œnameœ:œtoolœ,œoutput_typesœ:[œToolœ]}",
        "target": "CustomComponent-9Mc0i",
        "targetHandle": "{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-9Mc0iœ,œinputTypesœ:null,œtypeœ:œToolœ}",
        "data": {
          "targetHandle": {
            "fieldName": "tools",
            "id": "CustomComponent-9Mc0i",
            "inputTypes": null,
            "type": "Tool"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-ClTw1",
            "name": "tool",
            "output_types": [
              "Tool"
            ]
          }
        },
        "id": "reactflow__edge-CustomComponent-ClTw1{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-ClTw1œ,œnameœ:œtoolœ,œoutput_typesœ:[œToolœ]}-CustomComponent-9Mc0i{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-9Mc0iœ,œinputTypesœ:null,œtypeœ:œToolœ}",
        "className": ""
      },
      {
        "source": "CustomComponent-kGnTe",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-kGnTeœ,œnameœ:œtoolœ,œoutput_typesœ:[œToolœ]}",
        "target": "CustomComponent-9Mc0i",
        "targetHandle": "{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-9Mc0iœ,œinputTypesœ:null,œtypeœ:œToolœ}",
        "data": {
          "targetHandle": {
            "fieldName": "tools",
            "id": "CustomComponent-9Mc0i",
            "inputTypes": null,
            "type": "Tool"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-kGnTe",
            "name": "tool",
            "output_types": [
              "Tool"
            ]
          }
        },
        "id": "reactflow__edge-CustomComponent-kGnTe{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-kGnTeœ,œnameœ:œtoolœ,œoutput_typesœ:[œToolœ]}-CustomComponent-9Mc0i{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-9Mc0iœ,œinputTypesœ:null,œtypeœ:œToolœ}",
        "className": ""
      },
      {
        "source": "CustomComponent-2lsSs",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-2lsSsœ,œnameœ:œtoolœ,œoutput_typesœ:[œToolœ]}",
        "target": "CustomComponent-9Mc0i",
        "targetHandle": "{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-9Mc0iœ,œinputTypesœ:null,œtypeœ:œToolœ}",
        "data": {
          "targetHandle": {
            "fieldName": "tools",
            "id": "CustomComponent-9Mc0i",
            "inputTypes": null,
            "type": "Tool"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-2lsSs",
            "name": "tool",
            "output_types": [
              "Tool"
            ]
          }
        },
        "id": "reactflow__edge-CustomComponent-2lsSs{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-2lsSsœ,œnameœ:œtoolœ,œoutput_typesœ:[œToolœ]}-CustomComponent-9Mc0i{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-9Mc0iœ,œinputTypesœ:null,œtypeœ:œToolœ}",
        "className": ""
      },
      {
        "source": "CustomComponent-9Mc0i",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-9Mc0iœ,œnameœ:œtaskœ,œoutput_typesœ:[œTaskœ]}",
        "target": "CustomComponent-y0WMh",
        "targetHandle": "{œfieldNameœ:œtasksœ,œidœ:œCustomComponent-y0WMhœ,œinputTypesœ:null,œtypeœ:œTaskœ}",
        "data": {
          "targetHandle": {
            "fieldName": "tasks",
            "id": "CustomComponent-y0WMh",
            "inputTypes": null,
            "type": "Task"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-9Mc0i",
            "name": "task",
            "output_types": [
              "Task"
            ]
          }
        },
        "id": "reactflow__edge-CustomComponent-9Mc0i{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-9Mc0iœ,œnameœ:œtaskœ,œoutput_typesœ:[œTaskœ]}-CustomComponent-y0WMh{œfieldNameœ:œtasksœ,œidœ:œCustomComponent-y0WMhœ,œinputTypesœ:null,œtypeœ:œTaskœ}",
        "className": ""
      },
      {
        "source": "AzureOpenAIModel-lZgTt",
        "sourceHandle": "{œdataTypeœ:œAzureOpenAIModelœ,œidœ:œAzureOpenAIModel-lZgTtœ,œnameœ:œmodel_outputœ,œoutput_typesœ:[œLanguageModelœ]}",
        "target": "CustomComponent-5KUly",
        "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œCustomComponent-5KUlyœ,œinputTypesœ:null,œtypeœ:œLanguageModelœ}",
        "data": {
          "targetHandle": {
            "fieldName": "llm",
            "id": "CustomComponent-5KUly",
            "inputTypes": null,
            "type": "LanguageModel"
          },
          "sourceHandle": {
            "dataType": "AzureOpenAIModel",
            "id": "AzureOpenAIModel-lZgTt",
            "name": "model_output",
            "output_types": [
              "LanguageModel"
            ]
          }
        },
        "id": "reactflow__edge-AzureOpenAIModel-lZgTt{œdataTypeœ:œAzureOpenAIModelœ,œidœ:œAzureOpenAIModel-lZgTtœ,œnameœ:œmodel_outputœ,œoutput_typesœ:[œLanguageModelœ]}-CustomComponent-5KUly{œfieldNameœ:œllmœ,œidœ:œCustomComponent-5KUlyœ,œinputTypesœ:null,œtypeœ:œLanguageModelœ}",
        "className": ""
      },
      {
        "source": "CustomComponent-5KUly",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-5KUlyœ,œnameœ:œagentœ,œoutput_typesœ:[œAgentœ]}",
        "target": "CustomComponent-9KcwH",
        "targetHandle": "{œfieldNameœ:œagentœ,œidœ:œCustomComponent-9KcwHœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
        "data": {
          "targetHandle": {
            "fieldName": "agent",
            "id": "CustomComponent-9KcwH",
            "inputTypes": null,
            "type": "Agent"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-5KUly",
            "name": "agent",
            "output_types": [
              "Agent"
            ]
          }
        },
        "id": "reactflow__edge-CustomComponent-5KUly{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-5KUlyœ,œnameœ:œagentœ,œoutput_typesœ:[œAgentœ]}-CustomComponent-9KcwH{œfieldNameœ:œagentœ,œidœ:œCustomComponent-9KcwHœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
        "className": ""
      },
      {
        "source": "CustomComponent-9KcwH",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-9KcwHœ,œnameœ:œtaskœ,œoutput_typesœ:[œTaskœ]}",
        "target": "CustomComponent-y0WMh",
        "targetHandle": "{œfieldNameœ:œtasksœ,œidœ:œCustomComponent-y0WMhœ,œinputTypesœ:null,œtypeœ:œTaskœ}",
        "data": {
          "targetHandle": {
            "fieldName": "tasks",
            "id": "CustomComponent-y0WMh",
            "inputTypes": null,
            "type": "Task"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-9KcwH",
            "name": "task",
            "output_types": [
              "Task"
            ]
          }
        },
        "id": "reactflow__edge-CustomComponent-9KcwH{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-9KcwHœ,œnameœ:œtaskœ,œoutput_typesœ:[œTaskœ]}-CustomComponent-y0WMh{œfieldNameœ:œtasksœ,œidœ:œCustomComponent-y0WMhœ,œinputTypesœ:null,œtypeœ:œTaskœ}",
        "className": ""
      },
      {
        "source": "CustomComponent-AS3fl",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-AS3flœ,œnameœ:œtoolœ,œoutput_typesœ:[œToolœ]}",
        "target": "CustomComponent-VUwou",
        "targetHandle": "{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-VUwouœ,œinputTypesœ:null,œtypeœ:œToolœ}",
        "data": {
          "targetHandle": {
            "fieldName": "tools",
            "id": "CustomComponent-VUwou",
            "inputTypes": null,
            "type": "Tool"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-AS3fl",
            "name": "tool",
            "output_types": [
              "Tool"
            ]
          }
        },
        "id": "reactflow__edge-CustomComponent-AS3fl{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-AS3flœ,œnameœ:œtoolœ,œoutput_typesœ:[œToolœ]}-CustomComponent-VUwou{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-VUwouœ,œinputTypesœ:null,œtypeœ:œToolœ}",
        "className": ""
      },
      {
        "source": "CustomComponent-AS3fl",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-AS3flœ,œnameœ:œtoolœ,œoutput_typesœ:[œToolœ]}",
        "target": "CustomComponent-9Mc0i",
        "targetHandle": "{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-9Mc0iœ,œinputTypesœ:null,œtypeœ:œToolœ}",
        "data": {
          "targetHandle": {
            "fieldName": "tools",
            "id": "CustomComponent-9Mc0i",
            "inputTypes": null,
            "type": "Tool"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-AS3fl",
            "name": "tool",
            "output_types": [
              "Tool"
            ]
          }
        },
        "id": "reactflow__edge-CustomComponent-AS3fl{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-AS3flœ,œnameœ:œtoolœ,œoutput_typesœ:[œToolœ]}-CustomComponent-9Mc0i{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-9Mc0iœ,œinputTypesœ:null,œtypeœ:œToolœ}",
        "className": ""
      },
      {
        "source": "CustomComponent-g1iqe",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-g1iqeœ,œnameœ:œagentœ,œoutput_typesœ:[œAgentœ]}",
        "target": "CustomComponent-y0WMh",
        "targetHandle": "{œfieldNameœ:œagentsœ,œidœ:œCustomComponent-y0WMhœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
        "data": {
          "targetHandle": {
            "fieldName": "agents",
            "id": "CustomComponent-y0WMh",
            "inputTypes": null,
            "type": "Agent"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-g1iqe",
            "name": "agent",
            "output_types": [
              "Agent"
            ]
          }
        },
        "id": "reactflow__edge-CustomComponent-g1iqe{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-g1iqeœ,œnameœ:œagentœ,œoutput_typesœ:[œAgentœ]}-CustomComponent-y0WMh{œfieldNameœ:œagentsœ,œidœ:œCustomComponent-y0WMhœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
        "className": ""
      },
      {
        "source": "CustomComponent-5KUly",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-5KUlyœ,œnameœ:œagentœ,œoutput_typesœ:[œAgentœ]}",
        "target": "CustomComponent-y0WMh",
        "targetHandle": "{œfieldNameœ:œagentsœ,œidœ:œCustomComponent-y0WMhœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
        "data": {
          "targetHandle": {
            "fieldName": "agents",
            "id": "CustomComponent-y0WMh",
            "inputTypes": null,
            "type": "Agent"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-5KUly",
            "name": "agent",
            "output_types": [
              "Agent"
            ]
          }
        },
        "id": "reactflow__edge-CustomComponent-5KUly{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-5KUlyœ,œnameœ:œagentœ,œoutput_typesœ:[œAgentœ]}-CustomComponent-y0WMh{œfieldNameœ:œagentsœ,œidœ:œCustomComponent-y0WMhœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
        "className": ""
      }
    ],
    "viewport": {
      "x": 0,
      "y": 0,
      "zoom": 1
    }
  },
  "metadata": {
    "CustomComponent": {
      "count": 11
    },
    "AzureOpenAIModel": {
      "count": 1
    },
    "ChatOutput": {
      "count": 1
    },
    "ChatInput": {
      "count": 1
    },
    "total": 14
  },
  "original": {
    "id": "2527171c-39b2-4826-ae18-6aa3b83f5253",
    "name": "Crewai Flow - AGM date extraction",
    "description": "AGM date extraction using CrewAI custom component",
    "is_component": false,
    "liked_by_count": "0",
    "downloads_count": "0",
    "metadata": {
      "CustomComponent": {
        "count": 11
      },
      "AzureOpenAIModel": {
        "count": 1
      },
      "ChatOutput": {
        "count": 1
      },
      "ChatInput": {
        "count": 1
      },
      "total": 14
    },
    "last_tested_version": "1.0.5",
    "private": true,
    "data": {
      "nodes": [
        {
          "id": "CustomComponent-i9KaY",
          "type": "genericNode",
          "position": {
            "x": -558.3167551174221,
            "y": 605.8711642071464
          },
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "_type": "CustomComponent",
                "llm": {
                  "type": "LanguageModel",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "llm",
                  "display_name": "Language Model",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "backstory": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "backstory",
                  "display_name": "Backstory",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "Identify AGM dates or annual general meeting dates for year 2024 for given company {company} your goal is to accurately identify AGM date"
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio import CustomComponent\r\nfrom axiestudio.field_typing import LanguageModel, Tool\r\nfrom crewai import Agent\r\nfrom typing import List, Optional\r\n\r\nclass AgentCrewComponent(CustomComponent):\r\n    display_name: str = \"AgentCrew\"\r\n    description: str = \"This component initializes an agent with language model and tools.\"\r\n\r\n    def build_config(self):\r\n        return {\r\n            \"role\": {\"display_name\": \"Role\"},\r\n            \"goal\": {\"display_name\": \"Goal\"},\r\n            \"backstory\": {\"display_name\": \"Backstory\"},\r\n            # \"tools\": {\"display_name\": \"Tools\", \"type\": \"list\", \"item_type\": \"object\", \"optional\": True},  # Torna a entrada opcional\r\n            \"llm\": {\"display_name\": \"Language Model\", \"field_type\": \"object\"},\r\n        }\r\n\r\n    # def build(self, role: str, goal: str, backstory: str, llm: LanguageModel, tools: Optional[List[Tool]] = None) -> Agent:\r\n    def build(self, role: str, goal: str, backstory: str, llm: LanguageModel) -> Agent:\r\n\r\n        # # Se \"tools\" não for especificado, define como uma lista vazia\r\n        # if tools is None:\r\n        #     tools = []\r\n        \r\n        try:\r\n            agent = Agent(\r\n            role=role,\r\n            goal=goal,\r\n            backstory=backstory,\r\n            llm=llm,\r\n            verbose=True\r\n            )\r\n        except Exception as e:\r\n            print(f\"Error in AGM Research Agent agent with error {e}\")\r\n        \r\n        # Supondo que cada ferramenta na lista seja um objeto já inicializado e pronto para uso\r\n        return agent\r\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "goal": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "goal",
                  "display_name": "Goal",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "As a part of the AGM research analyst team, your mission is to identify AGM dates for year 2024 for company {company}. Make sure you do a comprehensive research and identify high quality source for company like stock exchange websites or company websites etc. Since you are an expert you know that Ordinary General Meeting of Shareholders or special General Meeting of Shareholders is different from Annual general meeting. We are only interested in annual general meeting or AGM date. You should also search within financial results documents for AGM date. You should take below path for search 1. First do a internet search 2. Look for official website or exchange results 3. If you dont find details, take a path of looking at official website and then find AGM date using website search tool or look for financial documents"
                },
                "role": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "role",
                  "display_name": "Role",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "AGM research analyst"
                }
              },
              "description": "This component initializes an agent with language model and tools.",
              "base_classes": [
                "Agent",
                "BaseAgent"
              ],
              "display_name": "AGM Research Agent",
              "documentation": "",
              "custom_fields": {
                "role": null,
                "goal": null,
                "backstory": null,
                "llm": null
              },
              "output_types": [
                "Agent"
              ],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Agent"
                  ],
                  "selected": "Agent",
                  "name": "agent",
                  "hidden": false,
                  "display_name": "Agent",
                  "method": null,
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [],
              "beta": false,
              "edited": true
            },
            "id": "CustomComponent-i9KaY",
            "description": "This component initializes an agent with language model and tools.",
            "display_name": "AGM Research Agent"
          },
          "selected": false,
          "width": 384,
          "height": 573,
          "positionAbsolute": {
            "x": -558.3167551174221,
            "y": 605.8711642071464
          },
          "dragging": false
        },
        {
          "id": "CustomComponent-VUwou",
          "type": "genericNode",
          "position": {
            "x": 208.05430105134667,
            "y": 103.31039667717869
          },
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "_type": "CustomComponent",
                "agent": {
                  "type": "Agent",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "agent",
                  "display_name": "Agent",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "tools": {
                  "type": "Tool",
                  "required": false,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "tools",
                  "display_name": "Tools",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio import CustomComponent\r\nfrom axiestudio.field_typing import Data\r\nfrom crewai import Task, Agent\r\n\r\nclass TaskComponent(CustomComponent):\r\n    display_name: str = \"Create Task\"\r\n    description: str = \"This component creates a task for an agent.\"\r\n\r\n    def build_config(self):\r\n        return {\r\n            \"description\": {\"display_name\": \"Description\"},\r\n            \"expected_output\": {\"display_name\": \"Expected Output\"},\r\n            \"tools\": {\"display_name\": \"Tools\", \"type\": \"list\", \"item_type\": \"object\", \"optional\": True},\r\n            \"agent\": {\"display_name\": \"Agent\"},\r\n        }\r\n\r\n    def build(self, description: str, expected_output: str, agent: Agent,tools: Optional[List[Tool]] = None) -> Task:\r\n        try:\r\n            task = Task(\r\n            description=description,\r\n            expected_output=expected_output,\r\n            tools=tools,\r\n            agent=agent\r\n            )\r\n        except Exception as e:\r\n            print(f\"Error in Date Extraction task with error {e}\")\r\n        return task\r\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "description": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "description",
                  "display_name": "Description",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "Conduct an in-depth search for AGM date or annual general meeting date for year 2024 for company {company}. Utilize all available data sources to compile a detailed analysis, focusing on getting multiple AGM dates from different sources. Don’t make assumptions and only use information you absolutely sure about. If there are document links within website, try to load document and search for date using pdf search tool. Since you are an expert you know that Ordinary General Meeting of Shareholders or special General Meeting of Shareholders is different from Annual general meeting. We are only interested in annual general meeting or AGM date. If you find official website then you can also look into relevant Financial Results documents to find the AGM date using PDF Search tool."
                },
                "expected_output": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "expected_output",
                  "display_name": "Expected Output",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "A comprehensive report on AGM dates with its source urls for year 2024 for given company {company}, Make sure its as detailed as possible"
                }
              },
              "description": "This component creates a task for an agent.",
              "base_classes": [
                "Task"
              ],
              "display_name": "Search For AGM Date",
              "documentation": "",
              "custom_fields": {
                "description": null,
                "expected_output": null,
                "agent": null,
                "tools": null
              },
              "output_types": [
                "Task"
              ],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Task"
                  ],
                  "selected": "Task",
                  "name": "task",
                  "hidden": false,
                  "display_name": "Task",
                  "method": null,
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [],
              "beta": false,
              "edited": true
            },
            "id": "CustomComponent-VUwou",
            "description": "This component creates a task for an agent.",
            "display_name": "Search For AGM Date"
          },
          "selected": false,
          "width": 384,
          "height": 499,
          "dragging": false,
          "positionAbsolute": {
            "x": 208.05430105134667,
            "y": 103.31039667717869
          }
        },
        {
          "id": "CustomComponent-y0WMh",
          "type": "genericNode",
          "position": {
            "x": 1207.2398017997143,
            "y": 256.78893770039446
          },
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "_type": "CustomComponent",
                "agents": {
                  "type": "Agent",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "agents",
                  "display_name": "Agents",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "company": {
                  "type": "Message",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "company",
                  "display_name": "company name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "llm": {
                  "type": "LanguageModel",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "llm",
                  "display_name": "Language Model",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "tasks": {
                  "type": "Task",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "tasks",
                  "display_name": "Tasks",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio import CustomComponent\r\nfrom crewai import Crew, Task, Agent\r\nfrom typing import List, Optional\r\nfrom axiestudio.field_typing import Text,LanguageModel\r\nfrom axiestudio.schema.message import Message\r\n\r\nimport os\r\n\r\nfrom crewai.telemetry import Telemetry\r\n\r\n\r\n\r\n\r\nclass CrewComponent(CustomComponent):\r\n    display_name: str = \"Initialize Crew\"\r\n    description: str = \"This component initializes a crew to execute tasks with multiple agents.\"\r\n\r\n    def build_config(self):\r\n        return {\r\n            \"agents\": {\"display_name\": \"Agents\", \"type\": \"list\", \"item_type\": \"Agent\"},  # Define a entrada como lista de Agent\r\n            \"tasks\": {\"display_name\": \"Tasks\", \"type\": \"list\", \"item_type\": \"Task\"},  # Define a entrada como lista de Task\r\n            \"company\": {\"display_name\": \"company name\", \"type\": \"Message\"},  # New topic field\r\n            \"verbose\": {\"display_name\": \"Verbose Level\", \"value\": 2},\r\n            \"max_iterations\": {\"display_name\": \"Max Iterations\", \"value\": 10},\r\n           \"llm\": {\"display_name\": \"Language Model\", \"field_type\": \"object\"},\r\n        }\r\n\r\n    def build(self, agents: List[Agent], tasks: List[Task], company:Message, verbose: int, max_iterations: int,llm: LanguageModel) -> Message:\r\n        \"\"\"Constrói o objeto Crew e executa as tarefas com os agentes coletados.\"\"\"\r\n        \r\n        os.environ[\"OTEL_SDK_DISABLED\"] = \"true\"\r\n        def noop(*args, **kwargs):\r\n            print(\"Telemetry method called and noop'd\\n\")\r\n            pass\r\n        \r\n        \r\n        for attr in dir(Telemetry):\r\n            if callable(getattr(Telemetry, attr)) and not attr.startswith(\"__\"):\r\n                setattr(Telemetry, attr, noop)\r\n        if not agents or not tasks:\r\n            raise ValueError(\"No agents or tasks have been added.\")\r\n        \r\n        inputs = {\r\n            'company':company\r\n        }\r\n        # Use the topic to guide the tasks or modify task execution context here if necessary\r\n        response = Crew(\r\n            agents=agents,\r\n            tasks=tasks,\r\n            verbose=verbose,\r\n            max_iterations=max_iterations,\r\n            memory=False,\r\n            llm=llm\r\n        )\r\n        \r\n        try:\r\n            result = response.kickoff(inputs=inputs)\r\n        except Exception as e:\r\n            print(f\"Error in kickoff function with {e}\")\r\n        \r\n        message = Message(\r\n            text=result,\r\n        )\r\n\r\n        return message  # Assuming kickoff returns Text type or adjust accordingly\r\n\r\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "max_iterations": {
                  "type": "int",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "2",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "max_iterations",
                  "display_name": "Max Iterations",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "verbose": {
                  "type": "int",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": 2,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "verbose",
                  "display_name": "Verbose Level",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                }
              },
              "description": "This component initializes a crew to execute tasks with multiple agents.",
              "base_classes": [
                "Data",
                "Message"
              ],
              "display_name": "CrewAi",
              "documentation": "",
              "custom_fields": {
                "agents": null,
                "tasks": null,
                "company": null,
                "verbose": null,
                "max_iterations": null,
                "llm": null
              },
              "output_types": [
                "Message"
              ],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "message",
                  "hidden": false,
                  "display_name": "Message",
                  "method": null,
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [],
              "beta": false,
              "edited": false
            },
            "id": "CustomComponent-y0WMh",
            "description": "This component initializes a crew to execute tasks with multiple agents.",
            "display_name": "CrewAi"
          },
          "selected": true,
          "width": 384,
          "height": 607,
          "dragging": false,
          "positionAbsolute": {
            "x": 1207.2398017997143,
            "y": 256.78893770039446
          }
        },
        {
          "id": "AzureOpenAIModel-lZgTt",
          "type": "genericNode",
          "position": {
            "x": -1330.3479764092604,
            "y": 407.3517128898295
          },
          "data": {
            "type": "AzureOpenAIModel",
            "node": {
              "template": {
                "_type": "Component",
                "api_key": {
                  "load_from_db": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "",
                  "name": "api_key",
                  "display_name": "API Key",
                  "advanced": false,
                  "input_types": [],
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "password": true,
                  "type": "str"
                },
                "api_version": {
                  "trace_as_metadata": true,
                  "options": [
                    "2023-03-15-preview",
                    "2023-05-15",
                    "2023-06-01-preview",
                    "2023-07-01-preview",
                    "2023-08-01-preview",
                    "2023-09-01-preview",
                    "2023-12-01-preview",
                    "2024-04-09",
                    "2024-05-13"
                  ],
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "2023-07-01-preview",
                  "name": "api_version",
                  "display_name": "API Version",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str"
                },
                "azure_deployment": {
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "vanilla-gpt-35-turbo-16k",
                  "name": "azure_deployment",
                  "display_name": "Deployment Name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str"
                },
                "azure_endpoint": {
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "https://cser-dva2-dp-openapi002.openai.azure.com/",
                  "name": "azure_endpoint",
                  "display_name": "Azure Endpoint",
                  "advanced": false,
                  "dynamic": false,
                  "info": "Your Azure endpoint, including the resource. Example: `https://example-resource.azure.openai.com/`",
                  "title_case": false,
                  "type": "str"
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from langchain_openai import AzureChatOpenAI\nfrom pydantic.v1 import SecretStr\n\nfrom axiestudio.base.constants import STREAM_INFO_TEXT\nfrom axiestudio.base.models.model import LCModelComponent\nfrom axiestudio.field_typing import LanguageModel\nfrom axiestudio.io import BoolInput, DropdownInput, FloatInput, IntInput, MessageInput, Output, SecretStrInput, StrInput\n\n\nclass AzureChatOpenAIComponent(LCModelComponent):\n    display_name: str = \"Azure OpenAI\"\n    description: str = \"Generate text using Azure OpenAI LLMs.\"\n    documentation: str = \"https://python.langchain.com/docs/integrations/llms/azure_openai\"\n    beta = False\n    icon = \"Azure\"\n\n    AZURE_OPENAI_MODELS = [\n        \"gpt-35-turbo\",\n        \"gpt-35-turbo-16k\",\n        \"gpt-35-turbo-instruct\",\n        \"gpt-4\",\n        \"gpt-4-32k\",\n        \"gpt-4o\",\n        \"gpt-4-turbo\",\n    ]\n\n    AZURE_OPENAI_API_VERSIONS = [\n        \"2023-03-15-preview\",\n        \"2023-05-15\",\n        \"2023-06-01-preview\",\n        \"2023-07-01-preview\",\n        \"2023-08-01-preview\",\n        \"2023-09-01-preview\",\n        \"2023-12-01-preview\",\n        \"2024-04-09\",\n        \"2024-05-13\",\n    ]\n\n    inputs = [\n        DropdownInput(\n            name=\"model\",\n            display_name=\"Model Name\",\n            options=AZURE_OPENAI_MODELS,\n            value=AZURE_OPENAI_MODELS[0],\n        ),\n        StrInput(\n            name=\"azure_endpoint\",\n            display_name=\"Azure Endpoint\",\n            info=\"Your Azure endpoint, including the resource. Example: `https://example-resource.azure.openai.com/`\",\n        ),\n        StrInput(name=\"azure_deployment\", display_name=\"Deployment Name\"),\n        DropdownInput(\n            name=\"api_version\",\n            display_name=\"API Version\",\n            options=AZURE_OPENAI_API_VERSIONS,\n            value=AZURE_OPENAI_API_VERSIONS[-1],\n            advanced=True,\n        ),\n        SecretStrInput(name=\"api_key\", display_name=\"API Key\", password=True),\n        FloatInput(name=\"temperature\", display_name=\"Temperature\", value=0.7),\n        IntInput(\n            name=\"max_tokens\",\n            display_name=\"Max Tokens\",\n            advanced=True,\n            info=\"The maximum number of tokens to generate. Set to 0 for unlimited tokens.\",\n        ),\n        MessageInput(name=\"input_value\", display_name=\"Input\"),\n        BoolInput(name=\"stream\", display_name=\"Stream\", info=STREAM_INFO_TEXT, advanced=True),\n        StrInput(\n            name=\"system_message\",\n            display_name=\"System Message\",\n            advanced=True,\n            info=\"System message to pass to the model.\",\n        ),\n    ]\n    outputs = [\n        Output(display_name=\"Text\", name=\"text_output\", method=\"text_response\"),\n        Output(display_name=\"Language Model\", name=\"model_output\", method=\"model_response\"),\n    ]\n\n    def model_response(self) -> LanguageModel:\n        model = self.model\n        azure_endpoint = self.azure_endpoint\n        azure_deployment = self.azure_deployment\n        api_version = self.api_version\n        api_key = self.api_key\n        temperature = self.temperature\n        max_tokens = self.max_tokens\n        stream = self.stream\n\n        if api_key:\n            secret_api_key = SecretStr(api_key)\n        else:\n            secret_api_key = None\n\n        try:\n            output = AzureChatOpenAI(\n                model=model,\n                azure_endpoint=azure_endpoint,\n                azure_deployment=azure_deployment,\n                api_version=api_version,\n                api_key=secret_api_key,\n                temperature=temperature,\n                max_tokens=max_tokens or None,\n                streaming=stream,\n            )\n        except Exception as e:\n            raise ValueError(\"Could not connect to AzureOpenAI API.\") from e\n\n        return output\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "input_value": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "Hey",
                  "name": "input_value",
                  "display_name": "Input",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str"
                },
                "max_tokens": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "",
                  "name": "max_tokens",
                  "display_name": "Max Tokens",
                  "advanced": true,
                  "dynamic": false,
                  "info": "The maximum number of tokens to generate. Set to 0 for unlimited tokens.",
                  "title_case": false,
                  "type": "int"
                },
                "model": {
                  "trace_as_metadata": true,
                  "options": [
                    "gpt-35-turbo",
                    "gpt-35-turbo-16k",
                    "gpt-35-turbo-instruct",
                    "gpt-4",
                    "gpt-4-32k",
                    "gpt-4o",
                    "gpt-4-turbo"
                  ],
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "gpt-35-turbo-16k",
                  "name": "model",
                  "display_name": "Model Name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str"
                },
                "stream": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": false,
                  "name": "stream",
                  "display_name": "Stream",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Stream the response from the model. Streaming works only in Chat.",
                  "title_case": false,
                  "type": "bool"
                },
                "system_message": {
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "You are a helpful assistant",
                  "name": "system_message",
                  "display_name": "System Message",
                  "advanced": false,
                  "dynamic": false,
                  "info": "System message to pass to the model.",
                  "title_case": false,
                  "type": "str"
                },
                "temperature": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "0.1",
                  "name": "temperature",
                  "display_name": "Temperature",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "float"
                }
              },
              "description": "Generate text using Azure OpenAI LLMs.",
              "icon": "Azure",
              "base_classes": [
                "LanguageModel",
                "Message"
              ],
              "display_name": "Azure OpenAI",
              "documentation": "https://python.langchain.com/docs/integrations/llms/azure_openai",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "text_output",
                  "display_name": "Text",
                  "method": "text_response",
                  "value": "__UNDEFINED__",
                  "cache": true
                },
                {
                  "types": [
                    "LanguageModel"
                  ],
                  "selected": "LanguageModel",
                  "name": "model_output",
                  "display_name": "Language Model",
                  "method": "model_response",
                  "value": "__UNDEFINED__",
                  "cache": true,
                  "hidden": false
                }
              ],
              "field_order": [
                "model",
                "azure_endpoint",
                "azure_deployment",
                "api_version",
                "api_key",
                "temperature",
                "max_tokens",
                "input_value",
                "stream",
                "system_message"
              ],
              "beta": false,
              "edited": false
            },
            "id": "AzureOpenAIModel-lZgTt",
            "description": "Generate text using Azure OpenAI LLMs.",
            "display_name": "Azure OpenAI"
          },
          "selected": false,
          "width": 384,
          "height": 970,
          "positionAbsolute": {
            "x": -1330.3479764092604,
            "y": 407.3517128898295
          },
          "dragging": false
        },
        {
          "id": "ChatOutput-2QY5Z",
          "type": "genericNode",
          "position": {
            "x": 2150.115322445363,
            "y": 821.9814565948226
          },
          "data": {
            "type": "ChatOutput",
            "node": {
              "template": {
                "_type": "Component",
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio.base.io.chat import ChatComponent\nfrom axiestudio.io import DropdownInput, MessageTextInput, Output\nfrom axiestudio.schema.message import Message\n\n\nclass ChatOutput(ChatComponent):\n    display_name = \"Chat Output\"\n    description = \"Display a chat message in the Playground.\"\n    icon = \"ChatOutput\"\n\n    inputs = [\n        MessageTextInput(\n            name=\"input_value\",\n            display_name=\"Text\",\n            info=\"Message to be passed as output.\",\n        ),\n        DropdownInput(\n            name=\"sender\",\n            display_name=\"Sender Type\",\n            options=[\"Machine\", \"User\"],\n            value=\"Machine\",\n            advanced=True,\n            info=\"Type of sender.\",\n        ),\n        MessageTextInput(\n            name=\"sender_name\", display_name=\"Sender Name\", info=\"Name of the sender.\", value=\"AI\", advanced=True\n        ),\n        MessageTextInput(\n            name=\"session_id\", display_name=\"Session ID\", info=\"Session ID for the message.\", advanced=True\n        ),\n        MessageTextInput(\n            name=\"data_template\",\n            display_name=\"Data Template\",\n            value=\"{text}\",\n            advanced=True,\n            info=\"Template to convert Data to Text. If left empty, it will be dynamically set to the Data's text key.\",\n        ),\n    ]\n    outputs = [\n        Output(display_name=\"Message\", name=\"message\", method=\"message_response\"),\n    ]\n\n    def message_response(self) -> Message:\n        message = Message(\n            text=self.input_value,\n            sender=self.sender,\n            sender_name=self.sender_name,\n            session_id=self.session_id,\n        )\n        if self.session_id and isinstance(message, Message) and isinstance(message.text, str):\n            self.store_message(message)\n            self.message.value = message\n\n        self.status = message\n        return message\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "data_template": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "{text}",
                  "name": "data_template",
                  "display_name": "Data Template",
                  "advanced": true,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "Template to convert Data to Text. If left empty, it will be dynamically set to the Data's text key.",
                  "title_case": false,
                  "type": "str"
                },
                "input_value": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "",
                  "name": "input_value",
                  "display_name": "Text",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "Message to be passed as output.",
                  "title_case": false,
                  "type": "str"
                },
                "sender": {
                  "trace_as_metadata": true,
                  "options": [
                    "Machine",
                    "User"
                  ],
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "Machine",
                  "name": "sender",
                  "display_name": "Sender Type",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Type of sender.",
                  "title_case": false,
                  "type": "str"
                },
                "sender_name": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "AI",
                  "name": "sender_name",
                  "display_name": "Sender Name",
                  "advanced": true,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "Name of the sender.",
                  "title_case": false,
                  "type": "str"
                },
                "session_id": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "",
                  "name": "session_id",
                  "display_name": "Session ID",
                  "advanced": true,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "Session ID for the message.",
                  "title_case": false,
                  "type": "str"
                }
              },
              "description": "Display a chat message in the Playground.",
              "icon": "ChatOutput",
              "base_classes": [
                "Message"
              ],
              "display_name": "Chat Output",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "message",
                  "display_name": "Message",
                  "method": "message_response",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "input_value",
                "sender",
                "sender_name",
                "session_id",
                "data_template"
              ],
              "beta": false,
              "edited": false
            },
            "id": "ChatOutput-2QY5Z"
          },
          "selected": false,
          "width": 384,
          "height": 309,
          "dragging": false
        },
        {
          "id": "ChatInput-PxARz",
          "type": "genericNode",
          "position": {
            "x": 726.8382889804051,
            "y": -251.61571593163248
          },
          "data": {
            "type": "ChatInput",
            "node": {
              "template": {
                "_type": "Component",
                "files": {
                  "trace_as_metadata": true,
                  "file_path": "",
                  "fileTypes": [
                    "txt",
                    "md",
                    "mdx",
                    "csv",
                    "json",
                    "yaml",
                    "yml",
                    "xml",
                    "html",
                    "htm",
                    "pdf",
                    "docx",
                    "py",
                    "sh",
                    "sql",
                    "js",
                    "ts",
                    "tsx",
                    "jpg",
                    "jpeg",
                    "png",
                    "bmp",
                    "image"
                  ],
                  "list": true,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "",
                  "name": "files",
                  "display_name": "Files",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Files to be sent with the message.",
                  "title_case": false,
                  "type": "file"
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio.base.data.utils import IMG_FILE_TYPES, TEXT_FILE_TYPES\nfrom axiestudio.base.io.chat import ChatComponent\nfrom axiestudio.io import DropdownInput, FileInput, MessageTextInput, MultilineInput, Output\nfrom axiestudio.schema.message import Message\n\n\nclass ChatInput(ChatComponent):\n    display_name = \"Chat Input\"\n    description = \"Get chat inputs from the Playground.\"\n    icon = \"ChatInput\"\n\n    inputs = [\n        MultilineInput(\n            name=\"input_value\",\n            display_name=\"Text\",\n            value=\"\",\n            info=\"Message to be passed as input.\",\n        ),\n        DropdownInput(\n            name=\"sender\",\n            display_name=\"Sender Type\",\n            options=[\"Machine\", \"User\"],\n            value=\"User\",\n            info=\"Type of sender.\",\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\"sender_name\",\n            display_name=\"Sender Name\",\n            info=\"Name of the sender.\",\n            value=\"User\",\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\"session_id\", display_name=\"Session ID\", info=\"Session ID for the message.\", advanced=True\n        ),\n        FileInput(\n            name=\"files\",\n            display_name=\"Files\",\n            file_types=TEXT_FILE_TYPES + IMG_FILE_TYPES,\n            info=\"Files to be sent with the message.\",\n            advanced=True,\n            is_list=True,\n        ),\n    ]\n    outputs = [\n        Output(display_name=\"Message\", name=\"message\", method=\"message_response\"),\n    ]\n\n    def message_response(self) -> Message:\n        message = Message(\n            text=self.input_value,\n            sender=self.sender,\n            sender_name=self.sender_name,\n            session_id=self.session_id,\n            files=self.files,\n        )\n        if self.session_id and isinstance(message, Message) and isinstance(message.text, str):\n            self.store_message(message)\n            self.message.value = message\n\n        self.status = message\n        return message\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "input_value": {
                  "trace_as_input": true,
                  "multiline": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "Find AGM date for Nvidia 2024",
                  "name": "input_value",
                  "display_name": "Text",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "Message to be passed as input.",
                  "title_case": false,
                  "type": "str"
                },
                "sender": {
                  "trace_as_metadata": true,
                  "options": [
                    "Machine",
                    "User"
                  ],
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "User",
                  "name": "sender",
                  "display_name": "Sender Type",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Type of sender.",
                  "title_case": false,
                  "type": "str"
                },
                "sender_name": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "User",
                  "name": "sender_name",
                  "display_name": "Sender Name",
                  "advanced": true,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "Name of the sender.",
                  "title_case": false,
                  "type": "str"
                },
                "session_id": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "",
                  "name": "session_id",
                  "display_name": "Session ID",
                  "advanced": true,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "Session ID for the message.",
                  "title_case": false,
                  "type": "str"
                }
              },
              "description": "Get chat inputs from the Playground.",
              "icon": "ChatInput",
              "base_classes": [
                "Message"
              ],
              "display_name": "Chat Input",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "message",
                  "display_name": "Message",
                  "method": "message_response",
                  "value": "__UNDEFINED__",
                  "cache": true,
                  "hidden": false
                }
              ],
              "field_order": [
                "input_value",
                "sender",
                "sender_name",
                "session_id",
                "files"
              ],
              "beta": false,
              "edited": false
            },
            "id": "ChatInput-PxARz"
          },
          "selected": false,
          "width": 384,
          "height": 309,
          "positionAbsolute": {
            "x": 726.8382889804051,
            "y": -251.61571593163248
          },
          "dragging": false
        },
        {
          "id": "CustomComponent-ClTw1",
          "type": "genericNode",
          "position": {
            "x": -680.7239375090176,
            "y": -296.4324141753614
          },
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "_type": "CustomComponent",
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio.custom import CustomComponent\r\nfrom axiestudio.field_typing import Tool\r\nfrom crewai_tools import ScrapeWebsiteTool\r\n\r\nclass SearchWebsiteComp(CustomComponent):\r\n    display_name: str = \"Website Scrapping Tool\"\r\n    description: str = \"Real-time Website Scrapping Tool\"\r\n    def build(\r\n        self\r\n    ) -> Tool:\r\n        try:\r\n            website_scrapping_tool = ScrapeWebsiteTool()\r\n            self.status = website_scrapping_tool\r\n        except Exception as e:\r\n            print(f\"Error in website scrapping tool with error {e}\")\r\n        return website_scrapping_tool  # type: ignore",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                }
              },
              "description": "Real-time Website Scrapping Tool",
              "base_classes": [
                "BaseTool",
                "Generic",
                "object",
                "Runnable",
                "RunnableSerializable",
                "Serializable",
                "Tool"
              ],
              "display_name": "Website Scrapping Tool",
              "documentation": "",
              "custom_fields": {},
              "output_types": [
                "Tool"
              ],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Tool"
                  ],
                  "selected": "Tool",
                  "name": "tool",
                  "hidden": false,
                  "display_name": "Tool",
                  "method": null,
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [],
              "beta": false,
              "edited": true
            },
            "id": "CustomComponent-ClTw1",
            "description": "Real-time Website Scrapping Tool",
            "display_name": "Website Scrapping Tool"
          },
          "selected": false,
          "width": 384,
          "height": 219,
          "dragging": false,
          "positionAbsolute": {
            "x": -680.7239375090176,
            "y": -296.4324141753614
          }
        },
        {
          "id": "CustomComponent-2lsSs",
          "type": "genericNode",
          "position": {
            "x": -668.4654281593733,
            "y": -1811.698139141321
          },
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "_type": "CustomComponent",
                "azure_api_key": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": true,
                  "name": "azure_api_key",
                  "display_name": "Provide Azure API key",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": ""
                },
                "azure_deployment_name": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "azure_deployment_name",
                  "display_name": "Provide Azure deployment name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "vanilla-gpt-35-turbo-16k"
                },
                "azure_openai_api_version": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "2023-07-01-preview",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "options": [
                    "2023-03-15-preview",
                    "2023-05-15",
                    "2023-06-01-preview",
                    "2023-07-01-preview",
                    "2023-08-01-preview",
                    "2023-09-01-preview",
                    "2023-12-01-preview",
                    "2024-04-09",
                    "2024-05-13"
                  ],
                  "name": "azure_openai_api_version",
                  "display_name": "Provide Azure OpenAI API version",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                },
                "azure_openai_model": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "gpt-35-turbo-16k",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "options": [
                    "gpt-35-turbo",
                    "gpt-35-turbo-16k",
                    "gpt-35-turbo-instruct",
                    "gpt-4",
                    "gpt-4-32k",
                    "gpt-4o",
                    "gpt-4-turbo"
                  ],
                  "name": "azure_openai_model",
                  "display_name": "Provide Azure OpenAI model",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                },
                "azure_opnai_endpoint": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "azure_opnai_endpoint",
                  "display_name": "Provide Azure OpenAI endpoint",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "https://cser-dva2-dp-openapi002.openai.azure.com/"
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from langchain_community.tools.searchapi import SearchAPIRun\r\nfrom langchain_community.utilities.searchapi import SearchApiAPIWrapper\r\nfrom langchain_openai import AzureChatOpenAI\r\nfrom pydantic.v1 import SecretStr\r\n\r\nfrom axiestudio.base.constants import STREAM_INFO_TEXT\r\nfrom axiestudio.base.models.model import LCModelComponent\r\nfrom axiestudio.field_typing import LanguageModel\r\nfrom axiestudio.custom import CustomComponent\r\nfrom axiestudio.field_typing import Tool\r\nfrom axiestudio.io import BoolInput, DropdownInput, FloatInput, IntInput, MessageInput, Output, SecretStrInput, StrInput\r\nfrom crewai_tools import PDFSearchTool\r\nimport os\r\n\r\nclass pdfdocumentsearch(CustomComponent):\r\n    display_name: str = \"PDF Document RAG tool\"\r\n    description: str = \"If you have a long PDF document, this tool helps you to search relevant information in the document.\"\r\n    def build_config(self):\r\n        LLM_PROVIDERS = [\r\n        \"azure_openai\",\r\n        \"google\",\r\n        \"openai\",\r\n        \"anthropic\",\r\n        \"llama2\"\r\n        ]\r\n        EMBEDDING_PROVIDERS = [\r\n        \"azure_openai\",\r\n        \"google\",\r\n        \"openai\",\r\n        \"anthropic\",\r\n        \"llama2\"\r\n        ]\r\n\r\n        EMBEDDING_MODEL = ['text-embedding-3-small']\r\n\r\n        EMBEDDING_DEPLOYMENT = ['vanilla-text-embedding-3-small']\r\n\r\n        AZURE_OPENAI_MODELS = [\r\n            \"gpt-35-turbo\",\r\n            \"gpt-35-turbo-16k\",\r\n            \"gpt-35-turbo-instruct\",\r\n            \"gpt-4\",\r\n            \"gpt-4-32k\",\r\n            \"gpt-4o\",\r\n            \"gpt-4-turbo\",\r\n        ]\r\n\r\n        AZURE_OPENAI_API_VERSIONS = [\r\n            \"2023-03-15-preview\",\r\n            \"2023-05-15\",\r\n            \"2023-06-01-preview\",\r\n            \"2023-07-01-preview\",\r\n            \"2023-08-01-preview\",\r\n            \"2023-09-01-preview\",\r\n            \"2023-12-01-preview\",\r\n            \"2024-04-09\",\r\n            \"2024-05-13\",\r\n        ]\r\n        return {\r\n            \"llm_model_provider\": {\"display_name\": \"Provide LLM provider\",\"options\": LLM_PROVIDERS,\r\n                    \"value\": LLM_PROVIDERS[0]},\r\n            \"embedding_model_provider\": {\"display_name\": \"Provide Embedding provider\",\"options\": EMBEDDING_PROVIDERS,\r\n                    \"value\": EMBEDDING_PROVIDERS[0]},\r\n            \"embedding_model\": {\"display_name\": \"Provide Embedding model\",\"options\": EMBEDDING_MODEL,\r\n                    \"value\": EMBEDDING_MODEL[0]},\r\n            \"embedding_deployment\": {\"display_name\": \"Provide Embedding deployment\",\"options\": EMBEDDING_DEPLOYMENT,\r\n                    \"value\": EMBEDDING_DEPLOYMENT[0]},\r\n            \"azure_openai_model\": {\"display_name\": \"Provide Azure OpenAI model\",\"options\": AZURE_OPENAI_MODELS,\r\n                    \"value\": AZURE_OPENAI_MODELS[0]},\r\n            \"azure_openai_api_version\": {\"display_name\": \"Provide Azure OpenAI API version\",\"options\": AZURE_OPENAI_API_VERSIONS,\r\n                    \"value\": AZURE_OPENAI_API_VERSIONS[0]},\r\n            \"azure_deployment_name\": {\"display_name\": \"Provide Azure deployment name\"},\r\n            \"azure_api_key\": {\"display_name\": \"Provide Azure API key\",\"field_type\": \"str\",\"required\": True,\"password\": True},\r\n            \"azure_opnai_endpoint\": {\"display_name\": \"Provide Azure OpenAI endpoint\",\"field_type\": \"str\",\"required\": True}, \r\n                    \r\n        }\r\n    \r\n    def build(self, llm_model_provider:str,embedding_model_provider:str,embedding_model:str,embedding_deployment:str,azure_openai_model:str,azure_openai_api_version:str,azure_deployment_name:str,azure_api_key:str,azure_opnai_endpoint:str) -> Tool:\r\n        try:\r\n            # if azure_api_key:\r\n            #     secret_api_key = SecretStr(azure_api_key)\r\n            # else:\r\n            #     secret_api_key = None\r\n            os.environ[\"AZURE_OPENAI_API_KEY\"] = azure_api_key\r\n            os.environ['AZURE_OPENAI_ENDPOINT'] = azure_opnai_endpoint\r\n            pdf_search = PDFSearchTool(\r\n            config=dict(\r\n            llm=dict(\r\n            provider=llm_model_provider, # or google, openai, anthropic, llama2, ...\r\n            config=dict(\r\n                model =azure_openai_model,\r\n            deployment_name=azure_deployment_name,\r\n            api_key=azure_api_key,\r\n            ),\r\n            ),\r\n            embedder=dict(\r\n            provider=embedding_model_provider, # or openai, ollama, ...\r\n            config=dict(\r\n            model=embedding_model,\r\n            deployment_name=embedding_deployment,\r\n            api_key=azure_api_key,\r\n            ),\r\n            ),\r\n            )\r\n            )\r\n        except Exception as e:\r\n            raise ValueError(f\"Could not load PDF file tool with error {e}\") from e\r\n\r\n        return pdf_search",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "embedding_deployment": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "vanilla-text-embedding-3-small",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "options": [
                    "vanilla-text-embedding-3-small"
                  ],
                  "name": "embedding_deployment",
                  "display_name": "Provide Embedding deployment",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                },
                "embedding_model": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "text-embedding-3-small",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "options": [
                    "text-embedding-3-small"
                  ],
                  "name": "embedding_model",
                  "display_name": "Provide Embedding model",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                },
                "embedding_model_provider": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "azure_openai",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "options": [
                    "azure_openai",
                    "google",
                    "openai",
                    "anthropic",
                    "llama2"
                  ],
                  "name": "embedding_model_provider",
                  "display_name": "Provide Embedding provider",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                },
                "llm_model_provider": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "azure_openai",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "options": [
                    "azure_openai",
                    "google",
                    "openai",
                    "anthropic",
                    "llama2"
                  ],
                  "name": "llm_model_provider",
                  "display_name": "Provide LLM provider",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                }
              },
              "description": "If you have a long PDF document, this tool helps you to search relevant information in the document.",
              "base_classes": [
                "BaseTool",
                "Generic",
                "object",
                "Runnable",
                "RunnableSerializable",
                "Serializable",
                "Tool"
              ],
              "display_name": "PDF Document Search",
              "documentation": "",
              "custom_fields": {
                "llm_model_provider": null,
                "embedding_model_provider": null,
                "embedding_model": null,
                "embedding_deployment": null,
                "azure_openai_model": null,
                "azure_openai_api_version": null,
                "azure_deployment_name": null,
                "azure_api_key": null,
                "azure_opnai_endpoint": null
              },
              "output_types": [
                "Tool"
              ],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Tool"
                  ],
                  "selected": "Tool",
                  "name": "tool",
                  "hidden": false,
                  "display_name": "Tool",
                  "method": null,
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [],
              "beta": false,
              "edited": false
            },
            "id": "CustomComponent-2lsSs",
            "description": "If you have a long PDF document, this tool helps you to search relevant information in the document.",
            "display_name": "PDF Document Search"
          },
          "selected": false,
          "width": 384,
          "height": 1117,
          "dragging": false,
          "positionAbsolute": {
            "x": -668.4654281593733,
            "y": -1811.698139141321
          }
        },
        {
          "id": "CustomComponent-kGnTe",
          "type": "genericNode",
          "position": {
            "x": -675.8265196755565,
            "y": -575.0904374850011
          },
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "_type": "CustomComponent",
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from langchain_community.tools.searchapi import SearchAPIRun\r\nfrom langchain_community.utilities.searchapi import SearchApiAPIWrapper\r\n\r\nfrom axiestudio.custom import CustomComponent\r\nfrom axiestudio.field_typing import Tool\r\nfrom crewai_tools import FileReadTool\r\n\r\nclass SearchApiToolComponent(CustomComponent):\r\n    display_name: str = \"Read a file Tool\"\r\n    description: str = \"Read a file tool\"\r\n\r\n    def build(\r\n        self,\r\n    ) -> Tool:\r\n        try:\r\n            file_reading_tool = FileReadTool()\r\n            self.status = file_reading_tool\r\n        except Exception as e:\r\n            print(f\"Error in file reading tool with error {e}\")\r\n        return file_reading_tool  # type: ignore\r\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                }
              },
              "description": "Read a file tool",
              "base_classes": [
                "BaseTool",
                "Generic",
                "object",
                "Runnable",
                "RunnableSerializable",
                "Serializable",
                "Tool"
              ],
              "display_name": "Read File",
              "documentation": "",
              "custom_fields": {},
              "output_types": [
                "Tool"
              ],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Tool"
                  ],
                  "selected": "Tool",
                  "name": "tool",
                  "hidden": false,
                  "display_name": "Tool",
                  "method": null,
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [],
              "beta": false,
              "edited": true
            },
            "id": "CustomComponent-kGnTe",
            "description": "Read a file tool",
            "display_name": "Read File"
          },
          "selected": false,
          "width": 384,
          "height": 219,
          "dragging": false,
          "positionAbsolute": {
            "x": -675.8265196755565,
            "y": -575.0904374850011
          }
        },
        {
          "id": "CustomComponent-g1iqe",
          "type": "genericNode",
          "position": {
            "x": -267.32153504455493,
            "y": 1636.2503803765997
          },
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "_type": "CustomComponent",
                "llm": {
                  "type": "LanguageModel",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "llm",
                  "display_name": "Language Model",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "backstory": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "backstory",
                  "display_name": "Backstory",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "As a part of the Lead AGM quality analyst team, your mission is to validate the AGM dates for year 2024 for company {company} Make sure you do a comprehensive research and identify high quality source for company like stock exchange websites or company websites etc. You should also validate a couple of more sources to identify the correct date, the idea is to get the correct date as much as possible. You can also identify the quality of the AGM date looking at the source or document."
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio import CustomComponent\r\nfrom axiestudio.field_typing import LanguageModel, Tool\r\nfrom crewai import Agent\r\nfrom typing import List, Optional\r\n\r\nclass AgentCrewComponent(CustomComponent):\r\n    display_name: str = \"AgentCrew\"\r\n    description: str = \"This component initializes an agent with language model and tools.\"\r\n\r\n    def build_config(self):\r\n        return {\r\n            \"role\": {\"display_name\": \"Role\"},\r\n            \"goal\": {\"display_name\": \"Goal\"},\r\n            \"backstory\": {\"display_name\": \"Backstory\"},\r\n            # \"tools\": {\"display_name\": \"Tools\", \"type\": \"list\", \"item_type\": \"object\", \"optional\": True},  # Torna a entrada opcional\r\n            \"llm\": {\"display_name\": \"Language Model\", \"field_type\": \"object\"},\r\n        }\r\n\r\n    def build(self, role: str, goal: str, backstory: str, llm: LanguageModel) -> Agent:\r\n        # Se \"tools\" não for especificado, define como uma lista vazia\r\n        \r\n        try:\r\n            task=Agent(\r\n            role=role,\r\n            goal=goal,\r\n            backstory=backstory,\r\n            # tools=tools,  # Passa a lista de ferramentas diretamente\r\n            llm=llm,\r\n            verbose=True\r\n            )\r\n        except Exception as e:\r\n            print(f\"Error in Date Extraction task with error {e}\")\r\n        # Supondo que cada ferramenta na lista seja um objeto já inicializado e pronto para uso\r\n        return task\r\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "goal": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "goal",
                  "display_name": "Goal",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "verify the quality of AGM dates or annual general meeting dates for year 2024 for given company {company} Your goal is to accurately identify AGM date and its source"
                },
                "role": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "role",
                  "display_name": "Role",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "Lead AGM quality analyst"
                }
              },
              "description": "This component initializes an agent with language model and tools.",
              "base_classes": [
                "Agent",
                "BaseAgent"
              ],
              "display_name": "Lead AGM quality analyst",
              "documentation": "",
              "custom_fields": {
                "role": null,
                "goal": null,
                "backstory": null,
                "llm": null
              },
              "output_types": [
                "Agent"
              ],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Agent"
                  ],
                  "selected": "Agent",
                  "name": "agent",
                  "hidden": false,
                  "display_name": "Agent",
                  "method": null,
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [],
              "beta": false,
              "edited": true
            },
            "id": "CustomComponent-g1iqe",
            "description": "This component initializes an agent with language model and tools.",
            "display_name": "Lead AGM quality analyst"
          },
          "selected": false,
          "width": 384,
          "height": 573,
          "dragging": false
        },
        {
          "id": "CustomComponent-9Mc0i",
          "type": "genericNode",
          "position": {
            "x": 574.9855628022606,
            "y": 1678.1327085718447
          },
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "_type": "CustomComponent",
                "agent": {
                  "type": "Agent",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "agent",
                  "display_name": "Agent",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "tools": {
                  "type": "Tool",
                  "required": false,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "tools",
                  "display_name": "Tools",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio import CustomComponent\r\nfrom axiestudio.field_typing import Data\r\nfrom crewai import Task, Agent\r\n\r\nclass TaskComponent(CustomComponent):\r\n    display_name: str = \"Create Task\"\r\n    description: str = \"This component creates a task for an agent.\"\r\n\r\n    def build_config(self):\r\n        return {\r\n            \"description\": {\"display_name\": \"Description\"},\r\n            \"expected_output\": {\"display_name\": \"Expected Output\"},\r\n            \"tools\": {\"display_name\": \"Tools\", \"type\": \"list\", \"item_type\": \"object\", \"optional\": True},\r\n            \"agent\": {\"display_name\": \"Agent\"},\r\n        }\r\n\r\n    def build(self, description: str, expected_output: str, agent: Agent,tools: Optional[List[Tool]] = None) -> Task:\r\n        return Task(\r\n            description=description,\r\n            expected_output=expected_output,\r\n            tools=tools,\r\n            agent=agent\r\n        )\r\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "description": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "description",
                  "display_name": "Description",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "Conduct a detailed quality check on AGM date or annual general meeting date for year 2024 for company {company}, make sure you suggest best practice around utilizing best sources, compile multiple AGM dates from multiple sources and advise on best quality source, you might focus on single best source or take a majority vote to get correct date, always make sure that it’s an AGM date and not any other date, verify that the date provided is not Ordinary General Meeting of Shareholders or Special General Meeting of Shareholders as it’s different from Annual General Meeting"
                },
                "expected_output": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "expected_output",
                  "display_name": "Expected Output",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "A quality analysis report on AGM dates with its source URLs for year 2024 for given company {company}, provide multiple AGM dates and its source URLs, always provide best final AGM date and its source URL which has very high confidence, make sure it’s as detailed as possible, always make sure AGM date is for given year 2024, always make sure that it’s an AGM date, it’s possible that sometimes AGM date is yet to be published. You can say NA in that case, always double check the Year, it should be 2024."
                }
              },
              "description": "This component creates a task for an agent.",
              "base_classes": [
                "Task"
              ],
              "display_name": "QA Task",
              "documentation": "",
              "custom_fields": {
                "description": null,
                "expected_output": null,
                "agent": null,
                "tools": null
              },
              "output_types": [
                "Task"
              ],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Task"
                  ],
                  "selected": "Task",
                  "name": "task",
                  "hidden": false,
                  "display_name": "Task",
                  "method": null,
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [],
              "beta": false,
              "edited": true
            },
            "id": "CustomComponent-9Mc0i",
            "description": "This component creates a task for an agent.",
            "display_name": "Custom Component"
          },
          "selected": false,
          "width": 384,
          "height": 499,
          "dragging": false
        },
        {
          "id": "CustomComponent-5KUly",
          "type": "genericNode",
          "position": {
            "x": -643.8535253516926,
            "y": 2622.803816443849
          },
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "_type": "CustomComponent",
                "llm": {
                  "type": "LanguageModel",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "llm",
                  "display_name": "Language Model",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "backstory": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "backstory",
                  "display_name": "Backstory",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "As a part of the Lead AGM Extractor team, your mission is to extract AGM dates for year 2024 for company {company}, extract AGM date as a JSON with 3 keys, ‘AGM_Date’, ‘Complete_Source_URL’, ‘Source’, it’s possible that AGM date for company is not yet published, in such case try to say NA, your job is to double validate if date given is actually an AGM date."
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio import CustomComponent\r\nfrom axiestudio.field_typing import LanguageModel, Tool\r\nfrom crewai import Agent\r\nfrom typing import List, Optional\r\n\r\nclass AgentCrewComponent(CustomComponent):\r\n    display_name: str = \"AgentCrew\"\r\n    description: str = \"This component initializes an agent with language model and tools.\"\r\n\r\n    def build_config(self):\r\n        return {\r\n            \"role\": {\"display_name\": \"Role\"},\r\n            \"goal\": {\"display_name\": \"Goal\"},\r\n            \"backstory\": {\"display_name\": \"Backstory\"},\r\n            # \"tools\": {\"display_name\": \"Tools\", \"type\": \"list\", \"item_type\": \"object\", \"optional\": True},  # Torna a entrada opcional\r\n            \"llm\": {\"display_name\": \"Language Model\", \"field_type\": \"object\"},\r\n        }\r\n\r\n    def build(self, role: str, goal: str, backstory: str, llm: LanguageModel) -> Agent:\r\n        \r\n        try:\r\n            task =Agent(\r\n            role=role,\r\n            goal=goal,\r\n            backstory=backstory,\r\n            # tools=tools,  # Passa a lista de ferramentas diretamente\r\n            llm=llm,\r\n            verbose=True\r\n            )\r\n        # Se \"tools\" não for especificado, define como uma lista vazia\r\n        except Exception as e:\r\n            print(f\"Error in Date Extraction task with error {e}\")\r\n      \r\n        \r\n        # Supondo que cada ferramenta na lista seja um objeto já inicializado e pronto para uso\r\n        return task\r\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "goal": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "goal",
                  "display_name": "Goal",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "Your goal is to extract AGM dates or annual general meeting dates for year 2024 for given company {company} your goal is to accurately extract validated AGM date"
                },
                "role": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "role",
                  "display_name": "Role",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "Lead AGM Extractor"
                }
              },
              "description": "This component initializes an agent with language model and tools.",
              "base_classes": [
                "Agent",
                "BaseAgent"
              ],
              "display_name": "Lead AGM Extractor",
              "documentation": "",
              "custom_fields": {
                "role": null,
                "goal": null,
                "backstory": null,
                "llm": null
              },
              "output_types": [
                "Agent"
              ],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Agent"
                  ],
                  "selected": "Agent",
                  "name": "agent",
                  "hidden": false,
                  "display_name": "Agent",
                  "method": null,
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [],
              "beta": false,
              "edited": true
            },
            "id": "CustomComponent-5KUly",
            "description": "This component initializes an agent with language model and tools.",
            "display_name": "Lead AGM Extractor"
          },
          "selected": false,
          "width": 384,
          "height": 573,
          "dragging": false
        },
        {
          "id": "CustomComponent-9KcwH",
          "type": "genericNode",
          "position": {
            "x": 462.85933320569774,
            "y": 2587.7584200067167
          },
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "_type": "CustomComponent",
                "agent": {
                  "type": "Agent",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "agent",
                  "display_name": "Agent",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio import CustomComponent\r\nfrom axiestudio.field_typing import Data\r\nfrom crewai import Task, Agent\r\n\r\nclass TaskComponent(CustomComponent):\r\n    display_name: str = \"Create Task\"\r\n    description: str = \"This component creates a task for an agent.\"\r\n\r\n    def build_config(self):\r\n        return {\r\n            \"description\": {\"display_name\": \"Description\"},\r\n            \"expected_output\": {\"display_name\": \"Expected Output\"},\r\n            # \"tools\": {\"display_name\": \"Tools\", \"type\": \"list\", \"item_type\": \"object\", \"optional\": True},\r\n            \"agent\": {\"display_name\": \"Agent\"},\r\n        }\r\n\r\n    def build(self, description: str, expected_output: str, agent: Agent) -> Task:\r\n        \r\n        try:\r\n            task = Task(\r\n            description=description,\r\n            expected_output=expected_output,\r\n            # tools=tools,\r\n            agent=agent\r\n            )\r\n        except Exception as e:\r\n            print(f\"Error in Date Extraction task with error {e}\")\r\n        return task\r\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "description": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "description",
                  "display_name": "Description",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "Extract AGM date or annual general meeting date for year 2024 for company {company},  Make sure you provide AGM date, its original source url and source name"
                },
                "expected_output": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "expected_output",
                  "display_name": "Expected Output",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "Provide extraction as a user friendly text as well as markdown code with a JSON inside it.   Friendly text: Provide AGM date and where you found this information with a url of source. Do not include \"Friendly text\" it should feel like a chat output. markdown code with a JSON inside : Extract JSON with 3 keys, 'AGM_Date', 'Complete_Source_URL', 'Source' for year 2024 for company {company}, Always validate the JSON format If data is taken from a document, directly provide source url as document link."
                }
              },
              "description": "This component creates a task for an agent.",
              "base_classes": [
                "Task"
              ],
              "display_name": "Extraction Task",
              "documentation": "",
              "custom_fields": {
                "description": null,
                "expected_output": null,
                "agent": null
              },
              "output_types": [
                "Task"
              ],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Task"
                  ],
                  "selected": "Task",
                  "name": "task",
                  "hidden": false,
                  "display_name": "Task",
                  "method": null,
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [],
              "beta": false,
              "edited": false
            },
            "id": "CustomComponent-9KcwH",
            "description": "This component creates a task for an agent.",
            "display_name": "Extraction Task"
          },
          "selected": false,
          "width": 384,
          "height": 451,
          "dragging": false
        },
        {
          "id": "CustomComponent-AS3fl",
          "type": "genericNode",
          "position": {
            "x": -718.9604752858913,
            "y": 65.51464721404214
          },
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "_type": "CustomComponent",
                "api_key": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": true,
                  "name": "api_key",
                  "display_name": "Provide API key",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": ""
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio.custom import CustomComponent\r\nfrom axiestudio.field_typing import Tool\r\nfrom crewai_tools import SerperDevTool\r\nimport os\r\n\r\nclass SearchGoogleComp(CustomComponent):\r\n    display_name: str = \"Google search Tool\"\r\n    description: str = \"Real-time google search Tool\"\r\n\r\n    def build_config(self):\r\n        return  {\"api_key\": {\"display_name\": \"Provide API key\",\"field_type\": \"str\",\"required\": True,\"password\": True},}\r\n    def build(\r\n        self,api_key:str\r\n    ) -> Tool:\r\n        os.environ[\"SERPER_API_KEY\"] = api_key\r\n        try:\r\n            google_search = SerperDevTool()\r\n            self.status = google_search\r\n        except Exception as e:\r\n            print(f\"Error in google search tool with error {e}\")\r\n        return google_search  # type: ignore",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                }
              },
              "description": "Real-time google search Tool",
              "base_classes": [
                "BaseTool",
                "Generic",
                "object",
                "Runnable",
                "RunnableSerializable",
                "Serializable",
                "Tool"
              ],
              "display_name": "serper.dev API",
              "documentation": "",
              "custom_fields": {
                "api_key": null
              },
              "output_types": [
                "Tool"
              ],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Tool"
                  ],
                  "selected": "Tool",
                  "name": "tool",
                  "hidden": false,
                  "display_name": "Tool",
                  "method": null,
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [],
              "beta": false,
              "edited": true
            },
            "id": "CustomComponent-AS3fl",
            "description": "Real-time google search Tool",
            "display_name": "Custom Component"
          },
          "selected": false,
          "width": 384,
          "height": 309,
          "dragging": false,
          "positionAbsolute": {
            "x": -718.9604752858913,
            "y": 65.51464721404214
          }
        }
      ],
      "edges": [
        {
          "source": "AzureOpenAIModel-lZgTt",
          "sourceHandle": "{œdataTypeœ:œAzureOpenAIModelœ,œidœ:œAzureOpenAIModel-lZgTtœ,œnameœ:œmodel_outputœ,œoutput_typesœ:[œLanguageModelœ]}",
          "target": "CustomComponent-i9KaY",
          "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œCustomComponent-i9KaYœ,œinputTypesœ:null,œtypeœ:œLanguageModelœ}",
          "data": {
            "targetHandle": {
              "fieldName": "llm",
              "id": "CustomComponent-i9KaY",
              "inputTypes": null,
              "type": "LanguageModel"
            },
            "sourceHandle": {
              "dataType": "AzureOpenAIModel",
              "id": "AzureOpenAIModel-lZgTt",
              "name": "model_output",
              "output_types": [
                "LanguageModel"
              ]
            }
          },
          "id": "reactflow__edge-AzureOpenAIModel-lZgTt{œdataTypeœ:œAzureOpenAIModelœ,œidœ:œAzureOpenAIModel-lZgTtœ,œnameœ:œmodel_outputœ,œoutput_typesœ:[œLanguageModelœ]}-CustomComponent-i9KaY{œfieldNameœ:œllmœ,œidœ:œCustomComponent-i9KaYœ,œinputTypesœ:null,œtypeœ:œLanguageModelœ}",
          "className": ""
        },
        {
          "source": "CustomComponent-i9KaY",
          "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-i9KaYœ,œnameœ:œagentœ,œoutput_typesœ:[œAgentœ]}",
          "target": "CustomComponent-VUwou",
          "targetHandle": "{œfieldNameœ:œagentœ,œidœ:œCustomComponent-VUwouœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
          "data": {
            "targetHandle": {
              "fieldName": "agent",
              "id": "CustomComponent-VUwou",
              "inputTypes": null,
              "type": "Agent"
            },
            "sourceHandle": {
              "dataType": "CustomComponent",
              "id": "CustomComponent-i9KaY",
              "name": "agent",
              "output_types": [
                "Agent"
              ]
            }
          },
          "id": "reactflow__edge-CustomComponent-i9KaY{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-i9KaYœ,œnameœ:œagentœ,œoutput_typesœ:[œAgentœ]}-CustomComponent-VUwou{œfieldNameœ:œagentœ,œidœ:œCustomComponent-VUwouœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
          "className": ""
        },
        {
          "source": "CustomComponent-i9KaY",
          "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-i9KaYœ,œnameœ:œagentœ,œoutput_typesœ:[œAgentœ]}",
          "target": "CustomComponent-y0WMh",
          "targetHandle": "{œfieldNameœ:œagentsœ,œidœ:œCustomComponent-y0WMhœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
          "data": {
            "targetHandle": {
              "fieldName": "agents",
              "id": "CustomComponent-y0WMh",
              "inputTypes": null,
              "type": "Agent"
            },
            "sourceHandle": {
              "dataType": "CustomComponent",
              "id": "CustomComponent-i9KaY",
              "name": "agent",
              "output_types": [
                "Agent"
              ]
            }
          },
          "id": "reactflow__edge-CustomComponent-i9KaY{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-i9KaYœ,œnameœ:œagentœ,œoutput_typesœ:[œAgentœ]}-CustomComponent-y0WMh{œfieldNameœ:œagentsœ,œidœ:œCustomComponent-y0WMhœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
          "className": ""
        },
        {
          "source": "AzureOpenAIModel-lZgTt",
          "sourceHandle": "{œdataTypeœ:œAzureOpenAIModelœ,œidœ:œAzureOpenAIModel-lZgTtœ,œnameœ:œmodel_outputœ,œoutput_typesœ:[œLanguageModelœ]}",
          "target": "CustomComponent-y0WMh",
          "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œCustomComponent-y0WMhœ,œinputTypesœ:null,œtypeœ:œLanguageModelœ}",
          "data": {
            "targetHandle": {
              "fieldName": "llm",
              "id": "CustomComponent-y0WMh",
              "inputTypes": null,
              "type": "LanguageModel"
            },
            "sourceHandle": {
              "dataType": "AzureOpenAIModel",
              "id": "AzureOpenAIModel-lZgTt",
              "name": "model_output",
              "output_types": [
                "LanguageModel"
              ]
            }
          },
          "id": "reactflow__edge-AzureOpenAIModel-lZgTt{œdataTypeœ:œAzureOpenAIModelœ,œidœ:œAzureOpenAIModel-lZgTtœ,œnameœ:œmodel_outputœ,œoutput_typesœ:[œLanguageModelœ]}-CustomComponent-y0WMh{œfieldNameœ:œllmœ,œidœ:œCustomComponent-y0WMhœ,œinputTypesœ:null,œtypeœ:œLanguageModelœ}",
          "className": "",
          "selected": false
        },
        {
          "source": "CustomComponent-VUwou",
          "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-VUwouœ,œnameœ:œtaskœ,œoutput_typesœ:[œTaskœ]}",
          "target": "CustomComponent-y0WMh",
          "targetHandle": "{œfieldNameœ:œtasksœ,œidœ:œCustomComponent-y0WMhœ,œinputTypesœ:null,œtypeœ:œTaskœ}",
          "data": {
            "targetHandle": {
              "fieldName": "tasks",
              "id": "CustomComponent-y0WMh",
              "inputTypes": null,
              "type": "Task"
            },
            "sourceHandle": {
              "dataType": "CustomComponent",
              "id": "CustomComponent-VUwou",
              "name": "task",
              "output_types": [
                "Task"
              ]
            }
          },
          "id": "reactflow__edge-CustomComponent-VUwou{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-VUwouœ,œnameœ:œtaskœ,œoutput_typesœ:[œTaskœ]}-CustomComponent-y0WMh{œfieldNameœ:œtasksœ,œidœ:œCustomComponent-y0WMhœ,œinputTypesœ:null,œtypeœ:œTaskœ}",
          "className": ""
        },
        {
          "source": "CustomComponent-y0WMh",
          "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-y0WMhœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}",
          "target": "ChatOutput-2QY5Z",
          "targetHandle": "{œfieldNameœ:œinput_valueœ,œidœ:œChatOutput-2QY5Zœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
          "data": {
            "targetHandle": {
              "fieldName": "input_value",
              "id": "ChatOutput-2QY5Z",
              "inputTypes": [
                "Message"
              ],
              "type": "str"
            },
            "sourceHandle": {
              "dataType": "CustomComponent",
              "id": "CustomComponent-y0WMh",
              "name": "message",
              "output_types": [
                "Message"
              ]
            }
          },
          "id": "reactflow__edge-CustomComponent-y0WMh{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-y0WMhœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}-ChatOutput-2QY5Z{œfieldNameœ:œinput_valueœ,œidœ:œChatOutput-2QY5Zœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
          "className": ""
        },
        {
          "source": "ChatInput-PxARz",
          "sourceHandle": "{œdataTypeœ:œChatInputœ,œidœ:œChatInput-PxARzœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}",
          "target": "CustomComponent-y0WMh",
          "targetHandle": "{œfieldNameœ:œcompanyœ,œidœ:œCustomComponent-y0WMhœ,œinputTypesœ:null,œtypeœ:œMessageœ}",
          "data": {
            "targetHandle": {
              "fieldName": "company",
              "id": "CustomComponent-y0WMh",
              "inputTypes": null,
              "type": "Message"
            },
            "sourceHandle": {
              "dataType": "ChatInput",
              "id": "ChatInput-PxARz",
              "name": "message",
              "output_types": [
                "Message"
              ]
            }
          },
          "id": "reactflow__edge-ChatInput-PxARz{œdataTypeœ:œChatInputœ,œidœ:œChatInput-PxARzœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}-CustomComponent-y0WMh{œfieldNameœ:œcompanyœ,œidœ:œCustomComponent-y0WMhœ,œinputTypesœ:null,œtypeœ:œMessageœ}",
          "className": ""
        },
        {
          "source": "CustomComponent-ClTw1",
          "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-ClTw1œ,œnameœ:œtoolœ,œoutput_typesœ:[œToolœ]}",
          "target": "CustomComponent-VUwou",
          "targetHandle": "{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-VUwouœ,œinputTypesœ:null,œtypeœ:œToolœ}",
          "data": {
            "targetHandle": {
              "fieldName": "tools",
              "id": "CustomComponent-VUwou",
              "inputTypes": null,
              "type": "Tool"
            },
            "sourceHandle": {
              "dataType": "CustomComponent",
              "id": "CustomComponent-ClTw1",
              "name": "tool",
              "output_types": [
                "Tool"
              ]
            }
          },
          "id": "reactflow__edge-CustomComponent-ClTw1{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-ClTw1œ,œnameœ:œtoolœ,œoutput_typesœ:[œToolœ]}-CustomComponent-VUwou{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-VUwouœ,œinputTypesœ:null,œtypeœ:œToolœ}",
          "className": ""
        },
        {
          "source": "CustomComponent-2lsSs",
          "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-2lsSsœ,œnameœ:œtoolœ,œoutput_typesœ:[œToolœ]}",
          "target": "CustomComponent-VUwou",
          "targetHandle": "{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-VUwouœ,œinputTypesœ:null,œtypeœ:œToolœ}",
          "data": {
            "targetHandle": {
              "fieldName": "tools",
              "id": "CustomComponent-VUwou",
              "inputTypes": null,
              "type": "Tool"
            },
            "sourceHandle": {
              "dataType": "CustomComponent",
              "id": "CustomComponent-2lsSs",
              "name": "tool",
              "output_types": [
                "Tool"
              ]
            }
          },
          "id": "reactflow__edge-CustomComponent-2lsSs{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-2lsSsœ,œnameœ:œtoolœ,œoutput_typesœ:[œToolœ]}-CustomComponent-VUwou{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-VUwouœ,œinputTypesœ:null,œtypeœ:œToolœ}",
          "className": ""
        },
        {
          "source": "CustomComponent-kGnTe",
          "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-kGnTeœ,œnameœ:œtoolœ,œoutput_typesœ:[œToolœ]}",
          "target": "CustomComponent-VUwou",
          "targetHandle": "{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-VUwouœ,œinputTypesœ:null,œtypeœ:œToolœ}",
          "data": {
            "targetHandle": {
              "fieldName": "tools",
              "id": "CustomComponent-VUwou",
              "inputTypes": null,
              "type": "Tool"
            },
            "sourceHandle": {
              "dataType": "CustomComponent",
              "id": "CustomComponent-kGnTe",
              "name": "tool",
              "output_types": [
                "Tool"
              ]
            }
          },
          "id": "reactflow__edge-CustomComponent-kGnTe{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-kGnTeœ,œnameœ:œtoolœ,œoutput_typesœ:[œToolœ]}-CustomComponent-VUwou{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-VUwouœ,œinputTypesœ:null,œtypeœ:œToolœ}",
          "className": ""
        },
        {
          "source": "AzureOpenAIModel-lZgTt",
          "sourceHandle": "{œdataTypeœ:œAzureOpenAIModelœ,œidœ:œAzureOpenAIModel-lZgTtœ,œnameœ:œmodel_outputœ,œoutput_typesœ:[œLanguageModelœ]}",
          "target": "CustomComponent-g1iqe",
          "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œCustomComponent-g1iqeœ,œinputTypesœ:null,œtypeœ:œLanguageModelœ}",
          "data": {
            "targetHandle": {
              "fieldName": "llm",
              "id": "CustomComponent-g1iqe",
              "inputTypes": null,
              "type": "LanguageModel"
            },
            "sourceHandle": {
              "dataType": "AzureOpenAIModel",
              "id": "AzureOpenAIModel-lZgTt",
              "name": "model_output",
              "output_types": [
                "LanguageModel"
              ]
            }
          },
          "id": "reactflow__edge-AzureOpenAIModel-lZgTt{œdataTypeœ:œAzureOpenAIModelœ,œidœ:œAzureOpenAIModel-lZgTtœ,œnameœ:œmodel_outputœ,œoutput_typesœ:[œLanguageModelœ]}-CustomComponent-g1iqe{œfieldNameœ:œllmœ,œidœ:œCustomComponent-g1iqeœ,œinputTypesœ:null,œtypeœ:œLanguageModelœ}",
          "className": ""
        },
        {
          "source": "CustomComponent-g1iqe",
          "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-g1iqeœ,œnameœ:œagentœ,œoutput_typesœ:[œAgentœ]}",
          "target": "CustomComponent-9Mc0i",
          "targetHandle": "{œfieldNameœ:œagentœ,œidœ:œCustomComponent-9Mc0iœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
          "data": {
            "targetHandle": {
              "fieldName": "agent",
              "id": "CustomComponent-9Mc0i",
              "inputTypes": null,
              "type": "Agent"
            },
            "sourceHandle": {
              "dataType": "CustomComponent",
              "id": "CustomComponent-g1iqe",
              "name": "agent",
              "output_types": [
                "Agent"
              ]
            }
          },
          "id": "reactflow__edge-CustomComponent-g1iqe{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-g1iqeœ,œnameœ:œagentœ,œoutput_typesœ:[œAgentœ]}-CustomComponent-9Mc0i{œfieldNameœ:œagentœ,œidœ:œCustomComponent-9Mc0iœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
          "className": ""
        },
        {
          "source": "CustomComponent-ClTw1",
          "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-ClTw1œ,œnameœ:œtoolœ,œoutput_typesœ:[œToolœ]}",
          "target": "CustomComponent-9Mc0i",
          "targetHandle": "{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-9Mc0iœ,œinputTypesœ:null,œtypeœ:œToolœ}",
          "data": {
            "targetHandle": {
              "fieldName": "tools",
              "id": "CustomComponent-9Mc0i",
              "inputTypes": null,
              "type": "Tool"
            },
            "sourceHandle": {
              "dataType": "CustomComponent",
              "id": "CustomComponent-ClTw1",
              "name": "tool",
              "output_types": [
                "Tool"
              ]
            }
          },
          "id": "reactflow__edge-CustomComponent-ClTw1{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-ClTw1œ,œnameœ:œtoolœ,œoutput_typesœ:[œToolœ]}-CustomComponent-9Mc0i{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-9Mc0iœ,œinputTypesœ:null,œtypeœ:œToolœ}",
          "className": ""
        },
        {
          "source": "CustomComponent-kGnTe",
          "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-kGnTeœ,œnameœ:œtoolœ,œoutput_typesœ:[œToolœ]}",
          "target": "CustomComponent-9Mc0i",
          "targetHandle": "{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-9Mc0iœ,œinputTypesœ:null,œtypeœ:œToolœ}",
          "data": {
            "targetHandle": {
              "fieldName": "tools",
              "id": "CustomComponent-9Mc0i",
              "inputTypes": null,
              "type": "Tool"
            },
            "sourceHandle": {
              "dataType": "CustomComponent",
              "id": "CustomComponent-kGnTe",
              "name": "tool",
              "output_types": [
                "Tool"
              ]
            }
          },
          "id": "reactflow__edge-CustomComponent-kGnTe{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-kGnTeœ,œnameœ:œtoolœ,œoutput_typesœ:[œToolœ]}-CustomComponent-9Mc0i{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-9Mc0iœ,œinputTypesœ:null,œtypeœ:œToolœ}",
          "className": ""
        },
        {
          "source": "CustomComponent-2lsSs",
          "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-2lsSsœ,œnameœ:œtoolœ,œoutput_typesœ:[œToolœ]}",
          "target": "CustomComponent-9Mc0i",
          "targetHandle": "{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-9Mc0iœ,œinputTypesœ:null,œtypeœ:œToolœ}",
          "data": {
            "targetHandle": {
              "fieldName": "tools",
              "id": "CustomComponent-9Mc0i",
              "inputTypes": null,
              "type": "Tool"
            },
            "sourceHandle": {
              "dataType": "CustomComponent",
              "id": "CustomComponent-2lsSs",
              "name": "tool",
              "output_types": [
                "Tool"
              ]
            }
          },
          "id": "reactflow__edge-CustomComponent-2lsSs{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-2lsSsœ,œnameœ:œtoolœ,œoutput_typesœ:[œToolœ]}-CustomComponent-9Mc0i{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-9Mc0iœ,œinputTypesœ:null,œtypeœ:œToolœ}",
          "className": ""
        },
        {
          "source": "CustomComponent-9Mc0i",
          "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-9Mc0iœ,œnameœ:œtaskœ,œoutput_typesœ:[œTaskœ]}",
          "target": "CustomComponent-y0WMh",
          "targetHandle": "{œfieldNameœ:œtasksœ,œidœ:œCustomComponent-y0WMhœ,œinputTypesœ:null,œtypeœ:œTaskœ}",
          "data": {
            "targetHandle": {
              "fieldName": "tasks",
              "id": "CustomComponent-y0WMh",
              "inputTypes": null,
              "type": "Task"
            },
            "sourceHandle": {
              "dataType": "CustomComponent",
              "id": "CustomComponent-9Mc0i",
              "name": "task",
              "output_types": [
                "Task"
              ]
            }
          },
          "id": "reactflow__edge-CustomComponent-9Mc0i{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-9Mc0iœ,œnameœ:œtaskœ,œoutput_typesœ:[œTaskœ]}-CustomComponent-y0WMh{œfieldNameœ:œtasksœ,œidœ:œCustomComponent-y0WMhœ,œinputTypesœ:null,œtypeœ:œTaskœ}",
          "className": ""
        },
        {
          "source": "AzureOpenAIModel-lZgTt",
          "sourceHandle": "{œdataTypeœ:œAzureOpenAIModelœ,œidœ:œAzureOpenAIModel-lZgTtœ,œnameœ:œmodel_outputœ,œoutput_typesœ:[œLanguageModelœ]}",
          "target": "CustomComponent-5KUly",
          "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œCustomComponent-5KUlyœ,œinputTypesœ:null,œtypeœ:œLanguageModelœ}",
          "data": {
            "targetHandle": {
              "fieldName": "llm",
              "id": "CustomComponent-5KUly",
              "inputTypes": null,
              "type": "LanguageModel"
            },
            "sourceHandle": {
              "dataType": "AzureOpenAIModel",
              "id": "AzureOpenAIModel-lZgTt",
              "name": "model_output",
              "output_types": [
                "LanguageModel"
              ]
            }
          },
          "id": "reactflow__edge-AzureOpenAIModel-lZgTt{œdataTypeœ:œAzureOpenAIModelœ,œidœ:œAzureOpenAIModel-lZgTtœ,œnameœ:œmodel_outputœ,œoutput_typesœ:[œLanguageModelœ]}-CustomComponent-5KUly{œfieldNameœ:œllmœ,œidœ:œCustomComponent-5KUlyœ,œinputTypesœ:null,œtypeœ:œLanguageModelœ}",
          "className": ""
        },
        {
          "source": "CustomComponent-5KUly",
          "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-5KUlyœ,œnameœ:œagentœ,œoutput_typesœ:[œAgentœ]}",
          "target": "CustomComponent-9KcwH",
          "targetHandle": "{œfieldNameœ:œagentœ,œidœ:œCustomComponent-9KcwHœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
          "data": {
            "targetHandle": {
              "fieldName": "agent",
              "id": "CustomComponent-9KcwH",
              "inputTypes": null,
              "type": "Agent"
            },
            "sourceHandle": {
              "dataType": "CustomComponent",
              "id": "CustomComponent-5KUly",
              "name": "agent",
              "output_types": [
                "Agent"
              ]
            }
          },
          "id": "reactflow__edge-CustomComponent-5KUly{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-5KUlyœ,œnameœ:œagentœ,œoutput_typesœ:[œAgentœ]}-CustomComponent-9KcwH{œfieldNameœ:œagentœ,œidœ:œCustomComponent-9KcwHœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
          "className": ""
        },
        {
          "source": "CustomComponent-9KcwH",
          "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-9KcwHœ,œnameœ:œtaskœ,œoutput_typesœ:[œTaskœ]}",
          "target": "CustomComponent-y0WMh",
          "targetHandle": "{œfieldNameœ:œtasksœ,œidœ:œCustomComponent-y0WMhœ,œinputTypesœ:null,œtypeœ:œTaskœ}",
          "data": {
            "targetHandle": {
              "fieldName": "tasks",
              "id": "CustomComponent-y0WMh",
              "inputTypes": null,
              "type": "Task"
            },
            "sourceHandle": {
              "dataType": "CustomComponent",
              "id": "CustomComponent-9KcwH",
              "name": "task",
              "output_types": [
                "Task"
              ]
            }
          },
          "id": "reactflow__edge-CustomComponent-9KcwH{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-9KcwHœ,œnameœ:œtaskœ,œoutput_typesœ:[œTaskœ]}-CustomComponent-y0WMh{œfieldNameœ:œtasksœ,œidœ:œCustomComponent-y0WMhœ,œinputTypesœ:null,œtypeœ:œTaskœ}",
          "className": ""
        },
        {
          "source": "CustomComponent-AS3fl",
          "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-AS3flœ,œnameœ:œtoolœ,œoutput_typesœ:[œToolœ]}",
          "target": "CustomComponent-VUwou",
          "targetHandle": "{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-VUwouœ,œinputTypesœ:null,œtypeœ:œToolœ}",
          "data": {
            "targetHandle": {
              "fieldName": "tools",
              "id": "CustomComponent-VUwou",
              "inputTypes": null,
              "type": "Tool"
            },
            "sourceHandle": {
              "dataType": "CustomComponent",
              "id": "CustomComponent-AS3fl",
              "name": "tool",
              "output_types": [
                "Tool"
              ]
            }
          },
          "id": "reactflow__edge-CustomComponent-AS3fl{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-AS3flœ,œnameœ:œtoolœ,œoutput_typesœ:[œToolœ]}-CustomComponent-VUwou{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-VUwouœ,œinputTypesœ:null,œtypeœ:œToolœ}",
          "className": ""
        },
        {
          "source": "CustomComponent-AS3fl",
          "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-AS3flœ,œnameœ:œtoolœ,œoutput_typesœ:[œToolœ]}",
          "target": "CustomComponent-9Mc0i",
          "targetHandle": "{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-9Mc0iœ,œinputTypesœ:null,œtypeœ:œToolœ}",
          "data": {
            "targetHandle": {
              "fieldName": "tools",
              "id": "CustomComponent-9Mc0i",
              "inputTypes": null,
              "type": "Tool"
            },
            "sourceHandle": {
              "dataType": "CustomComponent",
              "id": "CustomComponent-AS3fl",
              "name": "tool",
              "output_types": [
                "Tool"
              ]
            }
          },
          "id": "reactflow__edge-CustomComponent-AS3fl{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-AS3flœ,œnameœ:œtoolœ,œoutput_typesœ:[œToolœ]}-CustomComponent-9Mc0i{œfieldNameœ:œtoolsœ,œidœ:œCustomComponent-9Mc0iœ,œinputTypesœ:null,œtypeœ:œToolœ}",
          "className": ""
        },
        {
          "source": "CustomComponent-g1iqe",
          "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-g1iqeœ,œnameœ:œagentœ,œoutput_typesœ:[œAgentœ]}",
          "target": "CustomComponent-y0WMh",
          "targetHandle": "{œfieldNameœ:œagentsœ,œidœ:œCustomComponent-y0WMhœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
          "data": {
            "targetHandle": {
              "fieldName": "agents",
              "id": "CustomComponent-y0WMh",
              "inputTypes": null,
              "type": "Agent"
            },
            "sourceHandle": {
              "dataType": "CustomComponent",
              "id": "CustomComponent-g1iqe",
              "name": "agent",
              "output_types": [
                "Agent"
              ]
            }
          },
          "id": "reactflow__edge-CustomComponent-g1iqe{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-g1iqeœ,œnameœ:œagentœ,œoutput_typesœ:[œAgentœ]}-CustomComponent-y0WMh{œfieldNameœ:œagentsœ,œidœ:œCustomComponent-y0WMhœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
          "className": ""
        },
        {
          "source": "CustomComponent-5KUly",
          "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-5KUlyœ,œnameœ:œagentœ,œoutput_typesœ:[œAgentœ]}",
          "target": "CustomComponent-y0WMh",
          "targetHandle": "{œfieldNameœ:œagentsœ,œidœ:œCustomComponent-y0WMhœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
          "data": {
            "targetHandle": {
              "fieldName": "agents",
              "id": "CustomComponent-y0WMh",
              "inputTypes": null,
              "type": "Agent"
            },
            "sourceHandle": {
              "dataType": "CustomComponent",
              "id": "CustomComponent-5KUly",
              "name": "agent",
              "output_types": [
                "Agent"
              ]
            }
          },
          "id": "reactflow__edge-CustomComponent-5KUly{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-5KUlyœ,œnameœ:œagentœ,œoutput_typesœ:[œAgentœ]}-CustomComponent-y0WMh{œfieldNameœ:œagentsœ,œidœ:œCustomComponent-y0WMhœ,œinputTypesœ:null,œtypeœ:œAgentœ}",
          "className": ""
        }
      ],
      "viewport": {
        "x": 0,
        "y": 0,
        "zoom": 1
      }
    },
    "date_created": "2024-07-04T11:35:26.776Z",
    "date_updated": "2024-07-04T11:35:38.920Z",
    "status": "Public",
    "sort": null,
    "user_updated": "0d23bade-f781-490d-b0c0-6bd302713bc5",
    "user_created": {
      "username": "buntyshah",
      "first_name": "bunty",
      "last_name": "shah",
      "id": "0d23bade-f781-490d-b0c0-6bd302713bc5"
    },
    "tags": [
      {
        "tags_id": {
          "name": "Agent",
          "id": "ccabb590-c9e8-4e56-9d6c-309955936c6c"
        }
      }
    ]
  },
  "conversion": {
    "converted_at": "2025-08-19T18:08:55.345Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 76,
    "converter_version": "1.0.0"
  }
}