{
  "id": "1eeb94f8-330e-4baf-854c-74dc87e76db9",
  "name": "Untitled document",
  "description": "Craft Language Connections Here. (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "FLOW",
  "is_component": false,
  "author": {
    "username": "terminalgravity",
    "first_name": "Jack",
    "last_name": "Felke",
    "id": "fecafabc-9864-4457-a763-314aa4aa9293",
    "full_name": "Jack Felke"
  },
  "store_url": "https://www.langflow.store/store/component/1eeb94f8-330e-4baf-854c-74dc87e76db9",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-05-10T20:44:37.158Z",
    "updated": "2024-05-10T20:44:37.314Z",
    "downloaded": "2025-08-19T17:50:05.893Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "0.6.14",
    "private": false,
    "status": "Public"
  },
  "data": {
    "nodes": [
      {
        "id": "CustomComponent-kMU68",
        "type": "genericNode",
        "position": {
          "x": -417.76434251958824,
          "y": -268.9550001931226
        },
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "body": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "body",
                "display_name": "Body",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio import CustomComponent\nfrom langchain.schema import Document\nimport requests\n\nclass HTTPRequestComponent(CustomComponent):\n    display_name = \"HTTP Request\"\n    description = \"This component sends HTTP requests and returns the response.\"\n\n    def build_config(self) -> dict:\n        methods = [\"GET\", \"POST\", \"PUT\", \"DELETE\"]\n        return {\n            \"method\": {\n                \"options\": methods,\n                \"value\": methods[0],\n                \"display_name\": \"HTTP Method\"\n            },\n            \"url\": {\n                \"display_name\": \"URL\"\n            },\n            \"headers\": {\n                \"display_name\": \"Headers\",\n                \"field_type\": \"dict\",\n                \"required\": False,\n                \"multiline\": True\n            },\n            \"body\": {\n                \"display_name\": \"Body\",\n                \"field_type\": \"str\",\n                \"required\": False,\n                \"multiline\": True\n            }\n        }\n\n    def build(self, method: str, url: str, headers: dict = {\"Accept\": \"*/*\"}, body: str = None) -> Document:\n        response = requests.request(method, url, headers=headers, data=body)\n        self.repr_value = f\"Response Status Code: {response.status_code}\"\n        return Document(page_content=response.text)\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "headers": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": [
                  {
                    "Content-Type": "application/json"
                  },
                  {
                    "Authorization": "Token PclJ9hhYkaHtRwryjHUDGgYNf7BG3Bca:JxlPrHruZuX0K4sEOOoO7pDMp57nemvP"
                  }
                ],
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "headers",
                "display_name": "Headers",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "method": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "GET",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "options": [
                  "GET",
                  "POST",
                  "PUT",
                  "DELETE"
                ],
                "name": "method",
                "display_name": "HTTP Method",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "url": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "url",
                "display_name": "URL",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "value": "https://bookstack-xwdf6yz6ya-uc.a.run.app/api/shelves"
              },
              "_type": "CustomComponent"
            },
            "description": "This component sends HTTP requests and returns the response.",
            "base_classes": [
              "Document"
            ],
            "display_name": "HTTP Request",
            "documentation": "",
            "custom_fields": {
              "method": null,
              "url": null,
              "headers": null,
              "body": null
            },
            "output_types": [
              "Document"
            ],
            "field_formatters": {},
            "beta": true
          },
          "id": "CustomComponent-kMU68",
          "description": "This component sends HTTP requests and returns the response.",
          "display_name": "HTTP Request"
        },
        "selected": false,
        "width": 384,
        "height": 707,
        "positionAbsolute": {
          "x": -417.76434251958824,
          "y": -268.9550001931226
        },
        "dragging": false
      },
      {
        "id": "Chroma-0IfqS",
        "type": "genericNode",
        "position": {
          "x": 715.2262206951851,
          "y": 539.0648155300576
        },
        "data": {
          "type": "Chroma",
          "node": {
            "template": {
              "documents": {
                "type": "Document",
                "required": false,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "documents",
                "display_name": "Documents",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "embedding": {
                "type": "Embeddings",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "embedding",
                "display_name": "Embedding",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "chroma_server_cors_allow_origins": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "chroma_server_cors_allow_origins",
                "display_name": "Server CORS Allow Origins",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "chroma_server_grpc_port": {
                "type": "int",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "chroma_server_grpc_port",
                "display_name": "Server gRPC Port",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "chroma_server_host": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "chroma_server_host",
                "display_name": "Server Host",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "chroma_server_port": {
                "type": "int",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "chroma_server_port",
                "display_name": "Server Port",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "chroma_server_ssl_enabled": {
                "type": "bool",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "chroma_server_ssl_enabled",
                "display_name": "Server SSL Enabled",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from typing import List, Optional, Union\n\nimport chromadb  # type: ignore\nfrom langchain.embeddings.base import Embeddings\nfrom langchain.schema import BaseRetriever, Document\nfrom langchain_community.vectorstores import VectorStore\nfrom langchain_community.vectorstores.chroma import Chroma\nfrom axiestudio import CustomComponent\n\n\nclass ChromaComponent(CustomComponent):\n    \"\"\"\n    A custom component for implementing a Vector Store using Chroma.\n    \"\"\"\n\n    display_name: str = \"Chroma\"\n    description: str = \"Implementation of Vector Store using Chroma\"\n    documentation = \"https://python.langchain.com/docs/integrations/vectorstores/chroma\"\n    beta: bool = True\n\n    def build_config(self):\n        \"\"\"\n        Builds the configuration for the component.\n\n        Returns:\n        - dict: A dictionary containing the configuration options for the component.\n        \"\"\"\n        return {\n            \"collection_name\": {\"display_name\": \"Collection Name\", \"value\": \"axiestudio\"},\n            \"persist\": {\"display_name\": \"Persist\"},\n            \"persist_directory\": {\"display_name\": \"Persist Directory\"},\n            \"code\": {\"advanced\": True, \"display_name\": \"Code\"},\n            \"documents\": {\"display_name\": \"Documents\", \"is_list\": True},\n            \"embedding\": {\"display_name\": \"Embedding\"},\n            \"chroma_server_cors_allow_origins\": {\n                \"display_name\": \"Server CORS Allow Origins\",\n                \"advanced\": True,\n            },\n            \"chroma_server_host\": {\"display_name\": \"Server Host\", \"advanced\": True},\n            \"chroma_server_port\": {\"display_name\": \"Server Port\", \"advanced\": True},\n            \"chroma_server_grpc_port\": {\n                \"display_name\": \"Server gRPC Port\",\n                \"advanced\": True,\n            },\n            \"chroma_server_ssl_enabled\": {\n                \"display_name\": \"Server SSL Enabled\",\n                \"advanced\": True,\n            },\n        }\n\n    def build(\n        self,\n        collection_name: str,\n        persist: bool,\n        embedding: Embeddings,\n        chroma_server_ssl_enabled: bool,\n        persist_directory: Optional[str] = None,\n        documents: Optional[List[Document]] = None,\n        chroma_server_cors_allow_origins: Optional[str] = None,\n        chroma_server_host: Optional[str] = None,\n        chroma_server_port: Optional[int] = None,\n        chroma_server_grpc_port: Optional[int] = None,\n    ) -> Union[VectorStore, BaseRetriever]:\n        \"\"\"\n        Builds the Vector Store or BaseRetriever object.\n\n        Args:\n        - collection_name (str): The name of the collection.\n        - persist_directory (Optional[str]): The directory to persist the Vector Store to.\n        - chroma_server_ssl_enabled (bool): Whether to enable SSL for the Chroma server.\n        - persist (bool): Whether to persist the Vector Store or not.\n        - embedding (Optional[Embeddings]): The embeddings to use for the Vector Store.\n        - documents (Optional[Document]): The documents to use for the Vector Store.\n        - chroma_server_cors_allow_origins (Optional[str]): The CORS allow origins for the Chroma server.\n        - chroma_server_host (Optional[str]): The host for the Chroma server.\n        - chroma_server_port (Optional[int]): The port for the Chroma server.\n        - chroma_server_grpc_port (Optional[int]): The gRPC port for the Chroma server.\n\n        Returns:\n        - Union[VectorStore, BaseRetriever]: The Vector Store or BaseRetriever object.\n        \"\"\"\n\n        # Chroma settings\n        chroma_settings = None\n\n        if chroma_server_host is not None:\n            chroma_settings = chromadb.config.Settings(\n                chroma_server_cors_allow_origins=chroma_server_cors_allow_origins or None,\n                chroma_server_host=chroma_server_host,\n                chroma_server_port=chroma_server_port or None,\n                chroma_server_grpc_port=chroma_server_grpc_port or None,\n                chroma_server_ssl_enabled=chroma_server_ssl_enabled,\n            )\n\n        # If documents, then we need to create a Chroma instance using .from_documents\n        if documents is not None and embedding is not None:\n            if len(documents) == 0:\n                raise ValueError(\"If documents are provided, there must be at least one document.\")\n            return Chroma.from_documents(\n                documents=documents,  # type: ignore\n                persist_directory=persist_directory if persist else None,\n                collection_name=collection_name,\n                embedding=embedding,\n                client_settings=chroma_settings,\n            )\n\n        return Chroma(persist_directory=persist_directory, client_settings=chroma_settings)\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "collection_name": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "axiestudio",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "collection_name",
                "display_name": "Collection Name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "persist": {
                "type": "bool",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "persist",
                "display_name": "Persist",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "persist_directory": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "persist_directory",
                "display_name": "Persist Directory",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "_type": "CustomComponent"
            },
            "description": "Implementation of Vector Store using Chroma",
            "base_classes": [
              "VectorStore",
              "BaseRetriever"
            ],
            "display_name": "Chroma",
            "documentation": "https://python.langchain.com/docs/integrations/vectorstores/chroma",
            "custom_fields": {
              "collection_name": null,
              "persist": null,
              "embedding": null,
              "chroma_server_ssl_enabled": null,
              "persist_directory": null,
              "documents": null,
              "chroma_server_cors_allow_origins": null,
              "chroma_server_host": null,
              "chroma_server_port": null,
              "chroma_server_grpc_port": null
            },
            "output_types": [
              "VectorStore",
              "BaseRetriever"
            ],
            "field_formatters": {},
            "beta": true
          },
          "id": "Chroma-0IfqS"
        },
        "selected": false,
        "width": 384,
        "height": 555,
        "positionAbsolute": {
          "x": 715.2262206951851,
          "y": 539.0648155300576
        },
        "dragging": false
      },
      {
        "id": "OpenAIEmbeddings-9Mr1i",
        "type": "genericNode",
        "position": {
          "x": 132.79015405891118,
          "y": 708.7783608288681
        },
        "data": {
          "type": "OpenAIEmbeddings",
          "node": {
            "template": {
              "allowed_special": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": [],
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "allowed_special",
                "display_name": "Allowed Special",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "chunk_size": {
                "type": "int",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": 1000,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "chunk_size",
                "display_name": "Chunk Size",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "client": {
                "type": "Any",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "client",
                "display_name": "Client",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from typing import Any, Callable, Dict, List, Optional, Union\n\nfrom langchain_openai.embeddings.base import OpenAIEmbeddings\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import NestedDict\nfrom pydantic.v1.types import SecretStr\n\n\nclass OpenAIEmbeddingsComponent(CustomComponent):\n    display_name = \"OpenAIEmbeddings\"\n    description = \"OpenAI embedding models\"\n\n    def build_config(self):\n        return {\n            \"allowed_special\": {\n                \"display_name\": \"Allowed Special\",\n                \"advanced\": True,\n                \"field_type\": \"str\",\n                \"is_list\": True,\n            },\n            \"default_headers\": {\n                \"display_name\": \"Default Headers\",\n                \"advanced\": True,\n                \"field_type\": \"dict\",\n            },\n            \"default_query\": {\n                \"display_name\": \"Default Query\",\n                \"advanced\": True,\n                \"field_type\": \"NestedDict\",\n            },\n            \"disallowed_special\": {\n                \"display_name\": \"Disallowed Special\",\n                \"advanced\": True,\n                \"field_type\": \"str\",\n                \"is_list\": True,\n            },\n            \"chunk_size\": {\"display_name\": \"Chunk Size\", \"advanced\": True},\n            \"client\": {\"display_name\": \"Client\", \"advanced\": True},\n            \"deployment\": {\"display_name\": \"Deployment\", \"advanced\": True},\n            \"embedding_ctx_length\": {\n                \"display_name\": \"Embedding Context Length\",\n                \"advanced\": True,\n            },\n            \"max_retries\": {\"display_name\": \"Max Retries\", \"advanced\": True},\n            \"model\": {\n                \"display_name\": \"Model\",\n                \"advanced\": False,\n                \"options\": [\"text-embedding-3-small\", \"text-embedding-3-large\", \"text-embedding-ada-002\"],\n            },\n            \"model_kwargs\": {\"display_name\": \"Model Kwargs\", \"advanced\": True},\n            \"openai_api_base\": {\"display_name\": \"OpenAI API Base\", \"password\": True, \"advanced\": True},\n            \"openai_api_key\": {\"display_name\": \"OpenAI API Key\", \"password\": True},\n            \"openai_api_type\": {\"display_name\": \"OpenAI API Type\", \"advanced\": True, \"password\": True},\n            \"openai_api_version\": {\n                \"display_name\": \"OpenAI API Version\",\n                \"advanced\": True,\n            },\n            \"openai_organization\": {\n                \"display_name\": \"OpenAI Organization\",\n                \"advanced\": True,\n            },\n            \"openai_proxy\": {\"display_name\": \"OpenAI Proxy\", \"advanced\": True},\n            \"request_timeout\": {\"display_name\": \"Request Timeout\", \"advanced\": True},\n            \"show_progress_bar\": {\n                \"display_name\": \"Show Progress Bar\",\n                \"advanced\": True,\n            },\n            \"skip_empty\": {\"display_name\": \"Skip Empty\", \"advanced\": True},\n            \"tiktoken_model_name\": {\"display_name\": \"TikToken Model Name\"},\n            \"tikToken_enable\": {\"display_name\": \"TikToken Enable\", \"advanced\": True},\n        }\n\n    def build(\n        self,\n        default_headers: Optional[Dict[str, str]] = None,\n        default_query: Optional[NestedDict] = {},\n        allowed_special: List[str] = [],\n        disallowed_special: List[str] = [\"all\"],\n        chunk_size: int = 1000,\n        client: Optional[Any] = None,\n        deployment: str = \"text-embedding-3-small\",\n        embedding_ctx_length: int = 8191,\n        max_retries: int = 6,\n        model: str = \"text-embedding-3-small\",\n        model_kwargs: NestedDict = {},\n        openai_api_base: Optional[str] = None,\n        openai_api_key: Optional[str] = \"\",\n        openai_api_type: Optional[str] = None,\n        openai_api_version: Optional[str] = None,\n        openai_organization: Optional[str] = None,\n        openai_proxy: Optional[str] = None,\n        request_timeout: Optional[float] = None,\n        show_progress_bar: bool = False,\n        skip_empty: bool = False,\n        tiktoken_enable: bool = True,\n        tiktoken_model_name: Optional[str] = None,\n    ) -> Union[OpenAIEmbeddings, Callable]:\n        # This is to avoid errors with Vector Stores (e.g Chroma)\n        if disallowed_special == [\"all\"]:\n            disallowed_special = \"all\"  # type: ignore\n\n        api_key = SecretStr(openai_api_key) if openai_api_key else None\n\n        return OpenAIEmbeddings(\n            tiktoken_enabled=tiktoken_enable,\n            default_headers=default_headers,\n            default_query=default_query,\n            allowed_special=set(allowed_special),\n            disallowed_special=\"all\",\n            chunk_size=chunk_size,\n            client=client,\n            deployment=deployment,\n            embedding_ctx_length=embedding_ctx_length,\n            max_retries=max_retries,\n            model=model,\n            model_kwargs=model_kwargs,\n            base_url=openai_api_base,\n            api_key=api_key,\n            openai_api_type=openai_api_type,\n            api_version=openai_api_version,\n            organization=openai_organization,\n            openai_proxy=openai_proxy,\n            timeout=request_timeout,\n            show_progress_bar=show_progress_bar,\n            skip_empty=skip_empty,\n            tiktoken_model_name=tiktoken_model_name,\n        )\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "default_headers": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "default_headers",
                "display_name": "Default Headers",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "default_query": {
                "type": "NestedDict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": {},
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "default_query",
                "display_name": "Default Query",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "deployment": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "text-embedding-3-small",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "deployment",
                "display_name": "Deployment",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "disallowed_special": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": [
                  "all"
                ],
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "disallowed_special",
                "display_name": "Disallowed Special",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "embedding_ctx_length": {
                "type": "int",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": 8191,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "embedding_ctx_length",
                "display_name": "Embedding Context Length",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "max_retries": {
                "type": "int",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": 6,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "max_retries",
                "display_name": "Max Retries",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "model": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "text-embedding-3-large",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "options": [
                  "text-embedding-3-small",
                  "text-embedding-3-large",
                  "text-embedding-ada-002"
                ],
                "name": "model",
                "display_name": "Model",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "model_kwargs": {
                "type": "NestedDict",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": {},
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "model_kwargs",
                "display_name": "Model Kwargs",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "openai_api_base": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": true,
                "name": "openai_api_base",
                "display_name": "OpenAI API Base",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "value": ""
              },
              "openai_api_key": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": true,
                "name": "openai_api_key",
                "display_name": "OpenAI API Key",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "openai_api_type": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": true,
                "name": "openai_api_type",
                "display_name": "OpenAI API Type",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "value": ""
              },
              "openai_api_version": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "openai_api_version",
                "display_name": "OpenAI API Version",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "openai_organization": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "openai_organization",
                "display_name": "OpenAI Organization",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "openai_proxy": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "openai_proxy",
                "display_name": "OpenAI Proxy",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "request_timeout": {
                "type": "float",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "request_timeout",
                "display_name": "Request Timeout",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "rangeSpec": {
                  "min": -1,
                  "max": 1,
                  "step": 0.1
                },
                "title_case": true
              },
              "show_progress_bar": {
                "type": "bool",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "show_progress_bar",
                "display_name": "Show Progress Bar",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "skip_empty": {
                "type": "bool",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "skip_empty",
                "display_name": "Skip Empty",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "tiktoken_enable": {
                "type": "bool",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": true,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "tiktoken_enable",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "tiktoken_model_name": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "tiktoken_model_name",
                "display_name": "TikToken Model Name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "_type": "CustomComponent"
            },
            "description": "OpenAI embedding models",
            "base_classes": [
              "OpenAIEmbeddings",
              "Embeddings",
              "Callable"
            ],
            "display_name": "OpenAIEmbeddings",
            "documentation": "",
            "custom_fields": {
              "default_headers": null,
              "default_query": null,
              "allowed_special": null,
              "disallowed_special": null,
              "chunk_size": null,
              "client": null,
              "deployment": null,
              "embedding_ctx_length": null,
              "max_retries": null,
              "model": null,
              "model_kwargs": null,
              "openai_api_base": null,
              "openai_api_key": null,
              "openai_api_type": null,
              "openai_api_version": null,
              "openai_organization": null,
              "openai_proxy": null,
              "request_timeout": null,
              "show_progress_bar": null,
              "skip_empty": null,
              "tiktoken_enable": null,
              "tiktoken_model_name": null
            },
            "output_types": [
              "OpenAIEmbeddings",
              "Callable"
            ],
            "field_formatters": {},
            "beta": true
          },
          "id": "OpenAIEmbeddings-9Mr1i"
        },
        "selected": false,
        "width": 384,
        "height": 635,
        "positionAbsolute": {
          "x": 132.79015405891118,
          "y": 708.7783608288681
        },
        "dragging": false
      },
      {
        "id": "Tool-KnkwJ",
        "type": "genericNode",
        "position": {
          "x": 1205.5557926894298,
          "y": 628.5254475200442
        },
        "data": {
          "type": "Tool",
          "node": {
            "template": {
              "retriever": {
                "type": "BaseRetriever",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "retriever",
                "display_name": "Retriever",
                "advanced": false,
                "dynamic": false,
                "info": "Retriever to interact with",
                "title_case": true
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from langchain.tools.retriever import create_retriever_tool\n\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import BaseRetriever, Tool\n\n\nclass RetrieverToolComponent(CustomComponent):\n    display_name = \"RetrieverTool\"\n    description = \"Tool for interacting with retriever\"\n\n    def build_config(self):\n        return {\n            \"retriever\": {\n                \"display_name\": \"Retriever\",\n                \"info\": \"Retriever to interact with\",\n                \"type\": BaseRetriever,\n            },\n            \"name\": {\"display_name\": \"Name\", \"info\": \"Name of the tool\"},\n            \"description\": {\"display_name\": \"Description\", \"info\": \"Description of the tool\"},\n        }\n\n    def build(\n        self,\n        retriever: BaseRetriever,\n        name: str,\n        description: str,\n    ) -> Tool:\n        return create_retriever_tool(\n            retriever=retriever,\n            name=name,\n            description=description,\n        )\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "description": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "description",
                "display_name": "Description",
                "advanced": false,
                "dynamic": false,
                "info": "Description of the tool",
                "title_case": true,
                "value": "get shelve, books, chapters and page ID's from bookstack"
              },
              "name": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "name",
                "display_name": "Name",
                "advanced": false,
                "dynamic": false,
                "info": "Name of the tool",
                "title_case": true,
                "value": "Organized BookStack ID Info"
              },
              "_type": "CustomComponent"
            },
            "description": "Tool for interacting with retriever",
            "base_classes": [
              "Tool",
              "BaseTool"
            ],
            "display_name": "RetrieverTool",
            "documentation": "",
            "custom_fields": {
              "retriever": null,
              "name": null,
              "description": null
            },
            "output_types": [
              "Tool"
            ],
            "field_formatters": {},
            "beta": true
          },
          "id": "Tool-KnkwJ"
        },
        "selected": false,
        "width": 384,
        "height": 517,
        "positionAbsolute": {
          "x": 1205.5557926894298,
          "y": 628.5254475200442
        },
        "dragging": false
      },
      {
        "id": "AgentExecutor-bimKz",
        "type": "genericNode",
        "position": {
          "x": 1880.4641307546647,
          "y": -113.7987364821841
        },
        "data": {
          "type": "AgentExecutor",
          "node": {
            "template": {
              "memory": {
                "type": "BaseMemory",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "memory",
                "display_name": "Memory",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "system_message": {
                "type": "SystemMessagePromptTemplate",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "system_message",
                "display_name": "System Message",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "tools": {
                "type": "Tool",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "tools",
                "display_name": "Tools",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from typing import List, Optional\n\nfrom langchain.agents.agent import AgentExecutor\nfrom langchain.agents.agent_toolkits.conversational_retrieval.openai_functions import _get_default_system_message\nfrom langchain.agents.openai_functions_agent.base import OpenAIFunctionsAgent\nfrom langchain.memory.token_buffer import ConversationTokenBufferMemory\nfrom langchain.prompts import SystemMessagePromptTemplate\nfrom langchain.prompts.chat import MessagesPlaceholder\nfrom langchain.schema.memory import BaseMemory\nfrom langchain.tools import Tool\nfrom langchain_community.chat_models import ChatOpenAI\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing.range_spec import RangeSpec\n\n\nclass ConversationalAgent(CustomComponent):\n    display_name: str = \"OpenAI Conversational Agent\"\n    description: str = \"Conversational Agent that can use OpenAI's function calling API\"\n\n    def build_config(self):\n        openai_function_models = [\n            \"gpt-4-turbo-preview\",\n            \"gpt-4-0125-preview\",\n            \"gpt-4-1106-preview\",\n            \"gpt-4-vision-preview\",\n            \"gpt-3.5-turbo-0125\",\n            \"gpt-3.5-turbo-1106\",\n        ]\n        return {\n            \"tools\": {\"display_name\": \"Tools\"},\n            \"memory\": {\"display_name\": \"Memory\"},\n            \"system_message\": {\"display_name\": \"System Message\"},\n            \"max_token_limit\": {\"display_name\": \"Max Token Limit\"},\n            \"model_name\": {\n                \"display_name\": \"Model Name\",\n                \"options\": openai_function_models,\n                \"value\": openai_function_models[0],\n            },\n            \"code\": {\"show\": False},\n            \"temperature\": {\n                \"display_name\": \"Temperature\",\n                \"value\": 0.2,\n                \"range_spec\": RangeSpec(min=0, max=2, step=0.1),\n            },\n        }\n\n    def build(\n        self,\n        model_name: str,\n        openai_api_key: str,\n        tools: List[Tool],\n        openai_api_base: Optional[str] = None,\n        memory: Optional[BaseMemory] = None,\n        system_message: Optional[SystemMessagePromptTemplate] = None,\n        max_token_limit: int = 2000,\n        temperature: float = 0.9,\n    ) -> AgentExecutor:\n        llm = ChatOpenAI(\n            model=model_name,\n            api_key=openai_api_key,\n            base_url=openai_api_base,\n            max_tokens=max_token_limit,\n            temperature=temperature,\n        )\n        if not memory:\n            memory_key = \"chat_history\"\n            memory = ConversationTokenBufferMemory(\n                memory_key=memory_key,\n                return_messages=True,\n                output_key=\"output\",\n                llm=llm,\n                max_token_limit=max_token_limit,\n            )\n        else:\n            memory_key = memory.memory_key  # type: ignore\n\n        _system_message = system_message or _get_default_system_message()\n        prompt = OpenAIFunctionsAgent.create_prompt(\n            system_message=_system_message,  # type: ignore\n            extra_prompt_messages=[MessagesPlaceholder(variable_name=memory_key)],\n        )\n        agent = OpenAIFunctionsAgent(\n            llm=llm,\n            tools=tools,\n            prompt=prompt,  # type: ignore\n        )\n        return AgentExecutor(\n            agent=agent,\n            tools=tools,  # type: ignore\n            memory=memory,\n            verbose=True,\n            return_intermediate_steps=True,\n            handle_parsing_errors=True,\n        )\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "max_token_limit": {
                "type": "int",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": 2000,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "max_token_limit",
                "display_name": "Max Token Limit",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "model_name": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "gpt-4-turbo-preview",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "options": [
                  "gpt-4-turbo-preview",
                  "gpt-4-0125-preview",
                  "gpt-4-1106-preview",
                  "gpt-4-vision-preview",
                  "gpt-3.5-turbo-0125",
                  "gpt-3.5-turbo-1106"
                ],
                "name": "model_name",
                "display_name": "Model Name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "openai_api_base": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "openai_api_base",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "openai_api_key": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "openai_api_key",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "value": "sk-proj-IQuaZWDGAbAOEK9mqfAXT3BlbkFJUZuVZs2nGYBFITjj7w5z"
              },
              "temperature": {
                "type": "float",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": 0.2,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "temperature",
                "display_name": "Temperature",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "rangeSpec": {
                  "min": 0,
                  "max": 2,
                  "step": 0.1
                },
                "title_case": true
              },
              "_type": "CustomComponent"
            },
            "description": "Conversational Agent that can use OpenAI's function calling API",
            "base_classes": [
              "Chain",
              "AgentExecutor"
            ],
            "display_name": "OpenAI Conversational Agent",
            "documentation": "",
            "custom_fields": {
              "model_name": null,
              "openai_api_key": null,
              "tools": null,
              "openai_api_base": null,
              "memory": null,
              "system_message": null,
              "max_token_limit": null,
              "temperature": null
            },
            "output_types": [
              "AgentExecutor"
            ],
            "field_formatters": {},
            "beta": true
          },
          "id": "AgentExecutor-bimKz"
        },
        "selected": false,
        "width": 384,
        "height": 895,
        "positionAbsolute": {
          "x": 1880.4641307546647,
          "y": -113.7987364821841
        },
        "dragging": false
      },
      {
        "id": "CustomComponent-NUhdR",
        "type": "genericNode",
        "position": {
          "x": -433.6535375755252,
          "y": -1012.9671371627172
        },
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "body": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "body",
                "display_name": "Body",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio import CustomComponent\nfrom langchain.schema import Document\nimport requests\n\nclass HTTPRequestComponent(CustomComponent):\n    display_name = \"HTTP Request\"\n    description = \"This component sends HTTP requests and returns the response.\"\n\n    def build_config(self) -> dict:\n        methods = [\"GET\", \"POST\", \"PUT\", \"DELETE\"]\n        return {\n            \"method\": {\n                \"options\": methods,\n                \"value\": methods[0],\n                \"display_name\": \"HTTP Method\"\n            },\n            \"url\": {\n                \"display_name\": \"URL\"\n            },\n            \"headers\": {\n                \"display_name\": \"Headers\",\n                \"field_type\": \"dict\",\n                \"required\": False,\n                \"multiline\": True\n            },\n            \"body\": {\n                \"display_name\": \"Body\",\n                \"field_type\": \"str\",\n                \"required\": False,\n                \"multiline\": True\n            }\n        }\n\n    def build(self, method: str, url: str, headers: dict = {\"Accept\": \"*/*\"}, body: str = None) -> Document:\n        response = requests.request(method, url, headers=headers, data=body)\n        self.repr_value = f\"Response Status Code: {response.status_code}\"\n        return Document(page_content=response.text)\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "headers": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": [
                  {
                    "Content-Type": "application/json"
                  },
                  {
                    "Authorization": "Token PclJ9hhYkaHtRwryjHUDGgYNf7BG3Bca:JxlPrHruZuX0K4sEOOoO7pDMp57nemvP"
                  }
                ],
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "headers",
                "display_name": "Headers",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "method": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "GET",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "options": [
                  "GET",
                  "POST",
                  "PUT",
                  "DELETE"
                ],
                "name": "method",
                "display_name": "HTTP Method",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "url": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "url",
                "display_name": "URL",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "value": "https://bookstack-xwdf6yz6ya-uc.a.run.app/api/books"
              },
              "_type": "CustomComponent"
            },
            "description": "This component sends HTTP requests and returns the response.",
            "base_classes": [
              "Document"
            ],
            "display_name": "HTTP Request",
            "documentation": "",
            "custom_fields": {
              "method": null,
              "url": null,
              "headers": null,
              "body": null
            },
            "output_types": [
              "Document"
            ],
            "field_formatters": {},
            "beta": true
          },
          "id": "CustomComponent-NUhdR",
          "description": "This component sends HTTP requests and returns the response.",
          "display_name": "HTTP Request"
        },
        "selected": false,
        "width": 384,
        "height": 707,
        "positionAbsolute": {
          "x": -433.6535375755252,
          "y": -1012.9671371627172
        },
        "dragging": false
      },
      {
        "id": "CustomComponent-Gdb4w",
        "type": "genericNode",
        "position": {
          "x": -432.65258327652253,
          "y": -1740.0312854363028
        },
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "body": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "body",
                "display_name": "Body",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio import CustomComponent\nfrom langchain.schema import Document\nimport requests\n\nclass HTTPRequestComponent(CustomComponent):\n    display_name = \"HTTP Request\"\n    description = \"This component sends HTTP requests and returns the response.\"\n\n    def build_config(self) -> dict:\n        methods = [\"GET\", \"POST\", \"PUT\", \"DELETE\"]\n        return {\n            \"method\": {\n                \"options\": methods,\n                \"value\": methods[0],\n                \"display_name\": \"HTTP Method\"\n            },\n            \"url\": {\n                \"display_name\": \"URL\"\n            },\n            \"headers\": {\n                \"display_name\": \"Headers\",\n                \"field_type\": \"dict\",\n                \"required\": False,\n                \"multiline\": True\n            },\n            \"body\": {\n                \"display_name\": \"Body\",\n                \"field_type\": \"str\",\n                \"required\": False,\n                \"multiline\": True\n            }\n        }\n\n    def build(self, method: str, url: str, headers: dict = {\"Accept\": \"*/*\"}, body: str = None) -> Document:\n        response = requests.request(method, url, headers=headers, data=body)\n        self.repr_value = f\"Response Status Code: {response.status_code}\"\n        return Document(page_content=response.text)\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "headers": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": [
                  {
                    "Content-Type": "application/json"
                  },
                  {
                    "Authorization": "Token PclJ9hhYkaHtRwryjHUDGgYNf7BG3Bca:JxlPrHruZuX0K4sEOOoO7pDMp57nemvP"
                  }
                ],
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "headers",
                "display_name": "Headers",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "method": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "GET",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "options": [
                  "GET",
                  "POST",
                  "PUT",
                  "DELETE"
                ],
                "name": "method",
                "display_name": "HTTP Method",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "url": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "url",
                "display_name": "URL",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "value": "https://bookstack-xwdf6yz6ya-uc.a.run.app/api/chapters"
              },
              "_type": "CustomComponent"
            },
            "description": "This component sends HTTP requests and returns the response.",
            "base_classes": [
              "Document"
            ],
            "display_name": "HTTP Request",
            "documentation": "",
            "custom_fields": {
              "method": null,
              "url": null,
              "headers": null,
              "body": null
            },
            "output_types": [
              "Document"
            ],
            "field_formatters": {},
            "beta": true
          },
          "id": "CustomComponent-Gdb4w",
          "description": "This component sends HTTP requests and returns the response.",
          "display_name": "HTTP Request"
        },
        "selected": false,
        "width": 384,
        "height": 707,
        "positionAbsolute": {
          "x": -432.65258327652253,
          "y": -1740.0312854363028
        },
        "dragging": false
      },
      {
        "id": "CustomComponent-MlrYg",
        "type": "genericNode",
        "position": {
          "x": -435.56601037065,
          "y": -2462.9469546089704
        },
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "body": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "body",
                "display_name": "Body",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio import CustomComponent\nfrom langchain.schema import Document\nimport requests\n\nclass HTTPRequestComponent(CustomComponent):\n    display_name = \"HTTP Request\"\n    description = \"This component sends HTTP requests and returns the response.\"\n\n    def build_config(self) -> dict:\n        methods = [\"GET\", \"POST\", \"PUT\", \"DELETE\"]\n        return {\n            \"method\": {\n                \"options\": methods,\n                \"value\": methods[0],\n                \"display_name\": \"HTTP Method\"\n            },\n            \"url\": {\n                \"display_name\": \"URL\"\n            },\n            \"headers\": {\n                \"display_name\": \"Headers\",\n                \"field_type\": \"dict\",\n                \"required\": False,\n                \"multiline\": True\n            },\n            \"body\": {\n                \"display_name\": \"Body\",\n                \"field_type\": \"str\",\n                \"required\": False,\n                \"multiline\": True\n            }\n        }\n\n    def build(self, method: str, url: str, headers: dict = {\"Accept\": \"*/*\"}, body: str = None) -> Document:\n        response = requests.request(method, url, headers=headers, data=body)\n        self.repr_value = f\"Response Status Code: {response.status_code}\"\n        return Document(page_content=response.text)\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "headers": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": [
                  {
                    "Content-Type": "application/json"
                  },
                  {
                    "Authorization": "Token PclJ9hhYkaHtRwryjHUDGgYNf7BG3Bca:JxlPrHruZuX0K4sEOOoO7pDMp57nemvP"
                  }
                ],
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "headers",
                "display_name": "Headers",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "method": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "GET",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "options": [
                  "GET",
                  "POST",
                  "PUT",
                  "DELETE"
                ],
                "name": "method",
                "display_name": "HTTP Method",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "url": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "url",
                "display_name": "URL",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "value": "https://bookstack-xwdf6yz6ya-uc.a.run.app/api/pages"
              },
              "_type": "CustomComponent"
            },
            "description": "This component sends HTTP requests and returns the response.",
            "base_classes": [
              "Document"
            ],
            "display_name": "HTTP Request",
            "documentation": "",
            "custom_fields": {
              "method": null,
              "url": null,
              "headers": null,
              "body": null
            },
            "output_types": [
              "Document"
            ],
            "field_formatters": {},
            "beta": true
          },
          "id": "CustomComponent-MlrYg",
          "description": "This component sends HTTP requests and returns the response.",
          "display_name": "HTTP Request"
        },
        "selected": false,
        "width": 384,
        "height": 707,
        "positionAbsolute": {
          "x": -435.56601037065,
          "y": -2462.9469546089704
        },
        "dragging": false
      },
      {
        "id": "SystemMessagePromptTemplate-5UJBH",
        "type": "genericNode",
        "position": {
          "x": 1081.5179298455653,
          "y": -122.5800352919527
        },
        "data": {
          "type": "SystemMessagePromptTemplate",
          "node": {
            "template": {
              "additional_kwargs": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "additional_kwargs",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "prompt": {
                "type": "prompt",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": true,
                "value": "You are given a database of GET requests from the bookstack API responses for the {shelve}, {book}, {chapter} and {page} endpoint info and organizational structure.\nYou are a helpful assistant that talks casually about life in general.\nYou are a good listener and you help the user get the absolute best answers to the questions by retrieving this info from the API responses.\n",
                "fileTypes": [],
                "password": false,
                "name": "prompt",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "_type": "SystemMessagePromptTemplate",
              "shelve": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "shelve",
                "display_name": "shelve",
                "advanced": false,
                "input_types": [
                  "Document",
                  "BaseOutputParser"
                ],
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "book": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "book",
                "display_name": "book",
                "advanced": false,
                "input_types": [
                  "Document",
                  "BaseOutputParser"
                ],
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "chapter": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "chapter",
                "display_name": "chapter",
                "advanced": false,
                "input_types": [
                  "Document",
                  "BaseOutputParser"
                ],
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "page": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "page",
                "display_name": "page",
                "advanced": false,
                "input_types": [
                  "Document",
                  "BaseOutputParser"
                ],
                "dynamic": false,
                "info": "",
                "title_case": true
              }
            },
            "description": "System message prompt template.",
            "icon": null,
            "base_classes": [
              "SystemMessagePromptTemplate",
              "BaseMessagePromptTemplate",
              "_StringImageMessagePromptTemplate"
            ],
            "name": "",
            "display_name": "SystemMessagePromptTemplate",
            "documentation": "https://python.langchain.com/docs/modules/model_io/models/chat/how_to/prompts",
            "custom_fields": {
              "": [
                "shelve",
                "book",
                "chapter",
                "page"
              ]
            },
            "output_types": [],
            "full_path": null,
            "field_formatters": {},
            "beta": false,
            "error": null
          },
          "id": "SystemMessagePromptTemplate-5UJBH",
          "description": "System message prompt template.",
          "display_name": "SystemMessagePromptTemplate"
        },
        "selected": false,
        "width": 384,
        "height": 657,
        "positionAbsolute": {
          "x": 1081.5179298455653,
          "y": -122.5800352919527
        },
        "dragging": false
      },
      {
        "id": "ConversationBufferMemory-vwZrC",
        "type": "genericNode",
        "position": {
          "x": 1458.103250278784,
          "y": -746.8481179043764
        },
        "data": {
          "type": "ConversationBufferMemory",
          "node": {
            "template": {
              "chat_memory": {
                "type": "BaseChatMessageHistory",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "chat_memory",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "ai_prefix": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": "AI",
                "fileTypes": [],
                "password": false,
                "name": "ai_prefix",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "human_prefix": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": "Human",
                "fileTypes": [],
                "password": false,
                "name": "human_prefix",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "input_key": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "input_key",
                "advanced": false,
                "dynamic": false,
                "info": "The variable to be used as Chat Input when more than one variable is available.",
                "title_case": true
              },
              "memory_key": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "chat_history",
                "fileTypes": [],
                "password": false,
                "name": "memory_key",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "output_key": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "output_key",
                "advanced": false,
                "dynamic": false,
                "info": "The variable to be used as Chat Output (e.g. answer in a ConversationalRetrievalChain)",
                "title_case": true
              },
              "return_messages": {
                "type": "bool",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "return_messages",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "_type": "ConversationBufferMemory"
            },
            "description": "Buffer for storing conversation memory.",
            "base_classes": [
              "BaseMemory",
              "BaseChatMemory",
              "ConversationBufferMemory"
            ],
            "display_name": "ConversationBufferMemory",
            "documentation": "https://python.langchain.com/docs/modules/memory/how_to/buffer",
            "custom_fields": {},
            "output_types": [],
            "field_formatters": {},
            "beta": false
          },
          "id": "ConversationBufferMemory-vwZrC"
        },
        "selected": false,
        "width": 384,
        "height": 601,
        "positionAbsolute": {
          "x": 1458.103250278784,
          "y": -746.8481179043764
        },
        "dragging": false
      },
      {
        "id": "PostgresChatMessageHistory-L9PSL",
        "type": "genericNode",
        "position": {
          "x": 855.8454758938578,
          "y": -817.8397879313266
        },
        "data": {
          "type": "PostgresChatMessageHistory",
          "node": {
            "template": {
              "connection_string": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "psql --version",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "connection_string",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "session_id": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "session_id",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "table_name": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "message_store",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "table_name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "_type": "PostgresChatMessageHistory"
            },
            "description": "Memory store with Postgres",
            "base_classes": [
              "PostgresChatMessageHistory",
              "BaseChatMessageHistory"
            ],
            "display_name": "PostgresChatMessageHistory",
            "documentation": "https://python.langchain.com/docs/modules/memory/integrations/postgres_chat_message_history",
            "custom_fields": {},
            "output_types": [],
            "field_formatters": {},
            "beta": false
          },
          "id": "PostgresChatMessageHistory-L9PSL"
        },
        "selected": false,
        "width": 384,
        "height": 477
      }
    ],
    "edges": [
      {
        "source": "CustomComponent-kMU68",
        "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-kMU68œ}",
        "target": "Chroma-0IfqS",
        "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œChroma-0IfqSœ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
        "data": {
          "targetHandle": {
            "fieldName": "documents",
            "id": "Chroma-0IfqS",
            "inputTypes": null,
            "type": "Document"
          },
          "sourceHandle": {
            "baseClasses": [
              "Document"
            ],
            "dataType": "CustomComponent",
            "id": "CustomComponent-kMU68"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-foreground  stroke-connection",
        "animated": false,
        "id": "reactflow__edge-CustomComponent-kMU68{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-kMU68œ}-Chroma-0IfqS{œfieldNameœ:œdocumentsœ,œidœ:œChroma-0IfqSœ,œinputTypesœ:null,œtypeœ:œDocumentœ}"
      },
      {
        "source": "OpenAIEmbeddings-9Mr1i",
        "sourceHandle": "{œbaseClassesœ:[œOpenAIEmbeddingsœ,œEmbeddingsœ,œCallableœ],œdataTypeœ:œOpenAIEmbeddingsœ,œidœ:œOpenAIEmbeddings-9Mr1iœ}",
        "target": "Chroma-0IfqS",
        "targetHandle": "{œfieldNameœ:œembeddingœ,œidœ:œChroma-0IfqSœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}",
        "data": {
          "targetHandle": {
            "fieldName": "embedding",
            "id": "Chroma-0IfqS",
            "inputTypes": null,
            "type": "Embeddings"
          },
          "sourceHandle": {
            "baseClasses": [
              "OpenAIEmbeddings",
              "Embeddings",
              "Callable"
            ],
            "dataType": "OpenAIEmbeddings",
            "id": "OpenAIEmbeddings-9Mr1i"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-foreground  stroke-connection",
        "animated": false,
        "id": "reactflow__edge-OpenAIEmbeddings-9Mr1i{œbaseClassesœ:[œOpenAIEmbeddingsœ,œEmbeddingsœ,œCallableœ],œdataTypeœ:œOpenAIEmbeddingsœ,œidœ:œOpenAIEmbeddings-9Mr1iœ}-Chroma-0IfqS{œfieldNameœ:œembeddingœ,œidœ:œChroma-0IfqSœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}"
      },
      {
        "source": "Chroma-0IfqS",
        "sourceHandle": "{œbaseClassesœ:[œVectorStoreœ,œBaseRetrieverœ],œdataTypeœ:œChromaœ,œidœ:œChroma-0IfqSœ}",
        "target": "Tool-KnkwJ",
        "targetHandle": "{œfieldNameœ:œretrieverœ,œidœ:œTool-KnkwJœ,œinputTypesœ:null,œtypeœ:œBaseRetrieverœ}",
        "data": {
          "targetHandle": {
            "fieldName": "retriever",
            "id": "Tool-KnkwJ",
            "inputTypes": null,
            "type": "BaseRetriever"
          },
          "sourceHandle": {
            "baseClasses": [
              "VectorStore",
              "BaseRetriever"
            ],
            "dataType": "Chroma",
            "id": "Chroma-0IfqS"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-foreground  stroke-connection",
        "animated": false,
        "id": "reactflow__edge-Chroma-0IfqS{œbaseClassesœ:[œVectorStoreœ,œBaseRetrieverœ],œdataTypeœ:œChromaœ,œidœ:œChroma-0IfqSœ}-Tool-KnkwJ{œfieldNameœ:œretrieverœ,œidœ:œTool-KnkwJœ,œinputTypesœ:null,œtypeœ:œBaseRetrieverœ}"
      },
      {
        "source": "Tool-KnkwJ",
        "sourceHandle": "{œbaseClassesœ:[œToolœ,œBaseToolœ],œdataTypeœ:œToolœ,œidœ:œTool-KnkwJœ}",
        "target": "AgentExecutor-bimKz",
        "targetHandle": "{œfieldNameœ:œtoolsœ,œidœ:œAgentExecutor-bimKzœ,œinputTypesœ:null,œtypeœ:œToolœ}",
        "data": {
          "targetHandle": {
            "fieldName": "tools",
            "id": "AgentExecutor-bimKz",
            "inputTypes": null,
            "type": "Tool"
          },
          "sourceHandle": {
            "baseClasses": [
              "Tool",
              "BaseTool"
            ],
            "dataType": "Tool",
            "id": "Tool-KnkwJ"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-foreground  stroke-connection",
        "animated": false,
        "id": "reactflow__edge-Tool-KnkwJ{œbaseClassesœ:[œToolœ,œBaseToolœ],œdataTypeœ:œToolœ,œidœ:œTool-KnkwJœ}-AgentExecutor-bimKz{œfieldNameœ:œtoolsœ,œidœ:œAgentExecutor-bimKzœ,œinputTypesœ:null,œtypeœ:œToolœ}"
      },
      {
        "source": "CustomComponent-NUhdR",
        "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-NUhdRœ}",
        "target": "Chroma-0IfqS",
        "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œChroma-0IfqSœ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
        "data": {
          "targetHandle": {
            "fieldName": "documents",
            "id": "Chroma-0IfqS",
            "inputTypes": null,
            "type": "Document"
          },
          "sourceHandle": {
            "baseClasses": [
              "Document"
            ],
            "dataType": "CustomComponent",
            "id": "CustomComponent-NUhdR"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-foreground  stroke-connection",
        "animated": false,
        "id": "reactflow__edge-CustomComponent-NUhdR{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-NUhdRœ}-Chroma-0IfqS{œfieldNameœ:œdocumentsœ,œidœ:œChroma-0IfqSœ,œinputTypesœ:null,œtypeœ:œDocumentœ}"
      },
      {
        "source": "CustomComponent-Gdb4w",
        "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-Gdb4wœ}",
        "target": "Chroma-0IfqS",
        "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œChroma-0IfqSœ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
        "data": {
          "targetHandle": {
            "fieldName": "documents",
            "id": "Chroma-0IfqS",
            "inputTypes": null,
            "type": "Document"
          },
          "sourceHandle": {
            "baseClasses": [
              "Document"
            ],
            "dataType": "CustomComponent",
            "id": "CustomComponent-Gdb4w"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-foreground  stroke-connection",
        "animated": false,
        "id": "reactflow__edge-CustomComponent-Gdb4w{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-Gdb4wœ}-Chroma-0IfqS{œfieldNameœ:œdocumentsœ,œidœ:œChroma-0IfqSœ,œinputTypesœ:null,œtypeœ:œDocumentœ}"
      },
      {
        "source": "CustomComponent-MlrYg",
        "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-MlrYgœ}",
        "target": "Chroma-0IfqS",
        "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œChroma-0IfqSœ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
        "data": {
          "targetHandle": {
            "fieldName": "documents",
            "id": "Chroma-0IfqS",
            "inputTypes": null,
            "type": "Document"
          },
          "sourceHandle": {
            "baseClasses": [
              "Document"
            ],
            "dataType": "CustomComponent",
            "id": "CustomComponent-MlrYg"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-foreground  stroke-connection",
        "animated": false,
        "id": "reactflow__edge-CustomComponent-MlrYg{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-MlrYgœ}-Chroma-0IfqS{œfieldNameœ:œdocumentsœ,œidœ:œChroma-0IfqSœ,œinputTypesœ:null,œtypeœ:œDocumentœ}"
      },
      {
        "source": "SystemMessagePromptTemplate-5UJBH",
        "sourceHandle": "{œbaseClassesœ:[œSystemMessagePromptTemplateœ,œBaseMessagePromptTemplateœ,œ_StringImageMessagePromptTemplateœ],œdataTypeœ:œSystemMessagePromptTemplateœ,œidœ:œSystemMessagePromptTemplate-5UJBHœ}",
        "target": "AgentExecutor-bimKz",
        "targetHandle": "{œfieldNameœ:œsystem_messageœ,œidœ:œAgentExecutor-bimKzœ,œinputTypesœ:null,œtypeœ:œSystemMessagePromptTemplateœ}",
        "data": {
          "targetHandle": {
            "fieldName": "system_message",
            "id": "AgentExecutor-bimKz",
            "inputTypes": null,
            "type": "SystemMessagePromptTemplate"
          },
          "sourceHandle": {
            "baseClasses": [
              "SystemMessagePromptTemplate",
              "BaseMessagePromptTemplate",
              "_StringImageMessagePromptTemplate"
            ],
            "dataType": "SystemMessagePromptTemplate",
            "id": "SystemMessagePromptTemplate-5UJBH"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-foreground  stroke-connection",
        "animated": false,
        "id": "reactflow__edge-SystemMessagePromptTemplate-5UJBH{œbaseClassesœ:[œSystemMessagePromptTemplateœ,œBaseMessagePromptTemplateœ,œ_StringImageMessagePromptTemplateœ],œdataTypeœ:œSystemMessagePromptTemplateœ,œidœ:œSystemMessagePromptTemplate-5UJBHœ}-AgentExecutor-bimKz{œfieldNameœ:œsystem_messageœ,œidœ:œAgentExecutor-bimKzœ,œinputTypesœ:null,œtypeœ:œSystemMessagePromptTemplateœ}"
      },
      {
        "source": "ConversationBufferMemory-vwZrC",
        "sourceHandle": "{œbaseClassesœ:[œBaseMemoryœ,œBaseChatMemoryœ,œConversationBufferMemoryœ],œdataTypeœ:œConversationBufferMemoryœ,œidœ:œConversationBufferMemory-vwZrCœ}",
        "target": "AgentExecutor-bimKz",
        "targetHandle": "{œfieldNameœ:œmemoryœ,œidœ:œAgentExecutor-bimKzœ,œinputTypesœ:null,œtypeœ:œBaseMemoryœ}",
        "data": {
          "targetHandle": {
            "fieldName": "memory",
            "id": "AgentExecutor-bimKz",
            "inputTypes": null,
            "type": "BaseMemory"
          },
          "sourceHandle": {
            "baseClasses": [
              "BaseMemory",
              "BaseChatMemory",
              "ConversationBufferMemory"
            ],
            "dataType": "ConversationBufferMemory",
            "id": "ConversationBufferMemory-vwZrC"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-foreground  stroke-connection",
        "animated": false,
        "id": "reactflow__edge-ConversationBufferMemory-vwZrC{œbaseClassesœ:[œBaseMemoryœ,œBaseChatMemoryœ,œConversationBufferMemoryœ],œdataTypeœ:œConversationBufferMemoryœ,œidœ:œConversationBufferMemory-vwZrCœ}-AgentExecutor-bimKz{œfieldNameœ:œmemoryœ,œidœ:œAgentExecutor-bimKzœ,œinputTypesœ:null,œtypeœ:œBaseMemoryœ}"
      },
      {
        "source": "PostgresChatMessageHistory-L9PSL",
        "sourceHandle": "{œbaseClassesœ:[œPostgresChatMessageHistoryœ,œBaseChatMessageHistoryœ],œdataTypeœ:œPostgresChatMessageHistoryœ,œidœ:œPostgresChatMessageHistory-L9PSLœ}",
        "target": "ConversationBufferMemory-vwZrC",
        "targetHandle": "{œfieldNameœ:œchat_memoryœ,œidœ:œConversationBufferMemory-vwZrCœ,œinputTypesœ:null,œtypeœ:œBaseChatMessageHistoryœ}",
        "data": {
          "targetHandle": {
            "fieldName": "chat_memory",
            "id": "ConversationBufferMemory-vwZrC",
            "inputTypes": null,
            "type": "BaseChatMessageHistory"
          },
          "sourceHandle": {
            "baseClasses": [
              "PostgresChatMessageHistory",
              "BaseChatMessageHistory"
            ],
            "dataType": "PostgresChatMessageHistory",
            "id": "PostgresChatMessageHistory-L9PSL"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-foreground  stroke-connection",
        "animated": false,
        "id": "reactflow__edge-PostgresChatMessageHistory-L9PSL{œbaseClassesœ:[œPostgresChatMessageHistoryœ,œBaseChatMessageHistoryœ],œdataTypeœ:œPostgresChatMessageHistoryœ,œidœ:œPostgresChatMessageHistory-L9PSLœ}-ConversationBufferMemory-vwZrC{œfieldNameœ:œchat_memoryœ,œidœ:œConversationBufferMemory-vwZrCœ,œinputTypesœ:null,œtypeœ:œBaseChatMessageHistoryœ}"
      }
    ],
    "viewport": {
      "x": 181.87327563852688,
      "y": 280.1573947386699,
      "zoom": 0.19210939766100357
    }
  },
  "metadata": {
    "CustomComponent": {
      "count": 4
    },
    "Chroma": {
      "count": 1
    },
    "OpenAIEmbeddings": {
      "count": 1
    },
    "Tool": {
      "count": 1
    },
    "AgentExecutor": {
      "count": 1
    },
    "SystemMessagePromptTemplate": {
      "count": 1
    },
    "ConversationBufferMemory": {
      "count": 1
    },
    "PostgresChatMessageHistory": {
      "count": 1
    },
    "total": 11
  },
  "original": {
    "id": "1eeb94f8-330e-4baf-854c-74dc87e76db9",
    "name": "Untitled document",
    "description": "Craft Language Connections Here.",
    "is_component": false,
    "liked_by_count": "0",
    "downloads_count": "3",
    "metadata": {
      "CustomComponent": {
        "count": 4
      },
      "Chroma": {
        "count": 1
      },
      "OpenAIEmbeddings": {
        "count": 1
      },
      "Tool": {
        "count": 1
      },
      "AgentExecutor": {
        "count": 1
      },
      "SystemMessagePromptTemplate": {
        "count": 1
      },
      "ConversationBufferMemory": {
        "count": 1
      },
      "PostgresChatMessageHistory": {
        "count": 1
      },
      "total": 11
    },
    "last_tested_version": "0.6.14",
    "private": false,
    "data": {
      "nodes": [
        {
          "id": "CustomComponent-kMU68",
          "type": "genericNode",
          "position": {
            "x": -417.76434251958824,
            "y": -268.9550001931226
          },
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "body": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "body",
                  "display_name": "Body",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio import CustomComponent\nfrom langchain.schema import Document\nimport requests\n\nclass HTTPRequestComponent(CustomComponent):\n    display_name = \"HTTP Request\"\n    description = \"This component sends HTTP requests and returns the response.\"\n\n    def build_config(self) -> dict:\n        methods = [\"GET\", \"POST\", \"PUT\", \"DELETE\"]\n        return {\n            \"method\": {\n                \"options\": methods,\n                \"value\": methods[0],\n                \"display_name\": \"HTTP Method\"\n            },\n            \"url\": {\n                \"display_name\": \"URL\"\n            },\n            \"headers\": {\n                \"display_name\": \"Headers\",\n                \"field_type\": \"dict\",\n                \"required\": False,\n                \"multiline\": True\n            },\n            \"body\": {\n                \"display_name\": \"Body\",\n                \"field_type\": \"str\",\n                \"required\": False,\n                \"multiline\": True\n            }\n        }\n\n    def build(self, method: str, url: str, headers: dict = {\"Accept\": \"*/*\"}, body: str = None) -> Document:\n        response = requests.request(method, url, headers=headers, data=body)\n        self.repr_value = f\"Response Status Code: {response.status_code}\"\n        return Document(page_content=response.text)\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "headers": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": [
                    {
                      "Content-Type": "application/json"
                    },
                    {
                      "Authorization": "Token PclJ9hhYkaHtRwryjHUDGgYNf7BG3Bca:JxlPrHruZuX0K4sEOOoO7pDMp57nemvP"
                    }
                  ],
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "headers",
                  "display_name": "Headers",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "method": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "GET",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "options": [
                    "GET",
                    "POST",
                    "PUT",
                    "DELETE"
                  ],
                  "name": "method",
                  "display_name": "HTTP Method",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "url": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "url",
                  "display_name": "URL",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "value": "https://bookstack-xwdf6yz6ya-uc.a.run.app/api/shelves"
                },
                "_type": "CustomComponent"
              },
              "description": "This component sends HTTP requests and returns the response.",
              "base_classes": [
                "Document"
              ],
              "display_name": "HTTP Request",
              "documentation": "",
              "custom_fields": {
                "method": null,
                "url": null,
                "headers": null,
                "body": null
              },
              "output_types": [
                "Document"
              ],
              "field_formatters": {},
              "beta": true
            },
            "id": "CustomComponent-kMU68",
            "description": "This component sends HTTP requests and returns the response.",
            "display_name": "HTTP Request"
          },
          "selected": false,
          "width": 384,
          "height": 707,
          "positionAbsolute": {
            "x": -417.76434251958824,
            "y": -268.9550001931226
          },
          "dragging": false
        },
        {
          "id": "Chroma-0IfqS",
          "type": "genericNode",
          "position": {
            "x": 715.2262206951851,
            "y": 539.0648155300576
          },
          "data": {
            "type": "Chroma",
            "node": {
              "template": {
                "documents": {
                  "type": "Document",
                  "required": false,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "documents",
                  "display_name": "Documents",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "embedding": {
                  "type": "Embeddings",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "embedding",
                  "display_name": "Embedding",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "chroma_server_cors_allow_origins": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "chroma_server_cors_allow_origins",
                  "display_name": "Server CORS Allow Origins",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "chroma_server_grpc_port": {
                  "type": "int",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "chroma_server_grpc_port",
                  "display_name": "Server gRPC Port",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "chroma_server_host": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "chroma_server_host",
                  "display_name": "Server Host",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "chroma_server_port": {
                  "type": "int",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "chroma_server_port",
                  "display_name": "Server Port",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "chroma_server_ssl_enabled": {
                  "type": "bool",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "chroma_server_ssl_enabled",
                  "display_name": "Server SSL Enabled",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from typing import List, Optional, Union\n\nimport chromadb  # type: ignore\nfrom langchain.embeddings.base import Embeddings\nfrom langchain.schema import BaseRetriever, Document\nfrom langchain_community.vectorstores import VectorStore\nfrom langchain_community.vectorstores.chroma import Chroma\nfrom axiestudio import CustomComponent\n\n\nclass ChromaComponent(CustomComponent):\n    \"\"\"\n    A custom component for implementing a Vector Store using Chroma.\n    \"\"\"\n\n    display_name: str = \"Chroma\"\n    description: str = \"Implementation of Vector Store using Chroma\"\n    documentation = \"https://python.langchain.com/docs/integrations/vectorstores/chroma\"\n    beta: bool = True\n\n    def build_config(self):\n        \"\"\"\n        Builds the configuration for the component.\n\n        Returns:\n        - dict: A dictionary containing the configuration options for the component.\n        \"\"\"\n        return {\n            \"collection_name\": {\"display_name\": \"Collection Name\", \"value\": \"axiestudio\"},\n            \"persist\": {\"display_name\": \"Persist\"},\n            \"persist_directory\": {\"display_name\": \"Persist Directory\"},\n            \"code\": {\"advanced\": True, \"display_name\": \"Code\"},\n            \"documents\": {\"display_name\": \"Documents\", \"is_list\": True},\n            \"embedding\": {\"display_name\": \"Embedding\"},\n            \"chroma_server_cors_allow_origins\": {\n                \"display_name\": \"Server CORS Allow Origins\",\n                \"advanced\": True,\n            },\n            \"chroma_server_host\": {\"display_name\": \"Server Host\", \"advanced\": True},\n            \"chroma_server_port\": {\"display_name\": \"Server Port\", \"advanced\": True},\n            \"chroma_server_grpc_port\": {\n                \"display_name\": \"Server gRPC Port\",\n                \"advanced\": True,\n            },\n            \"chroma_server_ssl_enabled\": {\n                \"display_name\": \"Server SSL Enabled\",\n                \"advanced\": True,\n            },\n        }\n\n    def build(\n        self,\n        collection_name: str,\n        persist: bool,\n        embedding: Embeddings,\n        chroma_server_ssl_enabled: bool,\n        persist_directory: Optional[str] = None,\n        documents: Optional[List[Document]] = None,\n        chroma_server_cors_allow_origins: Optional[str] = None,\n        chroma_server_host: Optional[str] = None,\n        chroma_server_port: Optional[int] = None,\n        chroma_server_grpc_port: Optional[int] = None,\n    ) -> Union[VectorStore, BaseRetriever]:\n        \"\"\"\n        Builds the Vector Store or BaseRetriever object.\n\n        Args:\n        - collection_name (str): The name of the collection.\n        - persist_directory (Optional[str]): The directory to persist the Vector Store to.\n        - chroma_server_ssl_enabled (bool): Whether to enable SSL for the Chroma server.\n        - persist (bool): Whether to persist the Vector Store or not.\n        - embedding (Optional[Embeddings]): The embeddings to use for the Vector Store.\n        - documents (Optional[Document]): The documents to use for the Vector Store.\n        - chroma_server_cors_allow_origins (Optional[str]): The CORS allow origins for the Chroma server.\n        - chroma_server_host (Optional[str]): The host for the Chroma server.\n        - chroma_server_port (Optional[int]): The port for the Chroma server.\n        - chroma_server_grpc_port (Optional[int]): The gRPC port for the Chroma server.\n\n        Returns:\n        - Union[VectorStore, BaseRetriever]: The Vector Store or BaseRetriever object.\n        \"\"\"\n\n        # Chroma settings\n        chroma_settings = None\n\n        if chroma_server_host is not None:\n            chroma_settings = chromadb.config.Settings(\n                chroma_server_cors_allow_origins=chroma_server_cors_allow_origins or None,\n                chroma_server_host=chroma_server_host,\n                chroma_server_port=chroma_server_port or None,\n                chroma_server_grpc_port=chroma_server_grpc_port or None,\n                chroma_server_ssl_enabled=chroma_server_ssl_enabled,\n            )\n\n        # If documents, then we need to create a Chroma instance using .from_documents\n        if documents is not None and embedding is not None:\n            if len(documents) == 0:\n                raise ValueError(\"If documents are provided, there must be at least one document.\")\n            return Chroma.from_documents(\n                documents=documents,  # type: ignore\n                persist_directory=persist_directory if persist else None,\n                collection_name=collection_name,\n                embedding=embedding,\n                client_settings=chroma_settings,\n            )\n\n        return Chroma(persist_directory=persist_directory, client_settings=chroma_settings)\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "collection_name": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "axiestudio",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "collection_name",
                  "display_name": "Collection Name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "persist": {
                  "type": "bool",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "persist",
                  "display_name": "Persist",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "persist_directory": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "persist_directory",
                  "display_name": "Persist Directory",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "_type": "CustomComponent"
              },
              "description": "Implementation of Vector Store using Chroma",
              "base_classes": [
                "VectorStore",
                "BaseRetriever"
              ],
              "display_name": "Chroma",
              "documentation": "https://python.langchain.com/docs/integrations/vectorstores/chroma",
              "custom_fields": {
                "collection_name": null,
                "persist": null,
                "embedding": null,
                "chroma_server_ssl_enabled": null,
                "persist_directory": null,
                "documents": null,
                "chroma_server_cors_allow_origins": null,
                "chroma_server_host": null,
                "chroma_server_port": null,
                "chroma_server_grpc_port": null
              },
              "output_types": [
                "VectorStore",
                "BaseRetriever"
              ],
              "field_formatters": {},
              "beta": true
            },
            "id": "Chroma-0IfqS"
          },
          "selected": false,
          "width": 384,
          "height": 555,
          "positionAbsolute": {
            "x": 715.2262206951851,
            "y": 539.0648155300576
          },
          "dragging": false
        },
        {
          "id": "OpenAIEmbeddings-9Mr1i",
          "type": "genericNode",
          "position": {
            "x": 132.79015405891118,
            "y": 708.7783608288681
          },
          "data": {
            "type": "OpenAIEmbeddings",
            "node": {
              "template": {
                "allowed_special": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": [],
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "allowed_special",
                  "display_name": "Allowed Special",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "chunk_size": {
                  "type": "int",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": 1000,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "chunk_size",
                  "display_name": "Chunk Size",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "client": {
                  "type": "Any",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "client",
                  "display_name": "Client",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from typing import Any, Callable, Dict, List, Optional, Union\n\nfrom langchain_openai.embeddings.base import OpenAIEmbeddings\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import NestedDict\nfrom pydantic.v1.types import SecretStr\n\n\nclass OpenAIEmbeddingsComponent(CustomComponent):\n    display_name = \"OpenAIEmbeddings\"\n    description = \"OpenAI embedding models\"\n\n    def build_config(self):\n        return {\n            \"allowed_special\": {\n                \"display_name\": \"Allowed Special\",\n                \"advanced\": True,\n                \"field_type\": \"str\",\n                \"is_list\": True,\n            },\n            \"default_headers\": {\n                \"display_name\": \"Default Headers\",\n                \"advanced\": True,\n                \"field_type\": \"dict\",\n            },\n            \"default_query\": {\n                \"display_name\": \"Default Query\",\n                \"advanced\": True,\n                \"field_type\": \"NestedDict\",\n            },\n            \"disallowed_special\": {\n                \"display_name\": \"Disallowed Special\",\n                \"advanced\": True,\n                \"field_type\": \"str\",\n                \"is_list\": True,\n            },\n            \"chunk_size\": {\"display_name\": \"Chunk Size\", \"advanced\": True},\n            \"client\": {\"display_name\": \"Client\", \"advanced\": True},\n            \"deployment\": {\"display_name\": \"Deployment\", \"advanced\": True},\n            \"embedding_ctx_length\": {\n                \"display_name\": \"Embedding Context Length\",\n                \"advanced\": True,\n            },\n            \"max_retries\": {\"display_name\": \"Max Retries\", \"advanced\": True},\n            \"model\": {\n                \"display_name\": \"Model\",\n                \"advanced\": False,\n                \"options\": [\"text-embedding-3-small\", \"text-embedding-3-large\", \"text-embedding-ada-002\"],\n            },\n            \"model_kwargs\": {\"display_name\": \"Model Kwargs\", \"advanced\": True},\n            \"openai_api_base\": {\"display_name\": \"OpenAI API Base\", \"password\": True, \"advanced\": True},\n            \"openai_api_key\": {\"display_name\": \"OpenAI API Key\", \"password\": True},\n            \"openai_api_type\": {\"display_name\": \"OpenAI API Type\", \"advanced\": True, \"password\": True},\n            \"openai_api_version\": {\n                \"display_name\": \"OpenAI API Version\",\n                \"advanced\": True,\n            },\n            \"openai_organization\": {\n                \"display_name\": \"OpenAI Organization\",\n                \"advanced\": True,\n            },\n            \"openai_proxy\": {\"display_name\": \"OpenAI Proxy\", \"advanced\": True},\n            \"request_timeout\": {\"display_name\": \"Request Timeout\", \"advanced\": True},\n            \"show_progress_bar\": {\n                \"display_name\": \"Show Progress Bar\",\n                \"advanced\": True,\n            },\n            \"skip_empty\": {\"display_name\": \"Skip Empty\", \"advanced\": True},\n            \"tiktoken_model_name\": {\"display_name\": \"TikToken Model Name\"},\n            \"tikToken_enable\": {\"display_name\": \"TikToken Enable\", \"advanced\": True},\n        }\n\n    def build(\n        self,\n        default_headers: Optional[Dict[str, str]] = None,\n        default_query: Optional[NestedDict] = {},\n        allowed_special: List[str] = [],\n        disallowed_special: List[str] = [\"all\"],\n        chunk_size: int = 1000,\n        client: Optional[Any] = None,\n        deployment: str = \"text-embedding-3-small\",\n        embedding_ctx_length: int = 8191,\n        max_retries: int = 6,\n        model: str = \"text-embedding-3-small\",\n        model_kwargs: NestedDict = {},\n        openai_api_base: Optional[str] = None,\n        openai_api_key: Optional[str] = \"\",\n        openai_api_type: Optional[str] = None,\n        openai_api_version: Optional[str] = None,\n        openai_organization: Optional[str] = None,\n        openai_proxy: Optional[str] = None,\n        request_timeout: Optional[float] = None,\n        show_progress_bar: bool = False,\n        skip_empty: bool = False,\n        tiktoken_enable: bool = True,\n        tiktoken_model_name: Optional[str] = None,\n    ) -> Union[OpenAIEmbeddings, Callable]:\n        # This is to avoid errors with Vector Stores (e.g Chroma)\n        if disallowed_special == [\"all\"]:\n            disallowed_special = \"all\"  # type: ignore\n\n        api_key = SecretStr(openai_api_key) if openai_api_key else None\n\n        return OpenAIEmbeddings(\n            tiktoken_enabled=tiktoken_enable,\n            default_headers=default_headers,\n            default_query=default_query,\n            allowed_special=set(allowed_special),\n            disallowed_special=\"all\",\n            chunk_size=chunk_size,\n            client=client,\n            deployment=deployment,\n            embedding_ctx_length=embedding_ctx_length,\n            max_retries=max_retries,\n            model=model,\n            model_kwargs=model_kwargs,\n            base_url=openai_api_base,\n            api_key=api_key,\n            openai_api_type=openai_api_type,\n            api_version=openai_api_version,\n            organization=openai_organization,\n            openai_proxy=openai_proxy,\n            timeout=request_timeout,\n            show_progress_bar=show_progress_bar,\n            skip_empty=skip_empty,\n            tiktoken_model_name=tiktoken_model_name,\n        )\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "default_headers": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "default_headers",
                  "display_name": "Default Headers",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "default_query": {
                  "type": "NestedDict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": {},
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "default_query",
                  "display_name": "Default Query",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "deployment": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "text-embedding-3-small",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "deployment",
                  "display_name": "Deployment",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "disallowed_special": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": [
                    "all"
                  ],
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "disallowed_special",
                  "display_name": "Disallowed Special",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "embedding_ctx_length": {
                  "type": "int",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": 8191,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "embedding_ctx_length",
                  "display_name": "Embedding Context Length",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "max_retries": {
                  "type": "int",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": 6,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "max_retries",
                  "display_name": "Max Retries",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "model": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "text-embedding-3-large",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "options": [
                    "text-embedding-3-small",
                    "text-embedding-3-large",
                    "text-embedding-ada-002"
                  ],
                  "name": "model",
                  "display_name": "Model",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "model_kwargs": {
                  "type": "NestedDict",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": {},
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "model_kwargs",
                  "display_name": "Model Kwargs",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "openai_api_base": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": true,
                  "name": "openai_api_base",
                  "display_name": "OpenAI API Base",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "value": ""
                },
                "openai_api_key": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": true,
                  "name": "openai_api_key",
                  "display_name": "OpenAI API Key",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "openai_api_type": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": true,
                  "name": "openai_api_type",
                  "display_name": "OpenAI API Type",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "value": ""
                },
                "openai_api_version": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "openai_api_version",
                  "display_name": "OpenAI API Version",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "openai_organization": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "openai_organization",
                  "display_name": "OpenAI Organization",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "openai_proxy": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "openai_proxy",
                  "display_name": "OpenAI Proxy",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "request_timeout": {
                  "type": "float",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "request_timeout",
                  "display_name": "Request Timeout",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "rangeSpec": {
                    "min": -1,
                    "max": 1,
                    "step": 0.1
                  },
                  "title_case": true
                },
                "show_progress_bar": {
                  "type": "bool",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "show_progress_bar",
                  "display_name": "Show Progress Bar",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "skip_empty": {
                  "type": "bool",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "skip_empty",
                  "display_name": "Skip Empty",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "tiktoken_enable": {
                  "type": "bool",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": true,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "tiktoken_enable",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "tiktoken_model_name": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "tiktoken_model_name",
                  "display_name": "TikToken Model Name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "_type": "CustomComponent"
              },
              "description": "OpenAI embedding models",
              "base_classes": [
                "OpenAIEmbeddings",
                "Embeddings",
                "Callable"
              ],
              "display_name": "OpenAIEmbeddings",
              "documentation": "",
              "custom_fields": {
                "default_headers": null,
                "default_query": null,
                "allowed_special": null,
                "disallowed_special": null,
                "chunk_size": null,
                "client": null,
                "deployment": null,
                "embedding_ctx_length": null,
                "max_retries": null,
                "model": null,
                "model_kwargs": null,
                "openai_api_base": null,
                "openai_api_key": null,
                "openai_api_type": null,
                "openai_api_version": null,
                "openai_organization": null,
                "openai_proxy": null,
                "request_timeout": null,
                "show_progress_bar": null,
                "skip_empty": null,
                "tiktoken_enable": null,
                "tiktoken_model_name": null
              },
              "output_types": [
                "OpenAIEmbeddings",
                "Callable"
              ],
              "field_formatters": {},
              "beta": true
            },
            "id": "OpenAIEmbeddings-9Mr1i"
          },
          "selected": false,
          "width": 384,
          "height": 635,
          "positionAbsolute": {
            "x": 132.79015405891118,
            "y": 708.7783608288681
          },
          "dragging": false
        },
        {
          "id": "Tool-KnkwJ",
          "type": "genericNode",
          "position": {
            "x": 1205.5557926894298,
            "y": 628.5254475200442
          },
          "data": {
            "type": "Tool",
            "node": {
              "template": {
                "retriever": {
                  "type": "BaseRetriever",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "retriever",
                  "display_name": "Retriever",
                  "advanced": false,
                  "dynamic": false,
                  "info": "Retriever to interact with",
                  "title_case": true
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from langchain.tools.retriever import create_retriever_tool\n\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import BaseRetriever, Tool\n\n\nclass RetrieverToolComponent(CustomComponent):\n    display_name = \"RetrieverTool\"\n    description = \"Tool for interacting with retriever\"\n\n    def build_config(self):\n        return {\n            \"retriever\": {\n                \"display_name\": \"Retriever\",\n                \"info\": \"Retriever to interact with\",\n                \"type\": BaseRetriever,\n            },\n            \"name\": {\"display_name\": \"Name\", \"info\": \"Name of the tool\"},\n            \"description\": {\"display_name\": \"Description\", \"info\": \"Description of the tool\"},\n        }\n\n    def build(\n        self,\n        retriever: BaseRetriever,\n        name: str,\n        description: str,\n    ) -> Tool:\n        return create_retriever_tool(\n            retriever=retriever,\n            name=name,\n            description=description,\n        )\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "description": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "description",
                  "display_name": "Description",
                  "advanced": false,
                  "dynamic": false,
                  "info": "Description of the tool",
                  "title_case": true,
                  "value": "get shelve, books, chapters and page ID's from bookstack"
                },
                "name": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "name",
                  "display_name": "Name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "Name of the tool",
                  "title_case": true,
                  "value": "Organized BookStack ID Info"
                },
                "_type": "CustomComponent"
              },
              "description": "Tool for interacting with retriever",
              "base_classes": [
                "Tool",
                "BaseTool"
              ],
              "display_name": "RetrieverTool",
              "documentation": "",
              "custom_fields": {
                "retriever": null,
                "name": null,
                "description": null
              },
              "output_types": [
                "Tool"
              ],
              "field_formatters": {},
              "beta": true
            },
            "id": "Tool-KnkwJ"
          },
          "selected": false,
          "width": 384,
          "height": 517,
          "positionAbsolute": {
            "x": 1205.5557926894298,
            "y": 628.5254475200442
          },
          "dragging": false
        },
        {
          "id": "AgentExecutor-bimKz",
          "type": "genericNode",
          "position": {
            "x": 1880.4641307546647,
            "y": -113.7987364821841
          },
          "data": {
            "type": "AgentExecutor",
            "node": {
              "template": {
                "memory": {
                  "type": "BaseMemory",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "memory",
                  "display_name": "Memory",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "system_message": {
                  "type": "SystemMessagePromptTemplate",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "system_message",
                  "display_name": "System Message",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "tools": {
                  "type": "Tool",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "tools",
                  "display_name": "Tools",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from typing import List, Optional\n\nfrom langchain.agents.agent import AgentExecutor\nfrom langchain.agents.agent_toolkits.conversational_retrieval.openai_functions import _get_default_system_message\nfrom langchain.agents.openai_functions_agent.base import OpenAIFunctionsAgent\nfrom langchain.memory.token_buffer import ConversationTokenBufferMemory\nfrom langchain.prompts import SystemMessagePromptTemplate\nfrom langchain.prompts.chat import MessagesPlaceholder\nfrom langchain.schema.memory import BaseMemory\nfrom langchain.tools import Tool\nfrom langchain_community.chat_models import ChatOpenAI\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing.range_spec import RangeSpec\n\n\nclass ConversationalAgent(CustomComponent):\n    display_name: str = \"OpenAI Conversational Agent\"\n    description: str = \"Conversational Agent that can use OpenAI's function calling API\"\n\n    def build_config(self):\n        openai_function_models = [\n            \"gpt-4-turbo-preview\",\n            \"gpt-4-0125-preview\",\n            \"gpt-4-1106-preview\",\n            \"gpt-4-vision-preview\",\n            \"gpt-3.5-turbo-0125\",\n            \"gpt-3.5-turbo-1106\",\n        ]\n        return {\n            \"tools\": {\"display_name\": \"Tools\"},\n            \"memory\": {\"display_name\": \"Memory\"},\n            \"system_message\": {\"display_name\": \"System Message\"},\n            \"max_token_limit\": {\"display_name\": \"Max Token Limit\"},\n            \"model_name\": {\n                \"display_name\": \"Model Name\",\n                \"options\": openai_function_models,\n                \"value\": openai_function_models[0],\n            },\n            \"code\": {\"show\": False},\n            \"temperature\": {\n                \"display_name\": \"Temperature\",\n                \"value\": 0.2,\n                \"range_spec\": RangeSpec(min=0, max=2, step=0.1),\n            },\n        }\n\n    def build(\n        self,\n        model_name: str,\n        openai_api_key: str,\n        tools: List[Tool],\n        openai_api_base: Optional[str] = None,\n        memory: Optional[BaseMemory] = None,\n        system_message: Optional[SystemMessagePromptTemplate] = None,\n        max_token_limit: int = 2000,\n        temperature: float = 0.9,\n    ) -> AgentExecutor:\n        llm = ChatOpenAI(\n            model=model_name,\n            api_key=openai_api_key,\n            base_url=openai_api_base,\n            max_tokens=max_token_limit,\n            temperature=temperature,\n        )\n        if not memory:\n            memory_key = \"chat_history\"\n            memory = ConversationTokenBufferMemory(\n                memory_key=memory_key,\n                return_messages=True,\n                output_key=\"output\",\n                llm=llm,\n                max_token_limit=max_token_limit,\n            )\n        else:\n            memory_key = memory.memory_key  # type: ignore\n\n        _system_message = system_message or _get_default_system_message()\n        prompt = OpenAIFunctionsAgent.create_prompt(\n            system_message=_system_message,  # type: ignore\n            extra_prompt_messages=[MessagesPlaceholder(variable_name=memory_key)],\n        )\n        agent = OpenAIFunctionsAgent(\n            llm=llm,\n            tools=tools,\n            prompt=prompt,  # type: ignore\n        )\n        return AgentExecutor(\n            agent=agent,\n            tools=tools,  # type: ignore\n            memory=memory,\n            verbose=True,\n            return_intermediate_steps=True,\n            handle_parsing_errors=True,\n        )\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "max_token_limit": {
                  "type": "int",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": 2000,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "max_token_limit",
                  "display_name": "Max Token Limit",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "model_name": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "gpt-4-turbo-preview",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "options": [
                    "gpt-4-turbo-preview",
                    "gpt-4-0125-preview",
                    "gpt-4-1106-preview",
                    "gpt-4-vision-preview",
                    "gpt-3.5-turbo-0125",
                    "gpt-3.5-turbo-1106"
                  ],
                  "name": "model_name",
                  "display_name": "Model Name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "openai_api_base": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "openai_api_base",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "openai_api_key": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "openai_api_key",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "value": "sk-proj-IQuaZWDGAbAOEK9mqfAXT3BlbkFJUZuVZs2nGYBFITjj7w5z"
                },
                "temperature": {
                  "type": "float",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": 0.2,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "temperature",
                  "display_name": "Temperature",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "rangeSpec": {
                    "min": 0,
                    "max": 2,
                    "step": 0.1
                  },
                  "title_case": true
                },
                "_type": "CustomComponent"
              },
              "description": "Conversational Agent that can use OpenAI's function calling API",
              "base_classes": [
                "Chain",
                "AgentExecutor"
              ],
              "display_name": "OpenAI Conversational Agent",
              "documentation": "",
              "custom_fields": {
                "model_name": null,
                "openai_api_key": null,
                "tools": null,
                "openai_api_base": null,
                "memory": null,
                "system_message": null,
                "max_token_limit": null,
                "temperature": null
              },
              "output_types": [
                "AgentExecutor"
              ],
              "field_formatters": {},
              "beta": true
            },
            "id": "AgentExecutor-bimKz"
          },
          "selected": false,
          "width": 384,
          "height": 895,
          "positionAbsolute": {
            "x": 1880.4641307546647,
            "y": -113.7987364821841
          },
          "dragging": false
        },
        {
          "id": "CustomComponent-NUhdR",
          "type": "genericNode",
          "position": {
            "x": -433.6535375755252,
            "y": -1012.9671371627172
          },
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "body": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "body",
                  "display_name": "Body",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio import CustomComponent\nfrom langchain.schema import Document\nimport requests\n\nclass HTTPRequestComponent(CustomComponent):\n    display_name = \"HTTP Request\"\n    description = \"This component sends HTTP requests and returns the response.\"\n\n    def build_config(self) -> dict:\n        methods = [\"GET\", \"POST\", \"PUT\", \"DELETE\"]\n        return {\n            \"method\": {\n                \"options\": methods,\n                \"value\": methods[0],\n                \"display_name\": \"HTTP Method\"\n            },\n            \"url\": {\n                \"display_name\": \"URL\"\n            },\n            \"headers\": {\n                \"display_name\": \"Headers\",\n                \"field_type\": \"dict\",\n                \"required\": False,\n                \"multiline\": True\n            },\n            \"body\": {\n                \"display_name\": \"Body\",\n                \"field_type\": \"str\",\n                \"required\": False,\n                \"multiline\": True\n            }\n        }\n\n    def build(self, method: str, url: str, headers: dict = {\"Accept\": \"*/*\"}, body: str = None) -> Document:\n        response = requests.request(method, url, headers=headers, data=body)\n        self.repr_value = f\"Response Status Code: {response.status_code}\"\n        return Document(page_content=response.text)\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "headers": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": [
                    {
                      "Content-Type": "application/json"
                    },
                    {
                      "Authorization": "Token PclJ9hhYkaHtRwryjHUDGgYNf7BG3Bca:JxlPrHruZuX0K4sEOOoO7pDMp57nemvP"
                    }
                  ],
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "headers",
                  "display_name": "Headers",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "method": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "GET",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "options": [
                    "GET",
                    "POST",
                    "PUT",
                    "DELETE"
                  ],
                  "name": "method",
                  "display_name": "HTTP Method",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "url": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "url",
                  "display_name": "URL",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "value": "https://bookstack-xwdf6yz6ya-uc.a.run.app/api/books"
                },
                "_type": "CustomComponent"
              },
              "description": "This component sends HTTP requests and returns the response.",
              "base_classes": [
                "Document"
              ],
              "display_name": "HTTP Request",
              "documentation": "",
              "custom_fields": {
                "method": null,
                "url": null,
                "headers": null,
                "body": null
              },
              "output_types": [
                "Document"
              ],
              "field_formatters": {},
              "beta": true
            },
            "id": "CustomComponent-NUhdR",
            "description": "This component sends HTTP requests and returns the response.",
            "display_name": "HTTP Request"
          },
          "selected": false,
          "width": 384,
          "height": 707,
          "positionAbsolute": {
            "x": -433.6535375755252,
            "y": -1012.9671371627172
          },
          "dragging": false
        },
        {
          "id": "CustomComponent-Gdb4w",
          "type": "genericNode",
          "position": {
            "x": -432.65258327652253,
            "y": -1740.0312854363028
          },
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "body": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "body",
                  "display_name": "Body",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio import CustomComponent\nfrom langchain.schema import Document\nimport requests\n\nclass HTTPRequestComponent(CustomComponent):\n    display_name = \"HTTP Request\"\n    description = \"This component sends HTTP requests and returns the response.\"\n\n    def build_config(self) -> dict:\n        methods = [\"GET\", \"POST\", \"PUT\", \"DELETE\"]\n        return {\n            \"method\": {\n                \"options\": methods,\n                \"value\": methods[0],\n                \"display_name\": \"HTTP Method\"\n            },\n            \"url\": {\n                \"display_name\": \"URL\"\n            },\n            \"headers\": {\n                \"display_name\": \"Headers\",\n                \"field_type\": \"dict\",\n                \"required\": False,\n                \"multiline\": True\n            },\n            \"body\": {\n                \"display_name\": \"Body\",\n                \"field_type\": \"str\",\n                \"required\": False,\n                \"multiline\": True\n            }\n        }\n\n    def build(self, method: str, url: str, headers: dict = {\"Accept\": \"*/*\"}, body: str = None) -> Document:\n        response = requests.request(method, url, headers=headers, data=body)\n        self.repr_value = f\"Response Status Code: {response.status_code}\"\n        return Document(page_content=response.text)\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "headers": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": [
                    {
                      "Content-Type": "application/json"
                    },
                    {
                      "Authorization": "Token PclJ9hhYkaHtRwryjHUDGgYNf7BG3Bca:JxlPrHruZuX0K4sEOOoO7pDMp57nemvP"
                    }
                  ],
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "headers",
                  "display_name": "Headers",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "method": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "GET",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "options": [
                    "GET",
                    "POST",
                    "PUT",
                    "DELETE"
                  ],
                  "name": "method",
                  "display_name": "HTTP Method",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "url": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "url",
                  "display_name": "URL",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "value": "https://bookstack-xwdf6yz6ya-uc.a.run.app/api/chapters"
                },
                "_type": "CustomComponent"
              },
              "description": "This component sends HTTP requests and returns the response.",
              "base_classes": [
                "Document"
              ],
              "display_name": "HTTP Request",
              "documentation": "",
              "custom_fields": {
                "method": null,
                "url": null,
                "headers": null,
                "body": null
              },
              "output_types": [
                "Document"
              ],
              "field_formatters": {},
              "beta": true
            },
            "id": "CustomComponent-Gdb4w",
            "description": "This component sends HTTP requests and returns the response.",
            "display_name": "HTTP Request"
          },
          "selected": false,
          "width": 384,
          "height": 707,
          "positionAbsolute": {
            "x": -432.65258327652253,
            "y": -1740.0312854363028
          },
          "dragging": false
        },
        {
          "id": "CustomComponent-MlrYg",
          "type": "genericNode",
          "position": {
            "x": -435.56601037065,
            "y": -2462.9469546089704
          },
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "body": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "body",
                  "display_name": "Body",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio import CustomComponent\nfrom langchain.schema import Document\nimport requests\n\nclass HTTPRequestComponent(CustomComponent):\n    display_name = \"HTTP Request\"\n    description = \"This component sends HTTP requests and returns the response.\"\n\n    def build_config(self) -> dict:\n        methods = [\"GET\", \"POST\", \"PUT\", \"DELETE\"]\n        return {\n            \"method\": {\n                \"options\": methods,\n                \"value\": methods[0],\n                \"display_name\": \"HTTP Method\"\n            },\n            \"url\": {\n                \"display_name\": \"URL\"\n            },\n            \"headers\": {\n                \"display_name\": \"Headers\",\n                \"field_type\": \"dict\",\n                \"required\": False,\n                \"multiline\": True\n            },\n            \"body\": {\n                \"display_name\": \"Body\",\n                \"field_type\": \"str\",\n                \"required\": False,\n                \"multiline\": True\n            }\n        }\n\n    def build(self, method: str, url: str, headers: dict = {\"Accept\": \"*/*\"}, body: str = None) -> Document:\n        response = requests.request(method, url, headers=headers, data=body)\n        self.repr_value = f\"Response Status Code: {response.status_code}\"\n        return Document(page_content=response.text)\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "headers": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": [
                    {
                      "Content-Type": "application/json"
                    },
                    {
                      "Authorization": "Token PclJ9hhYkaHtRwryjHUDGgYNf7BG3Bca:JxlPrHruZuX0K4sEOOoO7pDMp57nemvP"
                    }
                  ],
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "headers",
                  "display_name": "Headers",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "method": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "GET",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "options": [
                    "GET",
                    "POST",
                    "PUT",
                    "DELETE"
                  ],
                  "name": "method",
                  "display_name": "HTTP Method",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "url": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "url",
                  "display_name": "URL",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "value": "https://bookstack-xwdf6yz6ya-uc.a.run.app/api/pages"
                },
                "_type": "CustomComponent"
              },
              "description": "This component sends HTTP requests and returns the response.",
              "base_classes": [
                "Document"
              ],
              "display_name": "HTTP Request",
              "documentation": "",
              "custom_fields": {
                "method": null,
                "url": null,
                "headers": null,
                "body": null
              },
              "output_types": [
                "Document"
              ],
              "field_formatters": {},
              "beta": true
            },
            "id": "CustomComponent-MlrYg",
            "description": "This component sends HTTP requests and returns the response.",
            "display_name": "HTTP Request"
          },
          "selected": false,
          "width": 384,
          "height": 707,
          "positionAbsolute": {
            "x": -435.56601037065,
            "y": -2462.9469546089704
          },
          "dragging": false
        },
        {
          "id": "SystemMessagePromptTemplate-5UJBH",
          "type": "genericNode",
          "position": {
            "x": 1081.5179298455653,
            "y": -122.5800352919527
          },
          "data": {
            "type": "SystemMessagePromptTemplate",
            "node": {
              "template": {
                "additional_kwargs": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "additional_kwargs",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "prompt": {
                  "type": "prompt",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": true,
                  "value": "You are given a database of GET requests from the bookstack API responses for the {shelve}, {book}, {chapter} and {page} endpoint info and organizational structure.\nYou are a helpful assistant that talks casually about life in general.\nYou are a good listener and you help the user get the absolute best answers to the questions by retrieving this info from the API responses.\n",
                  "fileTypes": [],
                  "password": false,
                  "name": "prompt",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "_type": "SystemMessagePromptTemplate",
                "shelve": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "shelve",
                  "display_name": "shelve",
                  "advanced": false,
                  "input_types": [
                    "Document",
                    "BaseOutputParser"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "book": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "book",
                  "display_name": "book",
                  "advanced": false,
                  "input_types": [
                    "Document",
                    "BaseOutputParser"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "chapter": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "chapter",
                  "display_name": "chapter",
                  "advanced": false,
                  "input_types": [
                    "Document",
                    "BaseOutputParser"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "page": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "page",
                  "display_name": "page",
                  "advanced": false,
                  "input_types": [
                    "Document",
                    "BaseOutputParser"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                }
              },
              "description": "System message prompt template.",
              "icon": null,
              "base_classes": [
                "SystemMessagePromptTemplate",
                "BaseMessagePromptTemplate",
                "_StringImageMessagePromptTemplate"
              ],
              "name": "",
              "display_name": "SystemMessagePromptTemplate",
              "documentation": "https://python.langchain.com/docs/modules/model_io/models/chat/how_to/prompts",
              "custom_fields": {
                "": [
                  "shelve",
                  "book",
                  "chapter",
                  "page"
                ]
              },
              "output_types": [],
              "full_path": null,
              "field_formatters": {},
              "beta": false,
              "error": null
            },
            "id": "SystemMessagePromptTemplate-5UJBH",
            "description": "System message prompt template.",
            "display_name": "SystemMessagePromptTemplate"
          },
          "selected": false,
          "width": 384,
          "height": 657,
          "positionAbsolute": {
            "x": 1081.5179298455653,
            "y": -122.5800352919527
          },
          "dragging": false
        },
        {
          "id": "ConversationBufferMemory-vwZrC",
          "type": "genericNode",
          "position": {
            "x": 1458.103250278784,
            "y": -746.8481179043764
          },
          "data": {
            "type": "ConversationBufferMemory",
            "node": {
              "template": {
                "chat_memory": {
                  "type": "BaseChatMessageHistory",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "chat_memory",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "ai_prefix": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": "AI",
                  "fileTypes": [],
                  "password": false,
                  "name": "ai_prefix",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "human_prefix": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": "Human",
                  "fileTypes": [],
                  "password": false,
                  "name": "human_prefix",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "input_key": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "input_key",
                  "advanced": false,
                  "dynamic": false,
                  "info": "The variable to be used as Chat Input when more than one variable is available.",
                  "title_case": true
                },
                "memory_key": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "chat_history",
                  "fileTypes": [],
                  "password": false,
                  "name": "memory_key",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "output_key": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "output_key",
                  "advanced": false,
                  "dynamic": false,
                  "info": "The variable to be used as Chat Output (e.g. answer in a ConversationalRetrievalChain)",
                  "title_case": true
                },
                "return_messages": {
                  "type": "bool",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "return_messages",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "_type": "ConversationBufferMemory"
              },
              "description": "Buffer for storing conversation memory.",
              "base_classes": [
                "BaseMemory",
                "BaseChatMemory",
                "ConversationBufferMemory"
              ],
              "display_name": "ConversationBufferMemory",
              "documentation": "https://python.langchain.com/docs/modules/memory/how_to/buffer",
              "custom_fields": {},
              "output_types": [],
              "field_formatters": {},
              "beta": false
            },
            "id": "ConversationBufferMemory-vwZrC"
          },
          "selected": false,
          "width": 384,
          "height": 601,
          "positionAbsolute": {
            "x": 1458.103250278784,
            "y": -746.8481179043764
          },
          "dragging": false
        },
        {
          "id": "PostgresChatMessageHistory-L9PSL",
          "type": "genericNode",
          "position": {
            "x": 855.8454758938578,
            "y": -817.8397879313266
          },
          "data": {
            "type": "PostgresChatMessageHistory",
            "node": {
              "template": {
                "connection_string": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "psql --version",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "connection_string",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "session_id": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "session_id",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "table_name": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "message_store",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "table_name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "_type": "PostgresChatMessageHistory"
              },
              "description": "Memory store with Postgres",
              "base_classes": [
                "PostgresChatMessageHistory",
                "BaseChatMessageHistory"
              ],
              "display_name": "PostgresChatMessageHistory",
              "documentation": "https://python.langchain.com/docs/modules/memory/integrations/postgres_chat_message_history",
              "custom_fields": {},
              "output_types": [],
              "field_formatters": {},
              "beta": false
            },
            "id": "PostgresChatMessageHistory-L9PSL"
          },
          "selected": false,
          "width": 384,
          "height": 477
        }
      ],
      "edges": [
        {
          "source": "CustomComponent-kMU68",
          "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-kMU68œ}",
          "target": "Chroma-0IfqS",
          "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œChroma-0IfqSœ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
          "data": {
            "targetHandle": {
              "fieldName": "documents",
              "id": "Chroma-0IfqS",
              "inputTypes": null,
              "type": "Document"
            },
            "sourceHandle": {
              "baseClasses": [
                "Document"
              ],
              "dataType": "CustomComponent",
              "id": "CustomComponent-kMU68"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-foreground  stroke-connection",
          "animated": false,
          "id": "reactflow__edge-CustomComponent-kMU68{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-kMU68œ}-Chroma-0IfqS{œfieldNameœ:œdocumentsœ,œidœ:œChroma-0IfqSœ,œinputTypesœ:null,œtypeœ:œDocumentœ}"
        },
        {
          "source": "OpenAIEmbeddings-9Mr1i",
          "sourceHandle": "{œbaseClassesœ:[œOpenAIEmbeddingsœ,œEmbeddingsœ,œCallableœ],œdataTypeœ:œOpenAIEmbeddingsœ,œidœ:œOpenAIEmbeddings-9Mr1iœ}",
          "target": "Chroma-0IfqS",
          "targetHandle": "{œfieldNameœ:œembeddingœ,œidœ:œChroma-0IfqSœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}",
          "data": {
            "targetHandle": {
              "fieldName": "embedding",
              "id": "Chroma-0IfqS",
              "inputTypes": null,
              "type": "Embeddings"
            },
            "sourceHandle": {
              "baseClasses": [
                "OpenAIEmbeddings",
                "Embeddings",
                "Callable"
              ],
              "dataType": "OpenAIEmbeddings",
              "id": "OpenAIEmbeddings-9Mr1i"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-foreground  stroke-connection",
          "animated": false,
          "id": "reactflow__edge-OpenAIEmbeddings-9Mr1i{œbaseClassesœ:[œOpenAIEmbeddingsœ,œEmbeddingsœ,œCallableœ],œdataTypeœ:œOpenAIEmbeddingsœ,œidœ:œOpenAIEmbeddings-9Mr1iœ}-Chroma-0IfqS{œfieldNameœ:œembeddingœ,œidœ:œChroma-0IfqSœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}"
        },
        {
          "source": "Chroma-0IfqS",
          "sourceHandle": "{œbaseClassesœ:[œVectorStoreœ,œBaseRetrieverœ],œdataTypeœ:œChromaœ,œidœ:œChroma-0IfqSœ}",
          "target": "Tool-KnkwJ",
          "targetHandle": "{œfieldNameœ:œretrieverœ,œidœ:œTool-KnkwJœ,œinputTypesœ:null,œtypeœ:œBaseRetrieverœ}",
          "data": {
            "targetHandle": {
              "fieldName": "retriever",
              "id": "Tool-KnkwJ",
              "inputTypes": null,
              "type": "BaseRetriever"
            },
            "sourceHandle": {
              "baseClasses": [
                "VectorStore",
                "BaseRetriever"
              ],
              "dataType": "Chroma",
              "id": "Chroma-0IfqS"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-foreground  stroke-connection",
          "animated": false,
          "id": "reactflow__edge-Chroma-0IfqS{œbaseClassesœ:[œVectorStoreœ,œBaseRetrieverœ],œdataTypeœ:œChromaœ,œidœ:œChroma-0IfqSœ}-Tool-KnkwJ{œfieldNameœ:œretrieverœ,œidœ:œTool-KnkwJœ,œinputTypesœ:null,œtypeœ:œBaseRetrieverœ}"
        },
        {
          "source": "Tool-KnkwJ",
          "sourceHandle": "{œbaseClassesœ:[œToolœ,œBaseToolœ],œdataTypeœ:œToolœ,œidœ:œTool-KnkwJœ}",
          "target": "AgentExecutor-bimKz",
          "targetHandle": "{œfieldNameœ:œtoolsœ,œidœ:œAgentExecutor-bimKzœ,œinputTypesœ:null,œtypeœ:œToolœ}",
          "data": {
            "targetHandle": {
              "fieldName": "tools",
              "id": "AgentExecutor-bimKz",
              "inputTypes": null,
              "type": "Tool"
            },
            "sourceHandle": {
              "baseClasses": [
                "Tool",
                "BaseTool"
              ],
              "dataType": "Tool",
              "id": "Tool-KnkwJ"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-foreground  stroke-connection",
          "animated": false,
          "id": "reactflow__edge-Tool-KnkwJ{œbaseClassesœ:[œToolœ,œBaseToolœ],œdataTypeœ:œToolœ,œidœ:œTool-KnkwJœ}-AgentExecutor-bimKz{œfieldNameœ:œtoolsœ,œidœ:œAgentExecutor-bimKzœ,œinputTypesœ:null,œtypeœ:œToolœ}"
        },
        {
          "source": "CustomComponent-NUhdR",
          "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-NUhdRœ}",
          "target": "Chroma-0IfqS",
          "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œChroma-0IfqSœ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
          "data": {
            "targetHandle": {
              "fieldName": "documents",
              "id": "Chroma-0IfqS",
              "inputTypes": null,
              "type": "Document"
            },
            "sourceHandle": {
              "baseClasses": [
                "Document"
              ],
              "dataType": "CustomComponent",
              "id": "CustomComponent-NUhdR"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-foreground  stroke-connection",
          "animated": false,
          "id": "reactflow__edge-CustomComponent-NUhdR{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-NUhdRœ}-Chroma-0IfqS{œfieldNameœ:œdocumentsœ,œidœ:œChroma-0IfqSœ,œinputTypesœ:null,œtypeœ:œDocumentœ}"
        },
        {
          "source": "CustomComponent-Gdb4w",
          "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-Gdb4wœ}",
          "target": "Chroma-0IfqS",
          "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œChroma-0IfqSœ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
          "data": {
            "targetHandle": {
              "fieldName": "documents",
              "id": "Chroma-0IfqS",
              "inputTypes": null,
              "type": "Document"
            },
            "sourceHandle": {
              "baseClasses": [
                "Document"
              ],
              "dataType": "CustomComponent",
              "id": "CustomComponent-Gdb4w"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-foreground  stroke-connection",
          "animated": false,
          "id": "reactflow__edge-CustomComponent-Gdb4w{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-Gdb4wœ}-Chroma-0IfqS{œfieldNameœ:œdocumentsœ,œidœ:œChroma-0IfqSœ,œinputTypesœ:null,œtypeœ:œDocumentœ}"
        },
        {
          "source": "CustomComponent-MlrYg",
          "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-MlrYgœ}",
          "target": "Chroma-0IfqS",
          "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œChroma-0IfqSœ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
          "data": {
            "targetHandle": {
              "fieldName": "documents",
              "id": "Chroma-0IfqS",
              "inputTypes": null,
              "type": "Document"
            },
            "sourceHandle": {
              "baseClasses": [
                "Document"
              ],
              "dataType": "CustomComponent",
              "id": "CustomComponent-MlrYg"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-foreground  stroke-connection",
          "animated": false,
          "id": "reactflow__edge-CustomComponent-MlrYg{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-MlrYgœ}-Chroma-0IfqS{œfieldNameœ:œdocumentsœ,œidœ:œChroma-0IfqSœ,œinputTypesœ:null,œtypeœ:œDocumentœ}"
        },
        {
          "source": "SystemMessagePromptTemplate-5UJBH",
          "sourceHandle": "{œbaseClassesœ:[œSystemMessagePromptTemplateœ,œBaseMessagePromptTemplateœ,œ_StringImageMessagePromptTemplateœ],œdataTypeœ:œSystemMessagePromptTemplateœ,œidœ:œSystemMessagePromptTemplate-5UJBHœ}",
          "target": "AgentExecutor-bimKz",
          "targetHandle": "{œfieldNameœ:œsystem_messageœ,œidœ:œAgentExecutor-bimKzœ,œinputTypesœ:null,œtypeœ:œSystemMessagePromptTemplateœ}",
          "data": {
            "targetHandle": {
              "fieldName": "system_message",
              "id": "AgentExecutor-bimKz",
              "inputTypes": null,
              "type": "SystemMessagePromptTemplate"
            },
            "sourceHandle": {
              "baseClasses": [
                "SystemMessagePromptTemplate",
                "BaseMessagePromptTemplate",
                "_StringImageMessagePromptTemplate"
              ],
              "dataType": "SystemMessagePromptTemplate",
              "id": "SystemMessagePromptTemplate-5UJBH"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-foreground  stroke-connection",
          "animated": false,
          "id": "reactflow__edge-SystemMessagePromptTemplate-5UJBH{œbaseClassesœ:[œSystemMessagePromptTemplateœ,œBaseMessagePromptTemplateœ,œ_StringImageMessagePromptTemplateœ],œdataTypeœ:œSystemMessagePromptTemplateœ,œidœ:œSystemMessagePromptTemplate-5UJBHœ}-AgentExecutor-bimKz{œfieldNameœ:œsystem_messageœ,œidœ:œAgentExecutor-bimKzœ,œinputTypesœ:null,œtypeœ:œSystemMessagePromptTemplateœ}"
        },
        {
          "source": "ConversationBufferMemory-vwZrC",
          "sourceHandle": "{œbaseClassesœ:[œBaseMemoryœ,œBaseChatMemoryœ,œConversationBufferMemoryœ],œdataTypeœ:œConversationBufferMemoryœ,œidœ:œConversationBufferMemory-vwZrCœ}",
          "target": "AgentExecutor-bimKz",
          "targetHandle": "{œfieldNameœ:œmemoryœ,œidœ:œAgentExecutor-bimKzœ,œinputTypesœ:null,œtypeœ:œBaseMemoryœ}",
          "data": {
            "targetHandle": {
              "fieldName": "memory",
              "id": "AgentExecutor-bimKz",
              "inputTypes": null,
              "type": "BaseMemory"
            },
            "sourceHandle": {
              "baseClasses": [
                "BaseMemory",
                "BaseChatMemory",
                "ConversationBufferMemory"
              ],
              "dataType": "ConversationBufferMemory",
              "id": "ConversationBufferMemory-vwZrC"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-foreground  stroke-connection",
          "animated": false,
          "id": "reactflow__edge-ConversationBufferMemory-vwZrC{œbaseClassesœ:[œBaseMemoryœ,œBaseChatMemoryœ,œConversationBufferMemoryœ],œdataTypeœ:œConversationBufferMemoryœ,œidœ:œConversationBufferMemory-vwZrCœ}-AgentExecutor-bimKz{œfieldNameœ:œmemoryœ,œidœ:œAgentExecutor-bimKzœ,œinputTypesœ:null,œtypeœ:œBaseMemoryœ}"
        },
        {
          "source": "PostgresChatMessageHistory-L9PSL",
          "sourceHandle": "{œbaseClassesœ:[œPostgresChatMessageHistoryœ,œBaseChatMessageHistoryœ],œdataTypeœ:œPostgresChatMessageHistoryœ,œidœ:œPostgresChatMessageHistory-L9PSLœ}",
          "target": "ConversationBufferMemory-vwZrC",
          "targetHandle": "{œfieldNameœ:œchat_memoryœ,œidœ:œConversationBufferMemory-vwZrCœ,œinputTypesœ:null,œtypeœ:œBaseChatMessageHistoryœ}",
          "data": {
            "targetHandle": {
              "fieldName": "chat_memory",
              "id": "ConversationBufferMemory-vwZrC",
              "inputTypes": null,
              "type": "BaseChatMessageHistory"
            },
            "sourceHandle": {
              "baseClasses": [
                "PostgresChatMessageHistory",
                "BaseChatMessageHistory"
              ],
              "dataType": "PostgresChatMessageHistory",
              "id": "PostgresChatMessageHistory-L9PSL"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-foreground  stroke-connection",
          "animated": false,
          "id": "reactflow__edge-PostgresChatMessageHistory-L9PSL{œbaseClassesœ:[œPostgresChatMessageHistoryœ,œBaseChatMessageHistoryœ],œdataTypeœ:œPostgresChatMessageHistoryœ,œidœ:œPostgresChatMessageHistory-L9PSLœ}-ConversationBufferMemory-vwZrC{œfieldNameœ:œchat_memoryœ,œidœ:œConversationBufferMemory-vwZrCœ,œinputTypesœ:null,œtypeœ:œBaseChatMessageHistoryœ}"
        }
      ],
      "viewport": {
        "x": 181.87327563852688,
        "y": 280.1573947386699,
        "zoom": 0.19210939766100357
      }
    },
    "date_created": "2024-05-10T20:44:37.158Z",
    "date_updated": "2024-05-10T20:44:37.314Z",
    "status": "Public",
    "sort": null,
    "user_updated": "fecafabc-9864-4457-a763-314aa4aa9293",
    "user_created": {
      "username": "terminalgravity",
      "first_name": "Jack",
      "last_name": "Felke",
      "id": "fecafabc-9864-4457-a763-314aa4aa9293"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:08:54.880Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 26,
    "converter_version": "1.0.0"
  }
}