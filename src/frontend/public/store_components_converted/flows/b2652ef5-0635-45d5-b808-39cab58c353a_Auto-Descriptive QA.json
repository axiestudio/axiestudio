{
  "id": "b2652ef5-0635-45d5-b808-39cab58c353a",
  "name": "Auto-Descriptive QA",
  "description": "A modified version of the Extra-Context QA that automatically generates a description for the document. (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "FLOW",
  "is_component": false,
  "author": {
    "username": "elitexp",
    "first_name": "Sujip",
    "last_name": "Maharjan",
    "id": "68eb9d36-2010-4100-94ae-b255435f5d0b",
    "full_name": "Sujip Maharjan"
  },
  "store_url": "https://www.langflow.store/store/component/b2652ef5-0635-45d5-b808-39cab58c353a",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-07-09T10:10:00.938Z",
    "updated": "2024-07-09T10:10:01.039Z",
    "downloaded": "2025-08-19T17:50:05.027Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "1.0.7",
    "private": false,
    "status": "Public"
  },
  "data": {
    "nodes": [
      {
        "width": 384,
        "height": 559,
        "id": "Chroma-nvZ2S",
        "type": "genericNode",
        "position": {
          "x": 1648.2363627274465,
          "y": 739.0259353028853
        },
        "data": {
          "type": "Chroma",
          "node": {
            "template": {
              "code": {
                "dynamic": true,
                "required": true,
                "placeholder": "",
                "show": false,
                "multiline": true,
                "value": "from typing import Optional, Union\nfrom axiestudio import CustomComponent\n\nfrom langchain.vectorstores import Chroma\nfrom langchain.schema import Document\nfrom langchain.vectorstores.base import VectorStore\nfrom langchain.schema import BaseRetriever\nfrom langchain.embeddings.base import Embeddings\nimport chromadb  # type: ignore\n\n\nclass ChromaComponent(CustomComponent):\n    \"\"\"\n    A custom component for implementing a Vector Store using Chroma.\n    \"\"\"\n\n    display_name: str = \"Chroma\"\n    description: str = \"Implementation of Vector Store using Chroma\"\n    documentation = \"https://python.langchain.com/docs/integrations/vectorstores/chroma\"\n    beta: bool = True\n\n    def build_config(self):\n        \"\"\"\n        Builds the configuration for the component.\n\n        Returns:\n        - dict: A dictionary containing the configuration options for the component.\n        \"\"\"\n        return {\n            \"collection_name\": {\"display_name\": \"Collection Name\", \"value\": \"axiestudio\"},\n            \"persist\": {\"display_name\": \"Persist\"},\n            \"persist_directory\": {\"display_name\": \"Persist Directory\"},\n            \"code\": {\"show\": False, \"display_name\": \"Code\"},\n            \"documents\": {\"display_name\": \"Documents\", \"is_list\": True},\n            \"embedding\": {\"display_name\": \"Embedding\"},\n            \"chroma_server_cors_allow_origins\": {\n                \"display_name\": \"Server CORS Allow Origins\",\n                \"advanced\": True,\n            },\n            \"chroma_server_host\": {\"display_name\": \"Server Host\", \"advanced\": True},\n            \"chroma_server_port\": {\"display_name\": \"Server Port\", \"advanced\": True},\n            \"chroma_server_grpc_port\": {\n                \"display_name\": \"Server gRPC Port\",\n                \"advanced\": True,\n            },\n            \"chroma_server_ssl_enabled\": {\n                \"display_name\": \"Server SSL Enabled\",\n                \"advanced\": True,\n            },\n        }\n\n    def build(\n        self,\n        collection_name: str,\n        persist: bool,\n        chroma_server_ssl_enabled: bool,\n        persist_directory: Optional[str] = None,\n        embedding: Optional[Embeddings] = None,\n        documents: Optional[Document] = None,\n        chroma_server_cors_allow_origins: Optional[str] = None,\n        chroma_server_host: Optional[str] = None,\n        chroma_server_port: Optional[int] = None,\n        chroma_server_grpc_port: Optional[int] = None,\n    ) -> Union[VectorStore, BaseRetriever]:\n        \"\"\"\n        Builds the Vector Store or BaseRetriever object.\n\n        Args:\n        - collection_name (str): The name of the collection.\n        - persist_directory (Optional[str]): The directory to persist the Vector Store to.\n        - chroma_server_ssl_enabled (bool): Whether to enable SSL for the Chroma server.\n        - persist (bool): Whether to persist the Vector Store or not.\n        - embedding (Optional[Embeddings]): The embeddings to use for the Vector Store.\n        - documents (Optional[Document]): The documents to use for the Vector Store.\n        - chroma_server_cors_allow_origins (Optional[str]): The CORS allow origins for the Chroma server.\n        - chroma_server_host (Optional[str]): The host for the Chroma server.\n        - chroma_server_port (Optional[int]): The port for the Chroma server.\n        - chroma_server_grpc_port (Optional[int]): The gRPC port for the Chroma server.\n\n        Returns:\n        - Union[VectorStore, BaseRetriever]: The Vector Store or BaseRetriever object.\n        \"\"\"\n\n        # Chroma settings\n        chroma_settings = None\n\n        if chroma_server_host is not None:\n            chroma_settings = chromadb.config.Settings(\n                chroma_server_cors_allow_origins=chroma_server_cors_allow_origins or None,\n                chroma_server_host=chroma_server_host,\n                chroma_server_port=chroma_server_port or None,\n                chroma_server_grpc_port=chroma_server_grpc_port or None,\n                chroma_server_ssl_enabled=chroma_server_ssl_enabled,\n            )\n\n        # If documents, then we need to create a Chroma instance using .from_documents\n        if documents is not None and embedding is not None:\n            return Chroma.from_documents(\n                documents=documents,  # type: ignore\n                persist_directory=persist_directory if persist else None,\n                collection_name=collection_name,\n                embedding=embedding,\n                client_settings=chroma_settings,\n            )\n\n        return Chroma(persist_directory=persist_directory, client_settings=chroma_settings)\n",
                "password": false,
                "name": "code",
                "advanced": false,
                "type": "code",
                "list": false
              },
              "_type": "CustomComponent",
              "chroma_server_cors_allow_origins": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "chroma_server_cors_allow_origins",
                "display_name": "Server CORS Allow Origins",
                "advanced": true,
                "dynamic": false,
                "info": ""
              },
              "chroma_server_grpc_port": {
                "type": "int",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "chroma_server_grpc_port",
                "display_name": "Server gRPC Port",
                "advanced": true,
                "dynamic": false,
                "info": ""
              },
              "chroma_server_host": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "chroma_server_host",
                "display_name": "Server Host",
                "advanced": true,
                "dynamic": false,
                "info": ""
              },
              "chroma_server_port": {
                "type": "int",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "chroma_server_port",
                "display_name": "Server Port",
                "advanced": true,
                "dynamic": false,
                "info": ""
              },
              "chroma_server_ssl_enabled": {
                "type": "bool",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "chroma_server_ssl_enabled",
                "display_name": "Server SSL Enabled",
                "advanced": true,
                "dynamic": false,
                "info": ""
              },
              "collection_name": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "axiestudio",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "collection_name",
                "display_name": "Collection Name",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "documents": {
                "type": "Document",
                "required": false,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "documents",
                "display_name": "Documents",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "embedding": {
                "type": "Embeddings",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "embedding",
                "display_name": "Embedding",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "persist": {
                "type": "bool",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": true,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "persist",
                "display_name": "Persist",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "persist_directory": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "persist_directory",
                "display_name": "Persist Directory",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "value": "/Users/rodrigonader/Repositories/logspace/projects/axiestudio tests"
              }
            },
            "base_classes": [
              "VectorStore",
              "BaseRetriever"
            ],
            "display_name": "Chroma",
            "documentation": "https://python.langchain.com/docs/integrations/vectorstores/chroma",
            "custom_fields": {
              "chroma_server_cors_allow_origins": null,
              "chroma_server_grpc_port": null,
              "chroma_server_host": null,
              "chroma_server_port": null,
              "chroma_server_ssl_enabled": null,
              "collection_name": null,
              "documents": null,
              "embedding": null,
              "persist": null,
              "persist_directory": null
            },
            "output_types": [
              "Chroma"
            ],
            "field_formatters": {},
            "beta": true,
            "description": "Implementation of Vector Store using Chroma",
            "outputs": [
              {
                "types": [
                  "Chroma"
                ],
                "name": "Chroma",
                "display_name": "Chroma"
              }
            ]
          },
          "id": "Chroma-nvZ2S"
        },
        "selected": true,
        "positionAbsolute": {
          "x": 1648.2363627274465,
          "y": 739.0259353028853
        },
        "dragging": false
      },
      {
        "width": 384,
        "height": 387,
        "id": "CustomComponent-20MV3",
        "type": "genericNode",
        "position": {
          "x": 19.59804392027229,
          "y": 33.92505970235274
        },
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "code": {
                "dynamic": true,
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": true,
                "value": "from axiestudio import CustomComponent\nfrom langchain.schema import Document\nfrom typing import Any, Dict, List\n\nclass FileLoaderComponent(CustomComponent):\n    display_name: str = \"File Loader\"\n    description: str = \"A generic loader that auto-detects file types.\"\n    beta = True\n    loaders_info: List[Dict[str, Any]] = [\n    {\n        \"loader\": \"AirbyteJSONLoader\",\n        \"name\": \"Airbyte JSON (.jsonl)\",\n        \"import\": \"langchain.document_loaders.AirbyteJSONLoader\",\n        \"defaultFor\": [\"jsonl\"],\n        \"allowdTypes\": [\"jsonl\"],\n    },\n    {\n        \"loader\": \"JSONLoader\",\n        \"name\": \"JSON (.json)\",\n        \"import\": \"langchain.document_loaders.JSONLoader\",\n        \"defaultFor\": [\"json\"],\n        \"allowdTypes\": [\"json\"],\n    },\n    {\n        \"loader\": \"BSHTMLLoader\",\n        \"name\": \"BeautifulSoup4 HTML (.html, .htm)\",\n        \"import\": \"langchain.document_loaders.BSHTMLLoader\",\n        \"allowdTypes\": [\"html\", \"htm\"],\n    },\n    {\n        \"loader\": \"CSVLoader\",\n        \"name\": \"CSV (.csv)\",\n        \"import\": \"langchain.document_loaders.CSVLoader\",\n        \"defaultFor\": [\"csv\"],\n        \"allowdTypes\": [\"csv\"],\n    },\n    {\n        \"loader\": \"CoNLLULoader\",\n        \"name\": \"CoNLL-U (.conllu)\",\n        \"import\": \"langchain.document_loaders.CoNLLULoader\",\n        \"defaultFor\": [\"conllu\"],\n        \"allowdTypes\": [\"conllu\"],\n    },\n    {\n        \"loader\": \"EverNoteLoader\",\n        \"name\": \"EverNote (.enex)\",\n        \"import\": \"langchain.document_loaders.EverNoteLoader\",\n        \"defaultFor\": [\"enex\"],\n        \"allowdTypes\": [\"enex\"],\n    },\n    {\n        \"loader\": \"FacebookChatLoader\",\n        \"name\": \"Facebook Chat (.json)\",\n        \"import\": \"langchain.document_loaders.FacebookChatLoader\",\n        \"allowdTypes\": [\"json\"],\n    },\n    {\n        \"loader\": \"OutlookMessageLoader\",\n        \"name\": \"Outlook Message (.msg)\",\n        \"import\": \"langchain.document_loaders.OutlookMessageLoader\",\n        \"defaultFor\": [\"msg\"],\n        \"allowdTypes\": [\"msg\"],\n    },\n    {\n        \"loader\": \"PyPDFLoader\",\n        \"name\": \"PyPDF (.pdf)\",\n        \"import\": \"langchain.document_loaders.PyPDFLoader\",\n        \"defaultFor\": [\"pdf\"],\n        \"allowdTypes\": [\"pdf\"],\n    },\n    {\n        \"loader\": \"STRLoader\",\n        \"name\": \"Subtitle (.str)\",\n        \"import\": \"langchain.document_loaders.STRLoader\",\n        \"defaultFor\": [\"str\"],\n        \"allowdTypes\": [\"str\"],\n    },\n    {\n        \"loader\": \"TextLoader\",\n        \"name\": \"Text (.txt)\",\n        \"import\": \"langchain.document_loaders.TextLoader\",\n        \"defaultFor\": [\"txt\"],\n        \"allowdTypes\": [\"txt\"],\n    },\n    {\n        \"loader\": \"UnstructuredEmailLoader\",\n        \"name\": \"Unstructured Email (.eml)\",\n        \"import\": \"langchain.document_loaders.UnstructuredEmailLoader\",\n        \"defaultFor\": [\"eml\"],\n        \"allowdTypes\": [\"eml\"],\n    },\n    {\n        \"loader\": \"UnstructuredHTMLLoader\",\n        \"name\": \"Unstructured HTML (.html, .htm)\",\n        \"import\": \"langchain.document_loaders.UnstructuredHTMLLoader\",\n        \"defaultFor\": [\"html\", \"htm\"],\n        \"allowdTypes\": [\"html\", \"htm\"],\n    },\n    {\n        \"loader\": \"UnstructuredMarkdownLoader\",\n        \"name\": \"Unstructured Markdown (.md)\",\n        \"import\": \"langchain.document_loaders.UnstructuredMarkdownLoader\",\n        \"defaultFor\": [\"md\"],\n        \"allowdTypes\": [\"md\"],\n    },\n    {\n        \"loader\": \"UnstructuredPowerPointLoader\",\n        \"name\": \"Unstructured PowerPoint (.pptx)\",\n        \"import\": \"langchain.document_loaders.UnstructuredPowerPointLoader\",\n        \"defaultFor\": [\"pptx\"],\n        \"allowdTypes\": [\"pptx\"],\n    },\n    {\n        \"loader\": \"UnstructuredWordLoader\",\n        \"name\": \"Unstructured Word (.docx)\",\n        \"import\": \"langchain.document_loaders.UnstructuredWordLoader\",\n        \"defaultFor\": [\"docx\"],\n        \"allowdTypes\": [\"docx\"],\n    },\n]\n\n    def build_config(self):\n        loader_options = [\"Automatic\"] + [\n            loader_info[\"name\"] for loader_info in self.loaders_info\n        ]\n\n        file_types = []\n        suffixes = []\n\n        for loader_info in self.loaders_info:\n            if \"allowedTypes\" in loader_info:\n                file_types.extend(loader_info[\"allowedTypes\"])\n                suffixes.extend([f\".{ext}\" for ext in loader_info[\"allowedTypes\"]])\n\n        return {\n            \"file_path\": {\n                \"display_name\": \"File Path\",\n                \"required\": True,\n                \"field_type\": \"file\",\n                \"file_types\": [\n                    \"json\",\n                    \"txt\",\n                    \"csv\",\n                    \"jsonl\",\n                    \"html\",\n                    \"htm\",\n                    \"conllu\",\n                    \"enex\",\n                    \"msg\",\n                    \"pdf\",\n                    \"srt\",\n                    \"eml\",\n                    \"md\",\n                    \"pptx\",\n                    \"docx\",\n                ],\n                \"suffixes\": [\n                    \".json\",\n                    \".txt\",\n                    \".csv\",\n                    \".jsonl\",\n                    \".html\",\n                    \".htm\",\n                    \".conllu\",\n                    \".enex\",\n                    \".msg\",\n                    \".pdf\",\n                    \".srt\",\n                    \".eml\",\n                    \".md\",\n                    \".pptx\",\n                    \".docx\",\n                ],\n                # \"file_types\" : file_types,\n                # \"suffixes\": suffixes,\n            },\n            \"loader\": {\n                \"display_name\": \"Loader\",\n                \"is_list\": True,\n                \"required\": True,\n                \"options\": loader_options,\n                \"value\": \"Automatic\",\n            },\n        }\n\n    def build(self, file_path: str, loader: str) -> Document:\n        file_type = file_path.split(\".\")[-1]\n\n        # Mapeie o nome do loader selecionado para suas informações\n        selected_loader_info = None\n        for loader_info in self.loaders_info:\n            if loader_info[\"name\"] == loader:\n                selected_loader_info = loader_info\n                break\n\n        if selected_loader_info is None and loader != \"Automatic\":\n            raise ValueError(f\"Loader {loader} not found in the loader info list\")\n\n        if loader == \"Automatic\":\n            # Determine o loader automaticamente com base na extensão do arquivo\n            default_loader_info = None\n            for info in self.loaders_info:\n                if \"defaultFor\" in info and file_type in info[\"defaultFor\"]:\n                    default_loader_info = info\n                    break\n\n            if default_loader_info is None:\n                raise ValueError(f\"No default loader found for file type: {file_type}\")\n\n            selected_loader_info = default_loader_info\n        if isinstance(selected_loader_info, dict):\n            loader_import: str = selected_loader_info[\"import\"]\n        else:\n            raise ValueError(\n                f\"Loader info for {loader} is not a dict\\nLoader info:\\n{selected_loader_info}\"\n            )\n        module_name, class_name = loader_import.rsplit(\".\", 1)\n\n        try:\n            # Importe o loader dinamicamente\n            loader_module = __import__(module_name, fromlist=[class_name])\n            loader_instance = getattr(loader_module, class_name)\n        except ImportError as e:\n            raise ValueError(\n                f\"Loader {loader} could not be imported\\nLoader info:\\n{selected_loader_info}\"\n            ) from e\n\n        result = loader_instance(file_path=file_path)\n        result = result.load()\n        self.status = result\n        return result",
                "password": false,
                "name": "code",
                "advanced": false,
                "type": "code",
                "list": false
              },
              "_type": "CustomComponent",
              "file_path": {
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "file_path",
                "display_name": "File Path",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "file",
                "list": false,
                "fileTypes": [
                  "json",
                  "txt",
                  "csv",
                  "jsonl",
                  "html",
                  "htm",
                  "conllu",
                  "enex",
                  "msg",
                  "pdf",
                  "srt",
                  "eml",
                  "md",
                  "pptx",
                  "docx"
                ],
                "file_path": "8fef5007-c9d8-47d0-b566-68a8e1e650af/Basic RAG.json",
                "value": ""
              },
              "loader": {
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "Automatic",
                "password": false,
                "options": [
                  "Automatic",
                  "Airbyte JSON (.jsonl)",
                  "JSON (.json)",
                  "BeautifulSoup4 HTML (.html, .htm)",
                  "CSV (.csv)",
                  "CoNLL-U (.conllu)",
                  "EverNote (.enex)",
                  "Facebook Chat (.json)",
                  "Outlook Message (.msg)",
                  "PyPDF (.pdf)",
                  "Subtitle (.str)",
                  "Text (.txt)",
                  "Unstructured Email (.eml)",
                  "Unstructured HTML (.html, .htm)",
                  "Unstructured Markdown (.md)",
                  "Unstructured PowerPoint (.pptx)",
                  "Unstructured Word (.docx)"
                ],
                "name": "loader",
                "display_name": "Loader",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": true
              }
            },
            "description": "A generic loader that auto-detects file types.",
            "base_classes": [
              "Document"
            ],
            "display_name": "File Loader",
            "custom_fields": {
              "file_path": null,
              "loader": null
            },
            "output_types": [
              "Document"
            ],
            "documentation": "",
            "beta": true,
            "error": null,
            "official": false,
            "outputs": [
              {
                "types": [
                  "Document"
                ],
                "selected": "Document",
                "name": "Document",
                "display_name": "Document",
                "hidden": false
              }
            ]
          },
          "id": "CustomComponent-20MV3"
        },
        "selected": false,
        "positionAbsolute": {
          "x": 19.59804392027229,
          "y": 33.92505970235274
        },
        "dragging": false
      },
      {
        "width": 384,
        "height": 463,
        "id": "OpenAIEmbeddings-KXHTX",
        "type": "genericNode",
        "position": {
          "x": 670.7457741047131,
          "y": 900.6671314904487
        },
        "data": {
          "type": "OpenAIEmbeddings",
          "node": {
            "template": {
              "allowed_special": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": [],
                "fileTypes": [],
                "password": false,
                "name": "allowed_special",
                "advanced": true,
                "dynamic": false,
                "info": ""
              },
              "async_client": {
                "type": "Any",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "async_client",
                "advanced": true,
                "dynamic": false,
                "info": ""
              },
              "chunk_size": {
                "type": "int",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": 1000,
                "fileTypes": [],
                "password": false,
                "name": "chunk_size",
                "advanced": true,
                "dynamic": false,
                "info": ""
              },
              "client": {
                "type": "Any",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "client",
                "advanced": true,
                "dynamic": false,
                "info": ""
              },
              "default_headers": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "default_headers",
                "advanced": true,
                "dynamic": false,
                "info": ""
              },
              "default_query": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "default_query",
                "advanced": true,
                "dynamic": false,
                "info": ""
              },
              "deployment": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "text-embedding-ada-002",
                "fileTypes": [],
                "password": false,
                "name": "deployment",
                "advanced": true,
                "dynamic": false,
                "info": ""
              },
              "disallowed_special": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "all",
                "fileTypes": [],
                "password": false,
                "name": "disallowed_special",
                "advanced": true,
                "dynamic": false,
                "info": ""
              },
              "embedding_ctx_length": {
                "type": "int",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": 8191,
                "fileTypes": [],
                "password": false,
                "name": "embedding_ctx_length",
                "advanced": true,
                "dynamic": false,
                "info": ""
              },
              "headers": {
                "type": "Any",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": true,
                "value": "{\"Authorization\": \"Bearer <token>\"}",
                "fileTypes": [],
                "password": false,
                "name": "headers",
                "advanced": true,
                "dynamic": false,
                "info": ""
              },
              "http_client": {
                "type": "Any",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "http_client",
                "advanced": true,
                "dynamic": false,
                "info": ""
              },
              "max_retries": {
                "type": "int",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": 2,
                "fileTypes": [],
                "password": false,
                "name": "max_retries",
                "advanced": true,
                "dynamic": false,
                "info": ""
              },
              "model": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "text-embedding-ada-002",
                "fileTypes": [],
                "password": false,
                "name": "model",
                "advanced": true,
                "dynamic": false,
                "info": ""
              },
              "model_kwargs": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "model_kwargs",
                "advanced": true,
                "dynamic": false,
                "info": ""
              },
              "openai_api_base": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "password": true,
                "name": "openai_api_base",
                "display_name": "OpenAI API Base",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "value": ""
              },
              "openai_api_key": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "",
                "fileTypes": [],
                "password": true,
                "name": "openai_api_key",
                "display_name": "OpenAI API Key",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "openai_api_type": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "password": true,
                "name": "openai_api_type",
                "display_name": "OpenAI API Type",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "value": ""
              },
              "openai_api_version": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "password": true,
                "name": "openai_api_version",
                "display_name": "OpenAI API Version",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "value": ""
              },
              "openai_organization": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "openai_organization",
                "display_name": "OpenAI Organization",
                "advanced": true,
                "dynamic": false,
                "info": ""
              },
              "openai_proxy": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "openai_proxy",
                "display_name": "OpenAI Proxy",
                "advanced": true,
                "dynamic": false,
                "info": ""
              },
              "request_timeout": {
                "type": "float",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "request_timeout",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "rangeSpec": {
                  "min": -1,
                  "max": 1,
                  "step": 0.1
                }
              },
              "show_progress_bar": {
                "type": "bool",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": false,
                "fileTypes": [],
                "password": false,
                "name": "show_progress_bar",
                "advanced": true,
                "dynamic": false,
                "info": ""
              },
              "skip_empty": {
                "type": "bool",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": false,
                "fileTypes": [],
                "password": false,
                "name": "skip_empty",
                "advanced": true,
                "dynamic": false,
                "info": ""
              },
              "tiktoken_enabled": {
                "type": "bool",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "",
                "fileTypes": [],
                "password": true,
                "name": "tiktoken_enabled",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "tiktoken_model_name": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "password": true,
                "name": "tiktoken_model_name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "value": ""
              },
              "_type": "OpenAIEmbeddings"
            },
            "description": "OpenAI embedding models.",
            "base_classes": [
              "Embeddings",
              "OpenAIEmbeddings"
            ],
            "display_name": "OpenAIEmbeddings",
            "documentation": "https://python.langchain.com/docs/modules/data_connection/text_embedding/integrations/openai",
            "custom_fields": {},
            "output_types": [],
            "field_formatters": {},
            "beta": false,
            "outputs": [
              {
                "types": [],
                "name": "",
                "display_name": "",
                "hidden": false
              }
            ]
          },
          "id": "OpenAIEmbeddings-KXHTX"
        },
        "selected": false,
        "positionAbsolute": {
          "x": 670.7457741047131,
          "y": 900.6671314904487
        },
        "dragging": false
      },
      {
        "width": 384,
        "height": 521,
        "id": "CharacterTextSplitter-uztx1",
        "type": "genericNode",
        "position": {
          "x": 827.8882520750641,
          "y": 145.36546716873846
        },
        "data": {
          "type": "CharacterTextSplitter",
          "node": {
            "template": {
              "documents": {
                "type": "Document",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "documents",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "chunk_overlap": {
                "type": "int",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "50",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "chunk_overlap",
                "display_name": "Chunk Overlap",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "chunk_size": {
                "type": "int",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "500",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "chunk_size",
                "display_name": "Chunk Size",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "separator": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": " ",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "separator",
                "display_name": "Separator",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "_type": "CharacterTextSplitter"
            },
            "description": "Splitting text that looks at characters.",
            "base_classes": [
              "Document"
            ],
            "display_name": "CharacterTextSplitter",
            "documentation": "https://python.langchain.com/docs/modules/data_connection/document_transformers/text_splitters/character_text_splitter",
            "custom_fields": {},
            "output_types": [
              "Document"
            ],
            "field_formatters": {},
            "beta": false,
            "outputs": [
              {
                "types": [
                  "Document"
                ],
                "selected": "Document",
                "name": "Document",
                "display_name": "Document",
                "hidden": false
              }
            ]
          },
          "id": "CharacterTextSplitter-uztx1"
        },
        "selected": false,
        "positionAbsolute": {
          "x": 827.8882520750641,
          "y": 145.36546716873846
        },
        "dragging": false
      },
      {
        "width": 384,
        "height": 559,
        "id": "ChatOpenAI-xGCiM",
        "type": "genericNode",
        "position": {
          "x": 2488.7372592887555,
          "y": -496.15362556487145
        },
        "data": {
          "type": "ChatOpenAI",
          "node": {
            "template": {
              "callbacks": {
                "type": "langchain_core.callbacks.base.BaseCallbackHandler",
                "required": false,
                "placeholder": "",
                "list": true,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "callbacks",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "async_client": {
                "type": "Any",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "async_client",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "cache": {
                "type": "bool",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "cache",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "client": {
                "type": "Any",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "client",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "default_headers": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "default_headers",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "default_query": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "default_query",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "http_client": {
                "type": "Any",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "http_client",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "max_retries": {
                "type": "int",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": 2,
                "fileTypes": [],
                "password": false,
                "name": "max_retries",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "max_tokens": {
                "type": "int",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "password": true,
                "name": "max_tokens",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "value": ""
              },
              "metadata": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "metadata",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "model_kwargs": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "model_kwargs",
                "advanced": true,
                "dynamic": false,
                "info": ""
              },
              "model_name": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "gpt-4-1106-preview",
                "fileTypes": [],
                "password": false,
                "options": [
                  "gpt-4-1106-preview",
                  "gpt-4-vision-preview",
                  "gpt-4",
                  "gpt-4-32k",
                  "gpt-3.5-turbo",
                  "gpt-3.5-turbo-16k"
                ],
                "name": "model_name",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "n": {
                "type": "int",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": 1,
                "fileTypes": [],
                "password": false,
                "name": "n",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "openai_api_base": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "openai_api_base",
                "display_name": "OpenAI API Base",
                "advanced": true,
                "dynamic": false,
                "info": "\nThe base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.\n"
              },
              "openai_api_key": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "",
                "fileTypes": [],
                "password": true,
                "name": "openai_api_key",
                "display_name": "OpenAI API Key",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "openai_organization": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "openai_organization",
                "display_name": "OpenAI Organization",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "openai_proxy": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "openai_proxy",
                "display_name": "OpenAI Proxy",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "request_timeout": {
                "type": "float",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "request_timeout",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "rangeSpec": {
                  "min": -1,
                  "max": 1,
                  "step": 0.1
                }
              },
              "streaming": {
                "type": "bool",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": false,
                "fileTypes": [],
                "password": false,
                "name": "streaming",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "tags": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": true,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "tags",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "temperature": {
                "type": "float",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": 0.7,
                "fileTypes": [],
                "password": false,
                "name": "temperature",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "rangeSpec": {
                  "min": -1,
                  "max": 1,
                  "step": 0.1
                }
              },
              "tiktoken_model_name": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "tiktoken_model_name",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "verbose": {
                "type": "bool",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": false,
                "fileTypes": [],
                "password": false,
                "name": "verbose",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "_type": "ChatOpenAI"
            },
            "description": "`OpenAI` Chat large language models API.",
            "base_classes": [
              "BaseLanguageModel",
              "ChatOpenAI",
              "BaseChatModel",
              "BaseLLM"
            ],
            "display_name": "ChatOpenAI",
            "documentation": "https://python.langchain.com/docs/modules/model_io/models/chat/integrations/openai",
            "custom_fields": {},
            "output_types": [],
            "field_formatters": {},
            "beta": false,
            "outputs": [
              {
                "types": [],
                "name": "",
                "display_name": "",
                "hidden": false
              }
            ]
          },
          "id": "ChatOpenAI-xGCiM"
        },
        "selected": false,
        "positionAbsolute": {
          "x": 2488.7372592887555,
          "y": -496.15362556487145
        },
        "dragging": false
      },
      {
        "width": 384,
        "height": 523,
        "data": {
          "id": "CustomComponent-9gFUc",
          "type": "CustomComponent",
          "node": {
            "output_types": [
              "Chain"
            ],
            "display_name": "Descriptive QA",
            "documentation": "",
            "base_classes": [
              "Chain"
            ],
            "description": "",
            "template": {
              "llm_CustomComponent-63aa3": {
                "type": "BaseLLM",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "llm",
                "display_name": "Retrieval LLM",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "value": "",
                "proxy": {
                  "id": "CustomComponent-Ug9Uz",
                  "field": "llm"
                }
              },
              "vector_store_CustomComponent-63aa3": {
                "type": "VectorStore",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "vector_store",
                "display_name": "vector_store",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "value": "",
                "proxy": {
                  "id": "CustomComponent-Ug9Uz",
                  "field": "vector_store"
                }
              },
              "code_CustomComponent-63aa3": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": true,
                "value": "from axiestudio import CustomComponent\nfrom axiestudio.field_typing import Data, BaseLLM, PromptTemplate, VectorStore, Chain\nfrom langchain.chains import RetrievalQA\n\n\nclass Component(CustomComponent):\n    documentation: str = \"http://docs.axiestudio.org/components/custom\"\n    \n    def build_config(self):\n        return {\"llm\": {\"display_name\": \"Retrieval LLM\"}}\n\n    def build(self, llm: BaseLLM, prompt: PromptTemplate, vector_store: VectorStore) -> Chain:\n        retrieval_qa = RetrievalQA.from_llm(llm=llm, prompt=prompt, retriever=vector_store.as_retriever())\n        return retrieval_qa",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "proxy": {
                  "id": "CustomComponent-Ug9Uz",
                  "field": "code"
                },
                "display_name": "Code"
              },
              "output_parser_PromptTemplate-iBBGK": {
                "type": "BaseOutputParser",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "output_parser",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "proxy": {
                  "id": "PromptTemplate-PorXG",
                  "field": "output_parser"
                },
                "display_name": "Output Parser"
              },
              "input_types_PromptTemplate-iBBGK": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "input_types",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "proxy": {
                  "id": "PromptTemplate-PorXG",
                  "field": "input_types"
                },
                "display_name": "Input Types"
              },
              "input_variables_PromptTemplate-iBBGK": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "input_variables",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "value": [
                  "description",
                  "context",
                  "question"
                ],
                "proxy": {
                  "id": "PromptTemplate-PorXG",
                  "field": "input_variables"
                },
                "display_name": "Input Variables"
              },
              "partial_variables_PromptTemplate-iBBGK": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "partial_variables",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "proxy": {
                  "id": "PromptTemplate-PorXG",
                  "field": "partial_variables"
                },
                "display_name": "Partial Variables"
              },
              "template_PromptTemplate-iBBGK": {
                "type": "prompt",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "fileTypes": [],
                "password": false,
                "name": "template",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "value": "Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\n---\n\nInitial description:\n\n{description}\n\nPotentially relevant chunks are displayed below with the \"Context:\" preamble.\n\n{context}\n\nQuestion: {question}\nHelpful Answer:\n",
                "proxy": {
                  "id": "PromptTemplate-PorXG",
                  "field": "template"
                },
                "display_name": "Template"
              },
              "template_format_PromptTemplate-iBBGK": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": "f-string",
                "fileTypes": [],
                "password": false,
                "name": "template_format",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "proxy": {
                  "id": "PromptTemplate-PorXG",
                  "field": "template_format"
                },
                "display_name": "Template Format"
              },
              "validate_template_PromptTemplate-iBBGK": {
                "type": "bool",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": false,
                "fileTypes": [],
                "password": false,
                "name": "validate_template",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "proxy": {
                  "id": "PromptTemplate-PorXG",
                  "field": "validate_template"
                },
                "display_name": "Validate Template"
              },
              "context_PromptTemplate-iBBGK": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "context",
                "display_name": "context",
                "advanced": true,
                "input_types": [
                  "Document",
                  "BaseOutputParser"
                ],
                "dynamic": false,
                "info": "",
                "proxy": {
                  "id": "PromptTemplate-PorXG",
                  "field": "context"
                }
              },
              "question_PromptTemplate-iBBGK": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "question",
                "display_name": "question",
                "advanced": true,
                "input_types": [
                  "Document",
                  "BaseOutputParser"
                ],
                "dynamic": false,
                "info": "",
                "proxy": {
                  "id": "PromptTemplate-PorXG",
                  "field": "question"
                }
              },
              "documents_CustomComponent-GWl0s_PromptRunner-jv3Cb": {
                "type": "Document",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "documents",
                "display_name": "documents",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "proxy": {
                  "id": "PromptRunner-xlWSo",
                  "field": "documents_CustomComponent-GWl0s"
                }
              },
              "code_CustomComponent-GWl0s_PromptRunner-jv3Cb": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": true,
                "value": "from axiestudio import CustomComponent\nfrom axiestudio.field_typing import Document\n\n\nclass Component(CustomComponent):\n    documentation: str = \"http://docs.axiestudio.org/components/custom\"\n\n    def build(self, documents: Document, head:int=3, tail:int=3) -> Document:\n        assert isinstance(documents, list)\n        \n        return documents[:head] + documents[-tail:]\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "display_name": "code",
                "proxy": {
                  "id": "PromptRunner-xlWSo",
                  "field": "code_CustomComponent-GWl0s"
                }
              },
              "head_CustomComponent-GWl0s_PromptRunner-jv3Cb": {
                "type": "int",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "2",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "head",
                "display_name": "head",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "proxy": {
                  "id": "PromptRunner-xlWSo",
                  "field": "head_CustomComponent-GWl0s"
                }
              },
              "tail_CustomComponent-GWl0s_PromptRunner-jv3Cb": {
                "type": "int",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "1",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "tail",
                "display_name": "tail",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "proxy": {
                  "id": "PromptRunner-xlWSo",
                  "field": "tail_CustomComponent-GWl0s"
                }
              },
              "llm_PromptRunner-rASGO_PromptRunner-jv3Cb": {
                "type": "BaseLLM",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "llm",
                "display_name": "Description LLM",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "value": "",
                "proxy": {
                  "id": "PromptRunner-xlWSo",
                  "field": "llm_PromptRunner-rASGO"
                }
              },
              "code_PromptRunner-rASGO_PromptRunner-jv3Cb": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": true,
                "value": "from axiestudio import CustomComponent\n\nfrom langchain.llms.base import BaseLLM\nfrom langchain.prompts import PromptTemplate\nfrom langchain.schema import Document\n\n\nclass PromptRunner(CustomComponent):\n    display_name: str = \"Prompt Runner\"\n    description: str = \"Run a Chain with the given PromptTemplate\"\n    beta: bool = True\n    field_config = {\n        \"llm\": {\"display_name\": \"Description LLM\"},\n        \"prompt\": {\n            \"display_name\": \"Prompt Template\",\n            \"info\": \"Make sure the prompt has all variables filled.\",\n        },\n        \"code\": {\"show\": False},\n    }\n\n    def build(self, llm: BaseLLM, prompt: PromptTemplate) -> Document:\n        chain = prompt | llm\n        # The input is an empty dict because the prompt is already filled\n        result = chain.invoke(input={})\n        if hasattr(result, \"content\"):\n            result = result.content\n        self.repr_value = result\n        return Document(page_content=str(result))\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "proxy": {
                  "id": "PromptRunner-xlWSo",
                  "field": "code_PromptRunner-rASGO"
                },
                "display_name": "Code"
              },
              "output_parser_PromptTemplate-BcjIr_PromptRunner-jv3Cb": {
                "type": "BaseOutputParser",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "output_parser",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "display_name": "output_parser",
                "proxy": {
                  "id": "PromptRunner-xlWSo",
                  "field": "output_parser_PromptTemplate-BcjIr"
                }
              },
              "input_types_PromptTemplate-BcjIr_PromptRunner-jv3Cb": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "input_types",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "display_name": "input_types",
                "proxy": {
                  "id": "PromptRunner-xlWSo",
                  "field": "input_types_PromptTemplate-BcjIr"
                }
              },
              "input_variables_PromptTemplate-BcjIr_PromptRunner-jv3Cb": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "input_variables",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "value": [
                  "head_tail"
                ],
                "display_name": "input_variables",
                "proxy": {
                  "id": "PromptRunner-xlWSo",
                  "field": "input_variables_PromptTemplate-BcjIr"
                }
              },
              "partial_variables_PromptTemplate-BcjIr_PromptRunner-jv3Cb": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "partial_variables",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "display_name": "partial_variables",
                "proxy": {
                  "id": "PromptRunner-xlWSo",
                  "field": "partial_variables_PromptTemplate-BcjIr"
                }
              },
              "template_PromptTemplate-BcjIr_PromptRunner-jv3Cb": {
                "type": "prompt",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "fileTypes": [],
                "password": false,
                "name": "template",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "value": "Below are the head and tail of a document.\n\n---\n\n{head_tail}\n\n---\n\nGiven them, try to create a reasonable description of what this document may be about. If included, specify sources and any metadata available.\n\nGenerated Description:\n",
                "display_name": "template",
                "proxy": {
                  "id": "PromptRunner-xlWSo",
                  "field": "template_PromptTemplate-BcjIr"
                }
              },
              "template_format_PromptTemplate-BcjIr_PromptRunner-jv3Cb": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": "f-string",
                "fileTypes": [],
                "password": false,
                "name": "template_format",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "display_name": "template_format",
                "proxy": {
                  "id": "PromptRunner-xlWSo",
                  "field": "template_format_PromptTemplate-BcjIr"
                }
              },
              "validate_template_PromptTemplate-BcjIr_PromptRunner-jv3Cb": {
                "type": "bool",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": false,
                "fileTypes": [],
                "password": false,
                "name": "validate_template",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "display_name": "validate_template",
                "proxy": {
                  "id": "PromptRunner-xlWSo",
                  "field": "validate_template_PromptTemplate-BcjIr"
                }
              }
            },
            "flow": {
              "data": {
                "nodes": [
                  {
                    "width": 384,
                    "height": 425,
                    "id": "CustomComponent-Ug9Uz",
                    "type": "genericNode",
                    "position": {
                      "x": 2711.800917597132,
                      "y": 188.35859693788262
                    },
                    "data": {
                      "type": "CustomComponent",
                      "node": {
                        "template": {
                          "llm": {
                            "type": "BaseLLM",
                            "required": true,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "llm",
                            "display_name": "Retrieval LLM",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "value": ""
                          },
                          "prompt": {
                            "type": "PromptTemplate",
                            "required": true,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "prompt",
                            "display_name": "prompt",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "value": ""
                          },
                          "vector_store": {
                            "type": "VectorStore",
                            "required": true,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "vector_store",
                            "display_name": "vector_store",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "value": ""
                          },
                          "code": {
                            "type": "code",
                            "required": true,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": true,
                            "value": "from axiestudio import CustomComponent\nfrom axiestudio.field_typing import Data, BaseLLM, PromptTemplate, VectorStore, Chain\nfrom langchain.chains import RetrievalQA\n\n\nclass Component(CustomComponent):\n    documentation: str = \"http://docs.axiestudio.org/components/custom\"\n    \n    def build_config(self):\n        return {\"llm\": {\"display_name\": \"Retrieval LLM\"}}\n\n    def build(self, llm: BaseLLM, prompt: PromptTemplate, vector_store: VectorStore) -> Chain:\n        retrieval_qa = RetrievalQA.from_llm(llm=llm, prompt=prompt, retriever=vector_store.as_retriever())\n        return retrieval_qa",
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "code",
                            "advanced": false,
                            "dynamic": true,
                            "info": ""
                          },
                          "_type": "CustomComponent"
                        },
                        "base_classes": [
                          "Chain"
                        ],
                        "display_name": "RetrievalQA",
                        "documentation": "http://docs.axiestudio.org/components/custom",
                        "custom_fields": {
                          "llm": null,
                          "prompt": null,
                          "vector_store": null
                        },
                        "output_types": [
                          "Chain"
                        ],
                        "field_formatters": {},
                        "beta": true
                      },
                      "id": "CustomComponent-Ug9Uz"
                    },
                    "selected": true,
                    "dragging": false,
                    "positionAbsolute": {
                      "x": 2711.800917597132,
                      "y": 188.35859693788262
                    }
                  },
                  {
                    "width": 384,
                    "height": 563,
                    "id": "PromptTemplate-PorXG",
                    "type": "genericNode",
                    "position": {
                      "x": 2079.717976209867,
                      "y": 193.28869547208728
                    },
                    "data": {
                      "type": "PromptTemplate",
                      "node": {
                        "template": {
                          "output_parser": {
                            "type": "BaseOutputParser",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": false,
                            "multiline": false,
                            "fileTypes": [],
                            "password": false,
                            "name": "output_parser",
                            "advanced": false,
                            "dynamic": true,
                            "info": ""
                          },
                          "input_types": {
                            "type": "dict",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": false,
                            "multiline": false,
                            "fileTypes": [],
                            "password": false,
                            "name": "input_types",
                            "advanced": false,
                            "dynamic": true,
                            "info": ""
                          },
                          "input_variables": {
                            "type": "str",
                            "required": true,
                            "placeholder": "",
                            "list": true,
                            "show": false,
                            "multiline": false,
                            "fileTypes": [],
                            "password": false,
                            "name": "input_variables",
                            "advanced": false,
                            "dynamic": true,
                            "info": "",
                            "value": [
                              "description",
                              "context",
                              "question"
                            ]
                          },
                          "partial_variables": {
                            "type": "dict",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": false,
                            "multiline": false,
                            "fileTypes": [],
                            "password": false,
                            "name": "partial_variables",
                            "advanced": false,
                            "dynamic": true,
                            "info": ""
                          },
                          "template": {
                            "type": "prompt",
                            "required": true,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": true,
                            "fileTypes": [],
                            "password": false,
                            "name": "template",
                            "advanced": false,
                            "dynamic": true,
                            "info": "",
                            "value": "Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\n---\n\nInitial description:\n\n{description}\n\nPotentially relevant chunks are displayed below with the \"Context:\" preamble.\n\n{context}\n\nQuestion: {question}\nHelpful Answer:\n"
                          },
                          "template_format": {
                            "type": "str",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": false,
                            "multiline": false,
                            "value": "f-string",
                            "fileTypes": [],
                            "password": false,
                            "name": "template_format",
                            "advanced": false,
                            "dynamic": true,
                            "info": ""
                          },
                          "validate_template": {
                            "type": "bool",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": false,
                            "multiline": false,
                            "value": false,
                            "fileTypes": [],
                            "password": false,
                            "name": "validate_template",
                            "advanced": false,
                            "dynamic": true,
                            "info": ""
                          },
                          "_type": "PromptTemplate",
                          "context": {
                            "type": "str",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": true,
                            "value": "",
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "context",
                            "display_name": "context",
                            "advanced": false,
                            "input_types": [
                              "Document",
                              "BaseOutputParser"
                            ],
                            "dynamic": false,
                            "info": ""
                          },
                          "question": {
                            "type": "str",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": true,
                            "value": "",
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "question",
                            "display_name": "question",
                            "advanced": false,
                            "input_types": [
                              "Document",
                              "BaseOutputParser"
                            ],
                            "dynamic": false,
                            "info": ""
                          },
                          "description": {
                            "type": "str",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": true,
                            "value": "",
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "description",
                            "display_name": "description",
                            "advanced": false,
                            "input_types": [
                              "Document",
                              "BaseOutputParser"
                            ],
                            "dynamic": false,
                            "info": ""
                          }
                        },
                        "description": "A prompt template for a language model.",
                        "base_classes": [
                          "PromptTemplate",
                          "StringPromptTemplate",
                          "BasePromptTemplate"
                        ],
                        "name": "",
                        "display_name": "PromptTemplate",
                        "documentation": "https://python.langchain.com/docs/modules/model_io/prompts/prompt_templates/",
                        "custom_fields": {
                          "": [
                            "description",
                            "context",
                            "question"
                          ]
                        },
                        "output_types": [],
                        "full_path": null,
                        "field_formatters": {},
                        "beta": false,
                        "error": null
                      },
                      "id": "PromptTemplate-PorXG"
                    },
                    "selected": true,
                    "positionAbsolute": {
                      "x": 2079.717976209867,
                      "y": 193.28869547208728
                    },
                    "dragging": false
                  },
                  {
                    "width": 384,
                    "height": 549,
                    "data": {
                      "id": "PromptRunner-xlWSo",
                      "type": "PromptRunner",
                      "node": {
                        "output_types": [
                          "Document"
                        ],
                        "display_name": "Description Generator",
                        "documentation": "",
                        "base_classes": [
                          "Document"
                        ],
                        "description": "",
                        "template": {
                          "documents_CustomComponent-GWl0s": {
                            "type": "Document",
                            "required": true,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "documents",
                            "display_name": "documents",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "proxy": {
                              "id": "CustomComponent-MfXbb",
                              "field": "documents"
                            }
                          },
                          "code_CustomComponent-GWl0s": {
                            "type": "code",
                            "required": true,
                            "placeholder": "",
                            "list": false,
                            "show": false,
                            "multiline": true,
                            "value": "from axiestudio import CustomComponent\nfrom axiestudio.field_typing import Document\n\n\nclass Component(CustomComponent):\n    documentation: str = \"http://docs.axiestudio.org/components/custom\"\n\n    def build(self, documents: Document, head:int=3, tail:int=3) -> Document:\n        assert isinstance(documents, list)\n        \n        return documents[:head] + documents[-tail:]\n",
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "code",
                            "advanced": false,
                            "dynamic": true,
                            "info": "",
                            "display_name": "code",
                            "proxy": {
                              "id": "CustomComponent-MfXbb",
                              "field": "code"
                            }
                          },
                          "head_CustomComponent-GWl0s": {
                            "type": "int",
                            "required": true,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "value": "1",
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "head",
                            "display_name": "head",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "proxy": {
                              "id": "CustomComponent-MfXbb",
                              "field": "head"
                            }
                          },
                          "tail_CustomComponent-GWl0s": {
                            "type": "int",
                            "required": true,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "value": "1",
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "tail",
                            "display_name": "tail",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "proxy": {
                              "id": "CustomComponent-MfXbb",
                              "field": "tail"
                            }
                          },
                          "llm_PromptRunner-rASGO": {
                            "type": "BaseLLM",
                            "required": true,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": false,
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "llm",
                            "display_name": "Description LLM",
                            "advanced": false,
                            "dynamic": false,
                            "info": "",
                            "value": "",
                            "proxy": {
                              "id": "PromptRunner-8HGQU",
                              "field": "llm"
                            }
                          },
                          "code_PromptRunner-rASGO": {
                            "type": "code",
                            "required": true,
                            "placeholder": "",
                            "list": false,
                            "show": false,
                            "multiline": true,
                            "value": "from axiestudio import CustomComponent\n\nfrom langchain.llms.base import BaseLLM\nfrom langchain.prompts import PromptTemplate\nfrom langchain.schema import Document\n\n\nclass PromptRunner(CustomComponent):\n    display_name: str = \"Prompt Runner\"\n    description: str = \"Run a Chain with the given PromptTemplate\"\n    beta: bool = True\n    field_config = {\n        \"llm\": {\"display_name\": \"Description LLM\"},\n        \"prompt\": {\n            \"display_name\": \"Prompt Template\",\n            \"info\": \"Make sure the prompt has all variables filled.\",\n        },\n        \"code\": {\"show\": False},\n    }\n\n    def build(self, llm: BaseLLM, prompt: PromptTemplate) -> Document:\n        chain = prompt | llm\n        # The input is an empty dict because the prompt is already filled\n        result = chain.invoke(input={})\n        if hasattr(result, \"content\"):\n            result = result.content\n        self.repr_value = result\n        return Document(page_content=str(result))\n",
                            "fileTypes": [],
                            "file_path": "",
                            "password": false,
                            "name": "code",
                            "advanced": false,
                            "dynamic": true,
                            "info": "",
                            "proxy": {
                              "id": "PromptRunner-8HGQU",
                              "field": "code"
                            },
                            "display_name": "Code"
                          },
                          "output_parser_PromptTemplate-BcjIr": {
                            "type": "BaseOutputParser",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": false,
                            "multiline": false,
                            "fileTypes": [],
                            "password": false,
                            "name": "output_parser",
                            "advanced": false,
                            "dynamic": true,
                            "info": "",
                            "display_name": "output_parser",
                            "proxy": {
                              "id": "PromptTemplate-8fslP",
                              "field": "output_parser"
                            }
                          },
                          "input_types_PromptTemplate-BcjIr": {
                            "type": "dict",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": false,
                            "multiline": false,
                            "fileTypes": [],
                            "password": false,
                            "name": "input_types",
                            "advanced": true,
                            "dynamic": true,
                            "info": "",
                            "display_name": "input_types",
                            "proxy": {
                              "id": "PromptTemplate-8fslP",
                              "field": "input_types"
                            }
                          },
                          "input_variables_PromptTemplate-BcjIr": {
                            "type": "str",
                            "required": true,
                            "placeholder": "",
                            "list": true,
                            "show": false,
                            "multiline": false,
                            "fileTypes": [],
                            "password": false,
                            "name": "input_variables",
                            "advanced": false,
                            "dynamic": true,
                            "info": "",
                            "value": [
                              "head_tail"
                            ],
                            "display_name": "input_variables",
                            "proxy": {
                              "id": "PromptTemplate-8fslP",
                              "field": "input_variables"
                            }
                          },
                          "partial_variables_PromptTemplate-BcjIr": {
                            "type": "dict",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": false,
                            "multiline": false,
                            "fileTypes": [],
                            "password": false,
                            "name": "partial_variables",
                            "advanced": true,
                            "dynamic": true,
                            "info": "",
                            "display_name": "partial_variables",
                            "proxy": {
                              "id": "PromptTemplate-8fslP",
                              "field": "partial_variables"
                            }
                          },
                          "template_PromptTemplate-BcjIr": {
                            "type": "prompt",
                            "required": true,
                            "placeholder": "",
                            "list": false,
                            "show": true,
                            "multiline": true,
                            "fileTypes": [],
                            "password": false,
                            "name": "template",
                            "advanced": false,
                            "dynamic": true,
                            "info": "",
                            "value": "Below are the head and tail of a document.\n\n---\n\n{head_tail}\n\n---\n\nGiven them, try to create a reasonable description of what this document may be about. If included, specify sources and any metadata available.\n\nGenerated Description:\n",
                            "display_name": "template",
                            "proxy": {
                              "id": "PromptTemplate-8fslP",
                              "field": "template"
                            }
                          },
                          "template_format_PromptTemplate-BcjIr": {
                            "type": "str",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": false,
                            "multiline": false,
                            "value": "f-string",
                            "fileTypes": [],
                            "password": false,
                            "name": "template_format",
                            "advanced": true,
                            "dynamic": true,
                            "info": "",
                            "display_name": "template_format",
                            "proxy": {
                              "id": "PromptTemplate-8fslP",
                              "field": "template_format"
                            }
                          },
                          "validate_template_PromptTemplate-BcjIr": {
                            "type": "bool",
                            "required": false,
                            "placeholder": "",
                            "list": false,
                            "show": false,
                            "multiline": false,
                            "value": false,
                            "fileTypes": [],
                            "password": false,
                            "name": "validate_template",
                            "advanced": true,
                            "dynamic": true,
                            "info": "",
                            "display_name": "validate_template",
                            "proxy": {
                              "id": "PromptTemplate-8fslP",
                              "field": "validate_template"
                            }
                          }
                        },
                        "flow": {
                          "data": {
                            "nodes": [
                              {
                                "width": 384,
                                "height": 501,
                                "id": "CustomComponent-MfXbb",
                                "type": "genericNode",
                                "position": {
                                  "x": 454.7849475910324,
                                  "y": -26.431343500727564
                                },
                                "data": {
                                  "type": "CustomComponent",
                                  "node": {
                                    "template": {
                                      "documents": {
                                        "type": "Document",
                                        "required": true,
                                        "placeholder": "",
                                        "list": false,
                                        "show": true,
                                        "multiline": false,
                                        "fileTypes": [],
                                        "file_path": "",
                                        "password": false,
                                        "name": "documents",
                                        "display_name": "documents",
                                        "advanced": false,
                                        "dynamic": false,
                                        "info": ""
                                      },
                                      "code": {
                                        "type": "code",
                                        "required": true,
                                        "placeholder": "",
                                        "list": false,
                                        "show": true,
                                        "multiline": true,
                                        "value": "from axiestudio import CustomComponent\nfrom axiestudio.field_typing import Document\n\n\nclass Component(CustomComponent):\n    documentation: str = \"http://docs.axiestudio.org/components/custom\"\n\n    def build(self, documents: Document, head:int=3, tail:int=3) -> Document:\n        assert isinstance(documents, list)\n        \n        return documents[:head] + documents[-tail:]\n",
                                        "fileTypes": [],
                                        "file_path": "",
                                        "password": false,
                                        "name": "code",
                                        "advanced": false,
                                        "dynamic": true,
                                        "info": "",
                                        "display_name": "code"
                                      },
                                      "head": {
                                        "type": "int",
                                        "required": true,
                                        "placeholder": "",
                                        "list": false,
                                        "show": true,
                                        "multiline": false,
                                        "value": "1",
                                        "fileTypes": [],
                                        "file_path": "",
                                        "password": false,
                                        "name": "head",
                                        "display_name": "head",
                                        "advanced": false,
                                        "dynamic": false,
                                        "info": ""
                                      },
                                      "tail": {
                                        "type": "int",
                                        "required": true,
                                        "placeholder": "",
                                        "list": false,
                                        "show": true,
                                        "multiline": false,
                                        "value": "1",
                                        "fileTypes": [],
                                        "file_path": "",
                                        "password": false,
                                        "name": "tail",
                                        "display_name": "tail",
                                        "advanced": false,
                                        "dynamic": false,
                                        "info": ""
                                      },
                                      "_type": "CustomComponent"
                                    },
                                    "base_classes": [
                                      "Document"
                                    ],
                                    "display_name": "Truncate Documents",
                                    "documentation": "http://docs.axiestudio.org/components/custom",
                                    "custom_fields": {
                                      "documents": null,
                                      "head": null,
                                      "tail": null
                                    },
                                    "output_types": [
                                      "Document"
                                    ],
                                    "field_formatters": {},
                                    "beta": true,
                                    "description": "Extract the head and tail from a list of documents."
                                  },
                                  "id": "CustomComponent-MfXbb"
                                },
                                "selected": true,
                                "dragging": false,
                                "positionAbsolute": {
                                  "x": 454.7849475910324,
                                  "y": -26.431343500727564
                                }
                              },
                              {
                                "width": 384,
                                "height": 377,
                                "id": "PromptRunner-8HGQU",
                                "type": "genericNode",
                                "position": {
                                  "x": 1568.8588816959511,
                                  "y": 80.24950204653985
                                },
                                "data": {
                                  "type": "PromptRunner",
                                  "node": {
                                    "template": {
                                      "llm": {
                                        "type": "BaseLLM",
                                        "required": true,
                                        "placeholder": "",
                                        "list": false,
                                        "show": true,
                                        "multiline": false,
                                        "fileTypes": [],
                                        "file_path": "",
                                        "password": false,
                                        "name": "llm",
                                        "display_name": "Description LLM",
                                        "advanced": false,
                                        "dynamic": false,
                                        "info": "",
                                        "value": ""
                                      },
                                      "prompt": {
                                        "type": "PromptTemplate",
                                        "required": true,
                                        "placeholder": "",
                                        "list": false,
                                        "show": true,
                                        "multiline": false,
                                        "fileTypes": [],
                                        "file_path": "",
                                        "password": false,
                                        "name": "prompt",
                                        "display_name": "Prompt Template",
                                        "advanced": false,
                                        "dynamic": false,
                                        "info": "Make sure the prompt has all variables filled.",
                                        "value": ""
                                      },
                                      "code": {
                                        "type": "code",
                                        "required": true,
                                        "placeholder": "",
                                        "list": false,
                                        "show": true,
                                        "multiline": true,
                                        "value": "from axiestudio import CustomComponent\n\nfrom langchain.llms.base import BaseLLM\nfrom langchain.prompts import PromptTemplate\nfrom langchain.schema import Document\n\n\nclass PromptRunner(CustomComponent):\n    display_name: str = \"Prompt Runner\"\n    description: str = \"Run a Chain with the given PromptTemplate\"\n    beta: bool = True\n    field_config = {\n        \"llm\": {\"display_name\": \"Description LLM\"},\n        \"prompt\": {\n            \"display_name\": \"Prompt Template\",\n            \"info\": \"Make sure the prompt has all variables filled.\",\n        },\n        \"code\": {\"show\": False},\n    }\n\n    def build(self, llm: BaseLLM, prompt: PromptTemplate) -> Document:\n        chain = prompt | llm\n        # The input is an empty dict because the prompt is already filled\n        result = chain.invoke(input={})\n        if hasattr(result, \"content\"):\n            result = result.content\n        self.repr_value = result\n        return Document(page_content=str(result))\n",
                                        "fileTypes": [],
                                        "file_path": "",
                                        "password": false,
                                        "name": "code",
                                        "advanced": false,
                                        "dynamic": true,
                                        "info": ""
                                      },
                                      "_type": "CustomComponent"
                                    },
                                    "description": "Run a Chain with the given PromptTemplate",
                                    "base_classes": [
                                      "Document"
                                    ],
                                    "display_name": "Prompt Runner",
                                    "documentation": "",
                                    "custom_fields": {
                                      "llm": null,
                                      "prompt": null
                                    },
                                    "output_types": [
                                      "Document"
                                    ],
                                    "field_formatters": {},
                                    "beta": true
                                  },
                                  "id": "PromptRunner-8HGQU"
                                },
                                "selected": true,
                                "positionAbsolute": {
                                  "x": 1568.8588816959511,
                                  "y": 80.24950204653985
                                },
                                "dragging": false
                              },
                              {
                                "width": 384,
                                "height": 375,
                                "id": "PromptTemplate-8fslP",
                                "type": "genericNode",
                                "position": {
                                  "x": 989.2882417344424,
                                  "y": -34.88063446874622
                                },
                                "data": {
                                  "type": "PromptTemplate",
                                  "node": {
                                    "template": {
                                      "output_parser": {
                                        "type": "BaseOutputParser",
                                        "required": false,
                                        "placeholder": "",
                                        "list": false,
                                        "show": false,
                                        "multiline": false,
                                        "fileTypes": [],
                                        "password": false,
                                        "name": "output_parser",
                                        "advanced": false,
                                        "dynamic": true,
                                        "info": "",
                                        "display_name": "output_parser"
                                      },
                                      "input_types": {
                                        "type": "dict",
                                        "required": false,
                                        "placeholder": "",
                                        "list": false,
                                        "show": false,
                                        "multiline": false,
                                        "fileTypes": [],
                                        "password": false,
                                        "name": "input_types",
                                        "advanced": false,
                                        "dynamic": true,
                                        "info": "",
                                        "display_name": "input_types"
                                      },
                                      "input_variables": {
                                        "type": "str",
                                        "required": true,
                                        "placeholder": "",
                                        "list": true,
                                        "show": false,
                                        "multiline": false,
                                        "fileTypes": [],
                                        "password": false,
                                        "name": "input_variables",
                                        "advanced": false,
                                        "dynamic": true,
                                        "info": "",
                                        "value": [
                                          "head_tail"
                                        ],
                                        "display_name": "input_variables"
                                      },
                                      "partial_variables": {
                                        "type": "dict",
                                        "required": false,
                                        "placeholder": "",
                                        "list": false,
                                        "show": false,
                                        "multiline": false,
                                        "fileTypes": [],
                                        "password": false,
                                        "name": "partial_variables",
                                        "advanced": false,
                                        "dynamic": true,
                                        "info": "",
                                        "display_name": "partial_variables"
                                      },
                                      "template": {
                                        "type": "prompt",
                                        "required": true,
                                        "placeholder": "",
                                        "list": false,
                                        "show": true,
                                        "multiline": true,
                                        "fileTypes": [],
                                        "password": false,
                                        "name": "template",
                                        "advanced": false,
                                        "dynamic": true,
                                        "info": "",
                                        "value": "Below are the head and tail of a document.\n\n---\n\n{head_tail}\n\n---\n\nGiven them, try to create a reasonable description of what this document may be about. If included, specify sources and any metadata available.\n\nGenerated Description:\n",
                                        "display_name": "template"
                                      },
                                      "template_format": {
                                        "type": "str",
                                        "required": false,
                                        "placeholder": "",
                                        "list": false,
                                        "show": false,
                                        "multiline": false,
                                        "value": "f-string",
                                        "fileTypes": [],
                                        "password": false,
                                        "name": "template_format",
                                        "advanced": false,
                                        "dynamic": true,
                                        "info": "",
                                        "display_name": "template_format"
                                      },
                                      "validate_template": {
                                        "type": "bool",
                                        "required": false,
                                        "placeholder": "",
                                        "list": false,
                                        "show": false,
                                        "multiline": false,
                                        "value": false,
                                        "fileTypes": [],
                                        "password": false,
                                        "name": "validate_template",
                                        "advanced": false,
                                        "dynamic": true,
                                        "info": "",
                                        "display_name": "validate_template"
                                      },
                                      "_type": "PromptTemplate",
                                      "head_tail": {
                                        "type": "str",
                                        "required": false,
                                        "placeholder": "",
                                        "list": false,
                                        "show": true,
                                        "multiline": true,
                                        "value": "",
                                        "fileTypes": [],
                                        "file_path": "",
                                        "password": false,
                                        "name": "head_tail",
                                        "display_name": "head_tail",
                                        "advanced": false,
                                        "input_types": [
                                          "Document",
                                          "BaseOutputParser"
                                        ],
                                        "dynamic": false,
                                        "info": ""
                                      }
                                    },
                                    "description": "A prompt template for a language model.",
                                    "base_classes": [
                                      "PromptTemplate",
                                      "StringPromptTemplate",
                                      "BasePromptTemplate"
                                    ],
                                    "name": "",
                                    "display_name": "PromptTemplate",
                                    "documentation": "https://python.langchain.com/docs/modules/model_io/prompts/prompt_templates/",
                                    "custom_fields": {
                                      "": [
                                        "head_tail"
                                      ]
                                    },
                                    "output_types": [],
                                    "full_path": null,
                                    "field_formatters": {},
                                    "beta": false,
                                    "error": null
                                  },
                                  "id": "PromptTemplate-8fslP"
                                },
                                "selected": true,
                                "dragging": false,
                                "positionAbsolute": {
                                  "x": 989.2882417344424,
                                  "y": -34.88063446874622
                                }
                              }
                            ],
                            "edges": [
                              {
                                "source": "PromptTemplate-8fslP",
                                "sourceHandle": "{œbaseClassesœ:[œPromptTemplateœ,œStringPromptTemplateœ,œBasePromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-8fslPœ}",
                                "target": "PromptRunner-8HGQU",
                                "targetHandle": "{œfieldNameœ:œpromptœ,œidœ:œPromptRunner-8HGQUœ,œinputTypesœ:null,œtypeœ:œPromptTemplateœ}",
                                "data": {
                                  "targetHandle": {
                                    "fieldName": "prompt",
                                    "id": "PromptRunner-8HGQU",
                                    "inputTypes": null,
                                    "type": "PromptTemplate"
                                  },
                                  "sourceHandle": {
                                    "baseClasses": [
                                      "PromptTemplate",
                                      "StringPromptTemplate",
                                      "BasePromptTemplate"
                                    ],
                                    "dataType": "PromptTemplate",
                                    "id": "PromptTemplate-8fslP"
                                  }
                                },
                                "style": {
                                  "stroke": "#555"
                                },
                                "className": "stroke-gray-900  stroke-connection",
                                "animated": false,
                                "id": "reactflow__edge-PromptTemplate-8fslP{œbaseClassesœ:[œPromptTemplateœ,œStringPromptTemplateœ,œBasePromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-8fslPœ}-PromptRunner-8HGQU{œfieldNameœ:œpromptœ,œidœ:œPromptRunner-8HGQUœ,œinputTypesœ:null,œtypeœ:œPromptTemplateœ}",
                                "selected": true
                              },
                              {
                                "source": "CustomComponent-MfXbb",
                                "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-MfXbbœ}",
                                "target": "PromptTemplate-8fslP",
                                "targetHandle": "{œfieldNameœ:œhead_tailœ,œidœ:œPromptTemplate-8fslPœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}",
                                "data": {
                                  "targetHandle": {
                                    "fieldName": "head_tail",
                                    "id": "PromptTemplate-8fslP",
                                    "inputTypes": [
                                      "Document",
                                      "BaseOutputParser"
                                    ],
                                    "type": "str"
                                  },
                                  "sourceHandle": {
                                    "baseClasses": [
                                      "Document"
                                    ],
                                    "dataType": "CustomComponent",
                                    "id": "CustomComponent-MfXbb"
                                  }
                                },
                                "style": {
                                  "stroke": "#555"
                                },
                                "className": "stroke-gray-900  stroke-connection",
                                "animated": false,
                                "id": "reactflow__edge-CustomComponent-MfXbb{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-MfXbbœ}-PromptTemplate-8fslP{œfieldNameœ:œhead_tailœ,œidœ:œPromptTemplate-8fslPœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}",
                                "selected": true
                              }
                            ],
                            "viewport": {
                              "x": -60.306605278449524,
                              "y": 167.32589572887738,
                              "zoom": 0.4019524404621551
                            }
                          },
                          "is_component": false,
                          "name": "Funky Euler",
                          "description": "",
                          "id": "fphvI"
                        }
                      }
                    },
                    "id": "PromptRunner-xlWSo",
                    "position": {
                      "x": 1459.3101583446833,
                      "y": 61.75361967326023
                    },
                    "type": "genericNode",
                    "selected": true,
                    "dragging": false,
                    "positionAbsolute": {
                      "x": 1459.3101583446833,
                      "y": 61.75361967326023
                    }
                  }
                ],
                "edges": [
                  {
                    "source": "PromptTemplate-PorXG",
                    "sourceHandle": "{œbaseClassesœ:[œPromptTemplateœ,œStringPromptTemplateœ,œBasePromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-PorXGœ}",
                    "target": "CustomComponent-Ug9Uz",
                    "targetHandle": "{œfieldNameœ:œpromptœ,œidœ:œCustomComponent-Ug9Uzœ,œinputTypesœ:null,œtypeœ:œPromptTemplateœ}",
                    "data": {
                      "targetHandle": {
                        "fieldName": "prompt",
                        "id": "CustomComponent-Ug9Uz",
                        "inputTypes": null,
                        "type": "PromptTemplate"
                      },
                      "sourceHandle": {
                        "baseClasses": [
                          "PromptTemplate",
                          "StringPromptTemplate",
                          "BasePromptTemplate"
                        ],
                        "dataType": "PromptTemplate",
                        "id": "PromptTemplate-PorXG"
                      }
                    },
                    "style": {
                      "stroke": "#555"
                    },
                    "className": "stroke-gray-900  stroke-connection",
                    "animated": false,
                    "id": "reactflow__edge-PromptTemplate-PorXG{œbaseClassesœ:[œPromptTemplateœ,œStringPromptTemplateœ,œBasePromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-PorXGœ}-CustomComponent-Ug9Uz{œfieldNameœ:œpromptœ,œidœ:œCustomComponent-Ug9Uzœ,œinputTypesœ:null,œtypeœ:œPromptTemplateœ}",
                    "selected": true
                  },
                  {
                    "source": "PromptRunner-xlWSo",
                    "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œPromptRunnerœ,œidœ:œPromptRunner-xlWSoœ}",
                    "target": "PromptTemplate-PorXG",
                    "targetHandle": "{œfieldNameœ:œdescriptionœ,œidœ:œPromptTemplate-PorXGœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}",
                    "data": {
                      "targetHandle": {
                        "fieldName": "description",
                        "id": "PromptTemplate-PorXG",
                        "inputTypes": [
                          "Document",
                          "BaseOutputParser"
                        ],
                        "type": "str"
                      },
                      "sourceHandle": {
                        "baseClasses": [
                          "Document"
                        ],
                        "dataType": "PromptRunner",
                        "id": "PromptRunner-xlWSo"
                      }
                    },
                    "style": {
                      "stroke": "#555"
                    },
                    "className": "stroke-foreground  stroke-connection",
                    "animated": false,
                    "id": "reactflow__edge-PromptRunner-xlWSo{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œPromptRunnerœ,œidœ:œPromptRunner-xlWSoœ}-PromptTemplate-PorXG{œfieldNameœ:œdescriptionœ,œidœ:œPromptTemplate-PorXGœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}",
                    "selected": true
                  }
                ],
                "viewport": {
                  "x": -168.33144778764927,
                  "y": 154.1876446808816,
                  "zoom": 0.40028423858995177
                }
              },
              "is_component": false,
              "name": "Peppy Yonath",
              "description": "",
              "id": "1QzNQ"
            }
          }
        },
        "id": "CustomComponent-9gFUc",
        "position": {
          "x": 2164.0618366534,
          "y": 117.44768008031713
        },
        "type": "genericNode",
        "selected": false,
        "dragging": false,
        "positionAbsolute": {
          "x": 2164.0618366534,
          "y": 117.44768008031713
        }
      },
      {
        "width": 384,
        "height": 559,
        "id": "ChatOpenAI-ZHndq",
        "type": "genericNode",
        "position": {
          "x": 1556.5799430567931,
          "y": -380.16246228972193
        },
        "data": {
          "type": "ChatOpenAI",
          "node": {
            "template": {
              "callbacks": {
                "type": "langchain_core.callbacks.base.BaseCallbackHandler",
                "required": false,
                "placeholder": "",
                "list": true,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "callbacks",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "async_client": {
                "type": "Any",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "async_client",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "cache": {
                "type": "bool",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "cache",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "client": {
                "type": "Any",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "client",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "default_headers": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "default_headers",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "default_query": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "default_query",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "http_client": {
                "type": "Any",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "http_client",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "max_retries": {
                "type": "int",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": 2,
                "fileTypes": [],
                "password": false,
                "name": "max_retries",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "max_tokens": {
                "type": "int",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "password": true,
                "name": "max_tokens",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "value": ""
              },
              "metadata": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "metadata",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "model_kwargs": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "model_kwargs",
                "advanced": true,
                "dynamic": false,
                "info": ""
              },
              "model_name": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "gpt-4-1106-preview",
                "fileTypes": [],
                "password": false,
                "options": [
                  "gpt-4-1106-preview",
                  "gpt-4-vision-preview",
                  "gpt-4",
                  "gpt-4-32k",
                  "gpt-3.5-turbo",
                  "gpt-3.5-turbo-16k"
                ],
                "name": "model_name",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "n": {
                "type": "int",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": 1,
                "fileTypes": [],
                "password": false,
                "name": "n",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "openai_api_base": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "openai_api_base",
                "display_name": "OpenAI API Base",
                "advanced": true,
                "dynamic": false,
                "info": "\nThe base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.\n"
              },
              "openai_api_key": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "",
                "fileTypes": [],
                "password": true,
                "name": "openai_api_key",
                "display_name": "OpenAI API Key",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "openai_organization": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "openai_organization",
                "display_name": "OpenAI Organization",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "openai_proxy": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "openai_proxy",
                "display_name": "OpenAI Proxy",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "request_timeout": {
                "type": "float",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "request_timeout",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "rangeSpec": {
                  "min": -1,
                  "max": 1,
                  "step": 0.1
                }
              },
              "streaming": {
                "type": "bool",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": false,
                "fileTypes": [],
                "password": false,
                "name": "streaming",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "tags": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": true,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "tags",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "temperature": {
                "type": "float",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "0.1",
                "fileTypes": [],
                "password": false,
                "name": "temperature",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "rangeSpec": {
                  "min": -1,
                  "max": 1,
                  "step": 0.1
                }
              },
              "tiktoken_model_name": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "tiktoken_model_name",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "verbose": {
                "type": "bool",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": false,
                "fileTypes": [],
                "password": false,
                "name": "verbose",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "_type": "ChatOpenAI"
            },
            "description": "`OpenAI` Chat large language models API.",
            "base_classes": [
              "BaseLanguageModel",
              "ChatOpenAI",
              "BaseChatModel",
              "BaseLLM"
            ],
            "display_name": "ChatOpenAI",
            "documentation": "https://python.langchain.com/docs/modules/model_io/models/chat/integrations/openai",
            "custom_fields": {},
            "output_types": [],
            "field_formatters": {},
            "beta": false,
            "outputs": [
              {
                "types": [],
                "name": "",
                "display_name": "",
                "hidden": false
              }
            ]
          },
          "id": "ChatOpenAI-ZHndq"
        },
        "selected": false,
        "positionAbsolute": {
          "x": 1556.5799430567931,
          "y": -380.16246228972193
        },
        "dragging": false
      }
    ],
    "edges": [
      {
        "source": "OpenAIEmbeddings-KXHTX",
        "target": "Chroma-nvZ2S",
        "sourceHandle": "{œdataTypeœ:œOpenAIEmbeddingsœ,œidœ:œOpenAIEmbeddings-KXHTXœ,œnameœ:œœ,œoutput_typesœ:[null]}",
        "targetHandle": "{œfieldNameœ:œembeddingœ,œidœ:œChroma-nvZ2Sœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}",
        "id": "reactflow__edge-OpenAIEmbeddings-KXHTX{œdataTypeœ:œOpenAIEmbeddingsœ,œidœ:œOpenAIEmbeddings-KXHTXœ,œnameœ:œœ,œoutput_typesœ:[null]}-Chroma-nvZ2S{œfieldNameœ:œembeddingœ,œidœ:œChroma-nvZ2Sœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}",
        "data": {
          "targetHandle": {
            "fieldName": "embedding",
            "id": "Chroma-nvZ2S",
            "inputTypes": null,
            "type": "Embeddings"
          },
          "sourceHandle": {
            "dataType": "OpenAIEmbeddings",
            "id": "OpenAIEmbeddings-KXHTX",
            "name": "",
            "output_types": [
              null
            ]
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "",
        "animated": false,
        "selected": false
      },
      {
        "source": "CustomComponent-20MV3",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-20MV3œ,œnameœ:œDocumentœ,œoutput_typesœ:[œDocumentœ]}",
        "target": "CharacterTextSplitter-uztx1",
        "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œCharacterTextSplitter-uztx1œ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
        "data": {
          "targetHandle": {
            "fieldName": "documents",
            "id": "CharacterTextSplitter-uztx1",
            "inputTypes": null,
            "type": "Document"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-20MV3",
            "name": "Document",
            "output_types": [
              "Document"
            ]
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "",
        "animated": false,
        "id": "reactflow__edge-CustomComponent-20MV3{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-20MV3œ,œnameœ:œDocumentœ,œoutput_typesœ:[œDocumentœ]}-CharacterTextSplitter-uztx1{œfieldNameœ:œdocumentsœ,œidœ:œCharacterTextSplitter-uztx1œ,œinputTypesœ:null,œtypeœ:œDocumentœ}"
      },
      {
        "source": "CharacterTextSplitter-uztx1",
        "sourceHandle": "{œdataTypeœ:œCharacterTextSplitterœ,œidœ:œCharacterTextSplitter-uztx1œ,œnameœ:œDocumentœ,œoutput_typesœ:[œDocumentœ]}",
        "target": "Chroma-nvZ2S",
        "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œChroma-nvZ2Sœ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
        "data": {
          "targetHandle": {
            "fieldName": "documents",
            "id": "Chroma-nvZ2S",
            "inputTypes": null,
            "type": "Document"
          },
          "sourceHandle": {
            "dataType": "CharacterTextSplitter",
            "id": "CharacterTextSplitter-uztx1",
            "name": "Document",
            "output_types": [
              "Document"
            ]
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "",
        "animated": false,
        "id": "reactflow__edge-CharacterTextSplitter-uztx1{œdataTypeœ:œCharacterTextSplitterœ,œidœ:œCharacterTextSplitter-uztx1œ,œnameœ:œDocumentœ,œoutput_typesœ:[œDocumentœ]}-Chroma-nvZ2S{œfieldNameœ:œdocumentsœ,œidœ:œChroma-nvZ2Sœ,œinputTypesœ:null,œtypeœ:œDocumentœ}"
      },
      {
        "source": "ChatOpenAI-xGCiM",
        "sourceHandle": "{œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-xGCiMœ,œnameœ:œœ,œoutput_typesœ:[null]}",
        "target": "CustomComponent-9gFUc",
        "targetHandle": "{œfieldNameœ:œllm_PromptRunner-rASGO_PromptRunner-jv3Cbœ,œidœ:œCustomComponent-9gFUcœ,œinputTypesœ:null,œproxyœ:{œfieldœ:œllm_PromptRunner-rASGOœ,œidœ:œPromptRunner-xlWSoœ},œtypeœ:œBaseLLMœ}",
        "data": {
          "targetHandle": {
            "fieldName": "llm_PromptRunner-rASGO_PromptRunner-jv3Cb",
            "id": "CustomComponent-9gFUc",
            "inputTypes": null,
            "proxy": {
              "field": "llm_PromptRunner-rASGO",
              "id": "PromptRunner-xlWSo"
            },
            "type": "BaseLLM"
          },
          "sourceHandle": {
            "dataType": "ChatOpenAI",
            "id": "ChatOpenAI-xGCiM",
            "name": "",
            "output_types": [
              null
            ]
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "",
        "animated": false,
        "id": "reactflow__edge-ChatOpenAI-xGCiM{œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-xGCiMœ,œnameœ:œœ,œoutput_typesœ:[null]}-CustomComponent-9gFUc{œfieldNameœ:œllm_PromptRunner-rASGO_PromptRunner-jv3Cbœ,œidœ:œCustomComponent-9gFUcœ,œinputTypesœ:null,œproxyœ:{œfieldœ:œllm_PromptRunner-rASGOœ,œidœ:œPromptRunner-jv3Cbœ},œtypeœ:œBaseLLMœ}"
      },
      {
        "source": "ChatOpenAI-ZHndq",
        "sourceHandle": "{œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-ZHndqœ,œnameœ:œœ,œoutput_typesœ:[null]}",
        "target": "CustomComponent-9gFUc",
        "targetHandle": "{œfieldNameœ:œllm_CustomComponent-63aa3œ,œidœ:œCustomComponent-9gFUcœ,œinputTypesœ:null,œproxyœ:{œfieldœ:œllmœ,œidœ:œCustomComponent-Ug9Uzœ},œtypeœ:œBaseLLMœ}",
        "data": {
          "targetHandle": {
            "fieldName": "llm_CustomComponent-63aa3",
            "id": "CustomComponent-9gFUc",
            "inputTypes": null,
            "proxy": {
              "field": "llm",
              "id": "CustomComponent-Ug9Uz"
            },
            "type": "BaseLLM"
          },
          "sourceHandle": {
            "dataType": "ChatOpenAI",
            "id": "ChatOpenAI-ZHndq",
            "name": "",
            "output_types": [
              null
            ]
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "",
        "animated": false,
        "id": "reactflow__edge-ChatOpenAI-ZHndq{œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-ZHndqœ,œnameœ:œœ,œoutput_typesœ:[null]}-CustomComponent-9gFUc{œfieldNameœ:œllm_CustomComponent-63aa3œ,œidœ:œCustomComponent-9gFUcœ,œinputTypesœ:null,œproxyœ:{œfieldœ:œllmœ,œidœ:œCustomComponent-63aa3œ},œtypeœ:œBaseLLMœ}"
      },
      {
        "source": "CharacterTextSplitter-uztx1",
        "sourceHandle": "{œdataTypeœ:œCharacterTextSplitterœ,œidœ:œCharacterTextSplitter-uztx1œ,œnameœ:œDocumentœ,œoutput_typesœ:[œDocumentœ]}",
        "target": "CustomComponent-9gFUc",
        "targetHandle": "{œfieldNameœ:œdocuments_CustomComponent-GWl0s_PromptRunner-jv3Cbœ,œidœ:œCustomComponent-9gFUcœ,œinputTypesœ:null,œproxyœ:{œfieldœ:œdocuments_CustomComponent-GWl0sœ,œidœ:œPromptRunner-xlWSoœ},œtypeœ:œDocumentœ}",
        "data": {
          "targetHandle": {
            "fieldName": "documents_CustomComponent-GWl0s_PromptRunner-jv3Cb",
            "id": "CustomComponent-9gFUc",
            "inputTypes": null,
            "proxy": {
              "field": "documents_CustomComponent-GWl0s",
              "id": "PromptRunner-xlWSo"
            },
            "type": "Document"
          },
          "sourceHandle": {
            "dataType": "CharacterTextSplitter",
            "id": "CharacterTextSplitter-uztx1",
            "name": "Document",
            "output_types": [
              "Document"
            ]
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "",
        "animated": false,
        "id": "reactflow__edge-CharacterTextSplitter-uztx1{œdataTypeœ:œCharacterTextSplitterœ,œidœ:œCharacterTextSplitter-uztx1œ,œnameœ:œDocumentœ,œoutput_typesœ:[œDocumentœ]}-CustomComponent-9gFUc{œfieldNameœ:œdocuments_CustomComponent-GWl0s_PromptRunner-jv3Cbœ,œidœ:œCustomComponent-9gFUcœ,œinputTypesœ:null,œproxyœ:{œfieldœ:œdocuments_CustomComponent-GWl0sœ,œidœ:œPromptRunner-jv3Cbœ},œtypeœ:œDocumentœ}"
      }
    ],
    "viewport": {
      "x": 249.17558233066723,
      "y": 227.865224491226,
      "zoom": 0.19614602447418747
    }
  },
  "metadata": {
    "Chroma": {
      "count": 1
    },
    "CustomComponent": {
      "count": 2
    },
    "OpenAIEmbeddings": {
      "count": 1
    },
    "CharacterTextSplitter": {
      "count": 1
    },
    "ChatOpenAI": {
      "count": 2
    },
    "total": 7
  },
  "original": {
    "id": "b2652ef5-0635-45d5-b808-39cab58c353a",
    "name": "Auto-Descriptive QA",
    "description": "A modified version of the Extra-Context QA that automatically generates a description for the document.",
    "is_component": false,
    "liked_by_count": "1",
    "downloads_count": "20",
    "metadata": {
      "Chroma": {
        "count": 1
      },
      "CustomComponent": {
        "count": 2
      },
      "OpenAIEmbeddings": {
        "count": 1
      },
      "CharacterTextSplitter": {
        "count": 1
      },
      "ChatOpenAI": {
        "count": 2
      },
      "total": 7
    },
    "last_tested_version": "1.0.7",
    "private": false,
    "data": {
      "nodes": [
        {
          "width": 384,
          "height": 559,
          "id": "Chroma-nvZ2S",
          "type": "genericNode",
          "position": {
            "x": 1648.2363627274465,
            "y": 739.0259353028853
          },
          "data": {
            "type": "Chroma",
            "node": {
              "template": {
                "code": {
                  "dynamic": true,
                  "required": true,
                  "placeholder": "",
                  "show": false,
                  "multiline": true,
                  "value": "from typing import Optional, Union\nfrom axiestudio import CustomComponent\n\nfrom langchain.vectorstores import Chroma\nfrom langchain.schema import Document\nfrom langchain.vectorstores.base import VectorStore\nfrom langchain.schema import BaseRetriever\nfrom langchain.embeddings.base import Embeddings\nimport chromadb  # type: ignore\n\n\nclass ChromaComponent(CustomComponent):\n    \"\"\"\n    A custom component for implementing a Vector Store using Chroma.\n    \"\"\"\n\n    display_name: str = \"Chroma\"\n    description: str = \"Implementation of Vector Store using Chroma\"\n    documentation = \"https://python.langchain.com/docs/integrations/vectorstores/chroma\"\n    beta: bool = True\n\n    def build_config(self):\n        \"\"\"\n        Builds the configuration for the component.\n\n        Returns:\n        - dict: A dictionary containing the configuration options for the component.\n        \"\"\"\n        return {\n            \"collection_name\": {\"display_name\": \"Collection Name\", \"value\": \"axiestudio\"},\n            \"persist\": {\"display_name\": \"Persist\"},\n            \"persist_directory\": {\"display_name\": \"Persist Directory\"},\n            \"code\": {\"show\": False, \"display_name\": \"Code\"},\n            \"documents\": {\"display_name\": \"Documents\", \"is_list\": True},\n            \"embedding\": {\"display_name\": \"Embedding\"},\n            \"chroma_server_cors_allow_origins\": {\n                \"display_name\": \"Server CORS Allow Origins\",\n                \"advanced\": True,\n            },\n            \"chroma_server_host\": {\"display_name\": \"Server Host\", \"advanced\": True},\n            \"chroma_server_port\": {\"display_name\": \"Server Port\", \"advanced\": True},\n            \"chroma_server_grpc_port\": {\n                \"display_name\": \"Server gRPC Port\",\n                \"advanced\": True,\n            },\n            \"chroma_server_ssl_enabled\": {\n                \"display_name\": \"Server SSL Enabled\",\n                \"advanced\": True,\n            },\n        }\n\n    def build(\n        self,\n        collection_name: str,\n        persist: bool,\n        chroma_server_ssl_enabled: bool,\n        persist_directory: Optional[str] = None,\n        embedding: Optional[Embeddings] = None,\n        documents: Optional[Document] = None,\n        chroma_server_cors_allow_origins: Optional[str] = None,\n        chroma_server_host: Optional[str] = None,\n        chroma_server_port: Optional[int] = None,\n        chroma_server_grpc_port: Optional[int] = None,\n    ) -> Union[VectorStore, BaseRetriever]:\n        \"\"\"\n        Builds the Vector Store or BaseRetriever object.\n\n        Args:\n        - collection_name (str): The name of the collection.\n        - persist_directory (Optional[str]): The directory to persist the Vector Store to.\n        - chroma_server_ssl_enabled (bool): Whether to enable SSL for the Chroma server.\n        - persist (bool): Whether to persist the Vector Store or not.\n        - embedding (Optional[Embeddings]): The embeddings to use for the Vector Store.\n        - documents (Optional[Document]): The documents to use for the Vector Store.\n        - chroma_server_cors_allow_origins (Optional[str]): The CORS allow origins for the Chroma server.\n        - chroma_server_host (Optional[str]): The host for the Chroma server.\n        - chroma_server_port (Optional[int]): The port for the Chroma server.\n        - chroma_server_grpc_port (Optional[int]): The gRPC port for the Chroma server.\n\n        Returns:\n        - Union[VectorStore, BaseRetriever]: The Vector Store or BaseRetriever object.\n        \"\"\"\n\n        # Chroma settings\n        chroma_settings = None\n\n        if chroma_server_host is not None:\n            chroma_settings = chromadb.config.Settings(\n                chroma_server_cors_allow_origins=chroma_server_cors_allow_origins or None,\n                chroma_server_host=chroma_server_host,\n                chroma_server_port=chroma_server_port or None,\n                chroma_server_grpc_port=chroma_server_grpc_port or None,\n                chroma_server_ssl_enabled=chroma_server_ssl_enabled,\n            )\n\n        # If documents, then we need to create a Chroma instance using .from_documents\n        if documents is not None and embedding is not None:\n            return Chroma.from_documents(\n                documents=documents,  # type: ignore\n                persist_directory=persist_directory if persist else None,\n                collection_name=collection_name,\n                embedding=embedding,\n                client_settings=chroma_settings,\n            )\n\n        return Chroma(persist_directory=persist_directory, client_settings=chroma_settings)\n",
                  "password": false,
                  "name": "code",
                  "advanced": false,
                  "type": "code",
                  "list": false
                },
                "_type": "CustomComponent",
                "chroma_server_cors_allow_origins": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "chroma_server_cors_allow_origins",
                  "display_name": "Server CORS Allow Origins",
                  "advanced": true,
                  "dynamic": false,
                  "info": ""
                },
                "chroma_server_grpc_port": {
                  "type": "int",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "chroma_server_grpc_port",
                  "display_name": "Server gRPC Port",
                  "advanced": true,
                  "dynamic": false,
                  "info": ""
                },
                "chroma_server_host": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "chroma_server_host",
                  "display_name": "Server Host",
                  "advanced": true,
                  "dynamic": false,
                  "info": ""
                },
                "chroma_server_port": {
                  "type": "int",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "chroma_server_port",
                  "display_name": "Server Port",
                  "advanced": true,
                  "dynamic": false,
                  "info": ""
                },
                "chroma_server_ssl_enabled": {
                  "type": "bool",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "chroma_server_ssl_enabled",
                  "display_name": "Server SSL Enabled",
                  "advanced": true,
                  "dynamic": false,
                  "info": ""
                },
                "collection_name": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "axiestudio",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "collection_name",
                  "display_name": "Collection Name",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "documents": {
                  "type": "Document",
                  "required": false,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "documents",
                  "display_name": "Documents",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "embedding": {
                  "type": "Embeddings",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "embedding",
                  "display_name": "Embedding",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "persist": {
                  "type": "bool",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": true,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "persist",
                  "display_name": "Persist",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "persist_directory": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "persist_directory",
                  "display_name": "Persist Directory",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "value": "/Users/rodrigonader/Repositories/logspace/projects/axiestudio tests"
                }
              },
              "base_classes": [
                "VectorStore",
                "BaseRetriever"
              ],
              "display_name": "Chroma",
              "documentation": "https://python.langchain.com/docs/integrations/vectorstores/chroma",
              "custom_fields": {
                "chroma_server_cors_allow_origins": null,
                "chroma_server_grpc_port": null,
                "chroma_server_host": null,
                "chroma_server_port": null,
                "chroma_server_ssl_enabled": null,
                "collection_name": null,
                "documents": null,
                "embedding": null,
                "persist": null,
                "persist_directory": null
              },
              "output_types": [
                "Chroma"
              ],
              "field_formatters": {},
              "beta": true,
              "description": "Implementation of Vector Store using Chroma",
              "outputs": [
                {
                  "types": [
                    "Chroma"
                  ],
                  "name": "Chroma",
                  "display_name": "Chroma"
                }
              ]
            },
            "id": "Chroma-nvZ2S"
          },
          "selected": true,
          "positionAbsolute": {
            "x": 1648.2363627274465,
            "y": 739.0259353028853
          },
          "dragging": false
        },
        {
          "width": 384,
          "height": 387,
          "id": "CustomComponent-20MV3",
          "type": "genericNode",
          "position": {
            "x": 19.59804392027229,
            "y": 33.92505970235274
          },
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "code": {
                  "dynamic": true,
                  "required": true,
                  "placeholder": "",
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio import CustomComponent\nfrom langchain.schema import Document\nfrom typing import Any, Dict, List\n\nclass FileLoaderComponent(CustomComponent):\n    display_name: str = \"File Loader\"\n    description: str = \"A generic loader that auto-detects file types.\"\n    beta = True\n    loaders_info: List[Dict[str, Any]] = [\n    {\n        \"loader\": \"AirbyteJSONLoader\",\n        \"name\": \"Airbyte JSON (.jsonl)\",\n        \"import\": \"langchain.document_loaders.AirbyteJSONLoader\",\n        \"defaultFor\": [\"jsonl\"],\n        \"allowdTypes\": [\"jsonl\"],\n    },\n    {\n        \"loader\": \"JSONLoader\",\n        \"name\": \"JSON (.json)\",\n        \"import\": \"langchain.document_loaders.JSONLoader\",\n        \"defaultFor\": [\"json\"],\n        \"allowdTypes\": [\"json\"],\n    },\n    {\n        \"loader\": \"BSHTMLLoader\",\n        \"name\": \"BeautifulSoup4 HTML (.html, .htm)\",\n        \"import\": \"langchain.document_loaders.BSHTMLLoader\",\n        \"allowdTypes\": [\"html\", \"htm\"],\n    },\n    {\n        \"loader\": \"CSVLoader\",\n        \"name\": \"CSV (.csv)\",\n        \"import\": \"langchain.document_loaders.CSVLoader\",\n        \"defaultFor\": [\"csv\"],\n        \"allowdTypes\": [\"csv\"],\n    },\n    {\n        \"loader\": \"CoNLLULoader\",\n        \"name\": \"CoNLL-U (.conllu)\",\n        \"import\": \"langchain.document_loaders.CoNLLULoader\",\n        \"defaultFor\": [\"conllu\"],\n        \"allowdTypes\": [\"conllu\"],\n    },\n    {\n        \"loader\": \"EverNoteLoader\",\n        \"name\": \"EverNote (.enex)\",\n        \"import\": \"langchain.document_loaders.EverNoteLoader\",\n        \"defaultFor\": [\"enex\"],\n        \"allowdTypes\": [\"enex\"],\n    },\n    {\n        \"loader\": \"FacebookChatLoader\",\n        \"name\": \"Facebook Chat (.json)\",\n        \"import\": \"langchain.document_loaders.FacebookChatLoader\",\n        \"allowdTypes\": [\"json\"],\n    },\n    {\n        \"loader\": \"OutlookMessageLoader\",\n        \"name\": \"Outlook Message (.msg)\",\n        \"import\": \"langchain.document_loaders.OutlookMessageLoader\",\n        \"defaultFor\": [\"msg\"],\n        \"allowdTypes\": [\"msg\"],\n    },\n    {\n        \"loader\": \"PyPDFLoader\",\n        \"name\": \"PyPDF (.pdf)\",\n        \"import\": \"langchain.document_loaders.PyPDFLoader\",\n        \"defaultFor\": [\"pdf\"],\n        \"allowdTypes\": [\"pdf\"],\n    },\n    {\n        \"loader\": \"STRLoader\",\n        \"name\": \"Subtitle (.str)\",\n        \"import\": \"langchain.document_loaders.STRLoader\",\n        \"defaultFor\": [\"str\"],\n        \"allowdTypes\": [\"str\"],\n    },\n    {\n        \"loader\": \"TextLoader\",\n        \"name\": \"Text (.txt)\",\n        \"import\": \"langchain.document_loaders.TextLoader\",\n        \"defaultFor\": [\"txt\"],\n        \"allowdTypes\": [\"txt\"],\n    },\n    {\n        \"loader\": \"UnstructuredEmailLoader\",\n        \"name\": \"Unstructured Email (.eml)\",\n        \"import\": \"langchain.document_loaders.UnstructuredEmailLoader\",\n        \"defaultFor\": [\"eml\"],\n        \"allowdTypes\": [\"eml\"],\n    },\n    {\n        \"loader\": \"UnstructuredHTMLLoader\",\n        \"name\": \"Unstructured HTML (.html, .htm)\",\n        \"import\": \"langchain.document_loaders.UnstructuredHTMLLoader\",\n        \"defaultFor\": [\"html\", \"htm\"],\n        \"allowdTypes\": [\"html\", \"htm\"],\n    },\n    {\n        \"loader\": \"UnstructuredMarkdownLoader\",\n        \"name\": \"Unstructured Markdown (.md)\",\n        \"import\": \"langchain.document_loaders.UnstructuredMarkdownLoader\",\n        \"defaultFor\": [\"md\"],\n        \"allowdTypes\": [\"md\"],\n    },\n    {\n        \"loader\": \"UnstructuredPowerPointLoader\",\n        \"name\": \"Unstructured PowerPoint (.pptx)\",\n        \"import\": \"langchain.document_loaders.UnstructuredPowerPointLoader\",\n        \"defaultFor\": [\"pptx\"],\n        \"allowdTypes\": [\"pptx\"],\n    },\n    {\n        \"loader\": \"UnstructuredWordLoader\",\n        \"name\": \"Unstructured Word (.docx)\",\n        \"import\": \"langchain.document_loaders.UnstructuredWordLoader\",\n        \"defaultFor\": [\"docx\"],\n        \"allowdTypes\": [\"docx\"],\n    },\n]\n\n    def build_config(self):\n        loader_options = [\"Automatic\"] + [\n            loader_info[\"name\"] for loader_info in self.loaders_info\n        ]\n\n        file_types = []\n        suffixes = []\n\n        for loader_info in self.loaders_info:\n            if \"allowedTypes\" in loader_info:\n                file_types.extend(loader_info[\"allowedTypes\"])\n                suffixes.extend([f\".{ext}\" for ext in loader_info[\"allowedTypes\"]])\n\n        return {\n            \"file_path\": {\n                \"display_name\": \"File Path\",\n                \"required\": True,\n                \"field_type\": \"file\",\n                \"file_types\": [\n                    \"json\",\n                    \"txt\",\n                    \"csv\",\n                    \"jsonl\",\n                    \"html\",\n                    \"htm\",\n                    \"conllu\",\n                    \"enex\",\n                    \"msg\",\n                    \"pdf\",\n                    \"srt\",\n                    \"eml\",\n                    \"md\",\n                    \"pptx\",\n                    \"docx\",\n                ],\n                \"suffixes\": [\n                    \".json\",\n                    \".txt\",\n                    \".csv\",\n                    \".jsonl\",\n                    \".html\",\n                    \".htm\",\n                    \".conllu\",\n                    \".enex\",\n                    \".msg\",\n                    \".pdf\",\n                    \".srt\",\n                    \".eml\",\n                    \".md\",\n                    \".pptx\",\n                    \".docx\",\n                ],\n                # \"file_types\" : file_types,\n                # \"suffixes\": suffixes,\n            },\n            \"loader\": {\n                \"display_name\": \"Loader\",\n                \"is_list\": True,\n                \"required\": True,\n                \"options\": loader_options,\n                \"value\": \"Automatic\",\n            },\n        }\n\n    def build(self, file_path: str, loader: str) -> Document:\n        file_type = file_path.split(\".\")[-1]\n\n        # Mapeie o nome do loader selecionado para suas informações\n        selected_loader_info = None\n        for loader_info in self.loaders_info:\n            if loader_info[\"name\"] == loader:\n                selected_loader_info = loader_info\n                break\n\n        if selected_loader_info is None and loader != \"Automatic\":\n            raise ValueError(f\"Loader {loader} not found in the loader info list\")\n\n        if loader == \"Automatic\":\n            # Determine o loader automaticamente com base na extensão do arquivo\n            default_loader_info = None\n            for info in self.loaders_info:\n                if \"defaultFor\" in info and file_type in info[\"defaultFor\"]:\n                    default_loader_info = info\n                    break\n\n            if default_loader_info is None:\n                raise ValueError(f\"No default loader found for file type: {file_type}\")\n\n            selected_loader_info = default_loader_info\n        if isinstance(selected_loader_info, dict):\n            loader_import: str = selected_loader_info[\"import\"]\n        else:\n            raise ValueError(\n                f\"Loader info for {loader} is not a dict\\nLoader info:\\n{selected_loader_info}\"\n            )\n        module_name, class_name = loader_import.rsplit(\".\", 1)\n\n        try:\n            # Importe o loader dinamicamente\n            loader_module = __import__(module_name, fromlist=[class_name])\n            loader_instance = getattr(loader_module, class_name)\n        except ImportError as e:\n            raise ValueError(\n                f\"Loader {loader} could not be imported\\nLoader info:\\n{selected_loader_info}\"\n            ) from e\n\n        result = loader_instance(file_path=file_path)\n        result = result.load()\n        self.status = result\n        return result",
                  "password": false,
                  "name": "code",
                  "advanced": false,
                  "type": "code",
                  "list": false
                },
                "_type": "CustomComponent",
                "file_path": {
                  "required": true,
                  "placeholder": "",
                  "show": true,
                  "multiline": false,
                  "password": false,
                  "name": "file_path",
                  "display_name": "File Path",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "file",
                  "list": false,
                  "fileTypes": [
                    "json",
                    "txt",
                    "csv",
                    "jsonl",
                    "html",
                    "htm",
                    "conllu",
                    "enex",
                    "msg",
                    "pdf",
                    "srt",
                    "eml",
                    "md",
                    "pptx",
                    "docx"
                  ],
                  "file_path": "8fef5007-c9d8-47d0-b566-68a8e1e650af/Basic RAG.json",
                  "value": ""
                },
                "loader": {
                  "required": true,
                  "placeholder": "",
                  "show": true,
                  "multiline": false,
                  "value": "Automatic",
                  "password": false,
                  "options": [
                    "Automatic",
                    "Airbyte JSON (.jsonl)",
                    "JSON (.json)",
                    "BeautifulSoup4 HTML (.html, .htm)",
                    "CSV (.csv)",
                    "CoNLL-U (.conllu)",
                    "EverNote (.enex)",
                    "Facebook Chat (.json)",
                    "Outlook Message (.msg)",
                    "PyPDF (.pdf)",
                    "Subtitle (.str)",
                    "Text (.txt)",
                    "Unstructured Email (.eml)",
                    "Unstructured HTML (.html, .htm)",
                    "Unstructured Markdown (.md)",
                    "Unstructured PowerPoint (.pptx)",
                    "Unstructured Word (.docx)"
                  ],
                  "name": "loader",
                  "display_name": "Loader",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "str",
                  "list": true
                }
              },
              "description": "A generic loader that auto-detects file types.",
              "base_classes": [
                "Document"
              ],
              "display_name": "File Loader",
              "custom_fields": {
                "file_path": null,
                "loader": null
              },
              "output_types": [
                "Document"
              ],
              "documentation": "",
              "beta": true,
              "error": null,
              "official": false,
              "outputs": [
                {
                  "types": [
                    "Document"
                  ],
                  "selected": "Document",
                  "name": "Document",
                  "display_name": "Document",
                  "hidden": false
                }
              ]
            },
            "id": "CustomComponent-20MV3"
          },
          "selected": false,
          "positionAbsolute": {
            "x": 19.59804392027229,
            "y": 33.92505970235274
          },
          "dragging": false
        },
        {
          "width": 384,
          "height": 463,
          "id": "OpenAIEmbeddings-KXHTX",
          "type": "genericNode",
          "position": {
            "x": 670.7457741047131,
            "y": 900.6671314904487
          },
          "data": {
            "type": "OpenAIEmbeddings",
            "node": {
              "template": {
                "allowed_special": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": [],
                  "fileTypes": [],
                  "password": false,
                  "name": "allowed_special",
                  "advanced": true,
                  "dynamic": false,
                  "info": ""
                },
                "async_client": {
                  "type": "Any",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "async_client",
                  "advanced": true,
                  "dynamic": false,
                  "info": ""
                },
                "chunk_size": {
                  "type": "int",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": 1000,
                  "fileTypes": [],
                  "password": false,
                  "name": "chunk_size",
                  "advanced": true,
                  "dynamic": false,
                  "info": ""
                },
                "client": {
                  "type": "Any",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "client",
                  "advanced": true,
                  "dynamic": false,
                  "info": ""
                },
                "default_headers": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "default_headers",
                  "advanced": true,
                  "dynamic": false,
                  "info": ""
                },
                "default_query": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "default_query",
                  "advanced": true,
                  "dynamic": false,
                  "info": ""
                },
                "deployment": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "text-embedding-ada-002",
                  "fileTypes": [],
                  "password": false,
                  "name": "deployment",
                  "advanced": true,
                  "dynamic": false,
                  "info": ""
                },
                "disallowed_special": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "all",
                  "fileTypes": [],
                  "password": false,
                  "name": "disallowed_special",
                  "advanced": true,
                  "dynamic": false,
                  "info": ""
                },
                "embedding_ctx_length": {
                  "type": "int",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": 8191,
                  "fileTypes": [],
                  "password": false,
                  "name": "embedding_ctx_length",
                  "advanced": true,
                  "dynamic": false,
                  "info": ""
                },
                "headers": {
                  "type": "Any",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": true,
                  "value": "{\"Authorization\": \"Bearer <token>\"}",
                  "fileTypes": [],
                  "password": false,
                  "name": "headers",
                  "advanced": true,
                  "dynamic": false,
                  "info": ""
                },
                "http_client": {
                  "type": "Any",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "http_client",
                  "advanced": true,
                  "dynamic": false,
                  "info": ""
                },
                "max_retries": {
                  "type": "int",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": 2,
                  "fileTypes": [],
                  "password": false,
                  "name": "max_retries",
                  "advanced": true,
                  "dynamic": false,
                  "info": ""
                },
                "model": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "text-embedding-ada-002",
                  "fileTypes": [],
                  "password": false,
                  "name": "model",
                  "advanced": true,
                  "dynamic": false,
                  "info": ""
                },
                "model_kwargs": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "model_kwargs",
                  "advanced": true,
                  "dynamic": false,
                  "info": ""
                },
                "openai_api_base": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "password": true,
                  "name": "openai_api_base",
                  "display_name": "OpenAI API Base",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "value": ""
                },
                "openai_api_key": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "",
                  "fileTypes": [],
                  "password": true,
                  "name": "openai_api_key",
                  "display_name": "OpenAI API Key",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "openai_api_type": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "password": true,
                  "name": "openai_api_type",
                  "display_name": "OpenAI API Type",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "value": ""
                },
                "openai_api_version": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "password": true,
                  "name": "openai_api_version",
                  "display_name": "OpenAI API Version",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "value": ""
                },
                "openai_organization": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "openai_organization",
                  "display_name": "OpenAI Organization",
                  "advanced": true,
                  "dynamic": false,
                  "info": ""
                },
                "openai_proxy": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "openai_proxy",
                  "display_name": "OpenAI Proxy",
                  "advanced": true,
                  "dynamic": false,
                  "info": ""
                },
                "request_timeout": {
                  "type": "float",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "request_timeout",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "rangeSpec": {
                    "min": -1,
                    "max": 1,
                    "step": 0.1
                  }
                },
                "show_progress_bar": {
                  "type": "bool",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "show_progress_bar",
                  "advanced": true,
                  "dynamic": false,
                  "info": ""
                },
                "skip_empty": {
                  "type": "bool",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "skip_empty",
                  "advanced": true,
                  "dynamic": false,
                  "info": ""
                },
                "tiktoken_enabled": {
                  "type": "bool",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "",
                  "fileTypes": [],
                  "password": true,
                  "name": "tiktoken_enabled",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "tiktoken_model_name": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "password": true,
                  "name": "tiktoken_model_name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "value": ""
                },
                "_type": "OpenAIEmbeddings"
              },
              "description": "OpenAI embedding models.",
              "base_classes": [
                "Embeddings",
                "OpenAIEmbeddings"
              ],
              "display_name": "OpenAIEmbeddings",
              "documentation": "https://python.langchain.com/docs/modules/data_connection/text_embedding/integrations/openai",
              "custom_fields": {},
              "output_types": [],
              "field_formatters": {},
              "beta": false,
              "outputs": [
                {
                  "types": [],
                  "name": "",
                  "display_name": "",
                  "hidden": false
                }
              ]
            },
            "id": "OpenAIEmbeddings-KXHTX"
          },
          "selected": false,
          "positionAbsolute": {
            "x": 670.7457741047131,
            "y": 900.6671314904487
          },
          "dragging": false
        },
        {
          "width": 384,
          "height": 521,
          "id": "CharacterTextSplitter-uztx1",
          "type": "genericNode",
          "position": {
            "x": 827.8882520750641,
            "y": 145.36546716873846
          },
          "data": {
            "type": "CharacterTextSplitter",
            "node": {
              "template": {
                "documents": {
                  "type": "Document",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "documents",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "chunk_overlap": {
                  "type": "int",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "50",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "chunk_overlap",
                  "display_name": "Chunk Overlap",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "chunk_size": {
                  "type": "int",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "500",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "chunk_size",
                  "display_name": "Chunk Size",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "separator": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": " ",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "separator",
                  "display_name": "Separator",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "_type": "CharacterTextSplitter"
              },
              "description": "Splitting text that looks at characters.",
              "base_classes": [
                "Document"
              ],
              "display_name": "CharacterTextSplitter",
              "documentation": "https://python.langchain.com/docs/modules/data_connection/document_transformers/text_splitters/character_text_splitter",
              "custom_fields": {},
              "output_types": [
                "Document"
              ],
              "field_formatters": {},
              "beta": false,
              "outputs": [
                {
                  "types": [
                    "Document"
                  ],
                  "selected": "Document",
                  "name": "Document",
                  "display_name": "Document",
                  "hidden": false
                }
              ]
            },
            "id": "CharacterTextSplitter-uztx1"
          },
          "selected": false,
          "positionAbsolute": {
            "x": 827.8882520750641,
            "y": 145.36546716873846
          },
          "dragging": false
        },
        {
          "width": 384,
          "height": 559,
          "id": "ChatOpenAI-xGCiM",
          "type": "genericNode",
          "position": {
            "x": 2488.7372592887555,
            "y": -496.15362556487145
          },
          "data": {
            "type": "ChatOpenAI",
            "node": {
              "template": {
                "callbacks": {
                  "type": "langchain_core.callbacks.base.BaseCallbackHandler",
                  "required": false,
                  "placeholder": "",
                  "list": true,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "callbacks",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "async_client": {
                  "type": "Any",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "async_client",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "cache": {
                  "type": "bool",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "cache",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "client": {
                  "type": "Any",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "client",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "default_headers": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "default_headers",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "default_query": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "default_query",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "http_client": {
                  "type": "Any",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "http_client",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "max_retries": {
                  "type": "int",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": 2,
                  "fileTypes": [],
                  "password": false,
                  "name": "max_retries",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "max_tokens": {
                  "type": "int",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "password": true,
                  "name": "max_tokens",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "value": ""
                },
                "metadata": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "metadata",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "model_kwargs": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "model_kwargs",
                  "advanced": true,
                  "dynamic": false,
                  "info": ""
                },
                "model_name": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "gpt-4-1106-preview",
                  "fileTypes": [],
                  "password": false,
                  "options": [
                    "gpt-4-1106-preview",
                    "gpt-4-vision-preview",
                    "gpt-4",
                    "gpt-4-32k",
                    "gpt-3.5-turbo",
                    "gpt-3.5-turbo-16k"
                  ],
                  "name": "model_name",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "n": {
                  "type": "int",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": 1,
                  "fileTypes": [],
                  "password": false,
                  "name": "n",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "openai_api_base": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "openai_api_base",
                  "display_name": "OpenAI API Base",
                  "advanced": true,
                  "dynamic": false,
                  "info": "\nThe base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.\n"
                },
                "openai_api_key": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "",
                  "fileTypes": [],
                  "password": true,
                  "name": "openai_api_key",
                  "display_name": "OpenAI API Key",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "openai_organization": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "openai_organization",
                  "display_name": "OpenAI Organization",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "openai_proxy": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "openai_proxy",
                  "display_name": "OpenAI Proxy",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "request_timeout": {
                  "type": "float",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "request_timeout",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "rangeSpec": {
                    "min": -1,
                    "max": 1,
                    "step": 0.1
                  }
                },
                "streaming": {
                  "type": "bool",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "streaming",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "tags": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": true,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "tags",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "temperature": {
                  "type": "float",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": 0.7,
                  "fileTypes": [],
                  "password": false,
                  "name": "temperature",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "rangeSpec": {
                    "min": -1,
                    "max": 1,
                    "step": 0.1
                  }
                },
                "tiktoken_model_name": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "tiktoken_model_name",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "verbose": {
                  "type": "bool",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "verbose",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "_type": "ChatOpenAI"
              },
              "description": "`OpenAI` Chat large language models API.",
              "base_classes": [
                "BaseLanguageModel",
                "ChatOpenAI",
                "BaseChatModel",
                "BaseLLM"
              ],
              "display_name": "ChatOpenAI",
              "documentation": "https://python.langchain.com/docs/modules/model_io/models/chat/integrations/openai",
              "custom_fields": {},
              "output_types": [],
              "field_formatters": {},
              "beta": false,
              "outputs": [
                {
                  "types": [],
                  "name": "",
                  "display_name": "",
                  "hidden": false
                }
              ]
            },
            "id": "ChatOpenAI-xGCiM"
          },
          "selected": false,
          "positionAbsolute": {
            "x": 2488.7372592887555,
            "y": -496.15362556487145
          },
          "dragging": false
        },
        {
          "width": 384,
          "height": 523,
          "data": {
            "id": "CustomComponent-9gFUc",
            "type": "CustomComponent",
            "node": {
              "output_types": [
                "Chain"
              ],
              "display_name": "Descriptive QA",
              "documentation": "",
              "base_classes": [
                "Chain"
              ],
              "description": "",
              "template": {
                "llm_CustomComponent-63aa3": {
                  "type": "BaseLLM",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "llm",
                  "display_name": "Retrieval LLM",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "value": "",
                  "proxy": {
                    "id": "CustomComponent-Ug9Uz",
                    "field": "llm"
                  }
                },
                "vector_store_CustomComponent-63aa3": {
                  "type": "VectorStore",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "vector_store",
                  "display_name": "vector_store",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "value": "",
                  "proxy": {
                    "id": "CustomComponent-Ug9Uz",
                    "field": "vector_store"
                  }
                },
                "code_CustomComponent-63aa3": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": true,
                  "value": "from axiestudio import CustomComponent\nfrom axiestudio.field_typing import Data, BaseLLM, PromptTemplate, VectorStore, Chain\nfrom langchain.chains import RetrievalQA\n\n\nclass Component(CustomComponent):\n    documentation: str = \"http://docs.axiestudio.org/components/custom\"\n    \n    def build_config(self):\n        return {\"llm\": {\"display_name\": \"Retrieval LLM\"}}\n\n    def build(self, llm: BaseLLM, prompt: PromptTemplate, vector_store: VectorStore) -> Chain:\n        retrieval_qa = RetrievalQA.from_llm(llm=llm, prompt=prompt, retriever=vector_store.as_retriever())\n        return retrieval_qa",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "proxy": {
                    "id": "CustomComponent-Ug9Uz",
                    "field": "code"
                  },
                  "display_name": "Code"
                },
                "output_parser_PromptTemplate-iBBGK": {
                  "type": "BaseOutputParser",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "output_parser",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "proxy": {
                    "id": "PromptTemplate-PorXG",
                    "field": "output_parser"
                  },
                  "display_name": "Output Parser"
                },
                "input_types_PromptTemplate-iBBGK": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "input_types",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "proxy": {
                    "id": "PromptTemplate-PorXG",
                    "field": "input_types"
                  },
                  "display_name": "Input Types"
                },
                "input_variables_PromptTemplate-iBBGK": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "input_variables",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "value": [
                    "description",
                    "context",
                    "question"
                  ],
                  "proxy": {
                    "id": "PromptTemplate-PorXG",
                    "field": "input_variables"
                  },
                  "display_name": "Input Variables"
                },
                "partial_variables_PromptTemplate-iBBGK": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "partial_variables",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "proxy": {
                    "id": "PromptTemplate-PorXG",
                    "field": "partial_variables"
                  },
                  "display_name": "Partial Variables"
                },
                "template_PromptTemplate-iBBGK": {
                  "type": "prompt",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "fileTypes": [],
                  "password": false,
                  "name": "template",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "value": "Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\n---\n\nInitial description:\n\n{description}\n\nPotentially relevant chunks are displayed below with the \"Context:\" preamble.\n\n{context}\n\nQuestion: {question}\nHelpful Answer:\n",
                  "proxy": {
                    "id": "PromptTemplate-PorXG",
                    "field": "template"
                  },
                  "display_name": "Template"
                },
                "template_format_PromptTemplate-iBBGK": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": "f-string",
                  "fileTypes": [],
                  "password": false,
                  "name": "template_format",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "proxy": {
                    "id": "PromptTemplate-PorXG",
                    "field": "template_format"
                  },
                  "display_name": "Template Format"
                },
                "validate_template_PromptTemplate-iBBGK": {
                  "type": "bool",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "validate_template",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "proxy": {
                    "id": "PromptTemplate-PorXG",
                    "field": "validate_template"
                  },
                  "display_name": "Validate Template"
                },
                "context_PromptTemplate-iBBGK": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "context",
                  "display_name": "context",
                  "advanced": true,
                  "input_types": [
                    "Document",
                    "BaseOutputParser"
                  ],
                  "dynamic": false,
                  "info": "",
                  "proxy": {
                    "id": "PromptTemplate-PorXG",
                    "field": "context"
                  }
                },
                "question_PromptTemplate-iBBGK": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "question",
                  "display_name": "question",
                  "advanced": true,
                  "input_types": [
                    "Document",
                    "BaseOutputParser"
                  ],
                  "dynamic": false,
                  "info": "",
                  "proxy": {
                    "id": "PromptTemplate-PorXG",
                    "field": "question"
                  }
                },
                "documents_CustomComponent-GWl0s_PromptRunner-jv3Cb": {
                  "type": "Document",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "documents",
                  "display_name": "documents",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "proxy": {
                    "id": "PromptRunner-xlWSo",
                    "field": "documents_CustomComponent-GWl0s"
                  }
                },
                "code_CustomComponent-GWl0s_PromptRunner-jv3Cb": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": true,
                  "value": "from axiestudio import CustomComponent\nfrom axiestudio.field_typing import Document\n\n\nclass Component(CustomComponent):\n    documentation: str = \"http://docs.axiestudio.org/components/custom\"\n\n    def build(self, documents: Document, head:int=3, tail:int=3) -> Document:\n        assert isinstance(documents, list)\n        \n        return documents[:head] + documents[-tail:]\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "display_name": "code",
                  "proxy": {
                    "id": "PromptRunner-xlWSo",
                    "field": "code_CustomComponent-GWl0s"
                  }
                },
                "head_CustomComponent-GWl0s_PromptRunner-jv3Cb": {
                  "type": "int",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "2",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "head",
                  "display_name": "head",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "proxy": {
                    "id": "PromptRunner-xlWSo",
                    "field": "head_CustomComponent-GWl0s"
                  }
                },
                "tail_CustomComponent-GWl0s_PromptRunner-jv3Cb": {
                  "type": "int",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "1",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "tail",
                  "display_name": "tail",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "proxy": {
                    "id": "PromptRunner-xlWSo",
                    "field": "tail_CustomComponent-GWl0s"
                  }
                },
                "llm_PromptRunner-rASGO_PromptRunner-jv3Cb": {
                  "type": "BaseLLM",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "llm",
                  "display_name": "Description LLM",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "value": "",
                  "proxy": {
                    "id": "PromptRunner-xlWSo",
                    "field": "llm_PromptRunner-rASGO"
                  }
                },
                "code_PromptRunner-rASGO_PromptRunner-jv3Cb": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": true,
                  "value": "from axiestudio import CustomComponent\n\nfrom langchain.llms.base import BaseLLM\nfrom langchain.prompts import PromptTemplate\nfrom langchain.schema import Document\n\n\nclass PromptRunner(CustomComponent):\n    display_name: str = \"Prompt Runner\"\n    description: str = \"Run a Chain with the given PromptTemplate\"\n    beta: bool = True\n    field_config = {\n        \"llm\": {\"display_name\": \"Description LLM\"},\n        \"prompt\": {\n            \"display_name\": \"Prompt Template\",\n            \"info\": \"Make sure the prompt has all variables filled.\",\n        },\n        \"code\": {\"show\": False},\n    }\n\n    def build(self, llm: BaseLLM, prompt: PromptTemplate) -> Document:\n        chain = prompt | llm\n        # The input is an empty dict because the prompt is already filled\n        result = chain.invoke(input={})\n        if hasattr(result, \"content\"):\n            result = result.content\n        self.repr_value = result\n        return Document(page_content=str(result))\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "proxy": {
                    "id": "PromptRunner-xlWSo",
                    "field": "code_PromptRunner-rASGO"
                  },
                  "display_name": "Code"
                },
                "output_parser_PromptTemplate-BcjIr_PromptRunner-jv3Cb": {
                  "type": "BaseOutputParser",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "output_parser",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "display_name": "output_parser",
                  "proxy": {
                    "id": "PromptRunner-xlWSo",
                    "field": "output_parser_PromptTemplate-BcjIr"
                  }
                },
                "input_types_PromptTemplate-BcjIr_PromptRunner-jv3Cb": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "input_types",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "display_name": "input_types",
                  "proxy": {
                    "id": "PromptRunner-xlWSo",
                    "field": "input_types_PromptTemplate-BcjIr"
                  }
                },
                "input_variables_PromptTemplate-BcjIr_PromptRunner-jv3Cb": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "input_variables",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "value": [
                    "head_tail"
                  ],
                  "display_name": "input_variables",
                  "proxy": {
                    "id": "PromptRunner-xlWSo",
                    "field": "input_variables_PromptTemplate-BcjIr"
                  }
                },
                "partial_variables_PromptTemplate-BcjIr_PromptRunner-jv3Cb": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "partial_variables",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "display_name": "partial_variables",
                  "proxy": {
                    "id": "PromptRunner-xlWSo",
                    "field": "partial_variables_PromptTemplate-BcjIr"
                  }
                },
                "template_PromptTemplate-BcjIr_PromptRunner-jv3Cb": {
                  "type": "prompt",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "fileTypes": [],
                  "password": false,
                  "name": "template",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "value": "Below are the head and tail of a document.\n\n---\n\n{head_tail}\n\n---\n\nGiven them, try to create a reasonable description of what this document may be about. If included, specify sources and any metadata available.\n\nGenerated Description:\n",
                  "display_name": "template",
                  "proxy": {
                    "id": "PromptRunner-xlWSo",
                    "field": "template_PromptTemplate-BcjIr"
                  }
                },
                "template_format_PromptTemplate-BcjIr_PromptRunner-jv3Cb": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": "f-string",
                  "fileTypes": [],
                  "password": false,
                  "name": "template_format",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "display_name": "template_format",
                  "proxy": {
                    "id": "PromptRunner-xlWSo",
                    "field": "template_format_PromptTemplate-BcjIr"
                  }
                },
                "validate_template_PromptTemplate-BcjIr_PromptRunner-jv3Cb": {
                  "type": "bool",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "validate_template",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "display_name": "validate_template",
                  "proxy": {
                    "id": "PromptRunner-xlWSo",
                    "field": "validate_template_PromptTemplate-BcjIr"
                  }
                }
              },
              "flow": {
                "data": {
                  "nodes": [
                    {
                      "width": 384,
                      "height": 425,
                      "id": "CustomComponent-Ug9Uz",
                      "type": "genericNode",
                      "position": {
                        "x": 2711.800917597132,
                        "y": 188.35859693788262
                      },
                      "data": {
                        "type": "CustomComponent",
                        "node": {
                          "template": {
                            "llm": {
                              "type": "BaseLLM",
                              "required": true,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "llm",
                              "display_name": "Retrieval LLM",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "value": ""
                            },
                            "prompt": {
                              "type": "PromptTemplate",
                              "required": true,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "prompt",
                              "display_name": "prompt",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "value": ""
                            },
                            "vector_store": {
                              "type": "VectorStore",
                              "required": true,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "vector_store",
                              "display_name": "vector_store",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "value": ""
                            },
                            "code": {
                              "type": "code",
                              "required": true,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": true,
                              "value": "from axiestudio import CustomComponent\nfrom axiestudio.field_typing import Data, BaseLLM, PromptTemplate, VectorStore, Chain\nfrom langchain.chains import RetrievalQA\n\n\nclass Component(CustomComponent):\n    documentation: str = \"http://docs.axiestudio.org/components/custom\"\n    \n    def build_config(self):\n        return {\"llm\": {\"display_name\": \"Retrieval LLM\"}}\n\n    def build(self, llm: BaseLLM, prompt: PromptTemplate, vector_store: VectorStore) -> Chain:\n        retrieval_qa = RetrievalQA.from_llm(llm=llm, prompt=prompt, retriever=vector_store.as_retriever())\n        return retrieval_qa",
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "code",
                              "advanced": false,
                              "dynamic": true,
                              "info": ""
                            },
                            "_type": "CustomComponent"
                          },
                          "base_classes": [
                            "Chain"
                          ],
                          "display_name": "RetrievalQA",
                          "documentation": "http://docs.axiestudio.org/components/custom",
                          "custom_fields": {
                            "llm": null,
                            "prompt": null,
                            "vector_store": null
                          },
                          "output_types": [
                            "Chain"
                          ],
                          "field_formatters": {},
                          "beta": true
                        },
                        "id": "CustomComponent-Ug9Uz"
                      },
                      "selected": true,
                      "dragging": false,
                      "positionAbsolute": {
                        "x": 2711.800917597132,
                        "y": 188.35859693788262
                      }
                    },
                    {
                      "width": 384,
                      "height": 563,
                      "id": "PromptTemplate-PorXG",
                      "type": "genericNode",
                      "position": {
                        "x": 2079.717976209867,
                        "y": 193.28869547208728
                      },
                      "data": {
                        "type": "PromptTemplate",
                        "node": {
                          "template": {
                            "output_parser": {
                              "type": "BaseOutputParser",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": false,
                              "multiline": false,
                              "fileTypes": [],
                              "password": false,
                              "name": "output_parser",
                              "advanced": false,
                              "dynamic": true,
                              "info": ""
                            },
                            "input_types": {
                              "type": "dict",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": false,
                              "multiline": false,
                              "fileTypes": [],
                              "password": false,
                              "name": "input_types",
                              "advanced": false,
                              "dynamic": true,
                              "info": ""
                            },
                            "input_variables": {
                              "type": "str",
                              "required": true,
                              "placeholder": "",
                              "list": true,
                              "show": false,
                              "multiline": false,
                              "fileTypes": [],
                              "password": false,
                              "name": "input_variables",
                              "advanced": false,
                              "dynamic": true,
                              "info": "",
                              "value": [
                                "description",
                                "context",
                                "question"
                              ]
                            },
                            "partial_variables": {
                              "type": "dict",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": false,
                              "multiline": false,
                              "fileTypes": [],
                              "password": false,
                              "name": "partial_variables",
                              "advanced": false,
                              "dynamic": true,
                              "info": ""
                            },
                            "template": {
                              "type": "prompt",
                              "required": true,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": true,
                              "fileTypes": [],
                              "password": false,
                              "name": "template",
                              "advanced": false,
                              "dynamic": true,
                              "info": "",
                              "value": "Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\n---\n\nInitial description:\n\n{description}\n\nPotentially relevant chunks are displayed below with the \"Context:\" preamble.\n\n{context}\n\nQuestion: {question}\nHelpful Answer:\n"
                            },
                            "template_format": {
                              "type": "str",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": false,
                              "multiline": false,
                              "value": "f-string",
                              "fileTypes": [],
                              "password": false,
                              "name": "template_format",
                              "advanced": false,
                              "dynamic": true,
                              "info": ""
                            },
                            "validate_template": {
                              "type": "bool",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": false,
                              "multiline": false,
                              "value": false,
                              "fileTypes": [],
                              "password": false,
                              "name": "validate_template",
                              "advanced": false,
                              "dynamic": true,
                              "info": ""
                            },
                            "_type": "PromptTemplate",
                            "context": {
                              "type": "str",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": true,
                              "value": "",
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "context",
                              "display_name": "context",
                              "advanced": false,
                              "input_types": [
                                "Document",
                                "BaseOutputParser"
                              ],
                              "dynamic": false,
                              "info": ""
                            },
                            "question": {
                              "type": "str",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": true,
                              "value": "",
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "question",
                              "display_name": "question",
                              "advanced": false,
                              "input_types": [
                                "Document",
                                "BaseOutputParser"
                              ],
                              "dynamic": false,
                              "info": ""
                            },
                            "description": {
                              "type": "str",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": true,
                              "value": "",
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "description",
                              "display_name": "description",
                              "advanced": false,
                              "input_types": [
                                "Document",
                                "BaseOutputParser"
                              ],
                              "dynamic": false,
                              "info": ""
                            }
                          },
                          "description": "A prompt template for a language model.",
                          "base_classes": [
                            "PromptTemplate",
                            "StringPromptTemplate",
                            "BasePromptTemplate"
                          ],
                          "name": "",
                          "display_name": "PromptTemplate",
                          "documentation": "https://python.langchain.com/docs/modules/model_io/prompts/prompt_templates/",
                          "custom_fields": {
                            "": [
                              "description",
                              "context",
                              "question"
                            ]
                          },
                          "output_types": [],
                          "full_path": null,
                          "field_formatters": {},
                          "beta": false,
                          "error": null
                        },
                        "id": "PromptTemplate-PorXG"
                      },
                      "selected": true,
                      "positionAbsolute": {
                        "x": 2079.717976209867,
                        "y": 193.28869547208728
                      },
                      "dragging": false
                    },
                    {
                      "width": 384,
                      "height": 549,
                      "data": {
                        "id": "PromptRunner-xlWSo",
                        "type": "PromptRunner",
                        "node": {
                          "output_types": [
                            "Document"
                          ],
                          "display_name": "Description Generator",
                          "documentation": "",
                          "base_classes": [
                            "Document"
                          ],
                          "description": "",
                          "template": {
                            "documents_CustomComponent-GWl0s": {
                              "type": "Document",
                              "required": true,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "documents",
                              "display_name": "documents",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "proxy": {
                                "id": "CustomComponent-MfXbb",
                                "field": "documents"
                              }
                            },
                            "code_CustomComponent-GWl0s": {
                              "type": "code",
                              "required": true,
                              "placeholder": "",
                              "list": false,
                              "show": false,
                              "multiline": true,
                              "value": "from axiestudio import CustomComponent\nfrom axiestudio.field_typing import Document\n\n\nclass Component(CustomComponent):\n    documentation: str = \"http://docs.axiestudio.org/components/custom\"\n\n    def build(self, documents: Document, head:int=3, tail:int=3) -> Document:\n        assert isinstance(documents, list)\n        \n        return documents[:head] + documents[-tail:]\n",
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "code",
                              "advanced": false,
                              "dynamic": true,
                              "info": "",
                              "display_name": "code",
                              "proxy": {
                                "id": "CustomComponent-MfXbb",
                                "field": "code"
                              }
                            },
                            "head_CustomComponent-GWl0s": {
                              "type": "int",
                              "required": true,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "value": "1",
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "head",
                              "display_name": "head",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "proxy": {
                                "id": "CustomComponent-MfXbb",
                                "field": "head"
                              }
                            },
                            "tail_CustomComponent-GWl0s": {
                              "type": "int",
                              "required": true,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "value": "1",
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "tail",
                              "display_name": "tail",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "proxy": {
                                "id": "CustomComponent-MfXbb",
                                "field": "tail"
                              }
                            },
                            "llm_PromptRunner-rASGO": {
                              "type": "BaseLLM",
                              "required": true,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": false,
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "llm",
                              "display_name": "Description LLM",
                              "advanced": false,
                              "dynamic": false,
                              "info": "",
                              "value": "",
                              "proxy": {
                                "id": "PromptRunner-8HGQU",
                                "field": "llm"
                              }
                            },
                            "code_PromptRunner-rASGO": {
                              "type": "code",
                              "required": true,
                              "placeholder": "",
                              "list": false,
                              "show": false,
                              "multiline": true,
                              "value": "from axiestudio import CustomComponent\n\nfrom langchain.llms.base import BaseLLM\nfrom langchain.prompts import PromptTemplate\nfrom langchain.schema import Document\n\n\nclass PromptRunner(CustomComponent):\n    display_name: str = \"Prompt Runner\"\n    description: str = \"Run a Chain with the given PromptTemplate\"\n    beta: bool = True\n    field_config = {\n        \"llm\": {\"display_name\": \"Description LLM\"},\n        \"prompt\": {\n            \"display_name\": \"Prompt Template\",\n            \"info\": \"Make sure the prompt has all variables filled.\",\n        },\n        \"code\": {\"show\": False},\n    }\n\n    def build(self, llm: BaseLLM, prompt: PromptTemplate) -> Document:\n        chain = prompt | llm\n        # The input is an empty dict because the prompt is already filled\n        result = chain.invoke(input={})\n        if hasattr(result, \"content\"):\n            result = result.content\n        self.repr_value = result\n        return Document(page_content=str(result))\n",
                              "fileTypes": [],
                              "file_path": "",
                              "password": false,
                              "name": "code",
                              "advanced": false,
                              "dynamic": true,
                              "info": "",
                              "proxy": {
                                "id": "PromptRunner-8HGQU",
                                "field": "code"
                              },
                              "display_name": "Code"
                            },
                            "output_parser_PromptTemplate-BcjIr": {
                              "type": "BaseOutputParser",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": false,
                              "multiline": false,
                              "fileTypes": [],
                              "password": false,
                              "name": "output_parser",
                              "advanced": false,
                              "dynamic": true,
                              "info": "",
                              "display_name": "output_parser",
                              "proxy": {
                                "id": "PromptTemplate-8fslP",
                                "field": "output_parser"
                              }
                            },
                            "input_types_PromptTemplate-BcjIr": {
                              "type": "dict",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": false,
                              "multiline": false,
                              "fileTypes": [],
                              "password": false,
                              "name": "input_types",
                              "advanced": true,
                              "dynamic": true,
                              "info": "",
                              "display_name": "input_types",
                              "proxy": {
                                "id": "PromptTemplate-8fslP",
                                "field": "input_types"
                              }
                            },
                            "input_variables_PromptTemplate-BcjIr": {
                              "type": "str",
                              "required": true,
                              "placeholder": "",
                              "list": true,
                              "show": false,
                              "multiline": false,
                              "fileTypes": [],
                              "password": false,
                              "name": "input_variables",
                              "advanced": false,
                              "dynamic": true,
                              "info": "",
                              "value": [
                                "head_tail"
                              ],
                              "display_name": "input_variables",
                              "proxy": {
                                "id": "PromptTemplate-8fslP",
                                "field": "input_variables"
                              }
                            },
                            "partial_variables_PromptTemplate-BcjIr": {
                              "type": "dict",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": false,
                              "multiline": false,
                              "fileTypes": [],
                              "password": false,
                              "name": "partial_variables",
                              "advanced": true,
                              "dynamic": true,
                              "info": "",
                              "display_name": "partial_variables",
                              "proxy": {
                                "id": "PromptTemplate-8fslP",
                                "field": "partial_variables"
                              }
                            },
                            "template_PromptTemplate-BcjIr": {
                              "type": "prompt",
                              "required": true,
                              "placeholder": "",
                              "list": false,
                              "show": true,
                              "multiline": true,
                              "fileTypes": [],
                              "password": false,
                              "name": "template",
                              "advanced": false,
                              "dynamic": true,
                              "info": "",
                              "value": "Below are the head and tail of a document.\n\n---\n\n{head_tail}\n\n---\n\nGiven them, try to create a reasonable description of what this document may be about. If included, specify sources and any metadata available.\n\nGenerated Description:\n",
                              "display_name": "template",
                              "proxy": {
                                "id": "PromptTemplate-8fslP",
                                "field": "template"
                              }
                            },
                            "template_format_PromptTemplate-BcjIr": {
                              "type": "str",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": false,
                              "multiline": false,
                              "value": "f-string",
                              "fileTypes": [],
                              "password": false,
                              "name": "template_format",
                              "advanced": true,
                              "dynamic": true,
                              "info": "",
                              "display_name": "template_format",
                              "proxy": {
                                "id": "PromptTemplate-8fslP",
                                "field": "template_format"
                              }
                            },
                            "validate_template_PromptTemplate-BcjIr": {
                              "type": "bool",
                              "required": false,
                              "placeholder": "",
                              "list": false,
                              "show": false,
                              "multiline": false,
                              "value": false,
                              "fileTypes": [],
                              "password": false,
                              "name": "validate_template",
                              "advanced": true,
                              "dynamic": true,
                              "info": "",
                              "display_name": "validate_template",
                              "proxy": {
                                "id": "PromptTemplate-8fslP",
                                "field": "validate_template"
                              }
                            }
                          },
                          "flow": {
                            "data": {
                              "nodes": [
                                {
                                  "width": 384,
                                  "height": 501,
                                  "id": "CustomComponent-MfXbb",
                                  "type": "genericNode",
                                  "position": {
                                    "x": 454.7849475910324,
                                    "y": -26.431343500727564
                                  },
                                  "data": {
                                    "type": "CustomComponent",
                                    "node": {
                                      "template": {
                                        "documents": {
                                          "type": "Document",
                                          "required": true,
                                          "placeholder": "",
                                          "list": false,
                                          "show": true,
                                          "multiline": false,
                                          "fileTypes": [],
                                          "file_path": "",
                                          "password": false,
                                          "name": "documents",
                                          "display_name": "documents",
                                          "advanced": false,
                                          "dynamic": false,
                                          "info": ""
                                        },
                                        "code": {
                                          "type": "code",
                                          "required": true,
                                          "placeholder": "",
                                          "list": false,
                                          "show": true,
                                          "multiline": true,
                                          "value": "from axiestudio import CustomComponent\nfrom axiestudio.field_typing import Document\n\n\nclass Component(CustomComponent):\n    documentation: str = \"http://docs.axiestudio.org/components/custom\"\n\n    def build(self, documents: Document, head:int=3, tail:int=3) -> Document:\n        assert isinstance(documents, list)\n        \n        return documents[:head] + documents[-tail:]\n",
                                          "fileTypes": [],
                                          "file_path": "",
                                          "password": false,
                                          "name": "code",
                                          "advanced": false,
                                          "dynamic": true,
                                          "info": "",
                                          "display_name": "code"
                                        },
                                        "head": {
                                          "type": "int",
                                          "required": true,
                                          "placeholder": "",
                                          "list": false,
                                          "show": true,
                                          "multiline": false,
                                          "value": "1",
                                          "fileTypes": [],
                                          "file_path": "",
                                          "password": false,
                                          "name": "head",
                                          "display_name": "head",
                                          "advanced": false,
                                          "dynamic": false,
                                          "info": ""
                                        },
                                        "tail": {
                                          "type": "int",
                                          "required": true,
                                          "placeholder": "",
                                          "list": false,
                                          "show": true,
                                          "multiline": false,
                                          "value": "1",
                                          "fileTypes": [],
                                          "file_path": "",
                                          "password": false,
                                          "name": "tail",
                                          "display_name": "tail",
                                          "advanced": false,
                                          "dynamic": false,
                                          "info": ""
                                        },
                                        "_type": "CustomComponent"
                                      },
                                      "base_classes": [
                                        "Document"
                                      ],
                                      "display_name": "Truncate Documents",
                                      "documentation": "http://docs.axiestudio.org/components/custom",
                                      "custom_fields": {
                                        "documents": null,
                                        "head": null,
                                        "tail": null
                                      },
                                      "output_types": [
                                        "Document"
                                      ],
                                      "field_formatters": {},
                                      "beta": true,
                                      "description": "Extract the head and tail from a list of documents."
                                    },
                                    "id": "CustomComponent-MfXbb"
                                  },
                                  "selected": true,
                                  "dragging": false,
                                  "positionAbsolute": {
                                    "x": 454.7849475910324,
                                    "y": -26.431343500727564
                                  }
                                },
                                {
                                  "width": 384,
                                  "height": 377,
                                  "id": "PromptRunner-8HGQU",
                                  "type": "genericNode",
                                  "position": {
                                    "x": 1568.8588816959511,
                                    "y": 80.24950204653985
                                  },
                                  "data": {
                                    "type": "PromptRunner",
                                    "node": {
                                      "template": {
                                        "llm": {
                                          "type": "BaseLLM",
                                          "required": true,
                                          "placeholder": "",
                                          "list": false,
                                          "show": true,
                                          "multiline": false,
                                          "fileTypes": [],
                                          "file_path": "",
                                          "password": false,
                                          "name": "llm",
                                          "display_name": "Description LLM",
                                          "advanced": false,
                                          "dynamic": false,
                                          "info": "",
                                          "value": ""
                                        },
                                        "prompt": {
                                          "type": "PromptTemplate",
                                          "required": true,
                                          "placeholder": "",
                                          "list": false,
                                          "show": true,
                                          "multiline": false,
                                          "fileTypes": [],
                                          "file_path": "",
                                          "password": false,
                                          "name": "prompt",
                                          "display_name": "Prompt Template",
                                          "advanced": false,
                                          "dynamic": false,
                                          "info": "Make sure the prompt has all variables filled.",
                                          "value": ""
                                        },
                                        "code": {
                                          "type": "code",
                                          "required": true,
                                          "placeholder": "",
                                          "list": false,
                                          "show": true,
                                          "multiline": true,
                                          "value": "from axiestudio import CustomComponent\n\nfrom langchain.llms.base import BaseLLM\nfrom langchain.prompts import PromptTemplate\nfrom langchain.schema import Document\n\n\nclass PromptRunner(CustomComponent):\n    display_name: str = \"Prompt Runner\"\n    description: str = \"Run a Chain with the given PromptTemplate\"\n    beta: bool = True\n    field_config = {\n        \"llm\": {\"display_name\": \"Description LLM\"},\n        \"prompt\": {\n            \"display_name\": \"Prompt Template\",\n            \"info\": \"Make sure the prompt has all variables filled.\",\n        },\n        \"code\": {\"show\": False},\n    }\n\n    def build(self, llm: BaseLLM, prompt: PromptTemplate) -> Document:\n        chain = prompt | llm\n        # The input is an empty dict because the prompt is already filled\n        result = chain.invoke(input={})\n        if hasattr(result, \"content\"):\n            result = result.content\n        self.repr_value = result\n        return Document(page_content=str(result))\n",
                                          "fileTypes": [],
                                          "file_path": "",
                                          "password": false,
                                          "name": "code",
                                          "advanced": false,
                                          "dynamic": true,
                                          "info": ""
                                        },
                                        "_type": "CustomComponent"
                                      },
                                      "description": "Run a Chain with the given PromptTemplate",
                                      "base_classes": [
                                        "Document"
                                      ],
                                      "display_name": "Prompt Runner",
                                      "documentation": "",
                                      "custom_fields": {
                                        "llm": null,
                                        "prompt": null
                                      },
                                      "output_types": [
                                        "Document"
                                      ],
                                      "field_formatters": {},
                                      "beta": true
                                    },
                                    "id": "PromptRunner-8HGQU"
                                  },
                                  "selected": true,
                                  "positionAbsolute": {
                                    "x": 1568.8588816959511,
                                    "y": 80.24950204653985
                                  },
                                  "dragging": false
                                },
                                {
                                  "width": 384,
                                  "height": 375,
                                  "id": "PromptTemplate-8fslP",
                                  "type": "genericNode",
                                  "position": {
                                    "x": 989.2882417344424,
                                    "y": -34.88063446874622
                                  },
                                  "data": {
                                    "type": "PromptTemplate",
                                    "node": {
                                      "template": {
                                        "output_parser": {
                                          "type": "BaseOutputParser",
                                          "required": false,
                                          "placeholder": "",
                                          "list": false,
                                          "show": false,
                                          "multiline": false,
                                          "fileTypes": [],
                                          "password": false,
                                          "name": "output_parser",
                                          "advanced": false,
                                          "dynamic": true,
                                          "info": "",
                                          "display_name": "output_parser"
                                        },
                                        "input_types": {
                                          "type": "dict",
                                          "required": false,
                                          "placeholder": "",
                                          "list": false,
                                          "show": false,
                                          "multiline": false,
                                          "fileTypes": [],
                                          "password": false,
                                          "name": "input_types",
                                          "advanced": false,
                                          "dynamic": true,
                                          "info": "",
                                          "display_name": "input_types"
                                        },
                                        "input_variables": {
                                          "type": "str",
                                          "required": true,
                                          "placeholder": "",
                                          "list": true,
                                          "show": false,
                                          "multiline": false,
                                          "fileTypes": [],
                                          "password": false,
                                          "name": "input_variables",
                                          "advanced": false,
                                          "dynamic": true,
                                          "info": "",
                                          "value": [
                                            "head_tail"
                                          ],
                                          "display_name": "input_variables"
                                        },
                                        "partial_variables": {
                                          "type": "dict",
                                          "required": false,
                                          "placeholder": "",
                                          "list": false,
                                          "show": false,
                                          "multiline": false,
                                          "fileTypes": [],
                                          "password": false,
                                          "name": "partial_variables",
                                          "advanced": false,
                                          "dynamic": true,
                                          "info": "",
                                          "display_name": "partial_variables"
                                        },
                                        "template": {
                                          "type": "prompt",
                                          "required": true,
                                          "placeholder": "",
                                          "list": false,
                                          "show": true,
                                          "multiline": true,
                                          "fileTypes": [],
                                          "password": false,
                                          "name": "template",
                                          "advanced": false,
                                          "dynamic": true,
                                          "info": "",
                                          "value": "Below are the head and tail of a document.\n\n---\n\n{head_tail}\n\n---\n\nGiven them, try to create a reasonable description of what this document may be about. If included, specify sources and any metadata available.\n\nGenerated Description:\n",
                                          "display_name": "template"
                                        },
                                        "template_format": {
                                          "type": "str",
                                          "required": false,
                                          "placeholder": "",
                                          "list": false,
                                          "show": false,
                                          "multiline": false,
                                          "value": "f-string",
                                          "fileTypes": [],
                                          "password": false,
                                          "name": "template_format",
                                          "advanced": false,
                                          "dynamic": true,
                                          "info": "",
                                          "display_name": "template_format"
                                        },
                                        "validate_template": {
                                          "type": "bool",
                                          "required": false,
                                          "placeholder": "",
                                          "list": false,
                                          "show": false,
                                          "multiline": false,
                                          "value": false,
                                          "fileTypes": [],
                                          "password": false,
                                          "name": "validate_template",
                                          "advanced": false,
                                          "dynamic": true,
                                          "info": "",
                                          "display_name": "validate_template"
                                        },
                                        "_type": "PromptTemplate",
                                        "head_tail": {
                                          "type": "str",
                                          "required": false,
                                          "placeholder": "",
                                          "list": false,
                                          "show": true,
                                          "multiline": true,
                                          "value": "",
                                          "fileTypes": [],
                                          "file_path": "",
                                          "password": false,
                                          "name": "head_tail",
                                          "display_name": "head_tail",
                                          "advanced": false,
                                          "input_types": [
                                            "Document",
                                            "BaseOutputParser"
                                          ],
                                          "dynamic": false,
                                          "info": ""
                                        }
                                      },
                                      "description": "A prompt template for a language model.",
                                      "base_classes": [
                                        "PromptTemplate",
                                        "StringPromptTemplate",
                                        "BasePromptTemplate"
                                      ],
                                      "name": "",
                                      "display_name": "PromptTemplate",
                                      "documentation": "https://python.langchain.com/docs/modules/model_io/prompts/prompt_templates/",
                                      "custom_fields": {
                                        "": [
                                          "head_tail"
                                        ]
                                      },
                                      "output_types": [],
                                      "full_path": null,
                                      "field_formatters": {},
                                      "beta": false,
                                      "error": null
                                    },
                                    "id": "PromptTemplate-8fslP"
                                  },
                                  "selected": true,
                                  "dragging": false,
                                  "positionAbsolute": {
                                    "x": 989.2882417344424,
                                    "y": -34.88063446874622
                                  }
                                }
                              ],
                              "edges": [
                                {
                                  "source": "PromptTemplate-8fslP",
                                  "sourceHandle": "{œbaseClassesœ:[œPromptTemplateœ,œStringPromptTemplateœ,œBasePromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-8fslPœ}",
                                  "target": "PromptRunner-8HGQU",
                                  "targetHandle": "{œfieldNameœ:œpromptœ,œidœ:œPromptRunner-8HGQUœ,œinputTypesœ:null,œtypeœ:œPromptTemplateœ}",
                                  "data": {
                                    "targetHandle": {
                                      "fieldName": "prompt",
                                      "id": "PromptRunner-8HGQU",
                                      "inputTypes": null,
                                      "type": "PromptTemplate"
                                    },
                                    "sourceHandle": {
                                      "baseClasses": [
                                        "PromptTemplate",
                                        "StringPromptTemplate",
                                        "BasePromptTemplate"
                                      ],
                                      "dataType": "PromptTemplate",
                                      "id": "PromptTemplate-8fslP"
                                    }
                                  },
                                  "style": {
                                    "stroke": "#555"
                                  },
                                  "className": "stroke-gray-900  stroke-connection",
                                  "animated": false,
                                  "id": "reactflow__edge-PromptTemplate-8fslP{œbaseClassesœ:[œPromptTemplateœ,œStringPromptTemplateœ,œBasePromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-8fslPœ}-PromptRunner-8HGQU{œfieldNameœ:œpromptœ,œidœ:œPromptRunner-8HGQUœ,œinputTypesœ:null,œtypeœ:œPromptTemplateœ}",
                                  "selected": true
                                },
                                {
                                  "source": "CustomComponent-MfXbb",
                                  "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-MfXbbœ}",
                                  "target": "PromptTemplate-8fslP",
                                  "targetHandle": "{œfieldNameœ:œhead_tailœ,œidœ:œPromptTemplate-8fslPœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}",
                                  "data": {
                                    "targetHandle": {
                                      "fieldName": "head_tail",
                                      "id": "PromptTemplate-8fslP",
                                      "inputTypes": [
                                        "Document",
                                        "BaseOutputParser"
                                      ],
                                      "type": "str"
                                    },
                                    "sourceHandle": {
                                      "baseClasses": [
                                        "Document"
                                      ],
                                      "dataType": "CustomComponent",
                                      "id": "CustomComponent-MfXbb"
                                    }
                                  },
                                  "style": {
                                    "stroke": "#555"
                                  },
                                  "className": "stroke-gray-900  stroke-connection",
                                  "animated": false,
                                  "id": "reactflow__edge-CustomComponent-MfXbb{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-MfXbbœ}-PromptTemplate-8fslP{œfieldNameœ:œhead_tailœ,œidœ:œPromptTemplate-8fslPœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}",
                                  "selected": true
                                }
                              ],
                              "viewport": {
                                "x": -60.306605278449524,
                                "y": 167.32589572887738,
                                "zoom": 0.4019524404621551
                              }
                            },
                            "is_component": false,
                            "name": "Funky Euler",
                            "description": "",
                            "id": "fphvI"
                          }
                        }
                      },
                      "id": "PromptRunner-xlWSo",
                      "position": {
                        "x": 1459.3101583446833,
                        "y": 61.75361967326023
                      },
                      "type": "genericNode",
                      "selected": true,
                      "dragging": false,
                      "positionAbsolute": {
                        "x": 1459.3101583446833,
                        "y": 61.75361967326023
                      }
                    }
                  ],
                  "edges": [
                    {
                      "source": "PromptTemplate-PorXG",
                      "sourceHandle": "{œbaseClassesœ:[œPromptTemplateœ,œStringPromptTemplateœ,œBasePromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-PorXGœ}",
                      "target": "CustomComponent-Ug9Uz",
                      "targetHandle": "{œfieldNameœ:œpromptœ,œidœ:œCustomComponent-Ug9Uzœ,œinputTypesœ:null,œtypeœ:œPromptTemplateœ}",
                      "data": {
                        "targetHandle": {
                          "fieldName": "prompt",
                          "id": "CustomComponent-Ug9Uz",
                          "inputTypes": null,
                          "type": "PromptTemplate"
                        },
                        "sourceHandle": {
                          "baseClasses": [
                            "PromptTemplate",
                            "StringPromptTemplate",
                            "BasePromptTemplate"
                          ],
                          "dataType": "PromptTemplate",
                          "id": "PromptTemplate-PorXG"
                        }
                      },
                      "style": {
                        "stroke": "#555"
                      },
                      "className": "stroke-gray-900  stroke-connection",
                      "animated": false,
                      "id": "reactflow__edge-PromptTemplate-PorXG{œbaseClassesœ:[œPromptTemplateœ,œStringPromptTemplateœ,œBasePromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-PorXGœ}-CustomComponent-Ug9Uz{œfieldNameœ:œpromptœ,œidœ:œCustomComponent-Ug9Uzœ,œinputTypesœ:null,œtypeœ:œPromptTemplateœ}",
                      "selected": true
                    },
                    {
                      "source": "PromptRunner-xlWSo",
                      "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œPromptRunnerœ,œidœ:œPromptRunner-xlWSoœ}",
                      "target": "PromptTemplate-PorXG",
                      "targetHandle": "{œfieldNameœ:œdescriptionœ,œidœ:œPromptTemplate-PorXGœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}",
                      "data": {
                        "targetHandle": {
                          "fieldName": "description",
                          "id": "PromptTemplate-PorXG",
                          "inputTypes": [
                            "Document",
                            "BaseOutputParser"
                          ],
                          "type": "str"
                        },
                        "sourceHandle": {
                          "baseClasses": [
                            "Document"
                          ],
                          "dataType": "PromptRunner",
                          "id": "PromptRunner-xlWSo"
                        }
                      },
                      "style": {
                        "stroke": "#555"
                      },
                      "className": "stroke-foreground  stroke-connection",
                      "animated": false,
                      "id": "reactflow__edge-PromptRunner-xlWSo{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œPromptRunnerœ,œidœ:œPromptRunner-xlWSoœ}-PromptTemplate-PorXG{œfieldNameœ:œdescriptionœ,œidœ:œPromptTemplate-PorXGœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}",
                      "selected": true
                    }
                  ],
                  "viewport": {
                    "x": -168.33144778764927,
                    "y": 154.1876446808816,
                    "zoom": 0.40028423858995177
                  }
                },
                "is_component": false,
                "name": "Peppy Yonath",
                "description": "",
                "id": "1QzNQ"
              }
            }
          },
          "id": "CustomComponent-9gFUc",
          "position": {
            "x": 2164.0618366534,
            "y": 117.44768008031713
          },
          "type": "genericNode",
          "selected": false,
          "dragging": false,
          "positionAbsolute": {
            "x": 2164.0618366534,
            "y": 117.44768008031713
          }
        },
        {
          "width": 384,
          "height": 559,
          "id": "ChatOpenAI-ZHndq",
          "type": "genericNode",
          "position": {
            "x": 1556.5799430567931,
            "y": -380.16246228972193
          },
          "data": {
            "type": "ChatOpenAI",
            "node": {
              "template": {
                "callbacks": {
                  "type": "langchain_core.callbacks.base.BaseCallbackHandler",
                  "required": false,
                  "placeholder": "",
                  "list": true,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "callbacks",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "async_client": {
                  "type": "Any",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "async_client",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "cache": {
                  "type": "bool",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "cache",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "client": {
                  "type": "Any",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "client",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "default_headers": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "default_headers",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "default_query": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "default_query",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "http_client": {
                  "type": "Any",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "http_client",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "max_retries": {
                  "type": "int",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": 2,
                  "fileTypes": [],
                  "password": false,
                  "name": "max_retries",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "max_tokens": {
                  "type": "int",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "password": true,
                  "name": "max_tokens",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "value": ""
                },
                "metadata": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "metadata",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "model_kwargs": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "model_kwargs",
                  "advanced": true,
                  "dynamic": false,
                  "info": ""
                },
                "model_name": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "gpt-4-1106-preview",
                  "fileTypes": [],
                  "password": false,
                  "options": [
                    "gpt-4-1106-preview",
                    "gpt-4-vision-preview",
                    "gpt-4",
                    "gpt-4-32k",
                    "gpt-3.5-turbo",
                    "gpt-3.5-turbo-16k"
                  ],
                  "name": "model_name",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "n": {
                  "type": "int",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": 1,
                  "fileTypes": [],
                  "password": false,
                  "name": "n",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "openai_api_base": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "openai_api_base",
                  "display_name": "OpenAI API Base",
                  "advanced": true,
                  "dynamic": false,
                  "info": "\nThe base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.\n"
                },
                "openai_api_key": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "",
                  "fileTypes": [],
                  "password": true,
                  "name": "openai_api_key",
                  "display_name": "OpenAI API Key",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "openai_organization": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "openai_organization",
                  "display_name": "OpenAI Organization",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "openai_proxy": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "openai_proxy",
                  "display_name": "OpenAI Proxy",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "request_timeout": {
                  "type": "float",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "request_timeout",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "rangeSpec": {
                    "min": -1,
                    "max": 1,
                    "step": 0.1
                  }
                },
                "streaming": {
                  "type": "bool",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "streaming",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "tags": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": true,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "tags",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "temperature": {
                  "type": "float",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "0.1",
                  "fileTypes": [],
                  "password": false,
                  "name": "temperature",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "rangeSpec": {
                    "min": -1,
                    "max": 1,
                    "step": 0.1
                  }
                },
                "tiktoken_model_name": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "tiktoken_model_name",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "verbose": {
                  "type": "bool",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "verbose",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "_type": "ChatOpenAI"
              },
              "description": "`OpenAI` Chat large language models API.",
              "base_classes": [
                "BaseLanguageModel",
                "ChatOpenAI",
                "BaseChatModel",
                "BaseLLM"
              ],
              "display_name": "ChatOpenAI",
              "documentation": "https://python.langchain.com/docs/modules/model_io/models/chat/integrations/openai",
              "custom_fields": {},
              "output_types": [],
              "field_formatters": {},
              "beta": false,
              "outputs": [
                {
                  "types": [],
                  "name": "",
                  "display_name": "",
                  "hidden": false
                }
              ]
            },
            "id": "ChatOpenAI-ZHndq"
          },
          "selected": false,
          "positionAbsolute": {
            "x": 1556.5799430567931,
            "y": -380.16246228972193
          },
          "dragging": false
        }
      ],
      "edges": [
        {
          "source": "OpenAIEmbeddings-KXHTX",
          "target": "Chroma-nvZ2S",
          "sourceHandle": "{œdataTypeœ:œOpenAIEmbeddingsœ,œidœ:œOpenAIEmbeddings-KXHTXœ,œnameœ:œœ,œoutput_typesœ:[null]}",
          "targetHandle": "{œfieldNameœ:œembeddingœ,œidœ:œChroma-nvZ2Sœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}",
          "id": "reactflow__edge-OpenAIEmbeddings-KXHTX{œdataTypeœ:œOpenAIEmbeddingsœ,œidœ:œOpenAIEmbeddings-KXHTXœ,œnameœ:œœ,œoutput_typesœ:[null]}-Chroma-nvZ2S{œfieldNameœ:œembeddingœ,œidœ:œChroma-nvZ2Sœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}",
          "data": {
            "targetHandle": {
              "fieldName": "embedding",
              "id": "Chroma-nvZ2S",
              "inputTypes": null,
              "type": "Embeddings"
            },
            "sourceHandle": {
              "dataType": "OpenAIEmbeddings",
              "id": "OpenAIEmbeddings-KXHTX",
              "name": "",
              "output_types": [
                null
              ]
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "",
          "animated": false,
          "selected": false
        },
        {
          "source": "CustomComponent-20MV3",
          "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-20MV3œ,œnameœ:œDocumentœ,œoutput_typesœ:[œDocumentœ]}",
          "target": "CharacterTextSplitter-uztx1",
          "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œCharacterTextSplitter-uztx1œ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
          "data": {
            "targetHandle": {
              "fieldName": "documents",
              "id": "CharacterTextSplitter-uztx1",
              "inputTypes": null,
              "type": "Document"
            },
            "sourceHandle": {
              "dataType": "CustomComponent",
              "id": "CustomComponent-20MV3",
              "name": "Document",
              "output_types": [
                "Document"
              ]
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "",
          "animated": false,
          "id": "reactflow__edge-CustomComponent-20MV3{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-20MV3œ,œnameœ:œDocumentœ,œoutput_typesœ:[œDocumentœ]}-CharacterTextSplitter-uztx1{œfieldNameœ:œdocumentsœ,œidœ:œCharacterTextSplitter-uztx1œ,œinputTypesœ:null,œtypeœ:œDocumentœ}"
        },
        {
          "source": "CharacterTextSplitter-uztx1",
          "sourceHandle": "{œdataTypeœ:œCharacterTextSplitterœ,œidœ:œCharacterTextSplitter-uztx1œ,œnameœ:œDocumentœ,œoutput_typesœ:[œDocumentœ]}",
          "target": "Chroma-nvZ2S",
          "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œChroma-nvZ2Sœ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
          "data": {
            "targetHandle": {
              "fieldName": "documents",
              "id": "Chroma-nvZ2S",
              "inputTypes": null,
              "type": "Document"
            },
            "sourceHandle": {
              "dataType": "CharacterTextSplitter",
              "id": "CharacterTextSplitter-uztx1",
              "name": "Document",
              "output_types": [
                "Document"
              ]
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "",
          "animated": false,
          "id": "reactflow__edge-CharacterTextSplitter-uztx1{œdataTypeœ:œCharacterTextSplitterœ,œidœ:œCharacterTextSplitter-uztx1œ,œnameœ:œDocumentœ,œoutput_typesœ:[œDocumentœ]}-Chroma-nvZ2S{œfieldNameœ:œdocumentsœ,œidœ:œChroma-nvZ2Sœ,œinputTypesœ:null,œtypeœ:œDocumentœ}"
        },
        {
          "source": "ChatOpenAI-xGCiM",
          "sourceHandle": "{œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-xGCiMœ,œnameœ:œœ,œoutput_typesœ:[null]}",
          "target": "CustomComponent-9gFUc",
          "targetHandle": "{œfieldNameœ:œllm_PromptRunner-rASGO_PromptRunner-jv3Cbœ,œidœ:œCustomComponent-9gFUcœ,œinputTypesœ:null,œproxyœ:{œfieldœ:œllm_PromptRunner-rASGOœ,œidœ:œPromptRunner-xlWSoœ},œtypeœ:œBaseLLMœ}",
          "data": {
            "targetHandle": {
              "fieldName": "llm_PromptRunner-rASGO_PromptRunner-jv3Cb",
              "id": "CustomComponent-9gFUc",
              "inputTypes": null,
              "proxy": {
                "field": "llm_PromptRunner-rASGO",
                "id": "PromptRunner-xlWSo"
              },
              "type": "BaseLLM"
            },
            "sourceHandle": {
              "dataType": "ChatOpenAI",
              "id": "ChatOpenAI-xGCiM",
              "name": "",
              "output_types": [
                null
              ]
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "",
          "animated": false,
          "id": "reactflow__edge-ChatOpenAI-xGCiM{œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-xGCiMœ,œnameœ:œœ,œoutput_typesœ:[null]}-CustomComponent-9gFUc{œfieldNameœ:œllm_PromptRunner-rASGO_PromptRunner-jv3Cbœ,œidœ:œCustomComponent-9gFUcœ,œinputTypesœ:null,œproxyœ:{œfieldœ:œllm_PromptRunner-rASGOœ,œidœ:œPromptRunner-jv3Cbœ},œtypeœ:œBaseLLMœ}"
        },
        {
          "source": "ChatOpenAI-ZHndq",
          "sourceHandle": "{œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-ZHndqœ,œnameœ:œœ,œoutput_typesœ:[null]}",
          "target": "CustomComponent-9gFUc",
          "targetHandle": "{œfieldNameœ:œllm_CustomComponent-63aa3œ,œidœ:œCustomComponent-9gFUcœ,œinputTypesœ:null,œproxyœ:{œfieldœ:œllmœ,œidœ:œCustomComponent-Ug9Uzœ},œtypeœ:œBaseLLMœ}",
          "data": {
            "targetHandle": {
              "fieldName": "llm_CustomComponent-63aa3",
              "id": "CustomComponent-9gFUc",
              "inputTypes": null,
              "proxy": {
                "field": "llm",
                "id": "CustomComponent-Ug9Uz"
              },
              "type": "BaseLLM"
            },
            "sourceHandle": {
              "dataType": "ChatOpenAI",
              "id": "ChatOpenAI-ZHndq",
              "name": "",
              "output_types": [
                null
              ]
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "",
          "animated": false,
          "id": "reactflow__edge-ChatOpenAI-ZHndq{œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-ZHndqœ,œnameœ:œœ,œoutput_typesœ:[null]}-CustomComponent-9gFUc{œfieldNameœ:œllm_CustomComponent-63aa3œ,œidœ:œCustomComponent-9gFUcœ,œinputTypesœ:null,œproxyœ:{œfieldœ:œllmœ,œidœ:œCustomComponent-63aa3œ},œtypeœ:œBaseLLMœ}"
        },
        {
          "source": "CharacterTextSplitter-uztx1",
          "sourceHandle": "{œdataTypeœ:œCharacterTextSplitterœ,œidœ:œCharacterTextSplitter-uztx1œ,œnameœ:œDocumentœ,œoutput_typesœ:[œDocumentœ]}",
          "target": "CustomComponent-9gFUc",
          "targetHandle": "{œfieldNameœ:œdocuments_CustomComponent-GWl0s_PromptRunner-jv3Cbœ,œidœ:œCustomComponent-9gFUcœ,œinputTypesœ:null,œproxyœ:{œfieldœ:œdocuments_CustomComponent-GWl0sœ,œidœ:œPromptRunner-xlWSoœ},œtypeœ:œDocumentœ}",
          "data": {
            "targetHandle": {
              "fieldName": "documents_CustomComponent-GWl0s_PromptRunner-jv3Cb",
              "id": "CustomComponent-9gFUc",
              "inputTypes": null,
              "proxy": {
                "field": "documents_CustomComponent-GWl0s",
                "id": "PromptRunner-xlWSo"
              },
              "type": "Document"
            },
            "sourceHandle": {
              "dataType": "CharacterTextSplitter",
              "id": "CharacterTextSplitter-uztx1",
              "name": "Document",
              "output_types": [
                "Document"
              ]
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "",
          "animated": false,
          "id": "reactflow__edge-CharacterTextSplitter-uztx1{œdataTypeœ:œCharacterTextSplitterœ,œidœ:œCharacterTextSplitter-uztx1œ,œnameœ:œDocumentœ,œoutput_typesœ:[œDocumentœ]}-CustomComponent-9gFUc{œfieldNameœ:œdocuments_CustomComponent-GWl0s_PromptRunner-jv3Cbœ,œidœ:œCustomComponent-9gFUcœ,œinputTypesœ:null,œproxyœ:{œfieldœ:œdocuments_CustomComponent-GWl0sœ,œidœ:œPromptRunner-jv3Cbœ},œtypeœ:œDocumentœ}"
        }
      ],
      "viewport": {
        "x": 249.17558233066723,
        "y": 227.865224491226,
        "zoom": 0.19614602447418747
      }
    },
    "date_created": "2024-07-09T10:10:00.938Z",
    "date_updated": "2024-07-09T10:10:01.039Z",
    "status": "Public",
    "sort": null,
    "user_updated": "68eb9d36-2010-4100-94ae-b255435f5d0b",
    "user_created": {
      "username": "elitexp",
      "first_name": "Sujip",
      "last_name": "Maharjan",
      "id": "68eb9d36-2010-4100-94ae-b255435f5d0b"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:04.066Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 50,
    "converter_version": "1.0.0"
  }
}