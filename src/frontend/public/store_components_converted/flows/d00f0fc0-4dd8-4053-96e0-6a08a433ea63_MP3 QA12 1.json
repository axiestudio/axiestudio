{
  "id": "d00f0fc0-4dd8-4053-96e0-6a08a433ea63",
  "name": "MP3 QA12 (1)",
  "description": "Ask any questions to an MP3 file (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "FLOW",
  "is_component": false,
  "author": {
    "username": "sdgdgdgfdgdgdg",
    "first_name": "dj",
    "last_name": "gong",
    "id": "308dfa54-aadc-4140-bdf3-c6a29d7ff6ed",
    "full_name": "dj gong"
  },
  "store_url": "https://www.langflow.store/store/component/d00f0fc0-4dd8-4053-96e0-6a08a433ea63",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-03-21T09:08:46.365Z",
    "updated": "2024-03-21T09:08:46.481Z",
    "downloaded": "2025-08-19T17:50:05.772Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "0.6.7a5",
    "private": false,
    "status": "Public"
  },
  "data": {
    "nodes": [
      {
        "width": 384,
        "height": 469,
        "id": "PromptTemplate-OCBKP",
        "type": "genericNode",
        "position": {
          "x": -289.1735805946371,
          "y": -324.5877264063523
        },
        "data": {
          "type": "PromptTemplate",
          "node": {
            "template": {
              "output_parser": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "output_parser",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "type": "BaseOutputParser",
                "list": false
              },
              "input_types": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "input_types",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "type": "dict",
                "list": false
              },
              "input_variables": {
                "required": true,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "input_variables",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "type": "str",
                "list": true,
                "value": [
                  "transcription",
                  "question"
                ]
              },
              "partial_variables": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "partial_variables",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "type": "dict",
                "list": false
              },
              "template": {
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": true,
                "password": false,
                "name": "template",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "type": "prompt",
                "list": false,
                "value": "read this transcript text and answer questions about it:\n\ntranscription:\n\n{transcription}\n\nquestion:\n{question}"
              },
              "template_format": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "value": "f-string",
                "password": false,
                "name": "template_format",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "type": "str",
                "list": false
              },
              "validate_template": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "value": false,
                "password": false,
                "name": "validate_template",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "type": "bool",
                "list": false
              },
              "_type": "PromptTemplate",
              "question": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": true,
                "value": "",
                "password": false,
                "name": "question",
                "display_name": "question",
                "advanced": false,
                "input_types": [
                  "Document",
                  "BaseOutputParser"
                ],
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false
              },
              "transcription": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": true,
                "value": "",
                "password": false,
                "name": "transcription",
                "display_name": "transcription",
                "advanced": false,
                "input_types": [
                  "Document",
                  "BaseOutputParser"
                ],
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false
              }
            },
            "description": "A prompt template for a language model.",
            "base_classes": [
              "PromptTemplate",
              "StringPromptTemplate",
              "BasePromptTemplate"
            ],
            "name": "",
            "display_name": "PromptTemplate",
            "documentation": "https://python.langchain.com/docs/modules/model_io/prompts/prompt_templates/",
            "custom_fields": {
              "": [
                "transcription",
                "question"
              ],
              "template": [
                "transcription",
                "question"
              ]
            },
            "output_types": [],
            "full_path": null,
            "field_formatters": {},
            "beta": false,
            "error": null
          },
          "id": "PromptTemplate-OCBKP"
        },
        "selected": false,
        "positionAbsolute": {
          "x": -289.1735805946371,
          "y": -324.5877264063523
        },
        "dragging": false
      },
      {
        "width": 384,
        "height": 339,
        "id": "LLMChain-u8awQ",
        "type": "genericNode",
        "position": {
          "x": 446.09658293734606,
          "y": -456.8785639398624
        },
        "data": {
          "type": "LLMChain",
          "node": {
            "template": {
              "code": {
                "dynamic": true,
                "required": true,
                "placeholder": "",
                "show": false,
                "multiline": true,
                "value": "from typing import Callable, Optional, Union\n\nfrom langchain.chains import LLMChain\n\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import (\n    BaseLanguageModel,\n    BaseMemory,\n    BasePromptTemplate,\n    Chain,\n)\n\n\nclass LLMChainComponent(CustomComponent):\n    display_name = \"LLMChain\"\n    description = \"Chain to run queries against LLMs\"\n\n    def build_config(self):\n        return {\n            \"prompt\": {\"display_name\": \"Prompt\"},\n            \"llm\": {\"display_name\": \"LLM\"},\n            \"memory\": {\"display_name\": \"Memory\"},\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        prompt: BasePromptTemplate,\n        llm: BaseLanguageModel,\n        memory: Optional[BaseMemory] = None,\n    ) -> Union[Chain, Callable]:\n        return LLMChain(prompt=prompt, llm=llm, memory=memory)\n",
                "password": false,
                "name": "code",
                "advanced": false,
                "type": "code",
                "list": false
              },
              "_type": "CustomComponent",
              "llm": {
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "llm",
                "display_name": "LLM",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "BaseLanguageModel",
                "list": false
              },
              "memory": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "memory",
                "display_name": "Memory",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "BaseMemory",
                "list": false
              },
              "prompt": {
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "prompt",
                "display_name": "Prompt",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "BasePromptTemplate",
                "list": false
              }
            },
            "description": "Chain to run queries against LLMs",
            "base_classes": [
              "Chain",
              "Callable"
            ],
            "display_name": "LLMChain",
            "custom_fields": {
              "llm": null,
              "memory": null,
              "prompt": null
            },
            "output_types": [
              "LLMChain"
            ],
            "documentation": "",
            "beta": true,
            "error": null
          },
          "id": "LLMChain-u8awQ"
        },
        "selected": false,
        "positionAbsolute": {
          "x": 446.09658293734606,
          "y": -456.8785639398624
        },
        "dragging": false
      },
      {
        "width": 384,
        "height": 629,
        "id": "ChatOpenAI-nl3Lg",
        "type": "genericNode",
        "position": {
          "x": 58.615227961219375,
          "y": -1342.2953425221415
        },
        "data": {
          "type": "ChatOpenAI",
          "node": {
            "template": {
              "callbacks": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "callbacks",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "langchain_core.callbacks.base.BaseCallbackHandler",
                "list": true
              },
              "async_client": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "async_client",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "Any",
                "list": false
              },
              "cache": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "cache",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "bool",
                "list": false
              },
              "client": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "client",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "Any",
                "list": false
              },
              "default_headers": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "default_headers",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "dict",
                "list": false
              },
              "default_query": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "default_query",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "dict",
                "list": false
              },
              "http_client": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "http_client",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "Any",
                "list": false
              },
              "max_retries": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "value": 2,
                "password": false,
                "name": "max_retries",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "int",
                "list": false
              },
              "max_tokens": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": true,
                "name": "max_tokens",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "int",
                "list": false,
                "value": ""
              },
              "metadata": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "metadata",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "dict",
                "list": false
              },
              "model_kwargs": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "model_kwargs",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "dict",
                "list": false
              },
              "model_name": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "gpt-3.5-turbo-16k",
                "password": false,
                "options": [
                  "gpt-4-1106-preview",
                  "gpt-4",
                  "gpt-4-32k",
                  "gpt-3.5-turbo",
                  "gpt-3.5-turbo-16k"
                ],
                "name": "model_name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": true
              },
              "n": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "value": 1,
                "password": false,
                "name": "n",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "int",
                "list": false
              },
              "openai_api_base": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "openai_api_base",
                "display_name": "OpenAI API Base",
                "advanced": false,
                "dynamic": false,
                "info": "\nThe base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.\n",
                "type": "str",
                "list": false
              },
              "openai_api_key": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "",
                "password": true,
                "name": "openai_api_key",
                "display_name": "OpenAI API Key",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false
              },
              "openai_organization": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "openai_organization",
                "display_name": "OpenAI Organization",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false
              },
              "openai_proxy": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "openai_proxy",
                "display_name": "OpenAI Proxy",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false
              },
              "request_timeout": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "request_timeout",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "float",
                "list": false
              },
              "streaming": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "value": false,
                "password": false,
                "name": "streaming",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "bool",
                "list": false
              },
              "tags": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "tags",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": true
              },
              "temperature": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": 0.7,
                "password": false,
                "name": "temperature",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "float",
                "list": false
              },
              "tiktoken_model_name": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "tiktoken_model_name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false
              },
              "verbose": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "value": false,
                "password": false,
                "name": "verbose",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "bool",
                "list": false
              },
              "_type": "ChatOpenAI"
            },
            "description": "`OpenAI` Chat large language models API.",
            "base_classes": [
              "ChatOpenAI",
              "BaseChatModel",
              "BaseLanguageModel",
              "BaseLLM"
            ],
            "display_name": "ChatOpenAI",
            "custom_fields": {},
            "output_types": [],
            "documentation": "https://python.langchain.com/docs/modules/model_io/models/chat/integrations/openai",
            "beta": false,
            "error": null
          },
          "id": "ChatOpenAI-nl3Lg"
        },
        "selected": false,
        "positionAbsolute": {
          "x": 58.615227961219375,
          "y": -1342.2953425221415
        },
        "dragging": false
      },
      {
        "id": "CustomComponent-4WYUF",
        "type": "genericNode",
        "position": {
          "x": -783.0766802727608,
          "y": -1072.1044579037416
        },
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "uploaded_file": {
                "type": "file",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [
                  ".mp3",
                  ".ogg",
                  ".webm"
                ],
                "file_path": "",
                "password": false,
                "name": "uploaded_file",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": false,
                "value": ""
              },
              "AssemblyAIKey": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "AssemblyAIKey",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "802dbb3da8994854b2c9605f0857d5a3"
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio import CustomComponent\nfrom axiestudio.field_typing import Data\n\nfrom axiestudio import CustomComponent\nimport subprocess\nimport sys\nimport base64\nfrom tempfile import NamedTemporaryFile\n\ndef install(package):\n    subprocess.check_call([sys.executable, \"-m\", \"pip\", \"install\", package])\n    return 1\n\ninstall(\"assemblyai\")\n\nclass FileUploadComponent(CustomComponent):\n    display_name = \"AssemblyAI Transcriber\"\n    description = \"This component processes and convert audio and video files to text using AssemblyAI API\"\n    import assemblyai as aai\n    \n    def build_config(self):\n        return {\n            'uploaded_file': {\n                \"suffixes\": ['.mp3', '.ogg', '.webm'],\n                'field_type': 'file', \n                'file_types': ['mp3', 'ogg', 'webm'],\n                'required': True\n            },\n            \"language\": {\n                \"display_name\": \"language\",\n                \"advanced\": False,\n                \"required\": True,\n                \"options\": [\n                    \"Global English\",\n                    \"Australian English\",\n                    \"British English\",\n                    \"US English\",\n                    \"Spanish\",\n                    \"French\",\n                    \"German\",\n                    \"Italian\",\n                    \"Portuguese\",\n                    \"Dutch\",\n                    \"Hindi\",\n                    \"Japanese\",\n                    \"Chinese\",\n                    \"Finnish\",\n                    \"Korean\",\n                    \"Polish\",\n                    \"Russian\",\n                    \"Turkish\",\n                    \"Ukrainian\",\n                    \"Vietnamese\",\n                ],\n            },\n        }\n    \n    def build(self, uploaded_file: bytes, AssemblyAIKey: str, language: str) -> str:\n        def get_language_code(language):\n            language_dict = {\n                \"Global English\": \"en\",\n                \"Australian English\": \"en_au\",\n                \"British English\": \"en_uk\",\n                \"US English\": \"en_us\",\n                \"Spanish\": \"es\",\n                \"French\": \"fr\",\n                \"German\": \"de\",\n                \"Italian\": \"it\",\n                \"Portuguese\": \"pt\",\n                \"Dutch\": \"nl\",\n                \"Hindi\": \"hi\",\n                \"Japanese\": \"ja\",\n                \"Chinese\": \"zh\",\n                \"Finnish\": \"fi\",\n                \"Korean\": \"ko\",\n                \"Polish\": \"pl\",\n                \"Russian\": \"ru\",\n                \"Turkish\": \"tr\",\n                \"Ukrainian\": \"uk\",\n                \"Vietnamese\": \"vi\",\n            }\n            return language_dict.get(language, \"Unknown language\")\n        import assemblyai as aai\n        aai.settings.api_key = AssemblyAIKey\n        language = get_language_code(language)\n        config = aai.TranscriptionConfig(language_code=language, speaker_labels=True)\n        transcriber = aai.Transcriber(config=config)\n        with open(uploaded_file, 'rb') as file:\n            file_contents = file.read()\n        b64_contents = base64.b64encode(file_contents).decode('utf-8')\n    \n        tmp_file = NamedTemporaryFile(delete=False, suffix=\".mp3\")\n        with open(tmp_file.name, 'wb') as f:  # Open the file in binary mode\n            f.write(base64.b64decode(b64_contents))  # Decode the base64 string back into bytes\n        transcript = transcriber.transcribe(str(tmp_file.name))\n        subprocess.run([\"rm\", tmp_file.name], check=True)\n        if(str(transcript.text) == 'None'):\n            return \"No text was detected.\"\n        return str(transcript.text)\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "title_case": false
              },
              "language": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "options": [
                  "Global English",
                  "Australian English",
                  "British English",
                  "US English",
                  "Spanish",
                  "French",
                  "German",
                  "Italian",
                  "Portuguese",
                  "Dutch",
                  "Hindi",
                  "Japanese",
                  "Chinese",
                  "Finnish",
                  "Korean",
                  "Polish",
                  "Russian",
                  "Turkish",
                  "Ukrainian",
                  "Vietnamese"
                ],
                "name": "language",
                "display_name": "language",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": "Portuguese"
              },
              "_type": "CustomComponent"
            },
            "description": "This component processes and convert audio and video files to text using AssemblyAI API",
            "base_classes": [
              "str",
              "Text",
              "object"
            ],
            "display_name": "AssemblyAI Transcriber (1)",
            "documentation": "",
            "custom_fields": {
              "uploaded_file": null,
              "AssemblyAIKey": null,
              "language": null
            },
            "output_types": [
              "Text"
            ],
            "field_formatters": {},
            "frozen": false,
            "field_order": [],
            "beta": false,
            "official": false
          },
          "id": "CustomComponent-4WYUF"
        },
        "selected": false,
        "width": 384,
        "height": 493,
        "positionAbsolute": {
          "x": -783.0766802727608,
          "y": -1072.1044579037416
        },
        "dragging": false
      }
    ],
    "edges": [
      {
        "source": "PromptTemplate-OCBKP",
        "sourceHandle": "{œbaseClassesœ:[œPromptTemplateœ,œStringPromptTemplateœ,œBasePromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-OCBKPœ}",
        "target": "LLMChain-u8awQ",
        "targetHandle": "{œfieldNameœ:œpromptœ,œidœ:œLLMChain-u8awQœ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}",
        "data": {
          "targetHandle": {
            "fieldName": "prompt",
            "id": "LLMChain-u8awQ",
            "inputTypes": null,
            "type": "BasePromptTemplate"
          },
          "sourceHandle": {
            "baseClasses": [
              "PromptTemplate",
              "StringPromptTemplate",
              "BasePromptTemplate"
            ],
            "dataType": "PromptTemplate",
            "id": "PromptTemplate-OCBKP"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-gray-900  stroke-connection",
        "animated": false,
        "id": "reactflow__edge-PromptTemplate-OCBKP{œbaseClassesœ:[œPromptTemplateœ,œStringPromptTemplateœ,œBasePromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-OCBKPœ}-LLMChain-u8awQ{œfieldNameœ:œpromptœ,œidœ:œLLMChain-u8awQœ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}"
      },
      {
        "source": "ChatOpenAI-nl3Lg",
        "sourceHandle": "{œbaseClassesœ:[œChatOpenAIœ,œBaseChatModelœ,œBaseLanguageModelœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-nl3Lgœ}",
        "target": "LLMChain-u8awQ",
        "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œLLMChain-u8awQœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}",
        "data": {
          "targetHandle": {
            "fieldName": "llm",
            "id": "LLMChain-u8awQ",
            "inputTypes": null,
            "type": "BaseLanguageModel"
          },
          "sourceHandle": {
            "baseClasses": [
              "ChatOpenAI",
              "BaseChatModel",
              "BaseLanguageModel",
              "BaseLLM"
            ],
            "dataType": "ChatOpenAI",
            "id": "ChatOpenAI-nl3Lg"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-gray-900  stroke-connection",
        "animated": false,
        "id": "reactflow__edge-ChatOpenAI-nl3Lg{œbaseClassesœ:[œChatOpenAIœ,œBaseChatModelœ,œBaseLanguageModelœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-nl3Lgœ}-LLMChain-u8awQ{œfieldNameœ:œllmœ,œidœ:œLLMChain-u8awQœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}"
      },
      {
        "source": "CustomComponent-4WYUF",
        "sourceHandle": "{œbaseClassesœ:[œstrœ,œTextœ,œobjectœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-4WYUFœ}",
        "target": "PromptTemplate-OCBKP",
        "targetHandle": "{œfieldNameœ:œquestionœ,œidœ:œPromptTemplate-OCBKPœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}",
        "data": {
          "targetHandle": {
            "fieldName": "question",
            "id": "PromptTemplate-OCBKP",
            "inputTypes": [
              "Document",
              "BaseOutputParser"
            ],
            "type": "str"
          },
          "sourceHandle": {
            "baseClasses": [
              "str"
            ],
            "dataType": "CustomComponent",
            "id": "CustomComponent-Is6ak"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-gray-900  stroke-connection",
        "animated": false,
        "id": "reactflow__edge-CustomComponent-4WYUF{œbaseClassesœ:[œstrœ,œTextœ,œobjectœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-4WYUFœ}-PromptTemplate-OCBKP{œfieldNameœ:œquestionœ,œidœ:œPromptTemplate-OCBKPœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}"
      }
    ],
    "viewport": {
      "x": 577.4954935646756,
      "y": 672.0969607175095,
      "zoom": 0.48632747370614304
    }
  },
  "metadata": {
    "PromptTemplate": {
      "count": 1
    },
    "LLMChain": {
      "count": 1
    },
    "ChatOpenAI": {
      "count": 1
    },
    "CustomComponent": {
      "count": 1
    },
    "total": 4
  },
  "original": {
    "id": "d00f0fc0-4dd8-4053-96e0-6a08a433ea63",
    "name": "MP3 QA12 (1)",
    "description": "Ask any questions to an MP3 file",
    "is_component": false,
    "liked_by_count": "2",
    "downloads_count": "32",
    "metadata": {
      "PromptTemplate": {
        "count": 1
      },
      "LLMChain": {
        "count": 1
      },
      "ChatOpenAI": {
        "count": 1
      },
      "CustomComponent": {
        "count": 1
      },
      "total": 4
    },
    "last_tested_version": "0.6.7a5",
    "private": false,
    "data": {
      "nodes": [
        {
          "width": 384,
          "height": 469,
          "id": "PromptTemplate-OCBKP",
          "type": "genericNode",
          "position": {
            "x": -289.1735805946371,
            "y": -324.5877264063523
          },
          "data": {
            "type": "PromptTemplate",
            "node": {
              "template": {
                "output_parser": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "output_parser",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "type": "BaseOutputParser",
                  "list": false
                },
                "input_types": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "input_types",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "type": "dict",
                  "list": false
                },
                "input_variables": {
                  "required": true,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "input_variables",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "type": "str",
                  "list": true,
                  "value": [
                    "transcription",
                    "question"
                  ]
                },
                "partial_variables": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "partial_variables",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "type": "dict",
                  "list": false
                },
                "template": {
                  "required": true,
                  "placeholder": "",
                  "show": true,
                  "multiline": true,
                  "password": false,
                  "name": "template",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "type": "prompt",
                  "list": false,
                  "value": "read this transcript text and answer questions about it:\n\ntranscription:\n\n{transcription}\n\nquestion:\n{question}"
                },
                "template_format": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "value": "f-string",
                  "password": false,
                  "name": "template_format",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "type": "str",
                  "list": false
                },
                "validate_template": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "value": false,
                  "password": false,
                  "name": "validate_template",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "type": "bool",
                  "list": false
                },
                "_type": "PromptTemplate",
                "question": {
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "multiline": true,
                  "value": "",
                  "password": false,
                  "name": "question",
                  "display_name": "question",
                  "advanced": false,
                  "input_types": [
                    "Document",
                    "BaseOutputParser"
                  ],
                  "dynamic": false,
                  "info": "",
                  "type": "str",
                  "list": false
                },
                "transcription": {
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "multiline": true,
                  "value": "",
                  "password": false,
                  "name": "transcription",
                  "display_name": "transcription",
                  "advanced": false,
                  "input_types": [
                    "Document",
                    "BaseOutputParser"
                  ],
                  "dynamic": false,
                  "info": "",
                  "type": "str",
                  "list": false
                }
              },
              "description": "A prompt template for a language model.",
              "base_classes": [
                "PromptTemplate",
                "StringPromptTemplate",
                "BasePromptTemplate"
              ],
              "name": "",
              "display_name": "PromptTemplate",
              "documentation": "https://python.langchain.com/docs/modules/model_io/prompts/prompt_templates/",
              "custom_fields": {
                "": [
                  "transcription",
                  "question"
                ],
                "template": [
                  "transcription",
                  "question"
                ]
              },
              "output_types": [],
              "full_path": null,
              "field_formatters": {},
              "beta": false,
              "error": null
            },
            "id": "PromptTemplate-OCBKP"
          },
          "selected": false,
          "positionAbsolute": {
            "x": -289.1735805946371,
            "y": -324.5877264063523
          },
          "dragging": false
        },
        {
          "width": 384,
          "height": 339,
          "id": "LLMChain-u8awQ",
          "type": "genericNode",
          "position": {
            "x": 446.09658293734606,
            "y": -456.8785639398624
          },
          "data": {
            "type": "LLMChain",
            "node": {
              "template": {
                "code": {
                  "dynamic": true,
                  "required": true,
                  "placeholder": "",
                  "show": false,
                  "multiline": true,
                  "value": "from typing import Callable, Optional, Union\n\nfrom langchain.chains import LLMChain\n\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import (\n    BaseLanguageModel,\n    BaseMemory,\n    BasePromptTemplate,\n    Chain,\n)\n\n\nclass LLMChainComponent(CustomComponent):\n    display_name = \"LLMChain\"\n    description = \"Chain to run queries against LLMs\"\n\n    def build_config(self):\n        return {\n            \"prompt\": {\"display_name\": \"Prompt\"},\n            \"llm\": {\"display_name\": \"LLM\"},\n            \"memory\": {\"display_name\": \"Memory\"},\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        prompt: BasePromptTemplate,\n        llm: BaseLanguageModel,\n        memory: Optional[BaseMemory] = None,\n    ) -> Union[Chain, Callable]:\n        return LLMChain(prompt=prompt, llm=llm, memory=memory)\n",
                  "password": false,
                  "name": "code",
                  "advanced": false,
                  "type": "code",
                  "list": false
                },
                "_type": "CustomComponent",
                "llm": {
                  "required": true,
                  "placeholder": "",
                  "show": true,
                  "multiline": false,
                  "password": false,
                  "name": "llm",
                  "display_name": "LLM",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "BaseLanguageModel",
                  "list": false
                },
                "memory": {
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "multiline": false,
                  "password": false,
                  "name": "memory",
                  "display_name": "Memory",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "BaseMemory",
                  "list": false
                },
                "prompt": {
                  "required": true,
                  "placeholder": "",
                  "show": true,
                  "multiline": false,
                  "password": false,
                  "name": "prompt",
                  "display_name": "Prompt",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "BasePromptTemplate",
                  "list": false
                }
              },
              "description": "Chain to run queries against LLMs",
              "base_classes": [
                "Chain",
                "Callable"
              ],
              "display_name": "LLMChain",
              "custom_fields": {
                "llm": null,
                "memory": null,
                "prompt": null
              },
              "output_types": [
                "LLMChain"
              ],
              "documentation": "",
              "beta": true,
              "error": null
            },
            "id": "LLMChain-u8awQ"
          },
          "selected": false,
          "positionAbsolute": {
            "x": 446.09658293734606,
            "y": -456.8785639398624
          },
          "dragging": false
        },
        {
          "width": 384,
          "height": 629,
          "id": "ChatOpenAI-nl3Lg",
          "type": "genericNode",
          "position": {
            "x": 58.615227961219375,
            "y": -1342.2953425221415
          },
          "data": {
            "type": "ChatOpenAI",
            "node": {
              "template": {
                "callbacks": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "callbacks",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "langchain_core.callbacks.base.BaseCallbackHandler",
                  "list": true
                },
                "async_client": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "async_client",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "Any",
                  "list": false
                },
                "cache": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "cache",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "bool",
                  "list": false
                },
                "client": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "client",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "Any",
                  "list": false
                },
                "default_headers": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "default_headers",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "dict",
                  "list": false
                },
                "default_query": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "default_query",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "dict",
                  "list": false
                },
                "http_client": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "http_client",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "Any",
                  "list": false
                },
                "max_retries": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "value": 2,
                  "password": false,
                  "name": "max_retries",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "int",
                  "list": false
                },
                "max_tokens": {
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "multiline": false,
                  "password": true,
                  "name": "max_tokens",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "int",
                  "list": false,
                  "value": ""
                },
                "metadata": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "metadata",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "dict",
                  "list": false
                },
                "model_kwargs": {
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "multiline": false,
                  "password": false,
                  "name": "model_kwargs",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "type": "dict",
                  "list": false
                },
                "model_name": {
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "multiline": false,
                  "value": "gpt-3.5-turbo-16k",
                  "password": false,
                  "options": [
                    "gpt-4-1106-preview",
                    "gpt-4",
                    "gpt-4-32k",
                    "gpt-3.5-turbo",
                    "gpt-3.5-turbo-16k"
                  ],
                  "name": "model_name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "str",
                  "list": true
                },
                "n": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "value": 1,
                  "password": false,
                  "name": "n",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "int",
                  "list": false
                },
                "openai_api_base": {
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "multiline": false,
                  "password": false,
                  "name": "openai_api_base",
                  "display_name": "OpenAI API Base",
                  "advanced": false,
                  "dynamic": false,
                  "info": "\nThe base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.\n",
                  "type": "str",
                  "list": false
                },
                "openai_api_key": {
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "multiline": false,
                  "value": "",
                  "password": true,
                  "name": "openai_api_key",
                  "display_name": "OpenAI API Key",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "str",
                  "list": false
                },
                "openai_organization": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "openai_organization",
                  "display_name": "OpenAI Organization",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "str",
                  "list": false
                },
                "openai_proxy": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "openai_proxy",
                  "display_name": "OpenAI Proxy",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "str",
                  "list": false
                },
                "request_timeout": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "request_timeout",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "float",
                  "list": false
                },
                "streaming": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "value": false,
                  "password": false,
                  "name": "streaming",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "bool",
                  "list": false
                },
                "tags": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "tags",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "str",
                  "list": true
                },
                "temperature": {
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "multiline": false,
                  "value": 0.7,
                  "password": false,
                  "name": "temperature",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "float",
                  "list": false
                },
                "tiktoken_model_name": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "password": false,
                  "name": "tiktoken_model_name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "str",
                  "list": false
                },
                "verbose": {
                  "required": false,
                  "placeholder": "",
                  "show": false,
                  "multiline": false,
                  "value": false,
                  "password": false,
                  "name": "verbose",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "type": "bool",
                  "list": false
                },
                "_type": "ChatOpenAI"
              },
              "description": "`OpenAI` Chat large language models API.",
              "base_classes": [
                "ChatOpenAI",
                "BaseChatModel",
                "BaseLanguageModel",
                "BaseLLM"
              ],
              "display_name": "ChatOpenAI",
              "custom_fields": {},
              "output_types": [],
              "documentation": "https://python.langchain.com/docs/modules/model_io/models/chat/integrations/openai",
              "beta": false,
              "error": null
            },
            "id": "ChatOpenAI-nl3Lg"
          },
          "selected": false,
          "positionAbsolute": {
            "x": 58.615227961219375,
            "y": -1342.2953425221415
          },
          "dragging": false
        },
        {
          "id": "CustomComponent-4WYUF",
          "type": "genericNode",
          "position": {
            "x": -783.0766802727608,
            "y": -1072.1044579037416
          },
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "uploaded_file": {
                  "type": "file",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [
                    ".mp3",
                    ".ogg",
                    ".webm"
                  ],
                  "file_path": "",
                  "password": false,
                  "name": "uploaded_file",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "value": ""
                },
                "AssemblyAIKey": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "AssemblyAIKey",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "802dbb3da8994854b2c9605f0857d5a3"
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio import CustomComponent\nfrom axiestudio.field_typing import Data\n\nfrom axiestudio import CustomComponent\nimport subprocess\nimport sys\nimport base64\nfrom tempfile import NamedTemporaryFile\n\ndef install(package):\n    subprocess.check_call([sys.executable, \"-m\", \"pip\", \"install\", package])\n    return 1\n\ninstall(\"assemblyai\")\n\nclass FileUploadComponent(CustomComponent):\n    display_name = \"AssemblyAI Transcriber\"\n    description = \"This component processes and convert audio and video files to text using AssemblyAI API\"\n    import assemblyai as aai\n    \n    def build_config(self):\n        return {\n            'uploaded_file': {\n                \"suffixes\": ['.mp3', '.ogg', '.webm'],\n                'field_type': 'file', \n                'file_types': ['mp3', 'ogg', 'webm'],\n                'required': True\n            },\n            \"language\": {\n                \"display_name\": \"language\",\n                \"advanced\": False,\n                \"required\": True,\n                \"options\": [\n                    \"Global English\",\n                    \"Australian English\",\n                    \"British English\",\n                    \"US English\",\n                    \"Spanish\",\n                    \"French\",\n                    \"German\",\n                    \"Italian\",\n                    \"Portuguese\",\n                    \"Dutch\",\n                    \"Hindi\",\n                    \"Japanese\",\n                    \"Chinese\",\n                    \"Finnish\",\n                    \"Korean\",\n                    \"Polish\",\n                    \"Russian\",\n                    \"Turkish\",\n                    \"Ukrainian\",\n                    \"Vietnamese\",\n                ],\n            },\n        }\n    \n    def build(self, uploaded_file: bytes, AssemblyAIKey: str, language: str) -> str:\n        def get_language_code(language):\n            language_dict = {\n                \"Global English\": \"en\",\n                \"Australian English\": \"en_au\",\n                \"British English\": \"en_uk\",\n                \"US English\": \"en_us\",\n                \"Spanish\": \"es\",\n                \"French\": \"fr\",\n                \"German\": \"de\",\n                \"Italian\": \"it\",\n                \"Portuguese\": \"pt\",\n                \"Dutch\": \"nl\",\n                \"Hindi\": \"hi\",\n                \"Japanese\": \"ja\",\n                \"Chinese\": \"zh\",\n                \"Finnish\": \"fi\",\n                \"Korean\": \"ko\",\n                \"Polish\": \"pl\",\n                \"Russian\": \"ru\",\n                \"Turkish\": \"tr\",\n                \"Ukrainian\": \"uk\",\n                \"Vietnamese\": \"vi\",\n            }\n            return language_dict.get(language, \"Unknown language\")\n        import assemblyai as aai\n        aai.settings.api_key = AssemblyAIKey\n        language = get_language_code(language)\n        config = aai.TranscriptionConfig(language_code=language, speaker_labels=True)\n        transcriber = aai.Transcriber(config=config)\n        with open(uploaded_file, 'rb') as file:\n            file_contents = file.read()\n        b64_contents = base64.b64encode(file_contents).decode('utf-8')\n    \n        tmp_file = NamedTemporaryFile(delete=False, suffix=\".mp3\")\n        with open(tmp_file.name, 'wb') as f:  # Open the file in binary mode\n            f.write(base64.b64decode(b64_contents))  # Decode the base64 string back into bytes\n        transcript = transcriber.transcribe(str(tmp_file.name))\n        subprocess.run([\"rm\", tmp_file.name], check=True)\n        if(str(transcript.text) == 'None'):\n            return \"No text was detected.\"\n        return str(transcript.text)\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "title_case": false
                },
                "language": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "options": [
                    "Global English",
                    "Australian English",
                    "British English",
                    "US English",
                    "Spanish",
                    "French",
                    "German",
                    "Italian",
                    "Portuguese",
                    "Dutch",
                    "Hindi",
                    "Japanese",
                    "Chinese",
                    "Finnish",
                    "Korean",
                    "Polish",
                    "Russian",
                    "Turkish",
                    "Ukrainian",
                    "Vietnamese"
                  ],
                  "name": "language",
                  "display_name": "language",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": "Portuguese"
                },
                "_type": "CustomComponent"
              },
              "description": "This component processes and convert audio and video files to text using AssemblyAI API",
              "base_classes": [
                "str",
                "Text",
                "object"
              ],
              "display_name": "AssemblyAI Transcriber (1)",
              "documentation": "",
              "custom_fields": {
                "uploaded_file": null,
                "AssemblyAIKey": null,
                "language": null
              },
              "output_types": [
                "Text"
              ],
              "field_formatters": {},
              "frozen": false,
              "field_order": [],
              "beta": false,
              "official": false
            },
            "id": "CustomComponent-4WYUF"
          },
          "selected": false,
          "width": 384,
          "height": 493,
          "positionAbsolute": {
            "x": -783.0766802727608,
            "y": -1072.1044579037416
          },
          "dragging": false
        }
      ],
      "edges": [
        {
          "source": "PromptTemplate-OCBKP",
          "sourceHandle": "{œbaseClassesœ:[œPromptTemplateœ,œStringPromptTemplateœ,œBasePromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-OCBKPœ}",
          "target": "LLMChain-u8awQ",
          "targetHandle": "{œfieldNameœ:œpromptœ,œidœ:œLLMChain-u8awQœ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}",
          "data": {
            "targetHandle": {
              "fieldName": "prompt",
              "id": "LLMChain-u8awQ",
              "inputTypes": null,
              "type": "BasePromptTemplate"
            },
            "sourceHandle": {
              "baseClasses": [
                "PromptTemplate",
                "StringPromptTemplate",
                "BasePromptTemplate"
              ],
              "dataType": "PromptTemplate",
              "id": "PromptTemplate-OCBKP"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-gray-900  stroke-connection",
          "animated": false,
          "id": "reactflow__edge-PromptTemplate-OCBKP{œbaseClassesœ:[œPromptTemplateœ,œStringPromptTemplateœ,œBasePromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-OCBKPœ}-LLMChain-u8awQ{œfieldNameœ:œpromptœ,œidœ:œLLMChain-u8awQœ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}"
        },
        {
          "source": "ChatOpenAI-nl3Lg",
          "sourceHandle": "{œbaseClassesœ:[œChatOpenAIœ,œBaseChatModelœ,œBaseLanguageModelœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-nl3Lgœ}",
          "target": "LLMChain-u8awQ",
          "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œLLMChain-u8awQœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}",
          "data": {
            "targetHandle": {
              "fieldName": "llm",
              "id": "LLMChain-u8awQ",
              "inputTypes": null,
              "type": "BaseLanguageModel"
            },
            "sourceHandle": {
              "baseClasses": [
                "ChatOpenAI",
                "BaseChatModel",
                "BaseLanguageModel",
                "BaseLLM"
              ],
              "dataType": "ChatOpenAI",
              "id": "ChatOpenAI-nl3Lg"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-gray-900  stroke-connection",
          "animated": false,
          "id": "reactflow__edge-ChatOpenAI-nl3Lg{œbaseClassesœ:[œChatOpenAIœ,œBaseChatModelœ,œBaseLanguageModelœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-nl3Lgœ}-LLMChain-u8awQ{œfieldNameœ:œllmœ,œidœ:œLLMChain-u8awQœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}"
        },
        {
          "source": "CustomComponent-4WYUF",
          "sourceHandle": "{œbaseClassesœ:[œstrœ,œTextœ,œobjectœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-4WYUFœ}",
          "target": "PromptTemplate-OCBKP",
          "targetHandle": "{œfieldNameœ:œquestionœ,œidœ:œPromptTemplate-OCBKPœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}",
          "data": {
            "targetHandle": {
              "fieldName": "question",
              "id": "PromptTemplate-OCBKP",
              "inputTypes": [
                "Document",
                "BaseOutputParser"
              ],
              "type": "str"
            },
            "sourceHandle": {
              "baseClasses": [
                "str"
              ],
              "dataType": "CustomComponent",
              "id": "CustomComponent-Is6ak"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-gray-900  stroke-connection",
          "animated": false,
          "id": "reactflow__edge-CustomComponent-4WYUF{œbaseClassesœ:[œstrœ,œTextœ,œobjectœ],œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-4WYUFœ}-PromptTemplate-OCBKP{œfieldNameœ:œquestionœ,œidœ:œPromptTemplate-OCBKPœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}"
        }
      ],
      "viewport": {
        "x": 577.4954935646756,
        "y": 672.0969607175095,
        "zoom": 0.48632747370614304
      }
    },
    "date_created": "2024-03-21T09:08:46.365Z",
    "date_updated": "2024-03-21T09:08:46.481Z",
    "status": "Public",
    "sort": null,
    "user_updated": "308dfa54-aadc-4140-bdf3-c6a29d7ff6ed",
    "user_created": {
      "username": "sdgdgdgfdgdgdg",
      "first_name": "dj",
      "last_name": "gong",
      "id": "308dfa54-aadc-4140-bdf3-c6a29d7ff6ed"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:05.797Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 10,
    "converter_version": "1.0.0"
  }
}