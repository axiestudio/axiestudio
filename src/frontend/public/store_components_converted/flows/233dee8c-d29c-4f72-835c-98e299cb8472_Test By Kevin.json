{
  "id": "233dee8c-d29c-4f72-835c-98e299cb8472",
  "name": "Test By Kevin",
  "description": "Your Toolkit for Text Generation. (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "FLOW",
  "is_component": false,
  "author": {
    "username": "ldanielh",
    "first_name": "Luis Daniel",
    "last_name": "Huingo Chavez",
    "id": "4ea30ad9-9257-433b-b2fe-5682b7b91574",
    "full_name": "Luis Daniel Huingo Chavez"
  },
  "store_url": "https://www.langflow.store/store/component/233dee8c-d29c-4f72-835c-98e299cb8472",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-05-18T07:58:41.277Z",
    "updated": "2024-05-18T07:58:41.337Z",
    "downloaded": "2025-08-19T17:50:05.788Z"
  },
  "tags": [
    {
      "tags_id": {
        "name": "Agent",
        "id": "ccabb590-c9e8-4e56-9d6c-309955936c6c"
      }
    }
  ],
  "technical": {
    "last_tested_version": "0.6.15",
    "private": false,
    "status": "Public"
  },
  "data": {
    "nodes": [
      {
        "id": "ChatOpenAI-x13zP",
        "type": "genericNode",
        "position": {
          "x": -2215.2931096071156,
          "y": -1636.3376414945178
        },
        "data": {
          "type": "ChatOpenAI",
          "node": {
            "template": {
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from typing import Optional, Union\n\nfrom langchain.llms import BaseLLM\nfrom langchain_community.chat_models.openai import ChatOpenAI\n\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import BaseLanguageModel, NestedDict\n\n\nclass ChatOpenAIComponent(CustomComponent):\n    display_name = \"ChatOpenAI\"\n    description = \"`OpenAI` Chat large language models API.\"\n\n    def build_config(self):\n        return {\n            \"max_tokens\": {\n                \"display_name\": \"Max Tokens\",\n                \"field_type\": \"int\",\n                \"advanced\": False,\n                \"required\": False,\n            },\n            \"model_kwargs\": {\n                \"display_name\": \"Model Kwargs\",\n                \"field_type\": \"NestedDict\",\n                \"advanced\": True,\n                \"required\": False,\n            },\n            \"model_name\": {\n                \"display_name\": \"Model Name\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"options\": [\n                    \"gpt-4-turbo-preview\",\n                    \"gpt-4-0125-preview\",\n                    \"gpt-4-1106-preview\",\n                    \"gpt-4-vision-preview\",\n                    \"gpt-3.5-turbo-0125\",\n                    \"gpt-3.5-turbo-1106\",\n                ],\n            },\n            \"openai_api_base\": {\n                \"display_name\": \"OpenAI API Base\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"info\": (\n                    \"The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\\n\\n\"\n                    \"You can change this to use other APIs like JinaChat, LocalAI and Prem.\"\n                ),\n            },\n            \"openai_api_key\": {\n                \"display_name\": \"OpenAI API Key\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"password\": True,\n            },\n            \"temperature\": {\n                \"display_name\": \"Temperature\",\n                \"field_type\": \"float\",\n                \"advanced\": False,\n                \"required\": False,\n                \"value\": 0.7,\n            },\n        }\n\n    def build(\n        self,\n        max_tokens: Optional[int] = 256,\n        model_kwargs: NestedDict = {},\n        model_name: str = \"gpt-4-1106-preview\",\n        openai_api_base: Optional[str] = None,\n        openai_api_key: Optional[str] = None,\n        temperature: float = 0.7,\n    ) -> Union[BaseLanguageModel, BaseLLM]:\n        if not openai_api_base:\n            openai_api_base = \"https://api.openai.com/v1\"\n        return ChatOpenAI(\n            max_tokens=max_tokens,\n            model_kwargs=model_kwargs,\n            model=model_name,\n            base_url=openai_api_base,\n            api_key=openai_api_key,\n            temperature=temperature,\n        )\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "max_tokens": {
                "type": "int",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": 256,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "max_tokens",
                "display_name": "Max Tokens",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "model_kwargs": {
                "type": "NestedDict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": {},
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "model_kwargs",
                "display_name": "Model Kwargs",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "model_name": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "value": "gpt-3.5-turbo-0125",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "options": [
                  "gpt-4-turbo-preview",
                  "gpt-4-0125-preview",
                  "gpt-4-1106-preview",
                  "gpt-4-vision-preview",
                  "gpt-3.5-turbo-0125",
                  "gpt-3.5-turbo-1106"
                ],
                "name": "model_name",
                "display_name": "Model Name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "openai_api_base": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "openai_api_base",
                "display_name": "OpenAI API Base",
                "advanced": false,
                "dynamic": false,
                "info": "The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.",
                "title_case": true
              },
              "openai_api_key": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": true,
                "name": "openai_api_key",
                "display_name": "OpenAI API Key",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true,
                "value": ""
              },
              "temperature": {
                "type": "float",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": 0.7,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "temperature",
                "display_name": "Temperature",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "rangeSpec": {
                  "min": -1,
                  "max": 1,
                  "step": 0.1
                },
                "title_case": true
              },
              "_type": "CustomComponent"
            },
            "description": "`OpenAI` Chat large language models API.",
            "base_classes": [
              "BaseLanguageModel",
              "BaseLanguageModel",
              "BaseLLM"
            ],
            "display_name": "ChatOpenAI",
            "documentation": "",
            "custom_fields": {
              "max_tokens": null,
              "model_kwargs": null,
              "model_name": null,
              "openai_api_base": null,
              "openai_api_key": null,
              "temperature": null
            },
            "output_types": [
              "BaseLanguageModel",
              "BaseLLM"
            ],
            "field_formatters": {},
            "beta": true
          },
          "id": "ChatOpenAI-x13zP"
        },
        "selected": false,
        "width": 384,
        "height": 731,
        "positionAbsolute": {
          "x": -2215.2931096071156,
          "y": -1636.3376414945178
        },
        "dragging": false
      },
      {
        "id": "PromptTemplate-cMzsG",
        "type": "genericNode",
        "position": {
          "x": -2200.344166708212,
          "y": -748.027738270211
        },
        "data": {
          "type": "PromptTemplate",
          "node": {
            "template": {
              "output_parser": {
                "type": "BaseOutputParser",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "output_parser",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "input_types": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "input_types",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "input_variables": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "input_variables",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true,
                "value": []
              },
              "metadata": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "metadata",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "name": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "name",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "partial_variables": {
                "type": "dict",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "partial_variables",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "tags": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": true,
                "show": false,
                "multiline": false,
                "fileTypes": [],
                "password": false,
                "name": "tags",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "template": {
                "type": "prompt",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "fileTypes": [],
                "password": false,
                "name": "template",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true,
                "value": "You are a professional business consultant.\nYou must create questionnaires for organizations that have to transform by working differently.\nSuggest a list of 5 Follow-On Projects given the questionnaire title and the questionnaire's topics and subtopics.\n\nFollow these steps:\n0. Detect the language of the questionnaire title, the topics, and the subtopics given by the user, execute the following steps, and output in the detected language.\n1. Read the questionnaire title, the topics, and subtopics and create exactly 5 Follow-On Projects. \n2. Give each Follow-On Project a name (max. 5 words)\n3. Give each Follow-On Project a description of that Follow-On Project (max. 80 words)\n4. List for each Follow-On Project the benefits of executing such a Follow-On Project including a testimonial/source (max. 80 words).\n5. Give each Follow-On Project an estimated cost per respondent to execute that project.\n\nHere is an example:\nQuestionnaire Title: \"Project Management\", \nTopics: \"Project Planning, Team Collaboration, Project Monitoring\"\nSubtopics: \"Scope Definition, Risk Assessment, Timeline Development, Communication Methods, Conflict Resolution, Team Building, Progress Tracking, Issue Identification, Budget Tracking\"\nFOP1Name: \"Project Performance Enhancement Program\"\nFOP1Description: \"The \"Project Performance Enhancement Program\" is a follow-on project designed to leverage the insights gained from the initial \"Project Management\" questionnaire. Building on the foundational knowledge acquired in the previous phase, this project aims to take a more proactive approach to improving project management practices within the company. The goal is to enhance project outcomes, team collaboration, and overall project success.\"\nFOP1Benefit: \"The \"Project Performance Enhancement Program\" represents a strategic investment in improving the company's project management capabilities. By addressing specific weaknesses and building on strengths, the company can elevate its project management practices and achieve greater success in delivering projects that meet or exceed stakeholder expectations\"\nFOP1Cost: \"300\"\n\n6. Only output the 5 Follow-On Projects, their description, and the estimated costs.\n7. Highlight key concepts in bold.\n8. Do not include the language.\n9. Output in the following format, do not include any explanations, only provide an RFC8259-compliant JSON response following this format without deviation.\n\nOutput Format\n{{\n  \"Fop1\":{{\"FopName\":\"...\",\n  \"FopDescription\":\"...\",\n  \"FopBenefit\":\"...\",\n  \"FopCost\":\"...\"}},\n  \"Fop2\":{{\"FopName\":\"...\",\n  \"FopDescription\":\"...\",\n  \"FopBenefit\":\"...\",\n  \"FopCost\":\"...\"}},\n  \"Fop3\":{{\"FopName\":\"...\",\n  \"FopDescription\":\"...\",\n  \"FopBenefit\":\"...\",\n  \"FopCost\":\"...\"}},\n  \"Fop4\":{{\"FopName\":\"...\",\n  \"FopDescription\":\"...\",\n  \"FopBenefit\":\"...\",\n  \"FopCost\":\"...\"}},\n  \"Fop5\":{{\"FopName\":\"...\",\n  \"FopDescription\":\"...\",\n  \"FopBenefit\":\"...\",\n  \"FopCost\":\"...\"}}\n}}"
              },
              "template_format": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": "f-string",
                "fileTypes": [],
                "password": false,
                "name": "template_format",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "validate_template": {
                "type": "bool",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": false,
                "multiline": false,
                "value": false,
                "fileTypes": [],
                "password": false,
                "name": "validate_template",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "_type": "PromptTemplate"
            },
            "description": "A prompt template for a language model.",
            "icon": null,
            "base_classes": [
              "StringPromptTemplate",
              "PromptTemplate",
              "BasePromptTemplate"
            ],
            "name": "",
            "display_name": "PromptTemplate",
            "documentation": "https://python.langchain.com/docs/modules/model_io/prompts/prompt_templates/",
            "custom_fields": {
              "": []
            },
            "output_types": [],
            "full_path": null,
            "field_formatters": {},
            "beta": false,
            "error": null
          },
          "id": "PromptTemplate-cMzsG",
          "description": "A prompt template for a language model.",
          "display_name": "PromptTemplate"
        },
        "selected": false,
        "width": 384,
        "height": 281,
        "positionAbsolute": {
          "x": -2200.344166708212,
          "y": -748.027738270211
        },
        "dragging": false
      },
      {
        "id": "LLMChain-UYCcK",
        "type": "genericNode",
        "position": {
          "x": -1212.3898873711687,
          "y": -1037.502549314983
        },
        "data": {
          "type": "LLMChain",
          "node": {
            "template": {
              "llm": {
                "type": "BaseLanguageModel",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "llm",
                "display_name": "LLM",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "memory": {
                "type": "BaseMemory",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "memory",
                "display_name": "Memory",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "prompt": {
                "type": "BasePromptTemplate",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "prompt",
                "display_name": "Prompt",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": true
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from typing import Callable, Optional, Union\n\nfrom langchain.chains import LLMChain\n\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import (\n    BaseLanguageModel,\n    BaseMemory,\n    BasePromptTemplate,\n    Chain,\n)\n\n\nclass LLMChainComponent(CustomComponent):\n    display_name = \"LLMChain\"\n    description = \"Chain to run queries against LLMs\"\n\n    def build_config(self):\n        return {\n            \"prompt\": {\"display_name\": \"Prompt\"},\n            \"llm\": {\"display_name\": \"LLM\"},\n            \"memory\": {\"display_name\": \"Memory\"},\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        prompt: BasePromptTemplate,\n        llm: BaseLanguageModel,\n        memory: Optional[BaseMemory] = None,\n    ) -> Union[Chain, Callable, LLMChain]:\n        return LLMChain(prompt=prompt, llm=llm, memory=memory)\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": false,
                "dynamic": true,
                "info": "",
                "title_case": true
              },
              "_type": "CustomComponent"
            },
            "description": "Chain to run queries against LLMs",
            "base_classes": [
              "Chain",
              "Callable",
              "LLMChain",
              "Chain"
            ],
            "display_name": "LLMChain",
            "documentation": "",
            "custom_fields": {
              "prompt": null,
              "llm": null,
              "memory": null
            },
            "output_types": [
              "Chain",
              "Callable",
              "LLMChain"
            ],
            "field_formatters": {},
            "beta": true
          },
          "id": "LLMChain-UYCcK"
        },
        "selected": false,
        "width": 384,
        "height": 425,
        "positionAbsolute": {
          "x": -1212.3898873711687,
          "y": -1037.502549314983
        },
        "dragging": false
      }
    ],
    "edges": [
      {
        "source": "ChatOpenAI-x13zP",
        "sourceHandle": "{œbaseClassesœ:[œBaseLanguageModelœ,œBaseLanguageModelœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-x13zPœ}",
        "target": "LLMChain-UYCcK",
        "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œLLMChain-UYCcKœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}",
        "data": {
          "targetHandle": {
            "fieldName": "llm",
            "id": "LLMChain-UYCcK",
            "inputTypes": null,
            "type": "BaseLanguageModel"
          },
          "sourceHandle": {
            "baseClasses": [
              "BaseLanguageModel",
              "BaseLanguageModel",
              "BaseLLM"
            ],
            "dataType": "ChatOpenAI",
            "id": "ChatOpenAI-x13zP"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-foreground  stroke-connection",
        "animated": false,
        "id": "reactflow__edge-ChatOpenAI-x13zP{œbaseClassesœ:[œBaseLanguageModelœ,œBaseLanguageModelœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-x13zPœ}-LLMChain-UYCcK{œfieldNameœ:œllmœ,œidœ:œLLMChain-UYCcKœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}"
      },
      {
        "source": "PromptTemplate-cMzsG",
        "sourceHandle": "{œbaseClassesœ:[œStringPromptTemplateœ,œPromptTemplateœ,œBasePromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-cMzsGœ}",
        "target": "LLMChain-UYCcK",
        "targetHandle": "{œfieldNameœ:œpromptœ,œidœ:œLLMChain-UYCcKœ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}",
        "data": {
          "targetHandle": {
            "fieldName": "prompt",
            "id": "LLMChain-UYCcK",
            "inputTypes": null,
            "type": "BasePromptTemplate"
          },
          "sourceHandle": {
            "baseClasses": [
              "StringPromptTemplate",
              "PromptTemplate",
              "BasePromptTemplate"
            ],
            "dataType": "PromptTemplate",
            "id": "PromptTemplate-cMzsG"
          }
        },
        "style": {
          "stroke": "#555"
        },
        "className": "stroke-foreground  stroke-connection",
        "animated": false,
        "id": "reactflow__edge-PromptTemplate-cMzsG{œbaseClassesœ:[œStringPromptTemplateœ,œPromptTemplateœ,œBasePromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-cMzsGœ}-LLMChain-UYCcK{œfieldNameœ:œpromptœ,œidœ:œLLMChain-UYCcKœ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}"
      }
    ],
    "viewport": {
      "x": 1325.544325389297,
      "y": 871.4006153547726,
      "zoom": 0.5262904744827762
    }
  },
  "metadata": {
    "ChatOpenAI": {
      "count": 1
    },
    "PromptTemplate": {
      "count": 1
    },
    "LLMChain": {
      "count": 1
    },
    "total": 3
  },
  "original": {
    "id": "233dee8c-d29c-4f72-835c-98e299cb8472",
    "name": "Test By Kevin",
    "description": "Your Toolkit for Text Generation.",
    "is_component": false,
    "liked_by_count": "2",
    "downloads_count": "39",
    "metadata": {
      "ChatOpenAI": {
        "count": 1
      },
      "PromptTemplate": {
        "count": 1
      },
      "LLMChain": {
        "count": 1
      },
      "total": 3
    },
    "last_tested_version": "0.6.15",
    "private": false,
    "data": {
      "nodes": [
        {
          "id": "ChatOpenAI-x13zP",
          "type": "genericNode",
          "position": {
            "x": -2215.2931096071156,
            "y": -1636.3376414945178
          },
          "data": {
            "type": "ChatOpenAI",
            "node": {
              "template": {
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from typing import Optional, Union\n\nfrom langchain.llms import BaseLLM\nfrom langchain_community.chat_models.openai import ChatOpenAI\n\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import BaseLanguageModel, NestedDict\n\n\nclass ChatOpenAIComponent(CustomComponent):\n    display_name = \"ChatOpenAI\"\n    description = \"`OpenAI` Chat large language models API.\"\n\n    def build_config(self):\n        return {\n            \"max_tokens\": {\n                \"display_name\": \"Max Tokens\",\n                \"field_type\": \"int\",\n                \"advanced\": False,\n                \"required\": False,\n            },\n            \"model_kwargs\": {\n                \"display_name\": \"Model Kwargs\",\n                \"field_type\": \"NestedDict\",\n                \"advanced\": True,\n                \"required\": False,\n            },\n            \"model_name\": {\n                \"display_name\": \"Model Name\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"options\": [\n                    \"gpt-4-turbo-preview\",\n                    \"gpt-4-0125-preview\",\n                    \"gpt-4-1106-preview\",\n                    \"gpt-4-vision-preview\",\n                    \"gpt-3.5-turbo-0125\",\n                    \"gpt-3.5-turbo-1106\",\n                ],\n            },\n            \"openai_api_base\": {\n                \"display_name\": \"OpenAI API Base\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"info\": (\n                    \"The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\\n\\n\"\n                    \"You can change this to use other APIs like JinaChat, LocalAI and Prem.\"\n                ),\n            },\n            \"openai_api_key\": {\n                \"display_name\": \"OpenAI API Key\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"password\": True,\n            },\n            \"temperature\": {\n                \"display_name\": \"Temperature\",\n                \"field_type\": \"float\",\n                \"advanced\": False,\n                \"required\": False,\n                \"value\": 0.7,\n            },\n        }\n\n    def build(\n        self,\n        max_tokens: Optional[int] = 256,\n        model_kwargs: NestedDict = {},\n        model_name: str = \"gpt-4-1106-preview\",\n        openai_api_base: Optional[str] = None,\n        openai_api_key: Optional[str] = None,\n        temperature: float = 0.7,\n    ) -> Union[BaseLanguageModel, BaseLLM]:\n        if not openai_api_base:\n            openai_api_base = \"https://api.openai.com/v1\"\n        return ChatOpenAI(\n            max_tokens=max_tokens,\n            model_kwargs=model_kwargs,\n            model=model_name,\n            base_url=openai_api_base,\n            api_key=openai_api_key,\n            temperature=temperature,\n        )\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "max_tokens": {
                  "type": "int",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": 256,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "max_tokens",
                  "display_name": "Max Tokens",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "model_kwargs": {
                  "type": "NestedDict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": {},
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "model_kwargs",
                  "display_name": "Model Kwargs",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "model_name": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "value": "gpt-3.5-turbo-0125",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "options": [
                    "gpt-4-turbo-preview",
                    "gpt-4-0125-preview",
                    "gpt-4-1106-preview",
                    "gpt-4-vision-preview",
                    "gpt-3.5-turbo-0125",
                    "gpt-3.5-turbo-1106"
                  ],
                  "name": "model_name",
                  "display_name": "Model Name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "openai_api_base": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "openai_api_base",
                  "display_name": "OpenAI API Base",
                  "advanced": false,
                  "dynamic": false,
                  "info": "The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.",
                  "title_case": true
                },
                "openai_api_key": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": true,
                  "name": "openai_api_key",
                  "display_name": "OpenAI API Key",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true,
                  "value": ""
                },
                "temperature": {
                  "type": "float",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": 0.7,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "temperature",
                  "display_name": "Temperature",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "rangeSpec": {
                    "min": -1,
                    "max": 1,
                    "step": 0.1
                  },
                  "title_case": true
                },
                "_type": "CustomComponent"
              },
              "description": "`OpenAI` Chat large language models API.",
              "base_classes": [
                "BaseLanguageModel",
                "BaseLanguageModel",
                "BaseLLM"
              ],
              "display_name": "ChatOpenAI",
              "documentation": "",
              "custom_fields": {
                "max_tokens": null,
                "model_kwargs": null,
                "model_name": null,
                "openai_api_base": null,
                "openai_api_key": null,
                "temperature": null
              },
              "output_types": [
                "BaseLanguageModel",
                "BaseLLM"
              ],
              "field_formatters": {},
              "beta": true
            },
            "id": "ChatOpenAI-x13zP"
          },
          "selected": false,
          "width": 384,
          "height": 731,
          "positionAbsolute": {
            "x": -2215.2931096071156,
            "y": -1636.3376414945178
          },
          "dragging": false
        },
        {
          "id": "PromptTemplate-cMzsG",
          "type": "genericNode",
          "position": {
            "x": -2200.344166708212,
            "y": -748.027738270211
          },
          "data": {
            "type": "PromptTemplate",
            "node": {
              "template": {
                "output_parser": {
                  "type": "BaseOutputParser",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "output_parser",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "input_types": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "input_types",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "input_variables": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "input_variables",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true,
                  "value": []
                },
                "metadata": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "metadata",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "name": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "name",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "partial_variables": {
                  "type": "dict",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "partial_variables",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "tags": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": true,
                  "show": false,
                  "multiline": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "tags",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "template": {
                  "type": "prompt",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "fileTypes": [],
                  "password": false,
                  "name": "template",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true,
                  "value": "You are a professional business consultant.\nYou must create questionnaires for organizations that have to transform by working differently.\nSuggest a list of 5 Follow-On Projects given the questionnaire title and the questionnaire's topics and subtopics.\n\nFollow these steps:\n0. Detect the language of the questionnaire title, the topics, and the subtopics given by the user, execute the following steps, and output in the detected language.\n1. Read the questionnaire title, the topics, and subtopics and create exactly 5 Follow-On Projects. \n2. Give each Follow-On Project a name (max. 5 words)\n3. Give each Follow-On Project a description of that Follow-On Project (max. 80 words)\n4. List for each Follow-On Project the benefits of executing such a Follow-On Project including a testimonial/source (max. 80 words).\n5. Give each Follow-On Project an estimated cost per respondent to execute that project.\n\nHere is an example:\nQuestionnaire Title: \"Project Management\", \nTopics: \"Project Planning, Team Collaboration, Project Monitoring\"\nSubtopics: \"Scope Definition, Risk Assessment, Timeline Development, Communication Methods, Conflict Resolution, Team Building, Progress Tracking, Issue Identification, Budget Tracking\"\nFOP1Name: \"Project Performance Enhancement Program\"\nFOP1Description: \"The \"Project Performance Enhancement Program\" is a follow-on project designed to leverage the insights gained from the initial \"Project Management\" questionnaire. Building on the foundational knowledge acquired in the previous phase, this project aims to take a more proactive approach to improving project management practices within the company. The goal is to enhance project outcomes, team collaboration, and overall project success.\"\nFOP1Benefit: \"The \"Project Performance Enhancement Program\" represents a strategic investment in improving the company's project management capabilities. By addressing specific weaknesses and building on strengths, the company can elevate its project management practices and achieve greater success in delivering projects that meet or exceed stakeholder expectations\"\nFOP1Cost: \"300\"\n\n6. Only output the 5 Follow-On Projects, their description, and the estimated costs.\n7. Highlight key concepts in bold.\n8. Do not include the language.\n9. Output in the following format, do not include any explanations, only provide an RFC8259-compliant JSON response following this format without deviation.\n\nOutput Format\n{{\n  \"Fop1\":{{\"FopName\":\"...\",\n  \"FopDescription\":\"...\",\n  \"FopBenefit\":\"...\",\n  \"FopCost\":\"...\"}},\n  \"Fop2\":{{\"FopName\":\"...\",\n  \"FopDescription\":\"...\",\n  \"FopBenefit\":\"...\",\n  \"FopCost\":\"...\"}},\n  \"Fop3\":{{\"FopName\":\"...\",\n  \"FopDescription\":\"...\",\n  \"FopBenefit\":\"...\",\n  \"FopCost\":\"...\"}},\n  \"Fop4\":{{\"FopName\":\"...\",\n  \"FopDescription\":\"...\",\n  \"FopBenefit\":\"...\",\n  \"FopCost\":\"...\"}},\n  \"Fop5\":{{\"FopName\":\"...\",\n  \"FopDescription\":\"...\",\n  \"FopBenefit\":\"...\",\n  \"FopCost\":\"...\"}}\n}}"
                },
                "template_format": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": "f-string",
                  "fileTypes": [],
                  "password": false,
                  "name": "template_format",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "validate_template": {
                  "type": "bool",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": false,
                  "multiline": false,
                  "value": false,
                  "fileTypes": [],
                  "password": false,
                  "name": "validate_template",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "_type": "PromptTemplate"
              },
              "description": "A prompt template for a language model.",
              "icon": null,
              "base_classes": [
                "StringPromptTemplate",
                "PromptTemplate",
                "BasePromptTemplate"
              ],
              "name": "",
              "display_name": "PromptTemplate",
              "documentation": "https://python.langchain.com/docs/modules/model_io/prompts/prompt_templates/",
              "custom_fields": {
                "": []
              },
              "output_types": [],
              "full_path": null,
              "field_formatters": {},
              "beta": false,
              "error": null
            },
            "id": "PromptTemplate-cMzsG",
            "description": "A prompt template for a language model.",
            "display_name": "PromptTemplate"
          },
          "selected": false,
          "width": 384,
          "height": 281,
          "positionAbsolute": {
            "x": -2200.344166708212,
            "y": -748.027738270211
          },
          "dragging": false
        },
        {
          "id": "LLMChain-UYCcK",
          "type": "genericNode",
          "position": {
            "x": -1212.3898873711687,
            "y": -1037.502549314983
          },
          "data": {
            "type": "LLMChain",
            "node": {
              "template": {
                "llm": {
                  "type": "BaseLanguageModel",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "llm",
                  "display_name": "LLM",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "memory": {
                  "type": "BaseMemory",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "memory",
                  "display_name": "Memory",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "prompt": {
                  "type": "BasePromptTemplate",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "prompt",
                  "display_name": "Prompt",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": true
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from typing import Callable, Optional, Union\n\nfrom langchain.chains import LLMChain\n\nfrom axiestudio import CustomComponent\nfrom axiestudio.field_typing import (\n    BaseLanguageModel,\n    BaseMemory,\n    BasePromptTemplate,\n    Chain,\n)\n\n\nclass LLMChainComponent(CustomComponent):\n    display_name = \"LLMChain\"\n    description = \"Chain to run queries against LLMs\"\n\n    def build_config(self):\n        return {\n            \"prompt\": {\"display_name\": \"Prompt\"},\n            \"llm\": {\"display_name\": \"LLM\"},\n            \"memory\": {\"display_name\": \"Memory\"},\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        prompt: BasePromptTemplate,\n        llm: BaseLanguageModel,\n        memory: Optional[BaseMemory] = None,\n    ) -> Union[Chain, Callable, LLMChain]:\n        return LLMChain(prompt=prompt, llm=llm, memory=memory)\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": false,
                  "dynamic": true,
                  "info": "",
                  "title_case": true
                },
                "_type": "CustomComponent"
              },
              "description": "Chain to run queries against LLMs",
              "base_classes": [
                "Chain",
                "Callable",
                "LLMChain",
                "Chain"
              ],
              "display_name": "LLMChain",
              "documentation": "",
              "custom_fields": {
                "prompt": null,
                "llm": null,
                "memory": null
              },
              "output_types": [
                "Chain",
                "Callable",
                "LLMChain"
              ],
              "field_formatters": {},
              "beta": true
            },
            "id": "LLMChain-UYCcK"
          },
          "selected": false,
          "width": 384,
          "height": 425,
          "positionAbsolute": {
            "x": -1212.3898873711687,
            "y": -1037.502549314983
          },
          "dragging": false
        }
      ],
      "edges": [
        {
          "source": "ChatOpenAI-x13zP",
          "sourceHandle": "{œbaseClassesœ:[œBaseLanguageModelœ,œBaseLanguageModelœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-x13zPœ}",
          "target": "LLMChain-UYCcK",
          "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œLLMChain-UYCcKœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}",
          "data": {
            "targetHandle": {
              "fieldName": "llm",
              "id": "LLMChain-UYCcK",
              "inputTypes": null,
              "type": "BaseLanguageModel"
            },
            "sourceHandle": {
              "baseClasses": [
                "BaseLanguageModel",
                "BaseLanguageModel",
                "BaseLLM"
              ],
              "dataType": "ChatOpenAI",
              "id": "ChatOpenAI-x13zP"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-foreground  stroke-connection",
          "animated": false,
          "id": "reactflow__edge-ChatOpenAI-x13zP{œbaseClassesœ:[œBaseLanguageModelœ,œBaseLanguageModelœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-x13zPœ}-LLMChain-UYCcK{œfieldNameœ:œllmœ,œidœ:œLLMChain-UYCcKœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}"
        },
        {
          "source": "PromptTemplate-cMzsG",
          "sourceHandle": "{œbaseClassesœ:[œStringPromptTemplateœ,œPromptTemplateœ,œBasePromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-cMzsGœ}",
          "target": "LLMChain-UYCcK",
          "targetHandle": "{œfieldNameœ:œpromptœ,œidœ:œLLMChain-UYCcKœ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}",
          "data": {
            "targetHandle": {
              "fieldName": "prompt",
              "id": "LLMChain-UYCcK",
              "inputTypes": null,
              "type": "BasePromptTemplate"
            },
            "sourceHandle": {
              "baseClasses": [
                "StringPromptTemplate",
                "PromptTemplate",
                "BasePromptTemplate"
              ],
              "dataType": "PromptTemplate",
              "id": "PromptTemplate-cMzsG"
            }
          },
          "style": {
            "stroke": "#555"
          },
          "className": "stroke-foreground  stroke-connection",
          "animated": false,
          "id": "reactflow__edge-PromptTemplate-cMzsG{œbaseClassesœ:[œStringPromptTemplateœ,œPromptTemplateœ,œBasePromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-cMzsGœ}-LLMChain-UYCcK{œfieldNameœ:œpromptœ,œidœ:œLLMChain-UYCcKœ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}"
        }
      ],
      "viewport": {
        "x": 1325.544325389297,
        "y": 871.4006153547726,
        "zoom": 0.5262904744827762
      }
    },
    "date_created": "2024-05-18T07:58:41.277Z",
    "date_updated": "2024-05-18T07:58:41.337Z",
    "status": "Public",
    "sort": null,
    "user_updated": "4ea30ad9-9257-433b-b2fe-5682b7b91574",
    "user_created": {
      "username": "ldanielh",
      "first_name": "Luis Daniel",
      "last_name": "Huingo Chavez",
      "id": "4ea30ad9-9257-433b-b2fe-5682b7b91574"
    },
    "tags": [
      {
        "tags_id": {
          "name": "Agent",
          "id": "ccabb590-c9e8-4e56-9d6c-309955936c6c"
        }
      }
    ]
  },
  "conversion": {
    "converted_at": "2025-08-19T18:08:55.191Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 8,
    "converter_version": "1.0.0"
  }
}