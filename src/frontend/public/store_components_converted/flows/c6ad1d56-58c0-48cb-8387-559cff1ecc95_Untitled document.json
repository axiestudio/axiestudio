{
  "id": "c6ad1d56-58c0-48cb-8387-559cff1ecc95",
  "name": "Untitled document",
  "description": "Create, Chain, Communicate. (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "FLOW",
  "is_component": false,
  "author": {
    "username": "flaviano",
    "first_name": "Flaviano",
    "last_name": "de Aguiar",
    "id": "1c463e11-5b95-4b5b-8ef0-e2018f4c45a0",
    "full_name": "Flaviano de Aguiar"
  },
  "store_url": "https://www.langflow.store/store/component/c6ad1d56-58c0-48cb-8387-559cff1ecc95",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-07-14T10:20:53.761Z",
    "updated": "2024-07-14T10:20:53.933Z",
    "downloaded": "2025-08-19T17:50:04.929Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "1.0.9",
    "private": false,
    "status": "Public"
  },
  "data": {
    "nodes": [
      {
        "id": "Webhook-BFZWA",
        "type": "genericNode",
        "position": {
          "x": -218.30304778595507,
          "y": -136.72607724905566
        },
        "data": {
          "type": "Webhook",
          "node": {
            "template": {
              "_type": "Component",
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "import json\n\nfrom axiestudio.custom import Component\nfrom axiestudio.io import MultilineInput, Output\nfrom axiestudio.schema import Data\n\n\nclass WebhookComponent(Component):\n    display_name = \"Webhook Input\"\n    description = \"Defines a webhook input for the flow.\"\n    name = \"Webhook\"\n\n    inputs = [\n        MultilineInput(\n            name=\"data\",\n            display_name=\"Data\",\n            info=\"Use this field to quickly test the webhook component by providing a JSON payload.\",\n        )\n    ]\n    outputs = [\n        Output(display_name=\"Data\", name=\"output_data\", method=\"build_data\"),\n    ]\n\n    def build_data(self) -> Data:\n        message: str | Data = \"\"\n        if not self.data:\n            self.status = \"No data provided.\"\n            return Data(data={})\n        try:\n            body = json.loads(self.data or \"{}\")\n        except json.JSONDecodeError:\n            body = {\"payload\": self.data}\n            message = f\"Invalid JSON payload. Please check the format.\\n\\n{self.data}\"\n        data = Data(data=body)\n        if not message:\n            message = data\n        self.status = message\n        return data\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "data": {
                "trace_as_input": true,
                "multiline": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "{\"cpf\": \"03821283971\"}",
                "name": "data",
                "display_name": "Data",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Use this field to quickly test the webhook component by providing a JSON payload.",
                "title_case": false,
                "type": "str"
              }
            },
            "description": "Defines a webhook input for the flow.",
            "base_classes": [
              "Data"
            ],
            "display_name": "entrada",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Data"
                ],
                "selected": "Data",
                "name": "output_data",
                "display_name": "Data",
                "method": "build_data",
                "value": "__UNDEFINED__",
                "cache": true,
                "hidden": false
              }
            ],
            "field_order": [
              "data"
            ],
            "beta": false,
            "edited": false
          },
          "id": "Webhook-BFZWA"
        },
        "selected": false,
        "width": 384,
        "height": 309,
        "positionAbsolute": {
          "x": -218.30304778595507,
          "y": -136.72607724905566
        },
        "dragging": false
      },
      {
        "id": "UpdateData-JtC1m",
        "type": "genericNode",
        "position": {
          "x": 569.036025387901,
          "y": 143.6549475687762
        },
        "data": {
          "type": "UpdateData",
          "node": {
            "template": {
              "_type": "CustomComponent",
              "data": {
                "type": "Data",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "data",
                "display_name": "Data",
                "advanced": false,
                "dynamic": false,
                "info": "The record to update.",
                "load_from_db": false,
                "title_case": false
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio.custom import CustomComponent\nfrom axiestudio.schema import Data\n\n\nclass UpdateDataComponent(CustomComponent):\n    display_name = \"Update Data\"\n    description = \"Update Data with text-based key/value pairs, similar to updating a Python dictionary.\"\n    name = \"UpdateData\"\n\n    def build_config(self):\n        return {\n            \"data\": {\n                \"display_name\": \"Data\",\n                \"info\": \"The record to update.\",\n            },\n            \"new_data\": {\n                \"display_name\": \"New Data\",\n                \"info\": \"The new data to update the record with.\",\n                \"input_types\": [\"Text\"],\n            },\n        }\n\n    def build(\n        self,\n        data: Data,\n        new_data: dict,\n    ) -> Data:\n        \"\"\"\n        Updates a record with new data.\n\n        Args:\n            record (Data): The record to update.\n            new_data (dict): The new data to update the record with.\n\n        Returns:\n            Data: The updated record.\n        \"\"\"\n        data.data.update(new_data)\n        self.status = data\n        return data\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "new_data": {
                "type": "dict",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "new_data",
                "display_name": "New Data",
                "advanced": false,
                "input_types": [
                  "Text"
                ],
                "dynamic": false,
                "info": "The new data to update the record with.",
                "load_from_db": false,
                "title_case": false,
                "value": {
                  "@cpf": "teste"
                }
              }
            },
            "description": "Update Data with text-based key/value pairs, similar to updating a Python dictionary.",
            "base_classes": [
              "Data"
            ],
            "display_name": "Update Data",
            "documentation": "",
            "custom_fields": {
              "data": null,
              "new_data": null
            },
            "output_types": [
              "Data"
            ],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Data"
                ],
                "selected": "Data",
                "name": "data",
                "hidden": null,
                "display_name": "Data",
                "method": null,
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [],
            "beta": false,
            "edited": false
          },
          "id": "UpdateData-JtC1m"
        },
        "selected": false,
        "width": 384,
        "height": 385,
        "dragging": false,
        "positionAbsolute": {
          "x": 569.036025387901,
          "y": 143.6549475687762
        }
      },
      {
        "id": "CustomComponent-4YTaD",
        "type": "genericNode",
        "position": {
          "x": 1283.2104761158712,
          "y": 517.5409085954786
        },
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "_type": "Component",
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "# from axiestudio.field_typing import Data\nfrom axiestudio.custom import Component\nfrom axiestudio.io import MessageTextInput, Output\nfrom axiestudio.schema import Data\n\n\nclass CustomComponent(Component):\n    display_name = \"Custom Component\"\n    description = \"Use as a template to create your own component.\"\n    documentation: str = \"http://docs.axiestudio.org/components/custom\"\n    icon = \"custom_components\"\n    name = \"CustomComponent\"\n\n    inputs = [\n        MessageTextInput(name=\"input_value\", display_name=\"Input Value\", value=\"Hello, World!\"),\n    ]\n\n    outputs = [\n        Output(display_name=\"Output\", name=\"output\", method=\"build_output\"),\n    ]\n\n    def build_output(self) -> Data:\n        data = Data(value=self.input_value)\n        self.status = data\n        return data\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "input_value": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "Hello, World!",
                "name": "input_value",
                "display_name": "Input Value",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str"
              }
            },
            "description": "Use as a template to create your own component.",
            "icon": "custom_components",
            "base_classes": [
              "Data"
            ],
            "display_name": "Custom Component",
            "documentation": "http://docs.axiestudio.org/components/custom",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Data"
                ],
                "selected": "Data",
                "name": "output",
                "display_name": "Output",
                "method": "build_output",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "input_value"
            ],
            "beta": false,
            "edited": false
          },
          "id": "CustomComponent-4YTaD"
        },
        "selected": false,
        "width": 384,
        "height": 337,
        "dragging": false,
        "positionAbsolute": {
          "x": 1283.2104761158712,
          "y": 517.5409085954786
        }
      }
    ],
    "edges": [
      {
        "source": "Webhook-BFZWA",
        "sourceHandle": "{œdataTypeœ:œWebhookœ,œidœ:œWebhook-BFZWAœ,œnameœ:œoutput_dataœ,œoutput_typesœ:[œDataœ]}",
        "target": "UpdateData-JtC1m",
        "targetHandle": "{œfieldNameœ:œdataœ,œidœ:œUpdateData-JtC1mœ,œinputTypesœ:null,œtypeœ:œDataœ}",
        "data": {
          "targetHandle": {
            "fieldName": "data",
            "id": "UpdateData-JtC1m",
            "inputTypes": null,
            "type": "Data"
          },
          "sourceHandle": {
            "dataType": "Webhook",
            "id": "Webhook-BFZWA",
            "name": "output_data",
            "output_types": [
              "Data"
            ]
          }
        },
        "id": "reactflow__edge-Webhook-BFZWA{œdataTypeœ:œWebhookœ,œidœ:œWebhook-BFZWAœ,œnameœ:œoutput_dataœ,œoutput_typesœ:[œDataœ]}-UpdateData-JtC1m{œfieldNameœ:œdataœ,œidœ:œUpdateData-JtC1mœ,œinputTypesœ:null,œtypeœ:œDataœ}"
      }
    ],
    "viewport": {
      "x": -23.09848864954506,
      "y": 12.648459983245061,
      "zoom": 0.566419991967627
    }
  },
  "metadata": {
    "Webhook": {
      "count": 1
    },
    "UpdateData": {
      "count": 1
    },
    "CustomComponent": {
      "count": 1
    },
    "total": 3
  },
  "original": {
    "id": "c6ad1d56-58c0-48cb-8387-559cff1ecc95",
    "name": "Untitled document",
    "description": "Create, Chain, Communicate.",
    "is_component": false,
    "liked_by_count": "0",
    "downloads_count": "3",
    "metadata": {
      "Webhook": {
        "count": 1
      },
      "UpdateData": {
        "count": 1
      },
      "CustomComponent": {
        "count": 1
      },
      "total": 3
    },
    "last_tested_version": "1.0.9",
    "private": false,
    "data": {
      "nodes": [
        {
          "id": "Webhook-BFZWA",
          "type": "genericNode",
          "position": {
            "x": -218.30304778595507,
            "y": -136.72607724905566
          },
          "data": {
            "type": "Webhook",
            "node": {
              "template": {
                "_type": "Component",
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "import json\n\nfrom axiestudio.custom import Component\nfrom axiestudio.io import MultilineInput, Output\nfrom axiestudio.schema import Data\n\n\nclass WebhookComponent(Component):\n    display_name = \"Webhook Input\"\n    description = \"Defines a webhook input for the flow.\"\n    name = \"Webhook\"\n\n    inputs = [\n        MultilineInput(\n            name=\"data\",\n            display_name=\"Data\",\n            info=\"Use this field to quickly test the webhook component by providing a JSON payload.\",\n        )\n    ]\n    outputs = [\n        Output(display_name=\"Data\", name=\"output_data\", method=\"build_data\"),\n    ]\n\n    def build_data(self) -> Data:\n        message: str | Data = \"\"\n        if not self.data:\n            self.status = \"No data provided.\"\n            return Data(data={})\n        try:\n            body = json.loads(self.data or \"{}\")\n        except json.JSONDecodeError:\n            body = {\"payload\": self.data}\n            message = f\"Invalid JSON payload. Please check the format.\\n\\n{self.data}\"\n        data = Data(data=body)\n        if not message:\n            message = data\n        self.status = message\n        return data\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "data": {
                  "trace_as_input": true,
                  "multiline": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "{\"cpf\": \"03821283971\"}",
                  "name": "data",
                  "display_name": "Data",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "Use this field to quickly test the webhook component by providing a JSON payload.",
                  "title_case": false,
                  "type": "str"
                }
              },
              "description": "Defines a webhook input for the flow.",
              "base_classes": [
                "Data"
              ],
              "display_name": "entrada",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Data"
                  ],
                  "selected": "Data",
                  "name": "output_data",
                  "display_name": "Data",
                  "method": "build_data",
                  "value": "__UNDEFINED__",
                  "cache": true,
                  "hidden": false
                }
              ],
              "field_order": [
                "data"
              ],
              "beta": false,
              "edited": false
            },
            "id": "Webhook-BFZWA"
          },
          "selected": false,
          "width": 384,
          "height": 309,
          "positionAbsolute": {
            "x": -218.30304778595507,
            "y": -136.72607724905566
          },
          "dragging": false
        },
        {
          "id": "UpdateData-JtC1m",
          "type": "genericNode",
          "position": {
            "x": 569.036025387901,
            "y": 143.6549475687762
          },
          "data": {
            "type": "UpdateData",
            "node": {
              "template": {
                "_type": "CustomComponent",
                "data": {
                  "type": "Data",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "data",
                  "display_name": "Data",
                  "advanced": false,
                  "dynamic": false,
                  "info": "The record to update.",
                  "load_from_db": false,
                  "title_case": false
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio.custom import CustomComponent\nfrom axiestudio.schema import Data\n\n\nclass UpdateDataComponent(CustomComponent):\n    display_name = \"Update Data\"\n    description = \"Update Data with text-based key/value pairs, similar to updating a Python dictionary.\"\n    name = \"UpdateData\"\n\n    def build_config(self):\n        return {\n            \"data\": {\n                \"display_name\": \"Data\",\n                \"info\": \"The record to update.\",\n            },\n            \"new_data\": {\n                \"display_name\": \"New Data\",\n                \"info\": \"The new data to update the record with.\",\n                \"input_types\": [\"Text\"],\n            },\n        }\n\n    def build(\n        self,\n        data: Data,\n        new_data: dict,\n    ) -> Data:\n        \"\"\"\n        Updates a record with new data.\n\n        Args:\n            record (Data): The record to update.\n            new_data (dict): The new data to update the record with.\n\n        Returns:\n            Data: The updated record.\n        \"\"\"\n        data.data.update(new_data)\n        self.status = data\n        return data\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "new_data": {
                  "type": "dict",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "new_data",
                  "display_name": "New Data",
                  "advanced": false,
                  "input_types": [
                    "Text"
                  ],
                  "dynamic": false,
                  "info": "The new data to update the record with.",
                  "load_from_db": false,
                  "title_case": false,
                  "value": {
                    "@cpf": "teste"
                  }
                }
              },
              "description": "Update Data with text-based key/value pairs, similar to updating a Python dictionary.",
              "base_classes": [
                "Data"
              ],
              "display_name": "Update Data",
              "documentation": "",
              "custom_fields": {
                "data": null,
                "new_data": null
              },
              "output_types": [
                "Data"
              ],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Data"
                  ],
                  "selected": "Data",
                  "name": "data",
                  "hidden": null,
                  "display_name": "Data",
                  "method": null,
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [],
              "beta": false,
              "edited": false
            },
            "id": "UpdateData-JtC1m"
          },
          "selected": false,
          "width": 384,
          "height": 385,
          "dragging": false,
          "positionAbsolute": {
            "x": 569.036025387901,
            "y": 143.6549475687762
          }
        },
        {
          "id": "CustomComponent-4YTaD",
          "type": "genericNode",
          "position": {
            "x": 1283.2104761158712,
            "y": 517.5409085954786
          },
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "_type": "Component",
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "# from axiestudio.field_typing import Data\nfrom axiestudio.custom import Component\nfrom axiestudio.io import MessageTextInput, Output\nfrom axiestudio.schema import Data\n\n\nclass CustomComponent(Component):\n    display_name = \"Custom Component\"\n    description = \"Use as a template to create your own component.\"\n    documentation: str = \"http://docs.axiestudio.org/components/custom\"\n    icon = \"custom_components\"\n    name = \"CustomComponent\"\n\n    inputs = [\n        MessageTextInput(name=\"input_value\", display_name=\"Input Value\", value=\"Hello, World!\"),\n    ]\n\n    outputs = [\n        Output(display_name=\"Output\", name=\"output\", method=\"build_output\"),\n    ]\n\n    def build_output(self) -> Data:\n        data = Data(value=self.input_value)\n        self.status = data\n        return data\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "input_value": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "Hello, World!",
                  "name": "input_value",
                  "display_name": "Input Value",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str"
                }
              },
              "description": "Use as a template to create your own component.",
              "icon": "custom_components",
              "base_classes": [
                "Data"
              ],
              "display_name": "Custom Component",
              "documentation": "http://docs.axiestudio.org/components/custom",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Data"
                  ],
                  "selected": "Data",
                  "name": "output",
                  "display_name": "Output",
                  "method": "build_output",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "input_value"
              ],
              "beta": false,
              "edited": false
            },
            "id": "CustomComponent-4YTaD"
          },
          "selected": false,
          "width": 384,
          "height": 337,
          "dragging": false,
          "positionAbsolute": {
            "x": 1283.2104761158712,
            "y": 517.5409085954786
          }
        }
      ],
      "edges": [
        {
          "source": "Webhook-BFZWA",
          "sourceHandle": "{œdataTypeœ:œWebhookœ,œidœ:œWebhook-BFZWAœ,œnameœ:œoutput_dataœ,œoutput_typesœ:[œDataœ]}",
          "target": "UpdateData-JtC1m",
          "targetHandle": "{œfieldNameœ:œdataœ,œidœ:œUpdateData-JtC1mœ,œinputTypesœ:null,œtypeœ:œDataœ}",
          "data": {
            "targetHandle": {
              "fieldName": "data",
              "id": "UpdateData-JtC1m",
              "inputTypes": null,
              "type": "Data"
            },
            "sourceHandle": {
              "dataType": "Webhook",
              "id": "Webhook-BFZWA",
              "name": "output_data",
              "output_types": [
                "Data"
              ]
            }
          },
          "id": "reactflow__edge-Webhook-BFZWA{œdataTypeœ:œWebhookœ,œidœ:œWebhook-BFZWAœ,œnameœ:œoutput_dataœ,œoutput_typesœ:[œDataœ]}-UpdateData-JtC1m{œfieldNameœ:œdataœ,œidœ:œUpdateData-JtC1mœ,œinputTypesœ:null,œtypeœ:œDataœ}"
        }
      ],
      "viewport": {
        "x": -23.09848864954506,
        "y": 12.648459983245061,
        "zoom": 0.566419991967627
      }
    },
    "date_created": "2024-07-14T10:20:53.761Z",
    "date_updated": "2024-07-14T10:20:53.933Z",
    "status": "Public",
    "sort": null,
    "user_updated": "1c463e11-5b95-4b5b-8ef0-e2018f4c45a0",
    "user_created": {
      "username": "flaviano",
      "first_name": "Flaviano",
      "last_name": "de Aguiar",
      "id": "1c463e11-5b95-4b5b-8ef0-e2018f4c45a0"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:05.293Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 22,
    "converter_version": "1.0.0"
  }
}