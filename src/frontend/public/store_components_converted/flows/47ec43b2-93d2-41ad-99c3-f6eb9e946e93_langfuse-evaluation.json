{
  "id": "47ec43b2-93d2-41ad-99c3-f6eb9e946e93",
  "name": "langfuse-evaluation",
  "description": "Your Passport to Linguistic Landscapes. (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "FLOW",
  "is_component": false,
  "author": {
    "username": "oranciog",
    "first_name": "Octavian",
    "last_name": "Rinciog",
    "id": "1463c6c5-539e-4bb7-b7db-5f022b011c2c",
    "full_name": "Octavian Rinciog"
  },
  "store_url": "https://www.langflow.store/store/component/47ec43b2-93d2-41ad-99c3-f6eb9e946e93",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-11-04T09:26:09.375Z",
    "updated": "2024-11-04T09:26:09.628Z",
    "downloaded": "2025-08-19T17:50:07.358Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "1.0.19",
    "private": false,
    "status": "Public"
  },
  "data": {
    "nodes": [
      {
        "id": "CustomComponent-1wAiE",
        "type": "genericNode",
        "position": {
          "x": -307.09561572663233,
          "y": 410.51372702849847
        },
        "data": {
          "type": "ReadJSONToData",
          "node": {
            "template": {
              "_type": "Component",
              "json_file": {
                "trace_as_metadata": true,
                "file_path": "95c7992a-8613-4f49-8598-b540426717f1/2024-10-29_10-27-25_eval_dataset_template_subset.json",
                "fileTypes": [
                  "json"
                ],
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "json_file",
                "value": "",
                "display_name": "File Name",
                "advanced": false,
                "dynamic": false,
                "info": "The JSON file to read.",
                "title_case": false,
                "type": "file",
                "_input_type": "FileInput",
                "load_from_db": false
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "import json\r\nfrom pathlib import Path\r\nfrom typing import Any, Dict, List, Union\r\n\r\nfrom axiestudio.custom import Component\r\nfrom axiestudio.io import MessageTextInput, Output\r\nfrom axiestudio.schema import Data\r\nfrom axiestudio.schema.message import Message\r\n\r\nclass ReadJSONToData(Component):\r\n    display_name = \"Read JSON to Data\"\r\n    description = \"Reads a JSON file and returns its contents as a Data object or a list of Data objects.\"\r\n    icon = \"FileJson\"\r\n\r\n    inputs = [\r\n        FileInput(\r\n            name=\"json_file\",\r\n            display_name=\"File Name\",\r\n            file_types=[\"json\"],\r\n            info=\"The JSON file to read.\",\r\n        ),\r\n    ]\r\n\r\n    outputs = [\r\n        Output(display_name=\"Data\", name=\"data\", method=\"read_json_to_data\"),\r\n    ]\r\n\r\n    def read_json_to_data(self) -> Union[Data, List[Data]]:\r\n        print(\"IN JSON\")\r\n        if not self.json_file:\r\n            raise ValueError(\"Please upload a JSON file to use this component.\")\r\n        else:\r\n            resolved_path = self.resolve_path(self.json_file)\r\n            file_path = Path(resolved_path)\r\n\r\n            if file_path.suffix.lower() != '.json':\r\n                raise ValueError(\"The uploaded file must be a JSON file.\")\r\n                    \r\n            # Read the JSON file\r\n            with open(file_path, 'r', encoding='utf-8') as json_file:\r\n                json_content: Union[Dict[str, Any], List[Dict[str, Any]]] = json.load(json_file)\r\n\r\n            # Create Data object(s) based on the JSON content\r\n            if isinstance(json_content, list):\r\n                data_objects = [Data(**item) for item in json_content]\r\n                self.status = data_objects\r\n                return data_objects\r\n            else:\r\n                data_object = Data(**json_content)\r\n                self.status = data_object\r\n                return data_object",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              }
            },
            "description": "Reads a JSON file and returns its contents as a Data object or a list of Data objects.",
            "icon": "FileJson",
            "base_classes": [
              "Data"
            ],
            "display_name": "Read JSON File to Data ",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": true,
            "outputs": [
              {
                "types": [
                  "Data"
                ],
                "selected": "Data",
                "name": "data",
                "display_name": "Data",
                "method": "read_json_to_data",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "json_file"
            ],
            "beta": false,
            "edited": true,
            "lf_version": "1.0.17"
          },
          "id": "CustomComponent-1wAiE"
        },
        "selected": false,
        "width": 384,
        "height": 305,
        "positionAbsolute": {
          "x": -307.09561572663233,
          "y": 410.51372702849847
        },
        "dragging": false
      },
      {
        "id": "CustomComponent-Bw0zx",
        "type": "genericNode",
        "position": {
          "x": 270.92367724963003,
          "y": 392.9991871066421
        },
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "_type": "Component",
              "data": {
                "trace_as_metadata": true,
                "list": false,
                "trace_as_input": true,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "data",
                "value": "",
                "display_name": "Input data",
                "advanced": false,
                "input_types": [
                  "Data"
                ],
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "other",
                "_input_type": "DataInput"
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "# from axiestudio.field_typing import Data\nfrom axiestudio.custom import Component\nfrom axiestudio.io import MessageTextInput, Output\nfrom axiestudio.schema import Data\nfrom langfuse import Langfuse\n\nclass LangfuseUploader(Component):\n    display_name = \"Custom Component\"\n    description = \"Use as a template to create your own component.\"\n    documentation: str = \"http://docs.axiestudio.org/components/custom\"\n    icon = \"custom_components\"\n    name = \"CustomComponent\"\n\n    inputs = [\n        MessageTextInput(name=\"project_name\", display_name=\"Project Name\"),\n        MessageTextInput(name=\"dataset_name\", display_name=\"Dataset Name\"),\n        DataInput(name = \"data\", display_name=\"Input data\")\n    ]\n\n    outputs = [\n        Output(display_name=\"Project Name\", name=\"project\", method=\"return_project\"),\n        Output(display_name=\"Dataset Name\", name=\"dataset\", method=\"build_output\")\n    ]\n\n    def build_output(self) -> Message:\n        print(\"in uploader\")\n        self.langfuse = Langfuse(\n          secret_key=\"sk-lf-78ef637a-0ef0-4660-ab80-59686ecf4111\",\n          public_key=\"pk-lf-9678af12-6a6b-4945-807b-f6d817c009de\",\n          host=\"https://langfuse-ui.karma-ml.nmbapp.net\"\n        )\n        self.langfuse.create_dataset(name=self.dataset_name)\n        dataset = self.langfuse.get_dataset(self.dataset_name)\n        if len(dataset.items) == 0:\n            for key, value in self.data.data.items():\n                for entry in value['qa_pairs']:\n                    self.langfuse.create_dataset_item(\n                            dataset_name=self.dataset_name,\n                            metadata = {\n                                \"label\": key,\n                                \"llm\": value['llm'],\n                                \"prompt\": value['prompt']\n                            },\n                            input = {'question': entry['question']},\n                            expected_output = {'output_text': entry['ground_truth']}\n                        )\n        self.langfuse.flush()\n        message = Message(\n            text=self.dataset_name,\n        )\n        return message\n    \n    def return_project(self) -> Message:\n        message = Message(\n            text=self.project_name,\n        )\n        return message\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "dataset_name": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "dataset_name",
                "value": "Test",
                "display_name": "Dataset Name",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              },
              "project_name": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "project_name",
                "value": "Langflow-evaluation",
                "display_name": "Project Name",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              }
            },
            "description": "Use as a template to create your own component.",
            "icon": "custom_components",
            "base_classes": [
              "Message"
            ],
            "display_name": "Langfuse Uploader",
            "documentation": "http://docs.axiestudio.org/components/custom",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": true,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "project",
                "display_name": "Project Name",
                "method": "return_project",
                "value": "__UNDEFINED__",
                "cache": true
              },
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "dataset",
                "display_name": "Dataset Name",
                "method": "build_output",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "project_name",
              "dataset_name",
              "data"
            ],
            "beta": false,
            "edited": true,
            "lf_version": "1.0.17"
          },
          "id": "CustomComponent-Bw0zx"
        },
        "selected": false,
        "width": 384,
        "height": 479,
        "positionAbsolute": {
          "x": 270.92367724963003,
          "y": 392.9991871066421
        },
        "dragging": false
      },
      {
        "id": "CustomComponent-OzGDq",
        "type": "genericNode",
        "position": {
          "x": 928.7390115807935,
          "y": 388.17478518148823
        },
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "_type": "Component",
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "# from axiestudio.field_typing import Data\nfrom axiestudio.custom import Component\nfrom axiestudio.io import MessageTextInput, Output\nfrom axiestudio.schema import Data\n\n\nclass LangfuseRetriever(Component):\n    display_name = \"Langfuse Retriever\"\n    description = \"Fetch dataset from Langfuse.\"\n    documentation: str = \"http://docs.axiestudio.org/components/custom\"\n    icon = \"custom_components\"\n    name = \"CustomComponent\"\n\n    inputs = [\n        MessageTextInput(name=\"project_name\", display_name=\"Project Name\"),\n        MessageTextInput(name=\"dataset_name\", display_name=\"Dataset Name\"),\n    ]\n    outputs = [\n        Output(display_name=\"Dataset\", name=\"output\", method=\"build_output\"),\n    ]\n\n    def build_output(self) -> Data:\n        print(\"IN RETRIEVER\")\n        self.langfuse = Langfuse(\n          secret_key=\"sk-lf-78ef637a-0ef0-4660-ab80-59686ecf4111\",\n          public_key=\"pk-lf-9678af12-6a6b-4945-807b-f6d817c009de\",\n          host=\"https://langfuse-ui.karma-ml.nmbapp.net\"\n        )\n        dataset = self.langfuse.get_dataset(self.dataset_name)\n        dataset_items = {'items': []}\n        i = 0\n        for item in dataset.items:\n            print(\"\\n\\n\", item.input,\"\\n\\n\")\n            #handler = item.get_langchain_handler(run_name=self.run_name)\n            print(item.id)\n            payload = {'query':item.input['question'], 'expected_output':item.expected_output['output_text'].replace('\"', ''), 'datasource_name': item.metadata['label'], 'trace_id': item.id}\n            dataset_items['items'].append(payload)\n        print(\"no error still\")\n        data = Data(text_key = 'items', data = dataset_items)\n        print(data)\n        return data\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "dataset_name": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "dataset_name",
                "value": "",
                "display_name": "Dataset Name",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              },
              "project_name": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "project_name",
                "value": "",
                "display_name": "Project Name",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              }
            },
            "description": "Fetch dataset from Langfuse.",
            "icon": "custom_components",
            "base_classes": [
              "Data"
            ],
            "display_name": "Langfuse Retriever",
            "documentation": "http://docs.axiestudio.org/components/custom",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": true,
            "outputs": [
              {
                "types": [
                  "Data"
                ],
                "selected": "Data",
                "name": "output",
                "display_name": "Dataset",
                "method": "build_output",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "project_name",
              "dataset_name"
            ],
            "beta": false,
            "edited": true,
            "lf_version": "1.0.17"
          },
          "id": "CustomComponent-OzGDq"
        },
        "selected": false,
        "width": 384,
        "height": 375,
        "dragging": false,
        "positionAbsolute": {
          "x": 928.7390115807935,
          "y": 388.17478518148823
        }
      },
      {
        "id": "CustomComponent-GvMJ6",
        "type": "genericNode",
        "position": {
          "x": 272.6376204550263,
          "y": -1032.9927522504227
        },
        "data": {
          "type": "Ragas",
          "node": {
            "template": {
              "_type": "Component",
              "dataset": {
                "trace_as_metadata": true,
                "list": false,
                "trace_as_input": true,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "dataset",
                "value": "",
                "display_name": "Dataset",
                "advanced": false,
                "input_types": [
                  "Data"
                ],
                "dynamic": false,
                "info": "Insert the dataset.",
                "title_case": false,
                "type": "other",
                "_input_type": "DataInput"
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "# from axiestudio.field_typing import Data\r\nfrom axiestudio.custom import Component\r\nfrom axiestudio.io import MessageTextInput, Output\r\nfrom axiestudio.schema import Data\r\nfrom ragas.metrics import faithfulness, answer_relevancy, context_precision, answer_correctness, context_utilization, context_recall\r\nfrom ragas import evaluate\r\nfrom ragas.run_config import RunConfig\r\nfrom datasets import Dataset \r\nfrom langchain_community.embeddings.huggingface import HuggingFaceEmbeddings\r\nfrom langchain_openai import AzureChatOpenAI\r\nimport pandas as pd\r\n\r\n\r\nclass Ragas(Component):\r\n    display_name = \"Ragas\"\r\n    description = \"Takes in dataset and generation; performs evaluation and appends score.\"\r\n    documentation: str = \"http://docs.axiestudio.org/components/custom\"\r\n    icon = \"custom_components\"\r\n    name = \"Ragas\"\r\n\r\n    inputs = [\r\n        DataInput(\r\n            name=\"dataset\",\r\n            display_name=\"Dataset\",\r\n            value=\"\",\r\n            info=\"Insert the dataset.\",\r\n        )\r\n    ]\r\n    outputs = [\r\n        Output(display_name=\"Output\", name=\"output\", method=\"build_output\"),\r\n    ]\r\n    \r\n    def create_dataset(self, inputs: dict):\r\n        \r\n        self.data = {\r\n            \"question\": [inputs.get(\"question\", None)],\r\n            \"ground_truth\": [inputs.get(\"ground_truth\", None)],\r\n            \"answer\": [inputs.get(\"answer\", None)], \r\n            \"contexts\": [inputs.get(\"contexts\", None)]\r\n        }\r\n\r\n        self.df = pd.DataFrame(self.data)\r\n        \r\n        return self.df\r\n   \r\n    def eval(self, data_point, idx):\r\n        metrics = [faithfulness, context_recall]#[faithfulness, context_precision, answer_correctness, answer_relevancy, context_utilization, context_recall] #[context_precision, answer_correctness, answer_relevancy, context_recall]#\r\n        self.evaluation_dict = data_point\r\n        # embd = HuggingFaceEmbeddings(\r\n        #     model_name=\"intfloat/multilingual-e5-small\"\r\n        # )\r\n        llm = AzureChatOpenAI(\r\n                    azure_deployment='rag_gpt4o_prod',\r\n                    openai_api_version=\"2023-05-15\",\r\n                    azure_endpoint=\"https://karmarageu.openai.azure.com/\",\r\n                    openai_api_key=\"0ade28c57d3447aebcabb231e0dfcb50\",\r\n                    temperature=0.0)\r\n\r\n        ds = Dataset.from_pandas(self.create_dataset(self.evaluation_dict))\r\n        print(ds[0])\r\n        self.result = evaluate(\r\n            Dataset.from_pandas(self.create_dataset(self.evaluation_dict)),\r\n            metrics=metrics,\r\n            llm = llm,\r\n            embeddings = None\r\n        )\r\n        df = self.result.to_pandas()\r\n        df = df.fillna(0)\r\n        print(df.head)\r\n        metrics_str = ['faithfulness', 'context_recall']\r\n        dataset = self.langfuse.get_dataset('Test')\r\n        for i in range(len(dataset.items)):\r\n            if i == idx:\r\n                item = dataset.items[i]\r\n                handler = item.get_langchain_handler(run_name='test_run')\r\n                for metric in metrics_str:\r\n                    handler.trace.score(\r\n                        name=metric,\r\n                        value = df[metric].iloc[0]\r\n                    )\r\n                handler.trace.update(\r\n                    input = {'question':data_point['question']},\r\n                    output = {'output_text':data_point['answer']}\r\n                    )\r\n        \r\n        question = df.loc[0,'question']\r\n        answer = df.loc[0,'answer']\r\n        faithfulness_ = df.loc[0,'faithfulness']\r\n        # answer_relevancy_ = df.loc[0,'answer_relevancy']\r\n        context_recall_ = df.loc[0,'context_recall']\r\n        \r\n        string_to_return = f'Answer: {answer}\\ Faithfulness: {faithfulness_}  Context Recall: {context_recall_}'#'\\ Answer Relevancy: {answer_relevancy_}\\\r\n        \r\n        # if self.ground_truth:\r\n        #     context_precision_ = df.loc[0,'context_precision']\r\n        #     string_to_return += f'\\Context Precision: {context_precision_}'\r\n        return Message(text=string_to_return)\r\n    \r\n    def build_output(self) -> Data:\r\n        metrics = ['faithfulness']#, 'context_recall']#['faithfulness', 'context_precision', 'answer_correctness', 'answer_relevancy', 'context_utilization', 'context_recall']\r\n        dataset_items = {'items': []}\r\n        self.langfuse = Langfuse(\r\n          secret_key=\"sk-lf-78ef637a-0ef0-4660-ab80-59686ecf4111\",\r\n          public_key=\"pk-lf-9678af12-6a6b-4945-807b-f6d817c009de\",\r\n          host=\"https://langfuse-ui.karma-ml.nmbapp.net\"\r\n        )\r\n        for idx in range(len(self.dataset.data['items'])):\r\n            payload = self.dataset.data['items'][idx]\r\n            data_samples = {\r\n                'question': payload['query'],\r\n                'answer': payload['output'],\r\n                'contexts': payload['context'],\r\n                'ground_truth': payload['expected_output']\r\n            }\r\n            score = self.eval(data_samples, idx)\r\n            #columns_with_nan = score.columns[score.isna().any()].tolist()\r\n            \r\n            print(\"AFTER EVALUATE\")\r\n            \r\n            # if columns_with_nan:\r\n            #     print(\"Columns with NaN values:\", columns_with_nan)\r\n\r\n            # score = score.fillna(0)\r\n            # pd.set_option('display.max_columns', None)\r\n            # print(\"SCORE:\", score)\r\n            # for metric in metrics:\r\n            #     self.langfuse.score(\r\n            #         trace_id = payload['trace_id'],\r\n            #         name = metric,\r\n            #         value = score[metric].iloc[0]\r\n            #     )\r\n        print(\"no error still\")\r\n        data = Data(text_key = 'items', data = dataset_items)\r\n        return data\r\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              }
            },
            "description": "Takes in dataset and generation; performs evaluation and appends score.",
            "icon": "custom_components",
            "base_classes": [
              "Data"
            ],
            "display_name": "Ragas",
            "documentation": "http://docs.axiestudio.org/components/custom",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Data"
                ],
                "selected": "Data",
                "name": "output",
                "display_name": "Output",
                "method": "build_output",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "dataset"
            ],
            "beta": false,
            "edited": true,
            "lf_version": "1.0.17"
          },
          "id": "CustomComponent-GvMJ6"
        },
        "selected": false,
        "width": 384,
        "height": 267,
        "dragging": false,
        "positionAbsolute": {
          "x": 272.6376204550263,
          "y": -1032.9927522504227
        }
      },
      {
        "id": "CreateRagComponent-pErRh",
        "type": "genericNode",
        "position": {
          "x": 1490.476855253387,
          "y": 397.4106232779101
        },
        "data": {
          "type": "CreateBatchRagComponent",
          "node": {
            "template": {
              "_type": "Component",
              "dataset": {
                "trace_as_metadata": true,
                "list": false,
                "trace_as_input": true,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "dataset",
                "value": "",
                "display_name": "Dataset",
                "advanced": false,
                "input_types": [
                  "Data"
                ],
                "dynamic": false,
                "info": "Insert the dataset.",
                "title_case": false,
                "type": "other",
                "_input_type": "DataInput"
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio.custom import Component\nfrom axiestudio.io import MultilineInput, DropdownInput\nfrom axiestudio.template import Output, Input\nfrom axiestudio.schema.message import Message\nimport requests\nimport json\nfrom oauth_client_python.client import ClientCredentials\nfrom oauth_client_python.client.exceptions import BaseError  \nfrom oauth_client_python.client.exceptions import FetchError \nfrom oauth_client_python.client.exceptions import OauthError \nfrom loguru import logger\nimport os\n\nclass CreateBatchRagComponent(Component):\n    display_name = \"KarmaRag-BatchQueryer\"\n    description = \"Call your rag API.\"\n    \n    inputs = [\n        DataInput(\n            name=\"dataset\",\n            display_name=\"Dataset\",\n            value=\"\",\n            info=\"Insert the dataset.\",\n        ),\n        \n        DropdownInput(\n            name=\"model_name\",\n            display_name=\"Model Name\",\n            options=['gpt3.5_0125', 'gpt4-o', 'mistral'],\n            ),\n    ]\n\n    outputs = [\n        Output(display_name=\"output\", name=\"output\", method=\"get_results\"),\n    ]\n\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        self.source_dict = self.get_sources()\n\n        # Set the options for the sources dynamically\n        if self.inputs[1].options == []:\n            self.inputs[1].options = list(self.source_dict.keys())\n\n    def get_auth_token(self):\n        auth_token = \"\"\n        try:\n            config = {\n                'client_id': os.getenv('KARMA_KEYLOCK_CLIENTID',''),\n                'client_secret': os.getenv('KARMA_KEYLOCK_CLIENTSECRET',''),\n                'token_endpoint': os.getenv('KARMA_KEYLOCK_HOST','https://oauth.skygate.cc/oauth/token')\n            }\n            access_token = ClientCredentials().get_token(**config)\n            auth_token = 'Bearer '+access_token\n        except ValueError as e:\n            logger.error(f\"ValueError Occured: {str(e)}\")\n            return ''\n        except TypeError as e:\n            logger.error(f\"TypeError Occured: {str(e)}\")\n            return ''\n        except FetchError as e:\n            logger.error(f\"Error encoutered when fetching the token. Error: {str(e)}\")\n            return ''\n        except OauthError as e:\n            logger.error(f\"The endpoint did not return a token. Error: {str(e)}\")\n            return ''\n        return auth_token\n\n    def get_sources(self):\n        url = os.getenv('SOURCES_ENDPOINT','https://beta-rag-query.karma-ml.nmbapp.net/sources')\n        token = self.get_auth_token()\n        sources = {}\n        try:\n            headers = {\n            'Authorization': token,\n            'Content-Type': 'application/json'\n            }\n            response = requests.request(\"GET\", url, headers=headers)\n            response.raise_for_status()\n        except requests.exceptions.Timeout as e:\n            logger.error(f\"TimeOut occured: {str(e)}\")\n            return sources\n        except requests.exceptions.TooManyRedirects as e:\n            logger.error(f\"Too many redirects occured. Did you check the url? Error: {str(e)}\")\n            return sources\n        except requests.exceptions.HTTPError as e:\n            logger.error(f\"HTTP error occured {str(e)}\")\n            return sources\n        source_list = []\n        json_data = response.json()\n        for lis in json_data['result']:\n            source_list.append(lis['label'])\n            sources[lis['label']] = lis[\"datasource_name\"]\n\n        return sources\n\n\n    def query_api(self, query : str, source : str):\n\n        if self.model_name == \"\":\n            return \"Request Failed. You need to select an option for the model_name\"\n\n        url = os.getenv('QUERY_ENDPOINT',\"https://beta-rag-query.karma-ml.nmbapp.net/query\")\n        payload = json.dumps({\n                \"query\": query,\n                \"label\": source,\n                \"datasource_name\": self.source_dict[source],\n                \"history\": [],\n                \"options\": { \n                    \"prompt\": \"\",\n                    \"llm\": self.model_name\n                }\n            }\n        )\n        #get auth token\n        token = self.get_auth_token()\n\n        try:\n            headers = {\n            'Authorization': token,\n            'Content-Type': 'application/json'\n            }\n            response = requests.request(\"POST\", url, headers=headers, data=payload)\n            response.raise_for_status()\n        except requests.exceptions.Timeout as e:\n            logger.error(f\"TimeOut occured: {str(e)}\")\n            return \"Request failed.\"\n        except requests.exceptions.TooManyRedirects as e:\n            logger.error(f\"Too many redirects occured. Did you check the url? Error: {str(e)}\")\n            return \"Request failed.\"\n        except requests.exceptions.HTTPError as e:\n            logger.error(f\"HTTP error occured {str(e)}\")\n            return \"Request failed.\"\n\n        resp = response.json()\n        return resp['result'], resp['sources']\n\n    def get_results(self)-> Data:\n        dataset_items = {'items': []}\n        print(\"BEFORE FOR\")\n        for payload in self.dataset.data['items']:\n            print(\"IN FOR\")\n            output, sources = self.query_api(payload['query'], payload['datasource_name'])\n            context = [ctx['content'].replace(\"'\", '').replace('\"', '') for ctx in sources]\n            payload['output'] = output.replace('\"', '')\n            payload['context'] = context\n            dataset_items['items'].append(payload)\n        print(\"no error still\")\n        data = Data(text_key = 'items', data = dataset_items)\n        return data\n    ",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "model_name": {
                "trace_as_metadata": true,
                "options": [
                  "gpt3.5_0125",
                  "gpt4-o",
                  "mistral"
                ],
                "combobox": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "model_name",
                "value": "gpt4-o",
                "display_name": "Model Name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str",
                "_input_type": "DropdownInput",
                "load_from_db": false
              }
            },
            "description": "Call your rag API.",
            "base_classes": [
              "Data"
            ],
            "display_name": "KarmaRag-BatchQueryer",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": true,
            "outputs": [
              {
                "types": [
                  "Data"
                ],
                "selected": "Data",
                "name": "output",
                "display_name": "output",
                "method": "get_results",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "dataset",
              "model_name"
            ],
            "beta": false,
            "edited": true,
            "lf_version": "1.0.17"
          },
          "id": "CreateRagComponent-pErRh"
        },
        "selected": false,
        "width": 384,
        "height": 337,
        "positionAbsolute": {
          "x": 1490.476855253387,
          "y": 397.4106232779101
        },
        "dragging": false
      },
      {
        "id": "CustomComponent-3xQmr",
        "type": "genericNode",
        "position": {
          "x": 2153.355478876727,
          "y": 381.18737169924646
        },
        "data": {
          "type": "Ragas",
          "node": {
            "template": {
              "_type": "Component",
              "dataset": {
                "trace_as_metadata": true,
                "list": false,
                "trace_as_input": true,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "dataset",
                "value": "",
                "display_name": "Dataset",
                "advanced": false,
                "input_types": [
                  "Data"
                ],
                "dynamic": false,
                "info": "Insert the dataset.",
                "title_case": false,
                "type": "other",
                "_input_type": "DataInput"
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "# from axiestudio.field_typing import Data\r\nfrom axiestudio.custom import Component\r\nfrom axiestudio.io import MessageTextInput, Output\r\nfrom axiestudio.schema import Data\r\nfrom ragas.metrics import faithfulness, answer_relevancy, context_precision, answer_correctness, context_utilization, context_recall\r\nfrom ragas import evaluate\r\nfrom ragas.run_config import RunConfig\r\nfrom datasets import Dataset \r\nfrom langchain_community.embeddings.huggingface import HuggingFaceEmbeddings\r\nfrom langchain_openai import AzureChatOpenAI\r\nimport pandas as pd\r\nimport time\r\n\r\n\r\nclass Ragas(Component):\r\n    display_name = \"Ragas\"\r\n    description = \"Takes in dataset and generation; performs evaluation and appends score.\"\r\n    documentation: str = \"http://docs.axiestudio.org/components/custom\"\r\n    icon = \"custom_components\"\r\n    name = \"Ragas\"\r\n\r\n    inputs = [\r\n        DataInput(\r\n            name=\"dataset\",\r\n            display_name=\"Dataset\",\r\n            value=\"\",\r\n            info=\"Insert the dataset.\",\r\n        )\r\n    ]\r\n    outputs = [\r\n        Output(display_name=\"output\", name=\"output\", method=\"get_results\"),\r\n    ]\r\n    \r\n    def create_dataset(self, inputs: dict):\r\n        \r\n        self.data = {\r\n            \"question\": [inputs.get(\"question\", None)],\r\n            \"ground_truth\": [inputs.get(\"ground_truth\", None)],\r\n            \"answer\": [inputs.get(\"answer\", None)], \r\n            \"contexts\": [inputs.get(\"contexts\", None)]\r\n        }\r\n\r\n        self.df = pd.DataFrame(self.data)\r\n        \r\n        return self.df\r\n   \r\n    def eval(self, data_point, idx):\r\n        metrics = [faithfulness]#[faithfulness, context_recall, answer_relevancy]#, answer_correctness, context_utilization, context_recall] #[faithfulness, context_precision, answer_correctness, answer_relevancy, context_utilization, context_recall] #[context_precision, answer_correctness, answer_relevancy, context_recall]#\r\n        self.evaluation_dict = data_point\r\n        embd = HuggingFaceEmbeddings(\r\n            model_name=\"intfloat/multilingual-e5-small\"\r\n        )\r\n        start = time.time()\r\n        llm = AzureChatOpenAI(\r\n                    azure_deployment='rag_gpt4o_prod',\r\n                    openai_api_version=\"2023-05-15\",\r\n                    azure_endpoint=\"https://karmarageu.openai.azure.com/\",\r\n                    openai_api_key=\"0ade28c57d3447aebcabb231e0dfcb50\",\r\n                    temperature=0.0)\r\n\r\n        self.result = evaluate(\r\n            Dataset.from_pandas(self.create_dataset(self.evaluation_dict)),\r\n            metrics=metrics,\r\n            llm = llm,\r\n            embeddings = embd,\r\n            run_config = RunConfig(timeout=3600, max_retries = 20, max_wait = 180)\r\n        )\r\n        df = self.result.to_pandas()\r\n        df = df.fillna(0)\r\n        end = time.time()\r\n        print(end - start)\r\n        # metrics_str = ['faithfulness', 'context_recall']\r\n        # dataset = self.langfuse.get_dataset('Test')\r\n        # for i in range(len(dataset.items)):\r\n        #     if i == idx:\r\n        #         item = dataset.items[i]\r\n        #         handler = item.get_langchain_handler(run_name='test_run')\r\n        #         for metric in metrics_str:\r\n        #             handler.trace.score(\r\n        #                 name=metric,\r\n        #                 value = df[metric].iloc[0]\r\n        #             )\r\n        #         handler.trace.update(\r\n        #             input = {'question':data_point['question']},\r\n        #             output = {'output_text':data_point['answer']}\r\n        #             )\r\n        \r\n        \r\n        return df\r\n    \r\n    def get_results(self) -> Data:\r\n        metrics = ['faithfulness']#['faithfulness', 'context_recall', 'answer_relevancy']#, 'context_utilization', 'context_recall''answer_correctness', ]\r\n        dataset_items = {'items': []}\r\n        self.langfuse = Langfuse(\r\n          secret_key=\"sk-lf-78ef637a-0ef0-4660-ab80-59686ecf4111\",\r\n          public_key=\"pk-lf-9678af12-6a6b-4945-807b-f6d817c009de\",\r\n          host=\"https://langfuse-ui.karma-ml.nmbapp.net\"\r\n        )\r\n        for idx in range(len(self.dataset.data['items'])):\r\n            payload = self.dataset.data['items'][idx]\r\n            data_samples = {\r\n                'question': payload['query'],\r\n                'answer': payload['output'],\r\n                'contexts': payload['context'],\r\n                'ground_truth': payload['expected_output']\r\n            }\r\n            score = self.eval(data_samples, idx)\r\n            #columns_with_nan = score.columns[score.isna().any()].tolist()\r\n            \r\n            print(\"AFTER EVALUATE\")\r\n            for metric in metrics:\r\n                payload[metric] = score[metric].iloc[0]\r\n            dataset_items['items'].append(payload)\r\n            \r\n            # if columns_with_nan:\r\n            #     print(\"Columns with NaN values:\", columns_with_nan)\r\n\r\n            # score = score.fillna(0)\r\n            # pd.set_option('display.max_columns', None)\r\n            # print(\"SCORE:\", score)\r\n            # for metric in metrics:\r\n            #     self.langfuse.score(\r\n            #         trace_id = payload['trace_id'],\r\n            #         name = metric,\r\n            #         value = score[metric].iloc[0]\r\n            #     )\r\n        print(\"no error still\")\r\n        print(dataset_items)\r\n        data = Data(text_key = 'items', data = dataset_items)\r\n        return data\r\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              }
            },
            "description": "Takes in dataset and generation; performs evaluation and appends score.",
            "icon": "custom_components",
            "base_classes": [
              "Data"
            ],
            "display_name": "RAGAS",
            "documentation": "http://docs.axiestudio.org/components/custom",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Data"
                ],
                "selected": "Data",
                "name": "output",
                "display_name": "output",
                "method": "get_results",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "dataset"
            ],
            "beta": false,
            "edited": true,
            "metadata": {}
          },
          "id": "CustomComponent-3xQmr"
        },
        "selected": true,
        "width": 384,
        "height": 267,
        "dragging": false,
        "positionAbsolute": {
          "x": 2153.355478876727,
          "y": 381.18737169924646
        }
      },
      {
        "id": "CustomComponent-X3qhA",
        "type": "genericNode",
        "position": {
          "x": -252.23907669723974,
          "y": -1002.2435322215003
        },
        "data": {
          "type": "RAGAS_Evaluation_Component",
          "node": {
            "template": {
              "_type": "Component",
              "answer": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "answer",
                "value": "I am your bitdefender assistant",
                "display_name": "Answer",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "RAG Generated answer",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio.custom import Component\r\nfrom axiestudio.io import MessageTextInput, Output\r\nfrom axiestudio.schema import Data\r\nimport pandas as pd\r\nfrom datasets import Dataset\r\nfrom ragas import evaluate\r\nimport os\r\nfrom ragas.metrics import (\r\n    answer_relevancy,\r\n    faithfulness,\r\n    context_recall,\r\n    context_precision,\r\n)\r\nfrom axiestudio.schema.message import Message\r\n\r\nclass RAGAS_Evaluation_Component(Component):\r\n    display_name = \"Ragas Evaluator\"\r\n    description = \"Evaluates a question-answer pair using Ragas evaluation\"\r\n    icon = \"view\"\r\n\r\n    inputs = [\r\n        MessageTextInput(\r\n            name=\"question\",\r\n            display_name=\"Question\",\r\n            info=\"RAG Question\",\r\n        ),\r\n        MessageTextInput(\r\n            name=\"answer\",\r\n            display_name=\"Answer\",\r\n            info=\"RAG Generated answer\",\r\n        ),\r\n        MessageTextInput(\r\n            name=\"ground_truth\",\r\n            display_name=\"Ground Truth (optional)\",\r\n            info=\"Ground Truth\",\r\n        ),\r\n        MessageTextInput(\r\n            name=\"context_chunks\",\r\n            display_name=\"Retrieved chunks\",\r\n            info=\"The chunks of text retrieved by the RAG\",\r\n        ),\r\n        SecretStrInput(\r\n            name=\"openai_api_key\",\r\n            display_name=\"OpenAI API Key\",\r\n            info=\"The OpenAI API Key to use for the OpenAI model.\",\r\n            advanced=False,\r\n            value=\"OPENAI_API_KEY\",\r\n        ),\r\n        \r\n    ]\r\n\r\n    outputs = [\r\n        Output(display_name=\"Text\", name=\"text\", method=\"ragas_evaluation\"),\r\n    ]\r\n        \r\n    def create_dataset(self, inputs: dict):\r\n        \r\n        self.data = {\r\n            \"question\": [inputs.get(\"question\", None)],\r\n            \"ground_truth\": [inputs.get(\"ground_truth\", None)],\r\n            \"answer\": [inputs.get(\"answer\", None)], \r\n            \"contexts\": [['?', 'anyone?', 'Help?', 'Minor\\na failure of a configuration item that has not yet impacted an IT service (for example failure of one disk from a mirror set)\\na minor inconvenience to internal colleagues, workaround available\\na minimal number of internal colleagues are affected and/or able to deliver an acceptable service but this requires extra effort.\\nMajor \\nnone of the services lost are critical\\nfinancial loss and damage to the organization’s reputation are possible, but limited in scope\\nsome staff members are affected\\nCritical \\na situation in which an overnight server restart leads to app login problems for hundreds of users can have a huge impact on the \\nbusiness\\na network device crashes, bringing down several services (no impact on customers)\\nsecurity incidents\\nBlocker\\na large number of customers are affected and/or acutely disadvantaged in some way\\nthe financial impact of the Incident is big\\nthe damage to the reputation of the business is likely to be high\\nPlease do not abuse with the priority level for your request ( e.g. : if you need a separate mouse / keyboard for your laptop, do no \\nset the priority of your request to Major or higher).\\nPlease note that for the requests types the SLA will be counted in business days and for Incidents will the normal days.\\nThe IT team can change the priority accordingly to the  Priority and Business justification presented\\nOverview of the ticket\\nAfter you create a ticket, you will be redirect to the overview page of it, where you can check all the details you have selected and the current \\nstatus.\\nAlso here will appear the comments from the agent (you will be notified also via email).\\nStatuses explained\\nWaiting for approval - the ticket is in the state where it waits for all approvals to be proceed to the next stage. The person who need to approve \\nyour request will receive an automatic e-mail.\\nWaiting for support  - the ticket is in the state where the IT team is working hard to fulfill your request', 'Business justification :  only found in  category - some types from  may have this field mandatory, others may not Requests Request\\nImpact (optional): let use us know how many people are impacted or if it has an impact for the the customers/parterns who are using \\nBitdefender products\\nPriority: in the drop down list youll find the priorities from which you can select alongside with the SLA associated\\nAttachment: A screenshot with the error message always helps\\nApprovers : In here you will need to fill in your managers name  the owner of the service/server/mail list which needs to approve your and/or\\nrequest.\\nPriorities explained\\nIncidents are assigned priorities (“Minor”, “Major”, “Critical”, “Blocker”) based on the impact and urgency of the failure or \\ninterruption.\\nMinor\\na failure of a configuration item that has not yet impacted an IT service (for example failure of one disk from a mirror set)\\na minor inconvenience to internal colleagues, workaround available\\na minimal number of internal colleagues are affected and/or able to deliver an acceptable service but this requires extra \\neffort.\\nMajor \\nnone of the services lost are critical\\nfinancial loss and damage to the organization’s reputation are possible, but limited in scope\\nsome staff members are affected\\nCritical \\na situation in which an overnight server restart leads to app login problems for hundreds of users can have a huge impact \\non the business\\na network device crashes, bringing down several services (no impact on customers)\\nsecurity incidents\\nBlocker\\na large number of customers are affected and/or acutely disadvantaged in some way\\nthe financial impact of the Incident is big\\nthe damage to the reputation of the business is likely to be high\\nPlease do not abuse with the priority level for your request ( e.g. : if you need a separate mouse / keyboard for your laptop, do no \\nset the priority of your request to Major or higher).', 'Communication System\\nBoardroom Presentation Scenarios\\nCommunications procedure for corporate chat channels\\nEmail Utilities\\nGoToMeeting\\nITSupport ( Pending updates )\\nGotoMeeting - Create a meeting\\nLocked Accounts Email Warning\\nMailSystems\\nAddressBook\\nEmail Settings - POP3 IMAP\\nMail distribution lists\\nEmailSettings-ScriptsAndTools\\nEmail Signature Creation\\nOut of office\\nEmail Settings - MS Exchange\\nMeeting Rooms System\\nSet up Office365 account on mobile (Android and iOS)\\nSkype for Business\\nSlack Bot/API approval request\\nSlack Guide\\nTelephonyServices\\nVodafone Mobile Internet Modem Configuration\\nInternalPhones\\nWEBEX System\\nSlack channels administration\\nBoardroom Presentation Scenarios\\nUsers with Write permissions Users who will be allowed to add and modify data to this location\\nUsers with Admin permissions Users who will be able to manage the R and RW access groups\\nAccessing an existing File Server or Share\\nThe user will create a ticket using the and specify:  IT ticketing system  \\nThe FTP with the desired access\\nThe users for whom access is desired\\nThe reason for which access is desired\\nAdministrative workflow\\nThe IT departament will only provide the HW and SW infrastructure for data storage\\nEnsures AV monitoring using the Bitdefender solution\\nInfected files are kept in quarantine only for 30 days, after which they are deleted\\nEnsures access to the files hosted here through the permission groups\\nTakes the right to start defragmentation and scandisk instances once every 2 months at the most in order to ensure data integrity\\nWhen such operations are executed, they will be notified 1 day in advance (we will try to plan such operations on weekends)\\nThe cleanup of storage server locations is the responsability of the team which owns the folder\\nQuota excess is signaled by mail to the owners of the locations.\\nEach project benefits from a dedicated folder\\nEach folder will have a certain quota allocated\\nEach folder will have a specific group of users with Write right', 'Blocker\\na large number of customers are affected and/or acutely disadvantaged in some way\\nthe financial impact of the Incident is big\\nthe damage to the reputation of the business is likely to be high\\nPlease do not abuse with the priority level for your request ( e.g. : if you need a separate mouse / keyboard for your laptop, do no \\nset the priority of your request to Major or higher).\\nPlease note that for the requests types the SLA will be counted in business days and for Incidents will the normal days.\\nThe IT team can change the priority accordingly to the Priority and Business justification presented\\nOverview of the ticket\\nAfter you create a ticket, you will be redirect to the overview page of it, where you can check all the details you have selected and the current \\nstatus.\\nAlso here will appear the comments from the agent (you will be notified also via email).\\nStatuses explained\\nWaiting for approval - the ticket is in the state where it waits for all approvals to be proceed to the next stage. The person who need to approve \\nyour request will receive an automatic e-mail.\\nWaiting for support  - the ticket is in the state where the IT team is working hard to fulfill your request\\nWaiting for customer  - the ticket is in the state where the IT is currently pending information or confirmation from your side\\nWaiting for acquisition  - the ticket is the state where the acquisition note is created and now we are waiting for them to arrive.', 'Locked Accounts Email Warning\\nUP TO DATE\\nIt might happen youll receive an automated email when our systems detect that your account is being locked out due to repeated password \\nfailures.\\nThere are two main reasons for this, one is that somebody is indeed trying to bruteforce your password, the other being that youve recently \\nchanged your password but havent updated it on all devices/scripts.\\nExample 1:\\nIn this example, its pretty obvious where to check for the root cause: the machine name should be familiar to you, thats where you should focus \\nthe investigation.\\nExample 2:\\nIn this example, you might not recognize this particular machine as one where youre usually doing business on, but in this particular case the \\nmachine is part of the On Premise Exchange server. Seeing this type of email suggest youve setup your email account on a device where you \\nhavent updated the changed password, so you should start the investigation with the devices where youve got your email set up.\\nIn the end\\nYou need to take these messages seriously, and update the changed password wherever youre using it.\\nIf you are unable to locate where the failed logins are originating from, do join  on Slack and ask for assistance over there #it-department-pub\\nregarding this issue.', 'Responsabili IT @Tuna EKER   @Razvan CAMPEAN @Bogdan Paul SPIREA\\nResponsabili \\ncompletareTeam Managers (NU team leads)\\nOverview\\nOverview\\nOverview\\nScopeDefinirea listei de useri care au voie sa aiba instalata alta solutie AV decat clientul de BEST administrat de IT\\nA avea alt AV nu inseamna a folosi laptopul in toate campaniile de Alfa\\\\Beta cu nenumarate sesiuni de uninstall&install \\nintrucat acestea vor duce la probleme cu Sistemul de Operare\\nTestarea produselor in Afla\\\\Beta\\\\Release se face pe medii dedicate (masini virtuale locale, masini virtuale in \\ninfrastructuri dedicate, masini fizice dedicate)\\nDefault \\nAntivirus \\nsolutionThe mandatory Antivirus solution used by the Bitdefender employees is the  clie Bitdefender End Point Security Tools\\nnt managed by the Gravity Zone management system administered by the IT department. \\nAll equipment must comply to the above rule\\nAny user who needs to install/uninstall or has problems with the current antivirus solution, has to open a ticket \\nusing the  -->   component IT ticketing system Antivirus.System\\nIt is forbidden for any user to manually uninstall the Antivirus solution provided by the IT Team without the IT \\napproval\\nAll the other users who want to use this solution will need to follow the steps available in the Installation and \\nmanagement procedures paragraph\\nAlternative \\nAntivirus \\nsolutionsUsing other Bitdefender Antivirus solutions\\nComputers and phones with Alternative Antivirus solutions Compliance will be subject to regular checks and audits \\nin order to validate the adherence to the company policy of the IT department \\nNot using an Antivirus solution\\nOnly available for testing purposes\\nResponsabili IT @Tuna EKER   @Razvan CAMPEAN @Bogdan Paul SPIREA\\nResponsabili \\ncompletareTeam Managers (NU team leads)', 'Start typing a search term. Slack will show you related channels, members, and search suggestions. You can also choose from your \\nrecent searches.  Search results are also adaptive to help you find what you’re looking for.\\nYou can use search modifiers in order to easier find what you are looking for:\\nfrom:@[username] from a specific person\\nin:[channel name] in a certain channel\\nto:[username] to a specific person\\nbefore:/after: YYYY-MM-DD before/after a certain date\\nSlack Connect Invitations\\nIn order to invite an external partner using Slack connect you need to first create a private Slack channel in our workspace, private channels are \\nmarked with a lock icon in Slack.\\nIn the channel in question go to Settings\\nRelated articles\\nSlack Guide\\nMFA authentication/recovery for (user) service accounts\\nService Accounts Handling\\nSlack channels administration\\nSlack Bot/API approval request', 'AV-Exceptions\\nOverview\\nOverview\\nOverview\\nScopeDefinirea listei de useri care au voie sa aiba instalata alta solutie AV decat clientul de BEST administrat de IT\\nA avea alt AV nu inseamna a folosi laptopul in toate campaniile de Alfa\\\\Beta cu nenumarate sesiuni de uninstall&install \\nintrucat acestea vor duce la probleme cu Sistemul de Operare\\nTestarea produselor in Afla\\\\Beta\\\\Release se face pe medii dedicate (masini virtuale locale, masini virtuale in \\ninfrastructuri dedicate, masini fizice dedicate)\\nDefault \\nAntivirus \\nsolutionThe mandatory Antivirus solution used by the Bitdefender employees is the  clie Bitdefender End Point Security Tools\\nnt managed by the Gravity Zone management system administered by the IT department. \\nAll equipment must comply to the above rule\\nAny user who needs to install/uninstall or has problems with the current antivirus solution, has to open a ticket \\nusing the  -->   component IT ticketing system Antivirus.System\\nIt is forbidden for any user to manually uninstall the Antivirus solution provided by the IT Team without the IT \\napproval\\nAll the other users who want to use this solution will need to follow the steps available in the Installation and \\nmanagement procedures paragraph\\nAlternative \\nAntivirus \\nsolutionsUsing other Bitdefender Antivirus solutions\\nComputers and phones with Alternative Antivirus solutions Compliance will be subject to regular checks and audits \\nin order to validate the adherence to the company policy of the IT department \\nNot using an Antivirus solution\\nOnly available for testing purposes\\nResponsabili IT @Tuna EKER   @Razvan CAMPEAN @Bogdan Paul SPIREA\\nResponsabili \\ncompletareTeam Managers (NU team leads)\\nOverview\\nOverview\\nOverview\\nScopeDefinirea listei de useri care au voie sa aiba instalata alta solutie AV decat clientul de BEST administrat de IT\\nA avea alt AV nu inseamna a folosi laptopul in toate campaniile de Alfa\\\\Beta cu nenumarate sesiuni de uninstall&install', 'EX:\\nUsers must go through an authentication process whenever they have to exchange information\\nNetwork segregation and quality will be depreciated\\nInternet bandwidth will increase due to lack of a missing centralized update systems\\nWhy should I login with my Bitdefender domain user? How does it help me?\\nActive Directory provides centralized management of all Bitdefender PCs\\nYou benefit from the use of internal communication systems. EX: Email, VPN, MRBS, Skype for Business, Data Protection Manager)\\nIf you forget the Domain Password, IT can restore it\\n1.  \\n1.  \\n2.  \\n3.  \\n1.  \\n2.  \\n3.  \\n4.  Why should I change my password every 2 months?\\nIt is a security measure meant to enhance security for:\\ninformation stored in the users PC\\nBitdefender proprietary applications or services\\n2. Limit the time that a possibly non Bitdefender user can use a stolen password\\nWhy does my AV solution have to be managed by IT?\\nThe ease of viewing current antivirus status\\nCentralized Management - easily implement and manage settings, protection policies, scheduled scans, etc.\\nBeing a centralized system the location for updates is controlled by IT, thus reducing Bitdefender infrastructure bandwidth\\nWhy should my equipment be audited?\\nAll standards that Bitdefender adheres to, whether Information Technology, Security, Quality, are designed to help users and to protect \\nBitdefender proprietary information and services.\\nThus, IT try to support users to be compliant with the above mentioned standards\\nAn audit on a user equipment means a list of checks to see users adherence to these standards and where gaps exist so that they may \\nbe corrected.\\nThe conclusions are transparently added into the Zalmoxis inventory app.', 'Storage-System\\nIN REVIEW\\nCreating a new share on an existing File Server\\nAccessing an existing File Server or Share\\nAdministrative workflow\\nCreating a new share on an existing File Server\\nThe user will create a ticket using the  and specify:  IT ticketing system\\n Requirement Description\\nShare name Desired folder name\\nProject name The project whose data will be hosted here\\nProject responsible The user who will be accountable for this share\\nShare quota Desired quota for this folder\\nShare quota notification group The email list where quota notifications will be sent\\nUsers with Read Only permissions Users who will only be allowed to Read existing data\\nUsers with Write permissions Users who will be allowed to add and modify data to this location\\nUsers with Admin permissions Users who will be able to manage the R and RW access groups\\nAccessing an existing File Server or Share\\nThe user will create a ticket using the and specify:  IT ticketing system  \\nThe FTP with the desired access\\nThe users for whom access is desired\\nThe reason for which access is desired\\nAdministrative workflow\\nThe IT departament will only provide the HW and SW infrastructure for data storage\\nEnsures AV monitoring using the Bitdefender solution\\nInfected files are kept in quarantine only for 30 days, after which they are deleted\\nEnsures access to the files hosted here through the permission groups\\nTakes the right to start defragmentation and scandisk instances once every 2 months at the most in order to ensure data integrity\\nWhen such operations are executed, they will be notified 1 day in advance (we will try to plan such operations on weekends)\\nThe cleanup of storage server locations is the responsability of the team which owns the folder\\nQuota excess is signaled by mail to the owners of the locations.\\nEach project benefits from a dedicated folder\\nEach folder will have a certain quota allocated\\nEach folder will have a specific group of users with Write right', 'Hello  !\\nWe are experiencing  issues  with  VPN authentication . We are working on a fix as we speak.\\nI ask those who are already connected to the VPN not to test this aspect with a disconnect/reconnect as they may be unable to reconnect.\\nThank you!', ', then scroll down until you see ; to BITDEFENDER AD domain Sync\\n1.  \\n2.  \\n3.  \\n4.  \\n5.  1.  \\n2.  7. Youre all set up. Done. \\nTroubleshooting Enrollment\\nAdd troubleshooting article\\nTitle Creator Modified\\nYou need to update your operating system to 10.0.19043.1237 or later. Andrei Lucian BOROS Nov 15, 2022\\nTurn on device encryption Andrei Lucian BOROS Nov 15, 2022\\nThis device hasnt been set up for corporate use yet. Andrei Lucian BOROS Nov 15, 2022', 'Based on the computer protection status and the update status\\nWe need to analyze and check offline stations\\nBased on the malware status\\nIf there are any problems with file infection we need to analyze and notify the users individually\\nSerious problems are looked into together with the technical team\\nThe EPS AV solution will not be uninstalled from the client computers by anyone except the IT responsible who will do so as a result of a \\nticket with a valid business request on the IT ticketing system\\nExceptions from the installation of the EPS Av solution will be made in case of:\\nComputer users belonging to the development team who work on components which will be affected by the AV behavior\\nTesting computers that are used for Bitdefender products\\nInstallation and management procedures\\nAV management is executed remotely by IT admins using the Bitdefender Cloud Management Console\\nThe installation process relies on several scenarios:\\nFor the computers configured by the IT department - the AV solution will be installed during the configuration period\\nFor any other computers in Bitdefender - the IT responsible will ensure and regularly check the installation of the AV solution\\nFor any other user who wants to install the product download and install the specific kit from the  section Antivirus System#AVinstalllocations\\nThe IT administrator will then validate the installation in the management console\\nOther Antivirus solutions \\nBitdefender Total Security \\nBitdefender Internet Security \\nBitdefender Antivirus Plus\\nFor the above AV solutions all Bitdefender users should use the settings as stated in EPS client solution.', 'Hi Team, who can support me within my mail account, something seems to be wrong within my set up, i am not receiving mails as some are contacting me via .de and some via .com - who can take a look an that please? Thank you', 'g2mbusales7@bitdefe\\nnder.comGoToMeeti\\nng ProDEACTIVATED SCHIAVO \\nVincent\\ng2mbusales8@bitdefe\\nnder.comGoToWebi\\nnar PlusDEACTIVATED GURAN Mihai\\ng2mbusales9@bitdefe\\nnder.comGoToMeeti\\nng ProDEACTIVATED GURAN Mihai\\ng2mbusales10@bitdef\\nender.comGoToMeeti\\nng ProDEACTIVATED GURAN Mihai\\ng2mbusales11@bitdef\\nender.comGoToMeeti\\nng ProDEACTIVATED SCHIAVO \\nVincent\\ng2mbusales12@bitdef\\nender.comGoToWebi\\nnar PlusDEACTIVATED SCHIAVO \\nVincent\\ng2mbusales13@bitdef\\nender.comGoToMeeti\\nng Proaionita@bitdefender.com ,  (sent email) igeorgescu@bitdefender.com GURAN Mihai\\ng2mbusales14@bitdef\\nender.comGoToMeeti\\nng ProDEACTIVATED SCHIAVO \\nVincent\\ng2mbusales15@bitdef\\nender.comGoToMeeti\\nng ProDEACTIVATED SCHIAVO \\nVincent\\ng2mbusales16@bitdef\\nender.comGoToMeeti\\nng Proatello@bitdefender.com ,  (sent email) jwhite@bitdefender.com SCHIAVO \\nVincent\\ng2mbusales17@bitdef\\nender.comGoToMeeti\\nng ProDEACTIVATED PAUN Mihaela\\ng2mbusales18@bitdef\\nender.comGoToMeeti\\nng ProDEACTIVATED SCHIAVO \\nVincent\\ng2mbusales19@bitdef\\nender.comGoToWebi\\nnar PlusDEACTIVATED GURAN Mihai\\ng2mbusales20@bitdef\\nender.comGoToWebi\\nnar Plusrgresham@bitdefender.com ,  (sent email) dgreenburg@bitdefender.com SCHIAVO \\nVincent\\ng2mbusales21@bitdef\\nender.comGoToMeeti\\nng Projmerino@bitdefender.es  (sent email) SCHIAVO \\nVincent\\ng2mbusales26@bitdef\\nender.comGoToMeeti\\nng ProDEACTIVATED SCHIAVO \\nVincent\\ng2mbusales28@bitdef\\nender.comGoToMeeti\\nng ProDEACTIVATED SCHIAVO \\nVincent\\ng2mbusales29@bitdef\\nender.comGoTo Webi\\nnar PlusDEACTIVATED SCHIAVO \\nVincent\\ng2mbusales30@bitdef\\nender.comGoToMeeti\\nng ProDEACTIVATED SCHIAVO \\nVincent\\ng2mbusales31@bitdef\\nender.comGoToMeeti\\nng ProDEACTIVATED GURAN Mihai\\ng2mbusales32@bitdef\\nender.comGoToMeeti\\nng Proudesai@ m, jjones@  (sent email) bitdefender.co bitdefender.com AGASTYA \\nHarish \\nSunderam\\ng2mbusales33@bitdef\\nender.comGoToMeeti\\nng ProDEACTIVATED SCHIAVO \\nVincent\\ng2mbusales34@bitdef\\nender.comGoToMeeti\\nng ProDEACTIVATED SCHIAVO \\nVincent\\ng2mbusales35@bitdef\\nender.comGoToMeeti\\nng ProDEACTIVATED GURAN Mihai', 'responsible for determining appropriate sensitivity classifications and criticality ratings, making decisions about who can access the \\ninformation, and ensuring that appropriate controls are utilized in the storage, handling, distribution, and regular usage of information.\\nEach significant type of production information must have a designated Custodian who will properly protect Bitdefender information in keeping \\nwith the designated Information Owner’s access control, data sensitivity, and data criticality instructions.\\nAll Bitdefender data must be broken into the following four sensitivity classifications: , STRICTLY CONFIDENTIAL , CONFIDENTIAL or restricted\\nINTERNAL or proprietary, PUBLIC . Distinct handling, labeling, and review procedures must be established for each classification.\\nFor all existing production information types, the Information Owner is responsible for choosing an appropriate data classification label to be \\nused by all workers who create, compile, alter, or procure production information.\\nInformation Exchange\\nhttps://www.intranet.bitdefender.biz/IS/Procedurestemplates/IS130%20Information%20Exchange%20Policy.pdf\\nThe Information Exchange Policy defines controls for the secure transfer or exchange all Bitdefender sensitive information, either in paper or \\nelectronic format.\\nAll requests from a third party for internal information that is not classified as PUBLIC must be approved by both the Information Owner and \\ntheB itdefender corporate counsel, who must each be given five business days to evaluate the merits of the request.\\n1.  \\n1.  \\n2.  \\n3.  \\n4.  \\n5.  \\n6.  \\n7.  \\n8.  \\n9.  \\n1.  \\n2.  \\n3.  Workers must not make any public representations about Bitdefenderfuture earnings or the prospects for new products.\\nAll public representations including, but not limited to, media advertisements, Internet home pages, electronic bulletin board postings, and \\nvoice mail broadcast messages, must be issued or approved by the Public Relations Department.', 'cineva on?', 'Multiple users are reporting issues with Outlook/Teams. Could you let me know if you are looking into this?', 'Acquisition System\\nHere you will find information about the acquisition process and the standard equipment in Bitdefender.', 'Out of office\\nStep-by-step guide for Exchange mailboxes\\nFor Bitdefender Exchange email accounts\\nFor Bitdefender non-Exchange email accounts\\nFor Bitdefender Exchange email accounts\\nClick the  tab.File\\nClick Automatic Replies.\\nIf you dont see Automatic Replies , use Rules and Alerts to set up your out-of-office message.\\nSelect Send automatic replies.\\nYou can set a date range for your automatic replies. This will turn off automatic replies at the date and time you enter for the end time. \\nOtherwise, youll need to turn off automatic replies manually.\\nSelect the  check box to schedule when your out of office replies are active. Only send during this time range\\nIf you don’t specify a start and end time, auto-replies are sent until you select the  check box. Do not send automatic replies\\nOn the  tab, type the response that you want to send to teammates or colleagues while you are out of the office. Inside My Organization\\nOn the  tab, select the  check box, and then type the response that Outside My Organization Auto-reply to people outside my organization\\nyou want to send while you are out of the office.\\nSelect whether you want replies sent to  or to  who sends you messages. My contacts only Anyone outside my organization\\nSending automatic replies to  anyone outside my organization will send your automatic reply to every email, including newsletters,  \\nadvertisements, and potentially, junk email. If you want to send automatic replies to those outside your organization, we recommend \\nchoosing  My contacts only .\\nSelect  OKto save your settings. \\nFor Bitdefender non-Exchange email accounts\\nNOT  supported.', 'Hi Team - are you able to assist me here? Please and thank you!', 'PHP Storm Code Editor https://www.jetbrains.com\\n/phpstorm/Proprietary\\nDocker Container \\nManagementhttps://docs.docker.com\\n/desktopProprietary\\nProtractor sonar - \\npassedE2E test \\nframework for \\nAngular and \\nAngularJShttps://www.protractortest.\\norg/#/MIT\\nWebStorm Code Editor https://lp.jetbrains.com\\n/webstorm-ide/Proprietary\\nFastRedis Database \\nManager GUI \\nfor Redishttps://fastoredis.com/ BSD\\nInsomnia API Definition \\nManagementhttps://insomnia.rest/ Proprietary\\nPortainer Container \\nOrchestration \\nUIhttps://documentation.\\nportainer.ioProprietary\\nCompass Database \\nManager GUI \\nfor MongoDBhttps://www.mongodb.com\\n/products/compassApache 2.0\\nDev Support - Development Tools\\nTool Used for Website License Type Comments\\nVisual Studio https://www.visualstudio.com Commercial\\nProvided by \\nthe \\nDEVSUPP \\nand IT \\nacquisition te\\nam\\nnotepad++ https://notepad-plus-plus.org/ GPL 2.0\\nWindows Sysinternals https://docs.microsoft.com\\n/en-us/sysinternals/Proprietary\\n7-zip https://www.7-zip.org/ LGPL 2.1 \\nwith unRAR \\nrestrictions\\nnodejs https://nodejs.org/en/ MIT\\nnpm https://www.npmjs.com/ The Artistic \\nLicense 2.0\\nSourcetree https://www.sourcetreeapp.\\ncom/Proprietary\\nPython https://www.python.org/ Open-source\\nPyCharm Community Edition https://www.jetbrains.com\\n/pycharm/Free, Open-\\nSource\\nDBeaver Community Edition https://dbeaver.io/ free and \\nopen source \\n(ASL) product\\nGit https://git-scm.com/ freen and \\nopen source\\nSublime Text 3 v4 https://www.sublimetext.com/ Free, https://w\\nww.\\nsublimetext.\\ncom/eula\\nMoba Xterm https://mobaxterm.mobatek.\\nnet/Free, https://\\nmobaxterm.\\nmobatek.net\\n/license.html\\ncygwin https://www.cygwin.com Free, \\nGPL, https://c\\nygwin.com\\n/licensing.html\\nminGW http://mingw-w64.org/doku.\\nphpFree, \\nGPL, http://mi\\nngw-w64.org\\n/doku.php\\n/support\\nxming http://www.straightrunning.\\ncom/XmingNotes/Free, http://w\\nww.\\nstraightrunnin\\ng.com\\n/XmingNotes\\n/terms.php\\nInfluxDb Studio https://github.com Free, \\n/CymaticLabs/InfluxDBStudio MIT, https://git\\nhub.com\\n/CymaticLabs\\n/InfluxDBStudi', 'Hello all, looking for BitdefenderVPN license for my personal use, can you please advise who can assist here?', 'Bitdef\\nender\\nG2MSales \\nEngine\\ner 2g2mse2@bi\\ntdefender.\\ncomSales \\nEngine\\nersOct \\n12, \\n2016Oct \\n12, \\n2016Ena\\nbled2 5 3 4 1 231 116 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MSales \\nEngine\\ner 3g2mse3@bi\\ntdefender.\\ncomSales \\nEngine\\nersOct \\n12, \\n2016Oct \\n12, \\n2016Ena\\nbled0 0 0 0 0 0 0 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MSales \\nEngine\\ner 4g2mse4@bi\\ntdefender.\\ncomSales \\nEngine\\nersOct \\n12, \\n2016Oct \\n12, \\n2016Ena\\nbled1 2 2 2 2 23 23 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MSales \\nEngine\\ner 5g2mse5@bi\\ntdefender.\\ncomSales \\nEngine\\nersOct \\n12, \\n2016Oct \\n12, \\n2016Ena\\nbled0 0 0 0 0 0 0 0 0 0 0 0 0 0\\nBitdef Sales g2mse6@biSales Oct Oct Ena 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n1.  \\n1.  \\n2.  \\n3.  \\n4.  \\n5.  ender\\nG2MEngine\\ner 6tdefender.\\ncomEngine\\ners13, \\n201613, \\n2016bled\\nBitdef\\nender\\nG2MSales \\nEngine\\ner 7g2mse7@bi\\ntdefender.\\ncomSales \\nEngine\\nersOct \\n13, \\n2016Oct \\n13, \\n2016Ena\\nbled0 0 0 0 0 0 0 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MSales \\nEngine\\ner 8g2mse8@bi\\ntdefender.\\ncomSales \\nEngine\\nersOct \\n13, \\n2016Oct \\n13, \\n2016Ena\\nbled1 1 1 1 1 1 1 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MSales \\nEngine\\ner 9g2mse9@bi\\ntdefender.\\ncomSales \\nEngine\\nersOct \\n13, \\n2016Oct \\n13, \\n2016Ena\\nbled0 0 0 0 0 0 0 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MSalesC\\nhannel\\nR1g2msalesch\\nannelr1@bit\\ndefender.\\ncomSales Aug \\n02, \\n2016Oct \\n11, \\n2016Ena\\nbled1 4 4 4 4 25 25 0 0 0 0 0 0 0\\nRoss \\nLaingSales \\nEngine\\nerg2mse10@\\nbitdefender.\\ncomSales \\nEngine\\nersOct \\n06, \\n2016Ena\\nbled120 318 3 6 1 5114 43 0 0 0 0 0 0 0', '1.  \\n2.  \\n3.  \\n4.  \\n5.  \\n6.  \\n7.  \\n8.  \\n9.  \\n1.  \\n2.  \\n1.  \\n2.  \\n3.  \\n4.  \\n5.  REQUESTS\\nAccess\\nNetwork Infrastructure\\nVirtual Infrastructure\\nCommunication System\\nAntivirus\\nPrinting System\\nSoftware\\nLicenses\\nOther Requests\\nACQUISITIONS & PROVISIONING\\nUser side\\nServer side\\nINCIDENTS\\nApplications\\nServices\\nInfrastructure\\nSecurity Breach\\nOther incidents\\nFields\\nOnce youve selected an option from the above you may find the fields listed below:\\nSummary : This is the  of the ticket - describe in a few words words the request/issue which you want to raisetitle\\nDescription :  of your request/issue in order to understand the nature of your situation. Full description\\nA drop down menu : only some types of  tickets will have a dropdown list, Requests from where you can select the area of activity\\nBusiness justification :  only found in  category - some types from  may have this field mandatory, others may not Requests Request\\nImpact (optional): let use us know how many people are impacted or if it has an impact for the the customers/parterns who are using \\nBitdefender products\\nPriority: in the drop down list youll find the priorities from which you can select alongside with the SLA associated\\nAttachment: A screenshot with the error message always helps\\nApprovers : In here you will need to fill in your managers name  the owner of the service/server/mail list which needs to approve your and/or\\nrequest.\\nPriorities explained\\nIncidents are assigned priorities (“ Minor ”, “Major ”, “Critical ”, “Blocker ”) based on the impact and urgency of the failure or interruption.\\nMinor\\na failure of a configuration item that has not yet impacted an IT service (for example failure of one disk from a mirror set)\\na minor inconvenience to internal colleagues, workaround available\\na minimal number of internal colleagues are affected and/or able to deliver an acceptable service but this requires extra effort.\\nMajor \\nnone of the services lost are critical', 'Whats this?', 'Good morning, Slack webhooks are becoming deprecated and I have put in a request for an app. Who accepts such requests?', 'framework for \\nAngular and \\nAngularJShttps://www.protractortest.\\norg/#/\\nInsomnia API Definition \\nManagementhttps://insomnia.rest/\\nPortainer Container \\nOrchestration \\nUIhttps://documentation.\\nportainer.io\\nCompass Database \\nManager GUI \\nfor MongoDBhttps://www.mongodb.com\\n/products/compass\\nCheckout - Development Tools\\nName Used for Website License Type Comments\\nnpm Package \\nManager for \\nNodeJS \\nmoduleshttps://www.npmjs.com/ The Artistic \\nLicense 2.0\\nnginx HTTP Server https://www.nginx.com/ 2-clause \\nBSD license\\nredis Redis \\nDatabase \\nServerhttps://redis.io/ 3-clause \\nBSD license\\nmongodb MongoDB \\nDatabase \\nServerApache 2.0\\nVisual Studio Code Code Editor https://code.visualstudio.\\ncom/Proprietary / \\nMixed\\nRobo3T Database \\nManager GUI \\nfor MongoDBhttps://robomongo.org/ GPL 3.0\\nsourcetree Source Code \\nVersion \\nControl GUIhttps://www.sourcetreeapp.\\ncom/Proprietary\\nPostman GUI HTTP \\nRequests \\nManagerhttps://www.getpostman.\\ncom/Proprietary \\nlogstash Data \\nprocessing \\npipeline and \\ningestionhttps://www.elastic.co\\n/products/logstashApache 2.0\\nkibana GUI \\nvisualizer for \\nElastic datahttps://www.elastic.co\\n/products/kibanaApache 2.0\\nGrafana Observability \\nUIhttps://grafana.com/ GNU Affero \\nGeneral \\nPublic \\nLicense v3.0\\ngit for windows Source Code \\nVersion \\nControlhttps://git-scm.com GPL 2.0\\nSublime Text 3 v4 Code Editor https://www.sublimetext.com\\n/3Proprietary\\nSublime Merge Source Code \\nVersion \\nControl GUIhttps://www.sublimemerge.\\ncom/Proprietary\\nSQLiteStudio Database \\nManager GUI \\nfor SQLite https://sqlitestudio.pl/ GPL (v3)\\nNoSQLBootster Database \\nManager GUI \\nfor MongoDBhttps://nosqlbooster.com Proprietary\\nPHP Storm Code Editor https://www.jetbrains.com\\n/phpstorm/Proprietary\\nDocker Container \\nManagementhttps://docs.docker.com\\n/desktopProprietary\\nProtractor sonar - \\npassedE2E test \\nframework for \\nAngular and \\nAngularJShttps://www.protractortest.\\norg/#/MIT\\nWebStorm Code Editor https://lp.jetbrains.com\\n/webstorm-ide/Proprietary\\nFastRedis Database \\nManager GUI', 'Statuses explained\\nWaiting for approval - the ticket is in the state where it waits for all approvals to be proceed to the next stage. The person who need to approve \\nyour request will receive an automatic e-mail.\\nWaiting for support  - the ticket is in the state where the IT team is working hard to fulfill your request\\nWaiting for customer  - the ticket is in the state where the IT is currently pending information or confirmation from your side\\nWaiting for acquisition  - the ticket is the state where the acquisition note is created and now we are waiting for them to arrive.', 'Hello   Team. I would need some help regarding some inventory entries that I dont understand what they are. Who can I speak with?', 'IT Knowledge Base\\nIT Knowledge Base\\nFrequently asked questions\\nWhat is the base for the IT audit checks?\\nWhat IT audit means and what checks \\nare made?\\nWhy am I not allowed to modify the \\nhardware configuration of the computer \\nreceived from Bitdefender?\\nWhy should I join my laptop to \\nBitdefender Domain? \\nWhy should I login with Bitdefender \\ndomain user? How it helps me?\\nWhy should I change my password \\nevery 3 months?\\nWhy my AV solution have to be \\nmanaged by IT?\\nWhy should my equipment be audited?\\nRecently updated articles\\nFile Upload Application - User documentation\\nabout 2 hours ago contributed by  • Vinod Reddy\\nCisco Secure Client tips and tricks for MacOS users\\nabout 4 hours ago contributed by  • Bogdan Vlad BIBART\\nMacOS Sonoma Tips and Tricks\\nyesterday at 1:19 PM contributed by  • Bogdan Vlad \\nBIBART\\nUser Equipment Configuration\\nDec 11, 2023 contributed by  • Violeta MIHALACHE\\nCommunication System\\nDec 06, 2023 contributed by  • Adrian Georgian MOISE\\nIT Support Ticketing System\\nDec 06, 2023 contributed by  • Adrian Georgian MOISE\\nSoftware Compliance\\nDec 05, 2023 contributed by  • George Lucian TALABA\\n macOS certificates\\nNov 13, 2023 contributed by  • Andrei Lucian BOROS\\nRemote Yubikey usage   \\nNov 08, 2023 contributed by  • Mihai TALMACEL\\nMeeting Rooms System\\nOct 27, 2023 contributed by  • Alin MATEESCU\\nmacOS Enrollment Guide\\nOct 17, 2023 contributed by  • Andrei Lucian BOROS\\nAndroid Enrollment Guide\\nOct 17, 2023 contributed by  • Andrei Lucian BOROS\\nWindows Enrollment Guide\\nOct 17, 2023 contributed by  • Andrei Lucian BOROS\\niOS Enrollment Guide\\nOct 17, 2023 contributed by  • Andrei Lucian BOROS\\nCisco AnyConnect installation\\nSep 20, 2023 contributed by  • Victor Iosif DRAPACA', 'Dear It-department team,\\nDo you know who I need to contact for asking adding someone in a generic email address ?', 'Bitdef\\nender\\nG2MChann\\nelBusi\\nness3g2mbchann\\nel3@bitdefe\\nnder.comChann\\nel \\nBusine\\nssDec \\n21, \\n2014Ena\\nbled18 45 3 9 1 621 35 1 112 112 112 112 64 64\\nBitdef\\nender\\nG2MChann\\nelMark\\neting1g2mcmarke\\nting1@bitde\\nfender.comChann\\nel \\nMarket\\ningDec \\n21, \\n2014Ena\\nbled97 371 4 26 1 2386 25 10 420 42 209 0 528 53\\nBitdef\\nender\\nG2MConsu\\nmerUni\\nt1g2mconsu\\nmerunit1@b\\nitdefender.\\ncomConsu\\nmer \\nUnitOct \\n13, \\n2016Ena\\nbled0 0 0 0 0 0 0 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MCusto\\nmerCa\\nre1g2mcustom\\nercare1@bit\\ndefender.\\ncomCC&CS Dec \\n21, \\n2014Ena\\nbled48 187 4 37 1 2175 45 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MCusto\\nmerCa\\nre2g2mcustom\\nercare2@bit\\ndefender.\\ncomCC&CS Oct \\n06, \\n2016Ena\\nbled11 23 2 6 0 590 54 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MEnterp\\nriseg2menterpri\\nse1@bitdef\\nender.comEnterp\\nriseDec \\n21, \\n2014Ena\\nbled13 25 2 4 1 580 45 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MEnterp\\nrise2g2menterpri\\nse2@bitdef\\nender.comEnterp\\nriseOct \\n13, \\n2016Ena\\nbled0 0 0 0 0 0 0 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MEnterp\\nrise4g2menterpri\\nse4@bitdef\\nender.comEnterp\\nriseDec \\n21, \\n2014Ena\\nbled6 19 3 7 1 326 54 1 20 20 20 20 51 51\\nBitdef\\nender\\nG2MEnterp\\nrise5g2menterpri\\nse5@bitdef\\nender.comEnterp\\nriseDec \\n21, \\n2014Ena\\nbled54 154 3 11 1 2475 46 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MEnterp\\nrise6g2menterpri\\nse6@bitdef\\nender.comEnterp\\nriseDec \\n21, \\n2014Ena\\nbled21 54 3 5 1 967 46 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MEnterp\\nrise7g2menterpri\\nse7@bitdef\\nender.comChann\\nel \\nBusine\\nssOct \\n06, \\n2016Ena\\nbled5 24 5 11 1 232 46 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MEnterp\\nrise8g2menterpri\\nse8@bitdef\\nender.comChann\\nel \\nBusine\\nssSep \\n01, \\n2015Ena\\nbled26 67 3 6 1 1684 65 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MEnterp\\nriseSol\\nutions1g2mentsol1\\n@bitdefend\\ner.comEnterp\\nrise \\nSolutio\\nnsOct \\n11, \\n2016Ena\\nbled13 43 3 12 1 724 56 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MGener\\nal1g2mgeneral\\n1@bitdefen\\nder.comZGrou\\np1Dec \\n21, \\n2014Ena\\nbled5 10 2 4 1 127 25 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MPR1g2mpr1@bit\\ndefender.\\ncomPR \\nUnitDec \\n21, \\n2014Ena\\nbled18 48 3 5 1 615 34 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MProduc\\ntMarke', 'e cineva disponibil?', 'Having problems with emails that look like they were sent, but sit in drafts I talked with other people who are having the same issues.', '/fstools/filetest.htmlMIT\\nReadFile, \\nWriteFile, \\nNtCreateFile)\\nPyCharm Community Edition Python \\nprogramminghttps://www.jetbrains.com\\n/pycharm/Free, Open-\\nSource\\nPython https://www.python.org/ Free, Open-\\nsource\\nDebug Diagnostic Tool https://www.microsoft.com\\n/en-us/download/details.\\naspx?id=58210Proprietary\\nCentral Web - Development Tools\\nName Used for Website License Type Comment\\nSublime Text 3 v4 https://www.sublimetext.com\\n/3Proprietary\\nVisual Studio Code https://code.visualstudio.\\ncom/Proprietary / \\nMixed\\nmocha https://mochajs.org/ MIT\\nkarma https://karma-runner.github.\\nio/1.0/index.htmlMIT\\ngrunt https://gruntjs.com/ MIT\\nnpm https://www.npmjs.com/ The Artistic \\nLicense 2.0\\nbower sonar - \\npassedhttps://bower.io/ MIT\\nvim http://www.vim.org GPL \\ncompatible\\nLinux Mint https://www.linuxmint.com/ GPL\\nnodejs https://nodejs.org/en/ https://github.\\ncom/nodejs\\n/node/blob\\n/master\\n/LICENSE \\nChromium https://www.chromium.org\\n/getting-involved/download-\\nchromiumOpen source\\n/Mixed\\nPostman https://www.getpostman.\\ncom/Proprietary \\ngedit https://wiki.gnome.org/Apps\\n/GeditGPL\\ngit https://git-scm.com/ GPL 2.0\\nmercurial https://www.mercurial-scm.\\norg/GPL 2.0\\nAngular Development Tools\\nName Used for Website License Type Comment\\n@angular-devkit/build-angular Build https://www.npmjs.com\\n/package/@angular-devkit\\n/build-angularMIT\\n@angular/cli Development https://www.npmjs.com\\n/package/@angular/cliMIT\\n@angular/compiler-cli Build / \\nCompilehttps://www.npmjs.com\\n/package/@angular\\n/compiler-cliMIT\\ntslint Development https://github.com/palantir\\n/tslintApache-2.0\\n@types/google-maps Development https://www.npmjs.com\\n/package/@types/google-\\nmapsMIT\\n@types/googlemaps Development https://www.npmjs.com\\n/package/@googlemaps\\n/typesApache-2.0\\n@types/jasmine Development https://www.npmjs.com\\n/package/@types/jasmineMIT\\n@types/jasminewd2 Development https://www.npmjs.com\\n/package/@types\\n/jasminewd2MIT\\n@types/node Development https://www.npmjs.com\\n/package/@types/nodeMIT', 'Salutare, stiti cumva cu cine pot vorbi de niste JIRA issues?', 'NotificationsBy default all new email addresses will have their email accounts on Exchange\\nException: Middle and Top management, employees who are working most of the time outside the Office\\nThe migration to the Exchange will be available only based on a request\\nIssues and \\nrequestUsing the IT Ticketing system\\nAccess Exchange email account from a Web Browser\\nAccess https://outlook.office.com/\\nIf this is the first time you login, you will need to enter your login email address (please type your login username instead of email address)\\nClick here to expand...\\nEnter your Bitdefender domain user and password (username: ) ADusername@subdomain.bitdefender.biz\\nClick here to expand...\\nFor the existing subdomains, check here - MS Exchange - Bitdefender subdomains\\nSetting you picture on the exchange server\\nLogin into  https://outlook.office.com/\\nLog in with your Bitdefender domain user and password ( username:  ) ADusername@bitdefender.biz\\nGo to the right upper corner and click on your username \\nClick here to expand...\\nClick on the picture icon and a new popup window will appear\\nClick here to expand...\\nClick on  and select a photo from your computer, then click open Upload a new photo\\nClick here to expand...\\nClick  to save your photo Apply\\nClick here to expand...\\nClick  and after the picture will be uploaded, click Save Done.\\nExchange configuration for mobile phones and tablets\\nPlease follow this guide - Set up Office365 account on mobile (Android and iOS)\\nExchange configuration for Laptops and Desktops\\n  \\nApplies forFor new users\\nFor users that are migrated from a POP account\\nFor equipment replacement\\nWindows users\\nWe are using only Office online apps or O365, by case.\\nFor O365 - the IT department will provide you with a license. \\nDO NOT use 3rd party license keys or activators.\\nThe bellow steps apply when:\\nif its the first time you start Outlook']]\r\n        }\r\n\r\n\r\n        self.df = pd.DataFrame(self.data)\r\n        \r\n        return self.df\r\n\r\n\r\n    def ragas_evaluation(self)-> Message:\r\n        llm = AzureChatOpenAI(\r\n            azure_deployment='rag_gpt4o_prod',\r\n            openai_api_version=\"2023-05-15\",\r\n            azure_endpoint=\"https://karmarageu.openai.azure.com/\",\r\n            openai_api_key=\"0ade28c57d3447aebcabb231e0dfcb50\",\r\n            temperature=0.0)\r\n\r\n        self.evaluation_dict = {\"question\": self.question,\r\n                      \"answer\":self.answer,\r\n                      \"ground_truth\":self.ground_truth,\r\n                      \"context_data\":self.context_chunks}\r\n        print(self.evaluation_dict)\r\n        if self.ground_truth:\r\n            metrics = [\r\n                faithfulness,\r\n                # answer_relevancy,\r\n                context_recall,\r\n                # context_precision\r\n            ]\r\n        else:\r\n            metrics = [\r\n                faithfulness,\r\n                # answer_relevancy,\r\n                context_recall\r\n            ]\r\n        print(\"EVALUATING...\")\r\n        self.result = evaluate(\r\n            Dataset.from_pandas(self.create_dataset(self.evaluation_dict)),\r\n            metrics=metrics,\r\n            llm = llm,\r\n            embeddings = None\r\n        )\r\n        \r\n        df = self.result.to_pandas()\r\n        \r\n        question = df.loc[0,'question']\r\n        answer = df.loc[0,'answer']\r\n        faithfulness_ = df.loc[0,'faithfulness']\r\n        # answer_relevancy_ = df.loc[0,'answer_relevancy']\r\n        context_recall_ = df.loc[0,'context_recall']\r\n        \r\n        string_to_return = f'Answer: {answer}\\ Faithfulness: {faithfulness_}  Context Recall: {context_recall_}'#'\\ Answer Relevancy: {answer_relevancy_}\\\r\n        \r\n        # if self.ground_truth:\r\n        #     context_precision_ = df.loc[0,'context_precision']\r\n        #     string_to_return += f'\\Context Precision: {context_precision_}'\r\n            \r\n        return Message(text=string_to_return)\r\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "context_chunks": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "context_chunks",
                "value": "abcd",
                "display_name": "Retrieved chunks",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "The chunks of text retrieved by the RAG",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              },
              "ground_truth": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "ground_truth",
                "value": "I am your assistant",
                "display_name": "Ground Truth (optional)",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Ground Truth",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              },
              "openai_api_key": {
                "load_from_db": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "openai_api_key",
                "value": "",
                "display_name": "OpenAI API Key",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "The OpenAI API Key to use for the OpenAI model.",
                "title_case": false,
                "password": true,
                "type": "str",
                "_input_type": "SecretStrInput"
              },
              "question": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "question",
                "value": "Who are you",
                "display_name": "Question",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "RAG Question",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              }
            },
            "description": "Evaluates a question-answer pair using Ragas evaluation",
            "icon": "view",
            "base_classes": [
              "Message"
            ],
            "display_name": "Custom Component",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "text",
                "display_name": "Text",
                "method": "ragas_evaluation",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "question",
              "answer",
              "ground_truth",
              "context_chunks",
              "openai_api_key"
            ],
            "beta": false,
            "edited": true,
            "lf_version": "1.0.17"
          },
          "id": "CustomComponent-X3qhA"
        },
        "selected": false,
        "width": 384,
        "height": 649,
        "dragging": false,
        "positionAbsolute": {
          "x": -252.23907669723974,
          "y": -1002.2435322215003
        }
      },
      {
        "id": "CustomComponent-O7Zig",
        "type": "genericNode",
        "position": {
          "x": 2815.812035754664,
          "y": 378.03288446298666
        },
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "_type": "Component",
              "dataset": {
                "trace_as_metadata": true,
                "list": false,
                "trace_as_input": true,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "dataset",
                "value": "",
                "display_name": "Dataset",
                "advanced": false,
                "input_types": [
                  "Data"
                ],
                "dynamic": false,
                "info": "Insert the dataset.",
                "title_case": false,
                "type": "other",
                "_input_type": "DataInput"
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "# from axiestudio.field_typing import Data\nfrom axiestudio.custom import Component\nfrom axiestudio.io import MessageTextInput, Output\nfrom axiestudio.schema import Data\n\n\nclass LangfuseScoreUploader(Component):\n    display_name = \"Custom Component\"\n    description = \"Use as a template to create your own component.\"\n    documentation: str = \"http://docs.axiestudio.org/components/custom\"\n    icon = \"custom_components\"\n    name = \"CustomComponent\"\n\n    inputs = [\n        DataInput(\n            name=\"dataset\",\n            display_name=\"Dataset\",\n            value=\"\",\n            info=\"Insert the dataset.\",\n        ),\n        MessageTextInput(name=\"run_name\", display_name=\"Run Name\"),\n    ]\n\n    outputs = [\n        Output(display_name=\"Output\", name=\"output\", method=\"build_output\"),\n    ]\n\n    def build_output(self) -> Data:\n        #metrics = ['faithfulness', 'context_recall']\n        metrics = ['faithfulness', 'context_recall', 'answer_relevancy']#, 'context_utilization', 'context_recall''answer_correctness', ]\n        self.langfuse = Langfuse(\n          secret_key=\"sk-lf-78ef637a-0ef0-4660-ab80-59686ecf4111\",\n          public_key=\"pk-lf-9678af12-6a6b-4945-807b-f6d817c009de\",\n          host=\"https://langfuse-ui.karma-ml.nmbapp.net\"\n        )\n        for idx in range(len(self.dataset.data['items'])):\n            payload = self.dataset.data['items'][idx]\n            dataset = self.langfuse.get_dataset('Test')\n            item = dataset.items[idx]\n            \n            handler = item.get_langchain_handler(run_name=self.run_name)\n            for metric in metrics:\n                handler.trace.score(\n                    name=metric,\n                    value = float(payload[metric])\n                )\n                handler.trace.update(\n                    input = {'question':payload['query']},\n                    output = {'output_text':payload['output']}\n                    )\n            \n        data = Data(value=self.dataset)\n        self.status = data\n        return data\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "run_name": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "run_name",
                "value": "test_run3",
                "display_name": "Run Name",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              }
            },
            "description": "Use as a template to create your own component.",
            "icon": "custom_components",
            "base_classes": [
              "Data"
            ],
            "display_name": "Langfuse Score Uploader",
            "documentation": "http://docs.axiestudio.org/components/custom",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Data"
                ],
                "selected": "Data",
                "name": "output",
                "display_name": "Output",
                "method": "build_output",
                "value": "__UNDEFINED__",
                "cache": true,
                "hidden": true
              }
            ],
            "field_order": [
              "dataset",
              "run_name"
            ],
            "beta": false,
            "edited": true
          },
          "id": "CustomComponent-O7Zig"
        },
        "selected": false,
        "width": 384,
        "height": 313,
        "dragging": false,
        "positionAbsolute": {
          "x": 2815.812035754664,
          "y": 378.03288446298666
        }
      },
      {
        "id": "CustomComponent-I8Mmv",
        "type": "genericNode",
        "position": {
          "x": 1647.3824477628018,
          "y": 1026.72509536566
        },
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "_type": "Component",
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "# from axiestudio.field_typing import Data\nfrom axiestudio.custom import Component\nfrom axiestudio.io import MessageTextInput, Output\nfrom axiestudio.schema import Data\n\n\nclass CustomComponent(Component):\n    display_name = \"Custom Component\"\n    description = \"Use as a template to create your own component.\"\n    documentation: str = \"http://docs.axiestudio.org/components/custom\"\n    icon = \"custom_components\"\n    name = \"CustomComponent\"\n\n    inputs = [\n        MessageTextInput(name=\"input_value\", display_name=\"Input Value\", value=\"Hello, World!\"),\n    ]\n\n    outputs = [\n        Output(display_name=\"Output\", name=\"output\", method=\"build_output\"),\n    ]\n\n    def build_output(self) -> Data:\n        data = Data(value=self.input_value)\n        self.status = data\n        return data\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "input_value": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "input_value",
                "value": "Hello, World!",
                "display_name": "Input Value",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              }
            },
            "description": "Use as a template to create your own component.",
            "icon": "custom_components",
            "base_classes": [
              "Data"
            ],
            "display_name": "Custom Component",
            "documentation": "http://docs.axiestudio.org/components/custom",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Data"
                ],
                "selected": "Data",
                "name": "output",
                "display_name": "Output",
                "method": "build_output",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "input_value"
            ],
            "beta": false,
            "edited": false
          },
          "id": "CustomComponent-I8Mmv"
        },
        "selected": false,
        "width": 384,
        "height": 305,
        "dragging": false
      },
      {
        "id": "OllamaModel-hRyll",
        "type": "genericNode",
        "position": {
          "x": 2141.5488030654465,
          "y": 824.896189457313
        },
        "data": {
          "type": "OllamaModel",
          "node": {
            "template": {
              "_type": "Component",
              "base_url": {
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "base_url",
                "value": "https://meta-llama-3-1-405b.nimbus-ai.nmbapp.net/v1/chat/completions",
                "display_name": "Base URL",
                "advanced": false,
                "dynamic": false,
                "info": "Endpoint of the Ollama API. Defaults to 'http://localhost:11434' if not specified.",
                "title_case": false,
                "type": "str",
                "_input_type": "StrInput"
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from typing import Any\n\nimport httpx\nfrom langchain_community.chat_models import ChatOllama\n\nfrom axiestudio.base.models.model import LCModelComponent\nfrom axiestudio.field_typing import LanguageModel\nfrom axiestudio.io import BoolInput, DictInput, DropdownInput, FloatInput, IntInput, StrInput\n\n\nclass ChatOllamaComponent(LCModelComponent):\n    display_name = \"Ollama\"\n    description = \"Generate text using Ollama Local LLMs.\"\n    icon = \"Ollama\"\n    name = \"OllamaModel\"\n\n    def update_build_config(self, build_config: dict, field_value: Any, field_name: str | None = None):\n        if field_name == \"mirostat\":\n            if field_value == \"Disabled\":\n                build_config[\"mirostat_eta\"][\"advanced\"] = True\n                build_config[\"mirostat_tau\"][\"advanced\"] = True\n                build_config[\"mirostat_eta\"][\"value\"] = None\n                build_config[\"mirostat_tau\"][\"value\"] = None\n\n            else:\n                build_config[\"mirostat_eta\"][\"advanced\"] = False\n                build_config[\"mirostat_tau\"][\"advanced\"] = False\n\n                if field_value == \"Mirostat 2.0\":\n                    build_config[\"mirostat_eta\"][\"value\"] = 0.2\n                    build_config[\"mirostat_tau\"][\"value\"] = 10\n                else:\n                    build_config[\"mirostat_eta\"][\"value\"] = 0.1\n                    build_config[\"mirostat_tau\"][\"value\"] = 5\n\n        if field_name == \"model_name\":\n            base_url_dict = build_config.get(\"base_url\", {})\n            base_url_load_from_db = base_url_dict.get(\"load_from_db\", False)\n            base_url_value = base_url_dict.get(\"value\")\n            if base_url_load_from_db:\n                base_url_value = self.variables(base_url_value)\n            elif not base_url_value:\n                base_url_value = \"http://localhost:11434\"\n            build_config[\"model_name\"][\"options\"] = self.get_model(base_url_value + \"/api/tags\")\n\n        if field_name == \"keep_alive_flag\":\n            if field_value == \"Keep\":\n                build_config[\"keep_alive\"][\"value\"] = \"-1\"\n                build_config[\"keep_alive\"][\"advanced\"] = True\n            elif field_value == \"Immediately\":\n                build_config[\"keep_alive\"][\"value\"] = \"0\"\n                build_config[\"keep_alive\"][\"advanced\"] = True\n            else:\n                build_config[\"keep_alive\"][\"advanced\"] = False\n\n        return build_config\n\n    def get_model(self, url: str) -> list[str]:\n        try:\n            with httpx.Client() as client:\n                response = client.get(url)\n                response.raise_for_status()\n                data = response.json()\n\n                model_names = [model[\"name\"] for model in data.get(\"models\", [])]\n                return model_names\n        except Exception as e:\n            raise ValueError(\"Could not retrieve models. Please, make sure Ollama is running.\") from e\n\n    inputs = LCModelComponent._base_inputs + [\n        StrInput(\n            name=\"base_url\",\n            display_name=\"Base URL\",\n            info=\"Endpoint of the Ollama API. Defaults to 'http://localhost:11434' if not specified.\",\n            value=\"http://localhost:11434\",\n        ),\n        DropdownInput(\n            name=\"model_name\",\n            display_name=\"Model Name\",\n            value=\"llama3.1\",\n            info=\"Refer to https://ollama.com/library for more models.\",\n            refresh_button=True,\n        ),\n        FloatInput(\n            name=\"temperature\",\n            display_name=\"Temperature\",\n            value=0.2,\n            info=\"Controls the creativity of model responses.\",\n        ),\n        StrInput(\n            name=\"format\",\n            display_name=\"Format\",\n            info=\"Specify the format of the output (e.g., json).\",\n            advanced=True,\n        ),\n        DictInput(\n            name=\"metadata\",\n            display_name=\"Metadata\",\n            info=\"Metadata to add to the run trace.\",\n            advanced=True,\n        ),\n        DropdownInput(\n            name=\"mirostat\",\n            display_name=\"Mirostat\",\n            options=[\"Disabled\", \"Mirostat\", \"Mirostat 2.0\"],\n            info=\"Enable/disable Mirostat sampling for controlling perplexity.\",\n            value=\"Disabled\",\n            advanced=True,\n            real_time_refresh=True,\n        ),\n        FloatInput(\n            name=\"mirostat_eta\",\n            display_name=\"Mirostat Eta\",\n            info=\"Learning rate for Mirostat algorithm. (Default: 0.1)\",\n            advanced=True,\n        ),\n        FloatInput(\n            name=\"mirostat_tau\",\n            display_name=\"Mirostat Tau\",\n            info=\"Controls the balance between coherence and diversity of the output. (Default: 5.0)\",\n            advanced=True,\n        ),\n        IntInput(\n            name=\"num_ctx\",\n            display_name=\"Context Window Size\",\n            info=\"Size of the context window for generating tokens. (Default: 2048)\",\n            advanced=True,\n        ),\n        IntInput(\n            name=\"num_gpu\",\n            display_name=\"Number of GPUs\",\n            info=\"Number of GPUs to use for computation. (Default: 1 on macOS, 0 to disable)\",\n            advanced=True,\n        ),\n        IntInput(\n            name=\"num_thread\",\n            display_name=\"Number of Threads\",\n            info=\"Number of threads to use during computation. (Default: detected for optimal performance)\",\n            advanced=True,\n        ),\n        IntInput(\n            name=\"repeat_last_n\",\n            display_name=\"Repeat Last N\",\n            info=\"How far back the model looks to prevent repetition. (Default: 64, 0 = disabled, -1 = num_ctx)\",\n            advanced=True,\n        ),\n        FloatInput(\n            name=\"repeat_penalty\",\n            display_name=\"Repeat Penalty\",\n            info=\"Penalty for repetitions in generated text. (Default: 1.1)\",\n            advanced=True,\n        ),\n        FloatInput(\n            name=\"tfs_z\",\n            display_name=\"TFS Z\",\n            info=\"Tail free sampling value. (Default: 1)\",\n            advanced=True,\n        ),\n        IntInput(\n            name=\"timeout\",\n            display_name=\"Timeout\",\n            info=\"Timeout for the request stream.\",\n            advanced=True,\n        ),\n        IntInput(\n            name=\"top_k\",\n            display_name=\"Top K\",\n            info=\"Limits token selection to top K. (Default: 40)\",\n            advanced=True,\n        ),\n        FloatInput(\n            name=\"top_p\",\n            display_name=\"Top P\",\n            info=\"Works together with top-k. (Default: 0.9)\",\n            advanced=True,\n        ),\n        BoolInput(\n            name=\"verbose\",\n            display_name=\"Verbose\",\n            info=\"Whether to print out response text.\",\n        ),\n        StrInput(\n            name=\"tags\",\n            display_name=\"Tags\",\n            info=\"Comma-separated list of tags to add to the run trace.\",\n            advanced=True,\n        ),\n        StrInput(\n            name=\"stop_tokens\",\n            display_name=\"Stop Tokens\",\n            info=\"Comma-separated list of tokens to signal the model to stop generating text.\",\n            advanced=True,\n        ),\n        StrInput(\n            name=\"system\",\n            display_name=\"System\",\n            info=\"System to use for generating text.\",\n            advanced=True,\n        ),\n        StrInput(\n            name=\"template\",\n            display_name=\"Template\",\n            info=\"Template to use for generating text.\",\n            advanced=True,\n        ),\n    ]\n\n    def build_model(self) -> LanguageModel:  # type: ignore[type-var]\n        # Mapping mirostat settings to their corresponding values\n        mirostat_options = {\"Mirostat\": 1, \"Mirostat 2.0\": 2}\n\n        # Default to 0 for 'Disabled'\n        mirostat_value = mirostat_options.get(self.mirostat, 0)  # type: ignore\n\n        # Set mirostat_eta and mirostat_tau to None if mirostat is disabled\n        if mirostat_value == 0:\n            mirostat_eta = None\n            mirostat_tau = None\n        else:\n            mirostat_eta = self.mirostat_eta\n            mirostat_tau = self.mirostat_tau\n\n        # Mapping system settings to their corresponding values\n        llm_params = {\n            \"base_url\": self.base_url,\n            \"model\": self.model_name,\n            \"mirostat\": mirostat_value,\n            \"format\": self.format,\n            \"metadata\": self.metadata,\n            \"tags\": self.tags.split(\",\") if self.tags else None,\n            \"mirostat_eta\": mirostat_eta,\n            \"mirostat_tau\": mirostat_tau,\n            \"num_ctx\": self.num_ctx or None,\n            \"num_gpu\": self.num_gpu or None,\n            \"num_thread\": self.num_thread or None,\n            \"repeat_last_n\": self.repeat_last_n or None,\n            \"repeat_penalty\": self.repeat_penalty or None,\n            \"temperature\": self.temperature or None,\n            \"stop\": self.stop_tokens.split(\",\") if self.stop_tokens else None,\n            \"system\": self.system,\n            \"template\": self.template,\n            \"tfs_z\": self.tfs_z or None,\n            \"timeout\": self.timeout or None,\n            \"top_k\": self.top_k or None,\n            \"top_p\": self.top_p or None,\n            \"verbose\": self.verbose,\n        }\n\n        # Remove parameters with None values\n        llm_params = {k: v for k, v in llm_params.items() if v is not None}\n\n        try:\n            output = ChatOllama(**llm_params)  # type: ignore\n        except Exception as e:\n            raise ValueError(\"Could not initialize Ollama LLM.\") from e\n\n        return output  # type: ignore\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "format": {
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "format",
                "value": "",
                "display_name": "Format",
                "advanced": true,
                "dynamic": false,
                "info": "Specify the format of the output (e.g., json).",
                "title_case": false,
                "type": "str",
                "_input_type": "StrInput"
              },
              "input_value": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "input_value",
                "value": "abcd",
                "display_name": "Input",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageInput"
              },
              "metadata": {
                "trace_as_input": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "metadata",
                "value": {},
                "display_name": "Metadata",
                "advanced": true,
                "dynamic": false,
                "info": "Metadata to add to the run trace.",
                "title_case": false,
                "type": "dict",
                "_input_type": "DictInput"
              },
              "mirostat": {
                "trace_as_metadata": true,
                "options": [
                  "Disabled",
                  "Mirostat",
                  "Mirostat 2.0"
                ],
                "combobox": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "mirostat",
                "value": "Disabled",
                "display_name": "Mirostat",
                "advanced": true,
                "dynamic": false,
                "info": "Enable/disable Mirostat sampling for controlling perplexity.",
                "real_time_refresh": true,
                "title_case": false,
                "type": "str",
                "_input_type": "DropdownInput"
              },
              "mirostat_eta": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "mirostat_eta",
                "value": "",
                "display_name": "Mirostat Eta",
                "advanced": true,
                "dynamic": false,
                "info": "Learning rate for Mirostat algorithm. (Default: 0.1)",
                "title_case": false,
                "type": "float",
                "_input_type": "FloatInput"
              },
              "mirostat_tau": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "mirostat_tau",
                "value": "",
                "display_name": "Mirostat Tau",
                "advanced": true,
                "dynamic": false,
                "info": "Controls the balance between coherence and diversity of the output. (Default: 5.0)",
                "title_case": false,
                "type": "float",
                "_input_type": "FloatInput"
              },
              "model_name": {
                "trace_as_metadata": true,
                "options": [],
                "combobox": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "model_name",
                "value": "llama3.1",
                "display_name": "Model Name",
                "advanced": false,
                "dynamic": false,
                "info": "Refer to https://ollama.com/library for more models.",
                "refresh_button": true,
                "title_case": false,
                "type": "str",
                "_input_type": "DropdownInput"
              },
              "num_ctx": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "num_ctx",
                "value": "",
                "display_name": "Context Window Size",
                "advanced": true,
                "dynamic": false,
                "info": "Size of the context window for generating tokens. (Default: 2048)",
                "title_case": false,
                "type": "int",
                "_input_type": "IntInput"
              },
              "num_gpu": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "num_gpu",
                "value": "",
                "display_name": "Number of GPUs",
                "advanced": true,
                "dynamic": false,
                "info": "Number of GPUs to use for computation. (Default: 1 on macOS, 0 to disable)",
                "title_case": false,
                "type": "int",
                "_input_type": "IntInput"
              },
              "num_thread": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "num_thread",
                "value": "",
                "display_name": "Number of Threads",
                "advanced": true,
                "dynamic": false,
                "info": "Number of threads to use during computation. (Default: detected for optimal performance)",
                "title_case": false,
                "type": "int",
                "_input_type": "IntInput"
              },
              "repeat_last_n": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "repeat_last_n",
                "value": "",
                "display_name": "Repeat Last N",
                "advanced": true,
                "dynamic": false,
                "info": "How far back the model looks to prevent repetition. (Default: 64, 0 = disabled, -1 = num_ctx)",
                "title_case": false,
                "type": "int",
                "_input_type": "IntInput"
              },
              "repeat_penalty": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "repeat_penalty",
                "value": "",
                "display_name": "Repeat Penalty",
                "advanced": true,
                "dynamic": false,
                "info": "Penalty for repetitions in generated text. (Default: 1.1)",
                "title_case": false,
                "type": "float",
                "_input_type": "FloatInput"
              },
              "stop_tokens": {
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "stop_tokens",
                "value": "",
                "display_name": "Stop Tokens",
                "advanced": true,
                "dynamic": false,
                "info": "Comma-separated list of tokens to signal the model to stop generating text.",
                "title_case": false,
                "type": "str",
                "_input_type": "StrInput"
              },
              "stream": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "stream",
                "value": false,
                "display_name": "Stream",
                "advanced": true,
                "dynamic": false,
                "info": "Stream the response from the model. Streaming works only in Chat.",
                "title_case": false,
                "type": "bool",
                "_input_type": "BoolInput"
              },
              "system": {
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "system",
                "value": "",
                "display_name": "System",
                "advanced": true,
                "dynamic": false,
                "info": "System to use for generating text.",
                "title_case": false,
                "type": "str",
                "_input_type": "StrInput"
              },
              "system_message": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "system_message",
                "value": "",
                "display_name": "System Message",
                "advanced": true,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "System message to pass to the model.",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              },
              "tags": {
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "tags",
                "value": "",
                "display_name": "Tags",
                "advanced": true,
                "dynamic": false,
                "info": "Comma-separated list of tags to add to the run trace.",
                "title_case": false,
                "type": "str",
                "_input_type": "StrInput"
              },
              "temperature": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "temperature",
                "value": 0.2,
                "display_name": "Temperature",
                "advanced": false,
                "dynamic": false,
                "info": "Controls the creativity of model responses.",
                "title_case": false,
                "type": "float",
                "_input_type": "FloatInput"
              },
              "template": {
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "template",
                "value": "",
                "display_name": "Template",
                "advanced": true,
                "dynamic": false,
                "info": "Template to use for generating text.",
                "title_case": false,
                "type": "str",
                "_input_type": "StrInput"
              },
              "tfs_z": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "tfs_z",
                "value": "",
                "display_name": "TFS Z",
                "advanced": true,
                "dynamic": false,
                "info": "Tail free sampling value. (Default: 1)",
                "title_case": false,
                "type": "float",
                "_input_type": "FloatInput"
              },
              "timeout": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "timeout",
                "value": "",
                "display_name": "Timeout",
                "advanced": true,
                "dynamic": false,
                "info": "Timeout for the request stream.",
                "title_case": false,
                "type": "int",
                "_input_type": "IntInput"
              },
              "top_k": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "top_k",
                "value": "",
                "display_name": "Top K",
                "advanced": true,
                "dynamic": false,
                "info": "Limits token selection to top K. (Default: 40)",
                "title_case": false,
                "type": "int",
                "_input_type": "IntInput"
              },
              "top_p": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "top_p",
                "value": "",
                "display_name": "Top P",
                "advanced": true,
                "dynamic": false,
                "info": "Works together with top-k. (Default: 0.9)",
                "title_case": false,
                "type": "float",
                "_input_type": "FloatInput"
              },
              "verbose": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "verbose",
                "value": true,
                "display_name": "Verbose",
                "advanced": false,
                "dynamic": false,
                "info": "Whether to print out response text.",
                "title_case": false,
                "type": "bool",
                "_input_type": "BoolInput"
              }
            },
            "description": "Generate text using Ollama Local LLMs.",
            "icon": "Ollama",
            "base_classes": [
              "LanguageModel",
              "Message"
            ],
            "display_name": "Ollama",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "text_output",
                "display_name": "Text",
                "method": "text_response",
                "value": "__UNDEFINED__",
                "cache": true
              },
              {
                "types": [
                  "LanguageModel"
                ],
                "selected": "LanguageModel",
                "name": "model_output",
                "display_name": "Language Model",
                "method": "build_model",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "input_value",
              "system_message",
              "stream",
              "base_url",
              "model_name",
              "temperature",
              "format",
              "metadata",
              "mirostat",
              "mirostat_eta",
              "mirostat_tau",
              "num_ctx",
              "num_gpu",
              "num_thread",
              "repeat_last_n",
              "repeat_penalty",
              "tfs_z",
              "timeout",
              "top_k",
              "top_p",
              "verbose",
              "tags",
              "stop_tokens",
              "system",
              "template"
            ],
            "beta": false,
            "edited": false
          },
          "id": "OllamaModel-hRyll"
        },
        "selected": false,
        "width": 384,
        "height": 667,
        "dragging": false,
        "positionAbsolute": {
          "x": 2141.5488030654465,
          "y": 824.896189457313
        }
      },
      {
        "id": "OllamaEmbeddings-3invD",
        "type": "genericNode",
        "position": {
          "x": 2738.030850466874,
          "y": 870.4204359900178
        },
        "data": {
          "type": "OllamaEmbeddings",
          "node": {
            "template": {
              "_type": "Component",
              "base_url": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "base_url",
                "value": "https://meta-llama-3-1-405b.nimbus-ai.nmbapp.net/v1/embeddings",
                "display_name": "Ollama Base URL",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from langchain_community.embeddings import OllamaEmbeddings\n\nfrom axiestudio.base.models.model import LCModelComponent\nfrom axiestudio.field_typing import Embeddings\nfrom axiestudio.io import FloatInput, MessageTextInput, Output\n\n\nclass OllamaEmbeddingsComponent(LCModelComponent):\n    display_name: str = \"Ollama Embeddings\"\n    description: str = \"Generate embeddings using Ollama models.\"\n    documentation = \"https://python.langchain.com/docs/integrations/text_embedding/ollama\"\n    icon = \"Ollama\"\n    name = \"OllamaEmbeddings\"\n\n    inputs = [\n        MessageTextInput(\n            name=\"model\",\n            display_name=\"Ollama Model\",\n            value=\"llama3.1\",\n        ),\n        MessageTextInput(\n            name=\"base_url\",\n            display_name=\"Ollama Base URL\",\n            value=\"http://localhost:11434\",\n        ),\n        FloatInput(\n            name=\"temperature\",\n            display_name=\"Model Temperature\",\n            value=0.1,\n            advanced=True,\n        ),\n    ]\n\n    outputs = [\n        Output(display_name=\"Embeddings\", name=\"embeddings\", method=\"build_embeddings\"),\n    ]\n\n    def build_embeddings(self) -> Embeddings:\n        try:\n            output = OllamaEmbeddings(\n                model=self.model,\n                base_url=self.base_url,\n                temperature=self.temperature,\n            )  # type: ignore\n        except Exception as e:\n            raise ValueError(\"Could not connect to Ollama API.\") from e\n        return output\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "model": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "model",
                "value": "llama3.1",
                "display_name": "Ollama Model",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              },
              "temperature": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "temperature",
                "value": 0.1,
                "display_name": "Model Temperature",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "float",
                "_input_type": "FloatInput"
              }
            },
            "description": "Generate embeddings using Ollama models.",
            "icon": "Ollama",
            "base_classes": [
              "Embeddings"
            ],
            "display_name": "Ollama Embeddings",
            "documentation": "https://python.langchain.com/docs/integrations/text_embedding/ollama",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Embeddings"
                ],
                "selected": "Embeddings",
                "name": "embeddings",
                "display_name": "Embeddings",
                "method": "build_embeddings",
                "value": "__UNDEFINED__",
                "cache": true,
                "hidden": true
              }
            ],
            "field_order": [
              "model",
              "base_url",
              "temperature"
            ],
            "beta": false,
            "edited": false,
            "lf_version": "1.0.17"
          },
          "id": "OllamaEmbeddings-3invD"
        },
        "selected": false,
        "width": 384,
        "height": 343,
        "dragging": false
      }
    ],
    "edges": [
      {
        "source": "CustomComponent-1wAiE",
        "sourceHandle": "{œdataTypeœ:œReadJSONToDataœ,œidœ:œCustomComponent-1wAiEœ,œnameœ:œdataœ,œoutput_typesœ:[œDataœ]}",
        "target": "CustomComponent-Bw0zx",
        "targetHandle": "{œfieldNameœ:œdataœ,œidœ:œCustomComponent-Bw0zxœ,œinputTypesœ:[œDataœ],œtypeœ:œotherœ}",
        "data": {
          "targetHandle": {
            "fieldName": "data",
            "id": "CustomComponent-Bw0zx",
            "inputTypes": [
              "Data"
            ],
            "type": "other"
          },
          "sourceHandle": {
            "dataType": "ReadJSONToData",
            "id": "CustomComponent-1wAiE",
            "name": "data",
            "output_types": [
              "Data"
            ]
          }
        },
        "id": "reactflow__edge-CustomComponent-1wAiE{œdataTypeœ:œReadJSONToDataœ,œidœ:œCustomComponent-1wAiEœ,œnameœ:œdataœ,œoutput_typesœ:[œDataœ]}-CustomComponent-Bw0zx{œfieldNameœ:œdataœ,œidœ:œCustomComponent-Bw0zxœ,œinputTypesœ:[œDataœ],œtypeœ:œotherœ}",
        "className": ""
      },
      {
        "source": "CustomComponent-Bw0zx",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-Bw0zxœ,œnameœ:œdatasetœ,œoutput_typesœ:[œMessageœ]}",
        "target": "CustomComponent-OzGDq",
        "targetHandle": "{œfieldNameœ:œdataset_nameœ,œidœ:œCustomComponent-OzGDqœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
        "data": {
          "targetHandle": {
            "fieldName": "dataset_name",
            "id": "CustomComponent-OzGDq",
            "inputTypes": [
              "Message"
            ],
            "type": "str"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-Bw0zx",
            "name": "dataset",
            "output_types": [
              "Message"
            ]
          }
        },
        "id": "reactflow__edge-CustomComponent-Bw0zx{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-Bw0zxœ,œnameœ:œdatasetœ,œoutput_typesœ:[œMessageœ]}-CustomComponent-OzGDq{œfieldNameœ:œdataset_nameœ,œidœ:œCustomComponent-OzGDqœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
        "className": ""
      },
      {
        "source": "CustomComponent-Bw0zx",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-Bw0zxœ,œnameœ:œprojectœ,œoutput_typesœ:[œMessageœ]}",
        "target": "CustomComponent-OzGDq",
        "targetHandle": "{œfieldNameœ:œproject_nameœ,œidœ:œCustomComponent-OzGDqœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
        "data": {
          "targetHandle": {
            "fieldName": "project_name",
            "id": "CustomComponent-OzGDq",
            "inputTypes": [
              "Message"
            ],
            "type": "str"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-Bw0zx",
            "name": "project",
            "output_types": [
              "Message"
            ]
          }
        },
        "id": "reactflow__edge-CustomComponent-Bw0zx{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-Bw0zxœ,œnameœ:œprojectœ,œoutput_typesœ:[œMessageœ]}-CustomComponent-OzGDq{œfieldNameœ:œproject_nameœ,œidœ:œCustomComponent-OzGDqœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
        "className": ""
      },
      {
        "source": "CustomComponent-3xQmr",
        "sourceHandle": "{œdataTypeœ:œRagasœ,œidœ:œCustomComponent-3xQmrœ,œnameœ:œoutputœ,œoutput_typesœ:[œDataœ]}",
        "target": "CustomComponent-O7Zig",
        "targetHandle": "{œfieldNameœ:œdatasetœ,œidœ:œCustomComponent-O7Zigœ,œinputTypesœ:[œDataœ],œtypeœ:œotherœ}",
        "data": {
          "targetHandle": {
            "fieldName": "dataset",
            "id": "CustomComponent-O7Zig",
            "inputTypes": [
              "Data"
            ],
            "type": "other"
          },
          "sourceHandle": {
            "dataType": "Ragas",
            "id": "CustomComponent-3xQmr",
            "name": "output",
            "output_types": [
              "Data"
            ]
          }
        },
        "id": "reactflow__edge-CustomComponent-3xQmr{œdataTypeœ:œRagasœ,œidœ:œCustomComponent-3xQmrœ,œnameœ:œoutputœ,œoutput_typesœ:[œDataœ]}-CustomComponent-O7Zig{œfieldNameœ:œdatasetœ,œidœ:œCustomComponent-O7Zigœ,œinputTypesœ:[œDataœ],œtypeœ:œotherœ}",
        "className": ""
      },
      {
        "source": "CustomComponent-OzGDq",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-OzGDqœ,œnameœ:œoutputœ,œoutput_typesœ:[œDataœ]}",
        "target": "CreateRagComponent-pErRh",
        "targetHandle": "{œfieldNameœ:œdatasetœ,œidœ:œCreateRagComponent-pErRhœ,œinputTypesœ:[œDataœ],œtypeœ:œotherœ}",
        "data": {
          "targetHandle": {
            "fieldName": "dataset",
            "id": "CreateRagComponent-pErRh",
            "inputTypes": [
              "Data"
            ],
            "type": "other"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-OzGDq",
            "name": "output",
            "output_types": [
              "Data"
            ]
          }
        },
        "id": "reactflow__edge-CustomComponent-OzGDq{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-OzGDqœ,œnameœ:œoutputœ,œoutput_typesœ:[œDataœ]}-CreateRagComponent-pErRh{œfieldNameœ:œdatasetœ,œidœ:œCreateRagComponent-pErRhœ,œinputTypesœ:[œDataœ],œtypeœ:œotherœ}",
        "className": ""
      },
      {
        "source": "CreateRagComponent-pErRh",
        "sourceHandle": "{œdataTypeœ:œCreateBatchRagComponentœ,œidœ:œCreateRagComponent-pErRhœ,œnameœ:œoutputœ,œoutput_typesœ:[œDataœ]}",
        "target": "CustomComponent-3xQmr",
        "targetHandle": "{œfieldNameœ:œdatasetœ,œidœ:œCustomComponent-3xQmrœ,œinputTypesœ:[œDataœ],œtypeœ:œotherœ}",
        "data": {
          "targetHandle": {
            "fieldName": "dataset",
            "id": "CustomComponent-3xQmr",
            "inputTypes": [
              "Data"
            ],
            "type": "other"
          },
          "sourceHandle": {
            "dataType": "CreateBatchRagComponent",
            "id": "CreateRagComponent-pErRh",
            "name": "output",
            "output_types": [
              "Data"
            ]
          }
        },
        "id": "reactflow__edge-CreateRagComponent-pErRh{œdataTypeœ:œCreateBatchRagComponentœ,œidœ:œCreateRagComponent-pErRhœ,œnameœ:œoutputœ,œoutput_typesœ:[œDataœ]}-CustomComponent-3xQmr{œfieldNameœ:œdatasetœ,œidœ:œCustomComponent-3xQmrœ,œinputTypesœ:[œDataœ],œtypeœ:œotherœ}",
        "className": ""
      }
    ],
    "viewport": {
      "x": 333.53919646788364,
      "y": 293.0384458577994,
      "zoom": 0.31144484154291985
    }
  },
  "metadata": {
    "CustomComponent": {
      "count": 8
    },
    "CreateRagComponent": {
      "count": 1
    },
    "OllamaModel": {
      "count": 1
    },
    "OllamaEmbeddings": {
      "count": 1
    },
    "total": 11
  },
  "original": {
    "id": "47ec43b2-93d2-41ad-99c3-f6eb9e946e93",
    "name": "langfuse-evaluation",
    "description": "Your Passport to Linguistic Landscapes.",
    "is_component": false,
    "liked_by_count": "0",
    "downloads_count": "31",
    "metadata": {
      "CustomComponent": {
        "count": 8
      },
      "CreateRagComponent": {
        "count": 1
      },
      "OllamaModel": {
        "count": 1
      },
      "OllamaEmbeddings": {
        "count": 1
      },
      "total": 11
    },
    "last_tested_version": "1.0.19",
    "private": false,
    "data": {
      "nodes": [
        {
          "id": "CustomComponent-1wAiE",
          "type": "genericNode",
          "position": {
            "x": -307.09561572663233,
            "y": 410.51372702849847
          },
          "data": {
            "type": "ReadJSONToData",
            "node": {
              "template": {
                "_type": "Component",
                "json_file": {
                  "trace_as_metadata": true,
                  "file_path": "95c7992a-8613-4f49-8598-b540426717f1/2024-10-29_10-27-25_eval_dataset_template_subset.json",
                  "fileTypes": [
                    "json"
                  ],
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "json_file",
                  "value": "",
                  "display_name": "File Name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "The JSON file to read.",
                  "title_case": false,
                  "type": "file",
                  "_input_type": "FileInput",
                  "load_from_db": false
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "import json\r\nfrom pathlib import Path\r\nfrom typing import Any, Dict, List, Union\r\n\r\nfrom axiestudio.custom import Component\r\nfrom axiestudio.io import MessageTextInput, Output\r\nfrom axiestudio.schema import Data\r\nfrom axiestudio.schema.message import Message\r\n\r\nclass ReadJSONToData(Component):\r\n    display_name = \"Read JSON to Data\"\r\n    description = \"Reads a JSON file and returns its contents as a Data object or a list of Data objects.\"\r\n    icon = \"FileJson\"\r\n\r\n    inputs = [\r\n        FileInput(\r\n            name=\"json_file\",\r\n            display_name=\"File Name\",\r\n            file_types=[\"json\"],\r\n            info=\"The JSON file to read.\",\r\n        ),\r\n    ]\r\n\r\n    outputs = [\r\n        Output(display_name=\"Data\", name=\"data\", method=\"read_json_to_data\"),\r\n    ]\r\n\r\n    def read_json_to_data(self) -> Union[Data, List[Data]]:\r\n        print(\"IN JSON\")\r\n        if not self.json_file:\r\n            raise ValueError(\"Please upload a JSON file to use this component.\")\r\n        else:\r\n            resolved_path = self.resolve_path(self.json_file)\r\n            file_path = Path(resolved_path)\r\n\r\n            if file_path.suffix.lower() != '.json':\r\n                raise ValueError(\"The uploaded file must be a JSON file.\")\r\n                    \r\n            # Read the JSON file\r\n            with open(file_path, 'r', encoding='utf-8') as json_file:\r\n                json_content: Union[Dict[str, Any], List[Dict[str, Any]]] = json.load(json_file)\r\n\r\n            # Create Data object(s) based on the JSON content\r\n            if isinstance(json_content, list):\r\n                data_objects = [Data(**item) for item in json_content]\r\n                self.status = data_objects\r\n                return data_objects\r\n            else:\r\n                data_object = Data(**json_content)\r\n                self.status = data_object\r\n                return data_object",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                }
              },
              "description": "Reads a JSON file and returns its contents as a Data object or a list of Data objects.",
              "icon": "FileJson",
              "base_classes": [
                "Data"
              ],
              "display_name": "Read JSON File to Data ",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": true,
              "outputs": [
                {
                  "types": [
                    "Data"
                  ],
                  "selected": "Data",
                  "name": "data",
                  "display_name": "Data",
                  "method": "read_json_to_data",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "json_file"
              ],
              "beta": false,
              "edited": true,
              "lf_version": "1.0.17"
            },
            "id": "CustomComponent-1wAiE"
          },
          "selected": false,
          "width": 384,
          "height": 305,
          "positionAbsolute": {
            "x": -307.09561572663233,
            "y": 410.51372702849847
          },
          "dragging": false
        },
        {
          "id": "CustomComponent-Bw0zx",
          "type": "genericNode",
          "position": {
            "x": 270.92367724963003,
            "y": 392.9991871066421
          },
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "_type": "Component",
                "data": {
                  "trace_as_metadata": true,
                  "list": false,
                  "trace_as_input": true,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "data",
                  "value": "",
                  "display_name": "Input data",
                  "advanced": false,
                  "input_types": [
                    "Data"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "other",
                  "_input_type": "DataInput"
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "# from axiestudio.field_typing import Data\nfrom axiestudio.custom import Component\nfrom axiestudio.io import MessageTextInput, Output\nfrom axiestudio.schema import Data\nfrom langfuse import Langfuse\n\nclass LangfuseUploader(Component):\n    display_name = \"Custom Component\"\n    description = \"Use as a template to create your own component.\"\n    documentation: str = \"http://docs.axiestudio.org/components/custom\"\n    icon = \"custom_components\"\n    name = \"CustomComponent\"\n\n    inputs = [\n        MessageTextInput(name=\"project_name\", display_name=\"Project Name\"),\n        MessageTextInput(name=\"dataset_name\", display_name=\"Dataset Name\"),\n        DataInput(name = \"data\", display_name=\"Input data\")\n    ]\n\n    outputs = [\n        Output(display_name=\"Project Name\", name=\"project\", method=\"return_project\"),\n        Output(display_name=\"Dataset Name\", name=\"dataset\", method=\"build_output\")\n    ]\n\n    def build_output(self) -> Message:\n        print(\"in uploader\")\n        self.langfuse = Langfuse(\n          secret_key=\"sk-lf-78ef637a-0ef0-4660-ab80-59686ecf4111\",\n          public_key=\"pk-lf-9678af12-6a6b-4945-807b-f6d817c009de\",\n          host=\"https://langfuse-ui.karma-ml.nmbapp.net\"\n        )\n        self.langfuse.create_dataset(name=self.dataset_name)\n        dataset = self.langfuse.get_dataset(self.dataset_name)\n        if len(dataset.items) == 0:\n            for key, value in self.data.data.items():\n                for entry in value['qa_pairs']:\n                    self.langfuse.create_dataset_item(\n                            dataset_name=self.dataset_name,\n                            metadata = {\n                                \"label\": key,\n                                \"llm\": value['llm'],\n                                \"prompt\": value['prompt']\n                            },\n                            input = {'question': entry['question']},\n                            expected_output = {'output_text': entry['ground_truth']}\n                        )\n        self.langfuse.flush()\n        message = Message(\n            text=self.dataset_name,\n        )\n        return message\n    \n    def return_project(self) -> Message:\n        message = Message(\n            text=self.project_name,\n        )\n        return message\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "dataset_name": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "dataset_name",
                  "value": "Test",
                  "display_name": "Dataset Name",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MessageTextInput"
                },
                "project_name": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "project_name",
                  "value": "Langflow-evaluation",
                  "display_name": "Project Name",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MessageTextInput"
                }
              },
              "description": "Use as a template to create your own component.",
              "icon": "custom_components",
              "base_classes": [
                "Message"
              ],
              "display_name": "Langfuse Uploader",
              "documentation": "http://docs.axiestudio.org/components/custom",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": true,
              "outputs": [
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "project",
                  "display_name": "Project Name",
                  "method": "return_project",
                  "value": "__UNDEFINED__",
                  "cache": true
                },
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "dataset",
                  "display_name": "Dataset Name",
                  "method": "build_output",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "project_name",
                "dataset_name",
                "data"
              ],
              "beta": false,
              "edited": true,
              "lf_version": "1.0.17"
            },
            "id": "CustomComponent-Bw0zx"
          },
          "selected": false,
          "width": 384,
          "height": 479,
          "positionAbsolute": {
            "x": 270.92367724963003,
            "y": 392.9991871066421
          },
          "dragging": false
        },
        {
          "id": "CustomComponent-OzGDq",
          "type": "genericNode",
          "position": {
            "x": 928.7390115807935,
            "y": 388.17478518148823
          },
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "_type": "Component",
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "# from axiestudio.field_typing import Data\nfrom axiestudio.custom import Component\nfrom axiestudio.io import MessageTextInput, Output\nfrom axiestudio.schema import Data\n\n\nclass LangfuseRetriever(Component):\n    display_name = \"Langfuse Retriever\"\n    description = \"Fetch dataset from Langfuse.\"\n    documentation: str = \"http://docs.axiestudio.org/components/custom\"\n    icon = \"custom_components\"\n    name = \"CustomComponent\"\n\n    inputs = [\n        MessageTextInput(name=\"project_name\", display_name=\"Project Name\"),\n        MessageTextInput(name=\"dataset_name\", display_name=\"Dataset Name\"),\n    ]\n    outputs = [\n        Output(display_name=\"Dataset\", name=\"output\", method=\"build_output\"),\n    ]\n\n    def build_output(self) -> Data:\n        print(\"IN RETRIEVER\")\n        self.langfuse = Langfuse(\n          secret_key=\"sk-lf-78ef637a-0ef0-4660-ab80-59686ecf4111\",\n          public_key=\"pk-lf-9678af12-6a6b-4945-807b-f6d817c009de\",\n          host=\"https://langfuse-ui.karma-ml.nmbapp.net\"\n        )\n        dataset = self.langfuse.get_dataset(self.dataset_name)\n        dataset_items = {'items': []}\n        i = 0\n        for item in dataset.items:\n            print(\"\\n\\n\", item.input,\"\\n\\n\")\n            #handler = item.get_langchain_handler(run_name=self.run_name)\n            print(item.id)\n            payload = {'query':item.input['question'], 'expected_output':item.expected_output['output_text'].replace('\"', ''), 'datasource_name': item.metadata['label'], 'trace_id': item.id}\n            dataset_items['items'].append(payload)\n        print(\"no error still\")\n        data = Data(text_key = 'items', data = dataset_items)\n        print(data)\n        return data\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "dataset_name": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "dataset_name",
                  "value": "",
                  "display_name": "Dataset Name",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MessageTextInput"
                },
                "project_name": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "project_name",
                  "value": "",
                  "display_name": "Project Name",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MessageTextInput"
                }
              },
              "description": "Fetch dataset from Langfuse.",
              "icon": "custom_components",
              "base_classes": [
                "Data"
              ],
              "display_name": "Langfuse Retriever",
              "documentation": "http://docs.axiestudio.org/components/custom",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": true,
              "outputs": [
                {
                  "types": [
                    "Data"
                  ],
                  "selected": "Data",
                  "name": "output",
                  "display_name": "Dataset",
                  "method": "build_output",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "project_name",
                "dataset_name"
              ],
              "beta": false,
              "edited": true,
              "lf_version": "1.0.17"
            },
            "id": "CustomComponent-OzGDq"
          },
          "selected": false,
          "width": 384,
          "height": 375,
          "dragging": false,
          "positionAbsolute": {
            "x": 928.7390115807935,
            "y": 388.17478518148823
          }
        },
        {
          "id": "CustomComponent-GvMJ6",
          "type": "genericNode",
          "position": {
            "x": 272.6376204550263,
            "y": -1032.9927522504227
          },
          "data": {
            "type": "Ragas",
            "node": {
              "template": {
                "_type": "Component",
                "dataset": {
                  "trace_as_metadata": true,
                  "list": false,
                  "trace_as_input": true,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "dataset",
                  "value": "",
                  "display_name": "Dataset",
                  "advanced": false,
                  "input_types": [
                    "Data"
                  ],
                  "dynamic": false,
                  "info": "Insert the dataset.",
                  "title_case": false,
                  "type": "other",
                  "_input_type": "DataInput"
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "# from axiestudio.field_typing import Data\r\nfrom axiestudio.custom import Component\r\nfrom axiestudio.io import MessageTextInput, Output\r\nfrom axiestudio.schema import Data\r\nfrom ragas.metrics import faithfulness, answer_relevancy, context_precision, answer_correctness, context_utilization, context_recall\r\nfrom ragas import evaluate\r\nfrom ragas.run_config import RunConfig\r\nfrom datasets import Dataset \r\nfrom langchain_community.embeddings.huggingface import HuggingFaceEmbeddings\r\nfrom langchain_openai import AzureChatOpenAI\r\nimport pandas as pd\r\n\r\n\r\nclass Ragas(Component):\r\n    display_name = \"Ragas\"\r\n    description = \"Takes in dataset and generation; performs evaluation and appends score.\"\r\n    documentation: str = \"http://docs.axiestudio.org/components/custom\"\r\n    icon = \"custom_components\"\r\n    name = \"Ragas\"\r\n\r\n    inputs = [\r\n        DataInput(\r\n            name=\"dataset\",\r\n            display_name=\"Dataset\",\r\n            value=\"\",\r\n            info=\"Insert the dataset.\",\r\n        )\r\n    ]\r\n    outputs = [\r\n        Output(display_name=\"Output\", name=\"output\", method=\"build_output\"),\r\n    ]\r\n    \r\n    def create_dataset(self, inputs: dict):\r\n        \r\n        self.data = {\r\n            \"question\": [inputs.get(\"question\", None)],\r\n            \"ground_truth\": [inputs.get(\"ground_truth\", None)],\r\n            \"answer\": [inputs.get(\"answer\", None)], \r\n            \"contexts\": [inputs.get(\"contexts\", None)]\r\n        }\r\n\r\n        self.df = pd.DataFrame(self.data)\r\n        \r\n        return self.df\r\n   \r\n    def eval(self, data_point, idx):\r\n        metrics = [faithfulness, context_recall]#[faithfulness, context_precision, answer_correctness, answer_relevancy, context_utilization, context_recall] #[context_precision, answer_correctness, answer_relevancy, context_recall]#\r\n        self.evaluation_dict = data_point\r\n        # embd = HuggingFaceEmbeddings(\r\n        #     model_name=\"intfloat/multilingual-e5-small\"\r\n        # )\r\n        llm = AzureChatOpenAI(\r\n                    azure_deployment='rag_gpt4o_prod',\r\n                    openai_api_version=\"2023-05-15\",\r\n                    azure_endpoint=\"https://karmarageu.openai.azure.com/\",\r\n                    openai_api_key=\"0ade28c57d3447aebcabb231e0dfcb50\",\r\n                    temperature=0.0)\r\n\r\n        ds = Dataset.from_pandas(self.create_dataset(self.evaluation_dict))\r\n        print(ds[0])\r\n        self.result = evaluate(\r\n            Dataset.from_pandas(self.create_dataset(self.evaluation_dict)),\r\n            metrics=metrics,\r\n            llm = llm,\r\n            embeddings = None\r\n        )\r\n        df = self.result.to_pandas()\r\n        df = df.fillna(0)\r\n        print(df.head)\r\n        metrics_str = ['faithfulness', 'context_recall']\r\n        dataset = self.langfuse.get_dataset('Test')\r\n        for i in range(len(dataset.items)):\r\n            if i == idx:\r\n                item = dataset.items[i]\r\n                handler = item.get_langchain_handler(run_name='test_run')\r\n                for metric in metrics_str:\r\n                    handler.trace.score(\r\n                        name=metric,\r\n                        value = df[metric].iloc[0]\r\n                    )\r\n                handler.trace.update(\r\n                    input = {'question':data_point['question']},\r\n                    output = {'output_text':data_point['answer']}\r\n                    )\r\n        \r\n        question = df.loc[0,'question']\r\n        answer = df.loc[0,'answer']\r\n        faithfulness_ = df.loc[0,'faithfulness']\r\n        # answer_relevancy_ = df.loc[0,'answer_relevancy']\r\n        context_recall_ = df.loc[0,'context_recall']\r\n        \r\n        string_to_return = f'Answer: {answer}\\ Faithfulness: {faithfulness_}  Context Recall: {context_recall_}'#'\\ Answer Relevancy: {answer_relevancy_}\\\r\n        \r\n        # if self.ground_truth:\r\n        #     context_precision_ = df.loc[0,'context_precision']\r\n        #     string_to_return += f'\\Context Precision: {context_precision_}'\r\n        return Message(text=string_to_return)\r\n    \r\n    def build_output(self) -> Data:\r\n        metrics = ['faithfulness']#, 'context_recall']#['faithfulness', 'context_precision', 'answer_correctness', 'answer_relevancy', 'context_utilization', 'context_recall']\r\n        dataset_items = {'items': []}\r\n        self.langfuse = Langfuse(\r\n          secret_key=\"sk-lf-78ef637a-0ef0-4660-ab80-59686ecf4111\",\r\n          public_key=\"pk-lf-9678af12-6a6b-4945-807b-f6d817c009de\",\r\n          host=\"https://langfuse-ui.karma-ml.nmbapp.net\"\r\n        )\r\n        for idx in range(len(self.dataset.data['items'])):\r\n            payload = self.dataset.data['items'][idx]\r\n            data_samples = {\r\n                'question': payload['query'],\r\n                'answer': payload['output'],\r\n                'contexts': payload['context'],\r\n                'ground_truth': payload['expected_output']\r\n            }\r\n            score = self.eval(data_samples, idx)\r\n            #columns_with_nan = score.columns[score.isna().any()].tolist()\r\n            \r\n            print(\"AFTER EVALUATE\")\r\n            \r\n            # if columns_with_nan:\r\n            #     print(\"Columns with NaN values:\", columns_with_nan)\r\n\r\n            # score = score.fillna(0)\r\n            # pd.set_option('display.max_columns', None)\r\n            # print(\"SCORE:\", score)\r\n            # for metric in metrics:\r\n            #     self.langfuse.score(\r\n            #         trace_id = payload['trace_id'],\r\n            #         name = metric,\r\n            #         value = score[metric].iloc[0]\r\n            #     )\r\n        print(\"no error still\")\r\n        data = Data(text_key = 'items', data = dataset_items)\r\n        return data\r\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                }
              },
              "description": "Takes in dataset and generation; performs evaluation and appends score.",
              "icon": "custom_components",
              "base_classes": [
                "Data"
              ],
              "display_name": "Ragas",
              "documentation": "http://docs.axiestudio.org/components/custom",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Data"
                  ],
                  "selected": "Data",
                  "name": "output",
                  "display_name": "Output",
                  "method": "build_output",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "dataset"
              ],
              "beta": false,
              "edited": true,
              "lf_version": "1.0.17"
            },
            "id": "CustomComponent-GvMJ6"
          },
          "selected": false,
          "width": 384,
          "height": 267,
          "dragging": false,
          "positionAbsolute": {
            "x": 272.6376204550263,
            "y": -1032.9927522504227
          }
        },
        {
          "id": "CreateRagComponent-pErRh",
          "type": "genericNode",
          "position": {
            "x": 1490.476855253387,
            "y": 397.4106232779101
          },
          "data": {
            "type": "CreateBatchRagComponent",
            "node": {
              "template": {
                "_type": "Component",
                "dataset": {
                  "trace_as_metadata": true,
                  "list": false,
                  "trace_as_input": true,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "dataset",
                  "value": "",
                  "display_name": "Dataset",
                  "advanced": false,
                  "input_types": [
                    "Data"
                  ],
                  "dynamic": false,
                  "info": "Insert the dataset.",
                  "title_case": false,
                  "type": "other",
                  "_input_type": "DataInput"
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio.custom import Component\nfrom axiestudio.io import MultilineInput, DropdownInput\nfrom axiestudio.template import Output, Input\nfrom axiestudio.schema.message import Message\nimport requests\nimport json\nfrom oauth_client_python.client import ClientCredentials\nfrom oauth_client_python.client.exceptions import BaseError  \nfrom oauth_client_python.client.exceptions import FetchError \nfrom oauth_client_python.client.exceptions import OauthError \nfrom loguru import logger\nimport os\n\nclass CreateBatchRagComponent(Component):\n    display_name = \"KarmaRag-BatchQueryer\"\n    description = \"Call your rag API.\"\n    \n    inputs = [\n        DataInput(\n            name=\"dataset\",\n            display_name=\"Dataset\",\n            value=\"\",\n            info=\"Insert the dataset.\",\n        ),\n        \n        DropdownInput(\n            name=\"model_name\",\n            display_name=\"Model Name\",\n            options=['gpt3.5_0125', 'gpt4-o', 'mistral'],\n            ),\n    ]\n\n    outputs = [\n        Output(display_name=\"output\", name=\"output\", method=\"get_results\"),\n    ]\n\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        self.source_dict = self.get_sources()\n\n        # Set the options for the sources dynamically\n        if self.inputs[1].options == []:\n            self.inputs[1].options = list(self.source_dict.keys())\n\n    def get_auth_token(self):\n        auth_token = \"\"\n        try:\n            config = {\n                'client_id': os.getenv('KARMA_KEYLOCK_CLIENTID',''),\n                'client_secret': os.getenv('KARMA_KEYLOCK_CLIENTSECRET',''),\n                'token_endpoint': os.getenv('KARMA_KEYLOCK_HOST','https://oauth.skygate.cc/oauth/token')\n            }\n            access_token = ClientCredentials().get_token(**config)\n            auth_token = 'Bearer '+access_token\n        except ValueError as e:\n            logger.error(f\"ValueError Occured: {str(e)}\")\n            return ''\n        except TypeError as e:\n            logger.error(f\"TypeError Occured: {str(e)}\")\n            return ''\n        except FetchError as e:\n            logger.error(f\"Error encoutered when fetching the token. Error: {str(e)}\")\n            return ''\n        except OauthError as e:\n            logger.error(f\"The endpoint did not return a token. Error: {str(e)}\")\n            return ''\n        return auth_token\n\n    def get_sources(self):\n        url = os.getenv('SOURCES_ENDPOINT','https://beta-rag-query.karma-ml.nmbapp.net/sources')\n        token = self.get_auth_token()\n        sources = {}\n        try:\n            headers = {\n            'Authorization': token,\n            'Content-Type': 'application/json'\n            }\n            response = requests.request(\"GET\", url, headers=headers)\n            response.raise_for_status()\n        except requests.exceptions.Timeout as e:\n            logger.error(f\"TimeOut occured: {str(e)}\")\n            return sources\n        except requests.exceptions.TooManyRedirects as e:\n            logger.error(f\"Too many redirects occured. Did you check the url? Error: {str(e)}\")\n            return sources\n        except requests.exceptions.HTTPError as e:\n            logger.error(f\"HTTP error occured {str(e)}\")\n            return sources\n        source_list = []\n        json_data = response.json()\n        for lis in json_data['result']:\n            source_list.append(lis['label'])\n            sources[lis['label']] = lis[\"datasource_name\"]\n\n        return sources\n\n\n    def query_api(self, query : str, source : str):\n\n        if self.model_name == \"\":\n            return \"Request Failed. You need to select an option for the model_name\"\n\n        url = os.getenv('QUERY_ENDPOINT',\"https://beta-rag-query.karma-ml.nmbapp.net/query\")\n        payload = json.dumps({\n                \"query\": query,\n                \"label\": source,\n                \"datasource_name\": self.source_dict[source],\n                \"history\": [],\n                \"options\": { \n                    \"prompt\": \"\",\n                    \"llm\": self.model_name\n                }\n            }\n        )\n        #get auth token\n        token = self.get_auth_token()\n\n        try:\n            headers = {\n            'Authorization': token,\n            'Content-Type': 'application/json'\n            }\n            response = requests.request(\"POST\", url, headers=headers, data=payload)\n            response.raise_for_status()\n        except requests.exceptions.Timeout as e:\n            logger.error(f\"TimeOut occured: {str(e)}\")\n            return \"Request failed.\"\n        except requests.exceptions.TooManyRedirects as e:\n            logger.error(f\"Too many redirects occured. Did you check the url? Error: {str(e)}\")\n            return \"Request failed.\"\n        except requests.exceptions.HTTPError as e:\n            logger.error(f\"HTTP error occured {str(e)}\")\n            return \"Request failed.\"\n\n        resp = response.json()\n        return resp['result'], resp['sources']\n\n    def get_results(self)-> Data:\n        dataset_items = {'items': []}\n        print(\"BEFORE FOR\")\n        for payload in self.dataset.data['items']:\n            print(\"IN FOR\")\n            output, sources = self.query_api(payload['query'], payload['datasource_name'])\n            context = [ctx['content'].replace(\"'\", '').replace('\"', '') for ctx in sources]\n            payload['output'] = output.replace('\"', '')\n            payload['context'] = context\n            dataset_items['items'].append(payload)\n        print(\"no error still\")\n        data = Data(text_key = 'items', data = dataset_items)\n        return data\n    ",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "model_name": {
                  "trace_as_metadata": true,
                  "options": [
                    "gpt3.5_0125",
                    "gpt4-o",
                    "mistral"
                  ],
                  "combobox": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "model_name",
                  "value": "gpt4-o",
                  "display_name": "Model Name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "DropdownInput",
                  "load_from_db": false
                }
              },
              "description": "Call your rag API.",
              "base_classes": [
                "Data"
              ],
              "display_name": "KarmaRag-BatchQueryer",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": true,
              "outputs": [
                {
                  "types": [
                    "Data"
                  ],
                  "selected": "Data",
                  "name": "output",
                  "display_name": "output",
                  "method": "get_results",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "dataset",
                "model_name"
              ],
              "beta": false,
              "edited": true,
              "lf_version": "1.0.17"
            },
            "id": "CreateRagComponent-pErRh"
          },
          "selected": false,
          "width": 384,
          "height": 337,
          "positionAbsolute": {
            "x": 1490.476855253387,
            "y": 397.4106232779101
          },
          "dragging": false
        },
        {
          "id": "CustomComponent-3xQmr",
          "type": "genericNode",
          "position": {
            "x": 2153.355478876727,
            "y": 381.18737169924646
          },
          "data": {
            "type": "Ragas",
            "node": {
              "template": {
                "_type": "Component",
                "dataset": {
                  "trace_as_metadata": true,
                  "list": false,
                  "trace_as_input": true,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "dataset",
                  "value": "",
                  "display_name": "Dataset",
                  "advanced": false,
                  "input_types": [
                    "Data"
                  ],
                  "dynamic": false,
                  "info": "Insert the dataset.",
                  "title_case": false,
                  "type": "other",
                  "_input_type": "DataInput"
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "# from axiestudio.field_typing import Data\r\nfrom axiestudio.custom import Component\r\nfrom axiestudio.io import MessageTextInput, Output\r\nfrom axiestudio.schema import Data\r\nfrom ragas.metrics import faithfulness, answer_relevancy, context_precision, answer_correctness, context_utilization, context_recall\r\nfrom ragas import evaluate\r\nfrom ragas.run_config import RunConfig\r\nfrom datasets import Dataset \r\nfrom langchain_community.embeddings.huggingface import HuggingFaceEmbeddings\r\nfrom langchain_openai import AzureChatOpenAI\r\nimport pandas as pd\r\nimport time\r\n\r\n\r\nclass Ragas(Component):\r\n    display_name = \"Ragas\"\r\n    description = \"Takes in dataset and generation; performs evaluation and appends score.\"\r\n    documentation: str = \"http://docs.axiestudio.org/components/custom\"\r\n    icon = \"custom_components\"\r\n    name = \"Ragas\"\r\n\r\n    inputs = [\r\n        DataInput(\r\n            name=\"dataset\",\r\n            display_name=\"Dataset\",\r\n            value=\"\",\r\n            info=\"Insert the dataset.\",\r\n        )\r\n    ]\r\n    outputs = [\r\n        Output(display_name=\"output\", name=\"output\", method=\"get_results\"),\r\n    ]\r\n    \r\n    def create_dataset(self, inputs: dict):\r\n        \r\n        self.data = {\r\n            \"question\": [inputs.get(\"question\", None)],\r\n            \"ground_truth\": [inputs.get(\"ground_truth\", None)],\r\n            \"answer\": [inputs.get(\"answer\", None)], \r\n            \"contexts\": [inputs.get(\"contexts\", None)]\r\n        }\r\n\r\n        self.df = pd.DataFrame(self.data)\r\n        \r\n        return self.df\r\n   \r\n    def eval(self, data_point, idx):\r\n        metrics = [faithfulness]#[faithfulness, context_recall, answer_relevancy]#, answer_correctness, context_utilization, context_recall] #[faithfulness, context_precision, answer_correctness, answer_relevancy, context_utilization, context_recall] #[context_precision, answer_correctness, answer_relevancy, context_recall]#\r\n        self.evaluation_dict = data_point\r\n        embd = HuggingFaceEmbeddings(\r\n            model_name=\"intfloat/multilingual-e5-small\"\r\n        )\r\n        start = time.time()\r\n        llm = AzureChatOpenAI(\r\n                    azure_deployment='rag_gpt4o_prod',\r\n                    openai_api_version=\"2023-05-15\",\r\n                    azure_endpoint=\"https://karmarageu.openai.azure.com/\",\r\n                    openai_api_key=\"0ade28c57d3447aebcabb231e0dfcb50\",\r\n                    temperature=0.0)\r\n\r\n        self.result = evaluate(\r\n            Dataset.from_pandas(self.create_dataset(self.evaluation_dict)),\r\n            metrics=metrics,\r\n            llm = llm,\r\n            embeddings = embd,\r\n            run_config = RunConfig(timeout=3600, max_retries = 20, max_wait = 180)\r\n        )\r\n        df = self.result.to_pandas()\r\n        df = df.fillna(0)\r\n        end = time.time()\r\n        print(end - start)\r\n        # metrics_str = ['faithfulness', 'context_recall']\r\n        # dataset = self.langfuse.get_dataset('Test')\r\n        # for i in range(len(dataset.items)):\r\n        #     if i == idx:\r\n        #         item = dataset.items[i]\r\n        #         handler = item.get_langchain_handler(run_name='test_run')\r\n        #         for metric in metrics_str:\r\n        #             handler.trace.score(\r\n        #                 name=metric,\r\n        #                 value = df[metric].iloc[0]\r\n        #             )\r\n        #         handler.trace.update(\r\n        #             input = {'question':data_point['question']},\r\n        #             output = {'output_text':data_point['answer']}\r\n        #             )\r\n        \r\n        \r\n        return df\r\n    \r\n    def get_results(self) -> Data:\r\n        metrics = ['faithfulness']#['faithfulness', 'context_recall', 'answer_relevancy']#, 'context_utilization', 'context_recall''answer_correctness', ]\r\n        dataset_items = {'items': []}\r\n        self.langfuse = Langfuse(\r\n          secret_key=\"sk-lf-78ef637a-0ef0-4660-ab80-59686ecf4111\",\r\n          public_key=\"pk-lf-9678af12-6a6b-4945-807b-f6d817c009de\",\r\n          host=\"https://langfuse-ui.karma-ml.nmbapp.net\"\r\n        )\r\n        for idx in range(len(self.dataset.data['items'])):\r\n            payload = self.dataset.data['items'][idx]\r\n            data_samples = {\r\n                'question': payload['query'],\r\n                'answer': payload['output'],\r\n                'contexts': payload['context'],\r\n                'ground_truth': payload['expected_output']\r\n            }\r\n            score = self.eval(data_samples, idx)\r\n            #columns_with_nan = score.columns[score.isna().any()].tolist()\r\n            \r\n            print(\"AFTER EVALUATE\")\r\n            for metric in metrics:\r\n                payload[metric] = score[metric].iloc[0]\r\n            dataset_items['items'].append(payload)\r\n            \r\n            # if columns_with_nan:\r\n            #     print(\"Columns with NaN values:\", columns_with_nan)\r\n\r\n            # score = score.fillna(0)\r\n            # pd.set_option('display.max_columns', None)\r\n            # print(\"SCORE:\", score)\r\n            # for metric in metrics:\r\n            #     self.langfuse.score(\r\n            #         trace_id = payload['trace_id'],\r\n            #         name = metric,\r\n            #         value = score[metric].iloc[0]\r\n            #     )\r\n        print(\"no error still\")\r\n        print(dataset_items)\r\n        data = Data(text_key = 'items', data = dataset_items)\r\n        return data\r\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                }
              },
              "description": "Takes in dataset and generation; performs evaluation and appends score.",
              "icon": "custom_components",
              "base_classes": [
                "Data"
              ],
              "display_name": "RAGAS",
              "documentation": "http://docs.axiestudio.org/components/custom",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Data"
                  ],
                  "selected": "Data",
                  "name": "output",
                  "display_name": "output",
                  "method": "get_results",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "dataset"
              ],
              "beta": false,
              "edited": true,
              "metadata": {}
            },
            "id": "CustomComponent-3xQmr"
          },
          "selected": true,
          "width": 384,
          "height": 267,
          "dragging": false,
          "positionAbsolute": {
            "x": 2153.355478876727,
            "y": 381.18737169924646
          }
        },
        {
          "id": "CustomComponent-X3qhA",
          "type": "genericNode",
          "position": {
            "x": -252.23907669723974,
            "y": -1002.2435322215003
          },
          "data": {
            "type": "RAGAS_Evaluation_Component",
            "node": {
              "template": {
                "_type": "Component",
                "answer": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "answer",
                  "value": "I am your bitdefender assistant",
                  "display_name": "Answer",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "RAG Generated answer",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MessageTextInput"
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio.custom import Component\r\nfrom axiestudio.io import MessageTextInput, Output\r\nfrom axiestudio.schema import Data\r\nimport pandas as pd\r\nfrom datasets import Dataset\r\nfrom ragas import evaluate\r\nimport os\r\nfrom ragas.metrics import (\r\n    answer_relevancy,\r\n    faithfulness,\r\n    context_recall,\r\n    context_precision,\r\n)\r\nfrom axiestudio.schema.message import Message\r\n\r\nclass RAGAS_Evaluation_Component(Component):\r\n    display_name = \"Ragas Evaluator\"\r\n    description = \"Evaluates a question-answer pair using Ragas evaluation\"\r\n    icon = \"view\"\r\n\r\n    inputs = [\r\n        MessageTextInput(\r\n            name=\"question\",\r\n            display_name=\"Question\",\r\n            info=\"RAG Question\",\r\n        ),\r\n        MessageTextInput(\r\n            name=\"answer\",\r\n            display_name=\"Answer\",\r\n            info=\"RAG Generated answer\",\r\n        ),\r\n        MessageTextInput(\r\n            name=\"ground_truth\",\r\n            display_name=\"Ground Truth (optional)\",\r\n            info=\"Ground Truth\",\r\n        ),\r\n        MessageTextInput(\r\n            name=\"context_chunks\",\r\n            display_name=\"Retrieved chunks\",\r\n            info=\"The chunks of text retrieved by the RAG\",\r\n        ),\r\n        SecretStrInput(\r\n            name=\"openai_api_key\",\r\n            display_name=\"OpenAI API Key\",\r\n            info=\"The OpenAI API Key to use for the OpenAI model.\",\r\n            advanced=False,\r\n            value=\"OPENAI_API_KEY\",\r\n        ),\r\n        \r\n    ]\r\n\r\n    outputs = [\r\n        Output(display_name=\"Text\", name=\"text\", method=\"ragas_evaluation\"),\r\n    ]\r\n        \r\n    def create_dataset(self, inputs: dict):\r\n        \r\n        self.data = {\r\n            \"question\": [inputs.get(\"question\", None)],\r\n            \"ground_truth\": [inputs.get(\"ground_truth\", None)],\r\n            \"answer\": [inputs.get(\"answer\", None)], \r\n            \"contexts\": [['?', 'anyone?', 'Help?', 'Minor\\na failure of a configuration item that has not yet impacted an IT service (for example failure of one disk from a mirror set)\\na minor inconvenience to internal colleagues, workaround available\\na minimal number of internal colleagues are affected and/or able to deliver an acceptable service but this requires extra effort.\\nMajor \\nnone of the services lost are critical\\nfinancial loss and damage to the organization’s reputation are possible, but limited in scope\\nsome staff members are affected\\nCritical \\na situation in which an overnight server restart leads to app login problems for hundreds of users can have a huge impact on the \\nbusiness\\na network device crashes, bringing down several services (no impact on customers)\\nsecurity incidents\\nBlocker\\na large number of customers are affected and/or acutely disadvantaged in some way\\nthe financial impact of the Incident is big\\nthe damage to the reputation of the business is likely to be high\\nPlease do not abuse with the priority level for your request ( e.g. : if you need a separate mouse / keyboard for your laptop, do no \\nset the priority of your request to Major or higher).\\nPlease note that for the requests types the SLA will be counted in business days and for Incidents will the normal days.\\nThe IT team can change the priority accordingly to the  Priority and Business justification presented\\nOverview of the ticket\\nAfter you create a ticket, you will be redirect to the overview page of it, where you can check all the details you have selected and the current \\nstatus.\\nAlso here will appear the comments from the agent (you will be notified also via email).\\nStatuses explained\\nWaiting for approval - the ticket is in the state where it waits for all approvals to be proceed to the next stage. The person who need to approve \\nyour request will receive an automatic e-mail.\\nWaiting for support  - the ticket is in the state where the IT team is working hard to fulfill your request', 'Business justification :  only found in  category - some types from  may have this field mandatory, others may not Requests Request\\nImpact (optional): let use us know how many people are impacted or if it has an impact for the the customers/parterns who are using \\nBitdefender products\\nPriority: in the drop down list youll find the priorities from which you can select alongside with the SLA associated\\nAttachment: A screenshot with the error message always helps\\nApprovers : In here you will need to fill in your managers name  the owner of the service/server/mail list which needs to approve your and/or\\nrequest.\\nPriorities explained\\nIncidents are assigned priorities (“Minor”, “Major”, “Critical”, “Blocker”) based on the impact and urgency of the failure or \\ninterruption.\\nMinor\\na failure of a configuration item that has not yet impacted an IT service (for example failure of one disk from a mirror set)\\na minor inconvenience to internal colleagues, workaround available\\na minimal number of internal colleagues are affected and/or able to deliver an acceptable service but this requires extra \\neffort.\\nMajor \\nnone of the services lost are critical\\nfinancial loss and damage to the organization’s reputation are possible, but limited in scope\\nsome staff members are affected\\nCritical \\na situation in which an overnight server restart leads to app login problems for hundreds of users can have a huge impact \\non the business\\na network device crashes, bringing down several services (no impact on customers)\\nsecurity incidents\\nBlocker\\na large number of customers are affected and/or acutely disadvantaged in some way\\nthe financial impact of the Incident is big\\nthe damage to the reputation of the business is likely to be high\\nPlease do not abuse with the priority level for your request ( e.g. : if you need a separate mouse / keyboard for your laptop, do no \\nset the priority of your request to Major or higher).', 'Communication System\\nBoardroom Presentation Scenarios\\nCommunications procedure for corporate chat channels\\nEmail Utilities\\nGoToMeeting\\nITSupport ( Pending updates )\\nGotoMeeting - Create a meeting\\nLocked Accounts Email Warning\\nMailSystems\\nAddressBook\\nEmail Settings - POP3 IMAP\\nMail distribution lists\\nEmailSettings-ScriptsAndTools\\nEmail Signature Creation\\nOut of office\\nEmail Settings - MS Exchange\\nMeeting Rooms System\\nSet up Office365 account on mobile (Android and iOS)\\nSkype for Business\\nSlack Bot/API approval request\\nSlack Guide\\nTelephonyServices\\nVodafone Mobile Internet Modem Configuration\\nInternalPhones\\nWEBEX System\\nSlack channels administration\\nBoardroom Presentation Scenarios\\nUsers with Write permissions Users who will be allowed to add and modify data to this location\\nUsers with Admin permissions Users who will be able to manage the R and RW access groups\\nAccessing an existing File Server or Share\\nThe user will create a ticket using the and specify:  IT ticketing system  \\nThe FTP with the desired access\\nThe users for whom access is desired\\nThe reason for which access is desired\\nAdministrative workflow\\nThe IT departament will only provide the HW and SW infrastructure for data storage\\nEnsures AV monitoring using the Bitdefender solution\\nInfected files are kept in quarantine only for 30 days, after which they are deleted\\nEnsures access to the files hosted here through the permission groups\\nTakes the right to start defragmentation and scandisk instances once every 2 months at the most in order to ensure data integrity\\nWhen such operations are executed, they will be notified 1 day in advance (we will try to plan such operations on weekends)\\nThe cleanup of storage server locations is the responsability of the team which owns the folder\\nQuota excess is signaled by mail to the owners of the locations.\\nEach project benefits from a dedicated folder\\nEach folder will have a certain quota allocated\\nEach folder will have a specific group of users with Write right', 'Blocker\\na large number of customers are affected and/or acutely disadvantaged in some way\\nthe financial impact of the Incident is big\\nthe damage to the reputation of the business is likely to be high\\nPlease do not abuse with the priority level for your request ( e.g. : if you need a separate mouse / keyboard for your laptop, do no \\nset the priority of your request to Major or higher).\\nPlease note that for the requests types the SLA will be counted in business days and for Incidents will the normal days.\\nThe IT team can change the priority accordingly to the Priority and Business justification presented\\nOverview of the ticket\\nAfter you create a ticket, you will be redirect to the overview page of it, where you can check all the details you have selected and the current \\nstatus.\\nAlso here will appear the comments from the agent (you will be notified also via email).\\nStatuses explained\\nWaiting for approval - the ticket is in the state where it waits for all approvals to be proceed to the next stage. The person who need to approve \\nyour request will receive an automatic e-mail.\\nWaiting for support  - the ticket is in the state where the IT team is working hard to fulfill your request\\nWaiting for customer  - the ticket is in the state where the IT is currently pending information or confirmation from your side\\nWaiting for acquisition  - the ticket is the state where the acquisition note is created and now we are waiting for them to arrive.', 'Locked Accounts Email Warning\\nUP TO DATE\\nIt might happen youll receive an automated email when our systems detect that your account is being locked out due to repeated password \\nfailures.\\nThere are two main reasons for this, one is that somebody is indeed trying to bruteforce your password, the other being that youve recently \\nchanged your password but havent updated it on all devices/scripts.\\nExample 1:\\nIn this example, its pretty obvious where to check for the root cause: the machine name should be familiar to you, thats where you should focus \\nthe investigation.\\nExample 2:\\nIn this example, you might not recognize this particular machine as one where youre usually doing business on, but in this particular case the \\nmachine is part of the On Premise Exchange server. Seeing this type of email suggest youve setup your email account on a device where you \\nhavent updated the changed password, so you should start the investigation with the devices where youve got your email set up.\\nIn the end\\nYou need to take these messages seriously, and update the changed password wherever youre using it.\\nIf you are unable to locate where the failed logins are originating from, do join  on Slack and ask for assistance over there #it-department-pub\\nregarding this issue.', 'Responsabili IT @Tuna EKER   @Razvan CAMPEAN @Bogdan Paul SPIREA\\nResponsabili \\ncompletareTeam Managers (NU team leads)\\nOverview\\nOverview\\nOverview\\nScopeDefinirea listei de useri care au voie sa aiba instalata alta solutie AV decat clientul de BEST administrat de IT\\nA avea alt AV nu inseamna a folosi laptopul in toate campaniile de Alfa\\\\Beta cu nenumarate sesiuni de uninstall&install \\nintrucat acestea vor duce la probleme cu Sistemul de Operare\\nTestarea produselor in Afla\\\\Beta\\\\Release se face pe medii dedicate (masini virtuale locale, masini virtuale in \\ninfrastructuri dedicate, masini fizice dedicate)\\nDefault \\nAntivirus \\nsolutionThe mandatory Antivirus solution used by the Bitdefender employees is the  clie Bitdefender End Point Security Tools\\nnt managed by the Gravity Zone management system administered by the IT department. \\nAll equipment must comply to the above rule\\nAny user who needs to install/uninstall or has problems with the current antivirus solution, has to open a ticket \\nusing the  -->   component IT ticketing system Antivirus.System\\nIt is forbidden for any user to manually uninstall the Antivirus solution provided by the IT Team without the IT \\napproval\\nAll the other users who want to use this solution will need to follow the steps available in the Installation and \\nmanagement procedures paragraph\\nAlternative \\nAntivirus \\nsolutionsUsing other Bitdefender Antivirus solutions\\nComputers and phones with Alternative Antivirus solutions Compliance will be subject to regular checks and audits \\nin order to validate the adherence to the company policy of the IT department \\nNot using an Antivirus solution\\nOnly available for testing purposes\\nResponsabili IT @Tuna EKER   @Razvan CAMPEAN @Bogdan Paul SPIREA\\nResponsabili \\ncompletareTeam Managers (NU team leads)', 'Start typing a search term. Slack will show you related channels, members, and search suggestions. You can also choose from your \\nrecent searches.  Search results are also adaptive to help you find what you’re looking for.\\nYou can use search modifiers in order to easier find what you are looking for:\\nfrom:@[username] from a specific person\\nin:[channel name] in a certain channel\\nto:[username] to a specific person\\nbefore:/after: YYYY-MM-DD before/after a certain date\\nSlack Connect Invitations\\nIn order to invite an external partner using Slack connect you need to first create a private Slack channel in our workspace, private channels are \\nmarked with a lock icon in Slack.\\nIn the channel in question go to Settings\\nRelated articles\\nSlack Guide\\nMFA authentication/recovery for (user) service accounts\\nService Accounts Handling\\nSlack channels administration\\nSlack Bot/API approval request', 'AV-Exceptions\\nOverview\\nOverview\\nOverview\\nScopeDefinirea listei de useri care au voie sa aiba instalata alta solutie AV decat clientul de BEST administrat de IT\\nA avea alt AV nu inseamna a folosi laptopul in toate campaniile de Alfa\\\\Beta cu nenumarate sesiuni de uninstall&install \\nintrucat acestea vor duce la probleme cu Sistemul de Operare\\nTestarea produselor in Afla\\\\Beta\\\\Release se face pe medii dedicate (masini virtuale locale, masini virtuale in \\ninfrastructuri dedicate, masini fizice dedicate)\\nDefault \\nAntivirus \\nsolutionThe mandatory Antivirus solution used by the Bitdefender employees is the  clie Bitdefender End Point Security Tools\\nnt managed by the Gravity Zone management system administered by the IT department. \\nAll equipment must comply to the above rule\\nAny user who needs to install/uninstall or has problems with the current antivirus solution, has to open a ticket \\nusing the  -->   component IT ticketing system Antivirus.System\\nIt is forbidden for any user to manually uninstall the Antivirus solution provided by the IT Team without the IT \\napproval\\nAll the other users who want to use this solution will need to follow the steps available in the Installation and \\nmanagement procedures paragraph\\nAlternative \\nAntivirus \\nsolutionsUsing other Bitdefender Antivirus solutions\\nComputers and phones with Alternative Antivirus solutions Compliance will be subject to regular checks and audits \\nin order to validate the adherence to the company policy of the IT department \\nNot using an Antivirus solution\\nOnly available for testing purposes\\nResponsabili IT @Tuna EKER   @Razvan CAMPEAN @Bogdan Paul SPIREA\\nResponsabili \\ncompletareTeam Managers (NU team leads)\\nOverview\\nOverview\\nOverview\\nScopeDefinirea listei de useri care au voie sa aiba instalata alta solutie AV decat clientul de BEST administrat de IT\\nA avea alt AV nu inseamna a folosi laptopul in toate campaniile de Alfa\\\\Beta cu nenumarate sesiuni de uninstall&install', 'EX:\\nUsers must go through an authentication process whenever they have to exchange information\\nNetwork segregation and quality will be depreciated\\nInternet bandwidth will increase due to lack of a missing centralized update systems\\nWhy should I login with my Bitdefender domain user? How does it help me?\\nActive Directory provides centralized management of all Bitdefender PCs\\nYou benefit from the use of internal communication systems. EX: Email, VPN, MRBS, Skype for Business, Data Protection Manager)\\nIf you forget the Domain Password, IT can restore it\\n1.  \\n1.  \\n2.  \\n3.  \\n1.  \\n2.  \\n3.  \\n4.  Why should I change my password every 2 months?\\nIt is a security measure meant to enhance security for:\\ninformation stored in the users PC\\nBitdefender proprietary applications or services\\n2. Limit the time that a possibly non Bitdefender user can use a stolen password\\nWhy does my AV solution have to be managed by IT?\\nThe ease of viewing current antivirus status\\nCentralized Management - easily implement and manage settings, protection policies, scheduled scans, etc.\\nBeing a centralized system the location for updates is controlled by IT, thus reducing Bitdefender infrastructure bandwidth\\nWhy should my equipment be audited?\\nAll standards that Bitdefender adheres to, whether Information Technology, Security, Quality, are designed to help users and to protect \\nBitdefender proprietary information and services.\\nThus, IT try to support users to be compliant with the above mentioned standards\\nAn audit on a user equipment means a list of checks to see users adherence to these standards and where gaps exist so that they may \\nbe corrected.\\nThe conclusions are transparently added into the Zalmoxis inventory app.', 'Storage-System\\nIN REVIEW\\nCreating a new share on an existing File Server\\nAccessing an existing File Server or Share\\nAdministrative workflow\\nCreating a new share on an existing File Server\\nThe user will create a ticket using the  and specify:  IT ticketing system\\n Requirement Description\\nShare name Desired folder name\\nProject name The project whose data will be hosted here\\nProject responsible The user who will be accountable for this share\\nShare quota Desired quota for this folder\\nShare quota notification group The email list where quota notifications will be sent\\nUsers with Read Only permissions Users who will only be allowed to Read existing data\\nUsers with Write permissions Users who will be allowed to add and modify data to this location\\nUsers with Admin permissions Users who will be able to manage the R and RW access groups\\nAccessing an existing File Server or Share\\nThe user will create a ticket using the and specify:  IT ticketing system  \\nThe FTP with the desired access\\nThe users for whom access is desired\\nThe reason for which access is desired\\nAdministrative workflow\\nThe IT departament will only provide the HW and SW infrastructure for data storage\\nEnsures AV monitoring using the Bitdefender solution\\nInfected files are kept in quarantine only for 30 days, after which they are deleted\\nEnsures access to the files hosted here through the permission groups\\nTakes the right to start defragmentation and scandisk instances once every 2 months at the most in order to ensure data integrity\\nWhen such operations are executed, they will be notified 1 day in advance (we will try to plan such operations on weekends)\\nThe cleanup of storage server locations is the responsability of the team which owns the folder\\nQuota excess is signaled by mail to the owners of the locations.\\nEach project benefits from a dedicated folder\\nEach folder will have a certain quota allocated\\nEach folder will have a specific group of users with Write right', 'Hello  !\\nWe are experiencing  issues  with  VPN authentication . We are working on a fix as we speak.\\nI ask those who are already connected to the VPN not to test this aspect with a disconnect/reconnect as they may be unable to reconnect.\\nThank you!', ', then scroll down until you see ; to BITDEFENDER AD domain Sync\\n1.  \\n2.  \\n3.  \\n4.  \\n5.  1.  \\n2.  7. Youre all set up. Done. \\nTroubleshooting Enrollment\\nAdd troubleshooting article\\nTitle Creator Modified\\nYou need to update your operating system to 10.0.19043.1237 or later. Andrei Lucian BOROS Nov 15, 2022\\nTurn on device encryption Andrei Lucian BOROS Nov 15, 2022\\nThis device hasnt been set up for corporate use yet. Andrei Lucian BOROS Nov 15, 2022', 'Based on the computer protection status and the update status\\nWe need to analyze and check offline stations\\nBased on the malware status\\nIf there are any problems with file infection we need to analyze and notify the users individually\\nSerious problems are looked into together with the technical team\\nThe EPS AV solution will not be uninstalled from the client computers by anyone except the IT responsible who will do so as a result of a \\nticket with a valid business request on the IT ticketing system\\nExceptions from the installation of the EPS Av solution will be made in case of:\\nComputer users belonging to the development team who work on components which will be affected by the AV behavior\\nTesting computers that are used for Bitdefender products\\nInstallation and management procedures\\nAV management is executed remotely by IT admins using the Bitdefender Cloud Management Console\\nThe installation process relies on several scenarios:\\nFor the computers configured by the IT department - the AV solution will be installed during the configuration period\\nFor any other computers in Bitdefender - the IT responsible will ensure and regularly check the installation of the AV solution\\nFor any other user who wants to install the product download and install the specific kit from the  section Antivirus System#AVinstalllocations\\nThe IT administrator will then validate the installation in the management console\\nOther Antivirus solutions \\nBitdefender Total Security \\nBitdefender Internet Security \\nBitdefender Antivirus Plus\\nFor the above AV solutions all Bitdefender users should use the settings as stated in EPS client solution.', 'Hi Team, who can support me within my mail account, something seems to be wrong within my set up, i am not receiving mails as some are contacting me via .de and some via .com - who can take a look an that please? Thank you', 'g2mbusales7@bitdefe\\nnder.comGoToMeeti\\nng ProDEACTIVATED SCHIAVO \\nVincent\\ng2mbusales8@bitdefe\\nnder.comGoToWebi\\nnar PlusDEACTIVATED GURAN Mihai\\ng2mbusales9@bitdefe\\nnder.comGoToMeeti\\nng ProDEACTIVATED GURAN Mihai\\ng2mbusales10@bitdef\\nender.comGoToMeeti\\nng ProDEACTIVATED GURAN Mihai\\ng2mbusales11@bitdef\\nender.comGoToMeeti\\nng ProDEACTIVATED SCHIAVO \\nVincent\\ng2mbusales12@bitdef\\nender.comGoToWebi\\nnar PlusDEACTIVATED SCHIAVO \\nVincent\\ng2mbusales13@bitdef\\nender.comGoToMeeti\\nng Proaionita@bitdefender.com ,  (sent email) igeorgescu@bitdefender.com GURAN Mihai\\ng2mbusales14@bitdef\\nender.comGoToMeeti\\nng ProDEACTIVATED SCHIAVO \\nVincent\\ng2mbusales15@bitdef\\nender.comGoToMeeti\\nng ProDEACTIVATED SCHIAVO \\nVincent\\ng2mbusales16@bitdef\\nender.comGoToMeeti\\nng Proatello@bitdefender.com ,  (sent email) jwhite@bitdefender.com SCHIAVO \\nVincent\\ng2mbusales17@bitdef\\nender.comGoToMeeti\\nng ProDEACTIVATED PAUN Mihaela\\ng2mbusales18@bitdef\\nender.comGoToMeeti\\nng ProDEACTIVATED SCHIAVO \\nVincent\\ng2mbusales19@bitdef\\nender.comGoToWebi\\nnar PlusDEACTIVATED GURAN Mihai\\ng2mbusales20@bitdef\\nender.comGoToWebi\\nnar Plusrgresham@bitdefender.com ,  (sent email) dgreenburg@bitdefender.com SCHIAVO \\nVincent\\ng2mbusales21@bitdef\\nender.comGoToMeeti\\nng Projmerino@bitdefender.es  (sent email) SCHIAVO \\nVincent\\ng2mbusales26@bitdef\\nender.comGoToMeeti\\nng ProDEACTIVATED SCHIAVO \\nVincent\\ng2mbusales28@bitdef\\nender.comGoToMeeti\\nng ProDEACTIVATED SCHIAVO \\nVincent\\ng2mbusales29@bitdef\\nender.comGoTo Webi\\nnar PlusDEACTIVATED SCHIAVO \\nVincent\\ng2mbusales30@bitdef\\nender.comGoToMeeti\\nng ProDEACTIVATED SCHIAVO \\nVincent\\ng2mbusales31@bitdef\\nender.comGoToMeeti\\nng ProDEACTIVATED GURAN Mihai\\ng2mbusales32@bitdef\\nender.comGoToMeeti\\nng Proudesai@ m, jjones@  (sent email) bitdefender.co bitdefender.com AGASTYA \\nHarish \\nSunderam\\ng2mbusales33@bitdef\\nender.comGoToMeeti\\nng ProDEACTIVATED SCHIAVO \\nVincent\\ng2mbusales34@bitdef\\nender.comGoToMeeti\\nng ProDEACTIVATED SCHIAVO \\nVincent\\ng2mbusales35@bitdef\\nender.comGoToMeeti\\nng ProDEACTIVATED GURAN Mihai', 'responsible for determining appropriate sensitivity classifications and criticality ratings, making decisions about who can access the \\ninformation, and ensuring that appropriate controls are utilized in the storage, handling, distribution, and regular usage of information.\\nEach significant type of production information must have a designated Custodian who will properly protect Bitdefender information in keeping \\nwith the designated Information Owner’s access control, data sensitivity, and data criticality instructions.\\nAll Bitdefender data must be broken into the following four sensitivity classifications: , STRICTLY CONFIDENTIAL , CONFIDENTIAL or restricted\\nINTERNAL or proprietary, PUBLIC . Distinct handling, labeling, and review procedures must be established for each classification.\\nFor all existing production information types, the Information Owner is responsible for choosing an appropriate data classification label to be \\nused by all workers who create, compile, alter, or procure production information.\\nInformation Exchange\\nhttps://www.intranet.bitdefender.biz/IS/Procedurestemplates/IS130%20Information%20Exchange%20Policy.pdf\\nThe Information Exchange Policy defines controls for the secure transfer or exchange all Bitdefender sensitive information, either in paper or \\nelectronic format.\\nAll requests from a third party for internal information that is not classified as PUBLIC must be approved by both the Information Owner and \\ntheB itdefender corporate counsel, who must each be given five business days to evaluate the merits of the request.\\n1.  \\n1.  \\n2.  \\n3.  \\n4.  \\n5.  \\n6.  \\n7.  \\n8.  \\n9.  \\n1.  \\n2.  \\n3.  Workers must not make any public representations about Bitdefenderfuture earnings or the prospects for new products.\\nAll public representations including, but not limited to, media advertisements, Internet home pages, electronic bulletin board postings, and \\nvoice mail broadcast messages, must be issued or approved by the Public Relations Department.', 'cineva on?', 'Multiple users are reporting issues with Outlook/Teams. Could you let me know if you are looking into this?', 'Acquisition System\\nHere you will find information about the acquisition process and the standard equipment in Bitdefender.', 'Out of office\\nStep-by-step guide for Exchange mailboxes\\nFor Bitdefender Exchange email accounts\\nFor Bitdefender non-Exchange email accounts\\nFor Bitdefender Exchange email accounts\\nClick the  tab.File\\nClick Automatic Replies.\\nIf you dont see Automatic Replies , use Rules and Alerts to set up your out-of-office message.\\nSelect Send automatic replies.\\nYou can set a date range for your automatic replies. This will turn off automatic replies at the date and time you enter for the end time. \\nOtherwise, youll need to turn off automatic replies manually.\\nSelect the  check box to schedule when your out of office replies are active. Only send during this time range\\nIf you don’t specify a start and end time, auto-replies are sent until you select the  check box. Do not send automatic replies\\nOn the  tab, type the response that you want to send to teammates or colleagues while you are out of the office. Inside My Organization\\nOn the  tab, select the  check box, and then type the response that Outside My Organization Auto-reply to people outside my organization\\nyou want to send while you are out of the office.\\nSelect whether you want replies sent to  or to  who sends you messages. My contacts only Anyone outside my organization\\nSending automatic replies to  anyone outside my organization will send your automatic reply to every email, including newsletters,  \\nadvertisements, and potentially, junk email. If you want to send automatic replies to those outside your organization, we recommend \\nchoosing  My contacts only .\\nSelect  OKto save your settings. \\nFor Bitdefender non-Exchange email accounts\\nNOT  supported.', 'Hi Team - are you able to assist me here? Please and thank you!', 'PHP Storm Code Editor https://www.jetbrains.com\\n/phpstorm/Proprietary\\nDocker Container \\nManagementhttps://docs.docker.com\\n/desktopProprietary\\nProtractor sonar - \\npassedE2E test \\nframework for \\nAngular and \\nAngularJShttps://www.protractortest.\\norg/#/MIT\\nWebStorm Code Editor https://lp.jetbrains.com\\n/webstorm-ide/Proprietary\\nFastRedis Database \\nManager GUI \\nfor Redishttps://fastoredis.com/ BSD\\nInsomnia API Definition \\nManagementhttps://insomnia.rest/ Proprietary\\nPortainer Container \\nOrchestration \\nUIhttps://documentation.\\nportainer.ioProprietary\\nCompass Database \\nManager GUI \\nfor MongoDBhttps://www.mongodb.com\\n/products/compassApache 2.0\\nDev Support - Development Tools\\nTool Used for Website License Type Comments\\nVisual Studio https://www.visualstudio.com Commercial\\nProvided by \\nthe \\nDEVSUPP \\nand IT \\nacquisition te\\nam\\nnotepad++ https://notepad-plus-plus.org/ GPL 2.0\\nWindows Sysinternals https://docs.microsoft.com\\n/en-us/sysinternals/Proprietary\\n7-zip https://www.7-zip.org/ LGPL 2.1 \\nwith unRAR \\nrestrictions\\nnodejs https://nodejs.org/en/ MIT\\nnpm https://www.npmjs.com/ The Artistic \\nLicense 2.0\\nSourcetree https://www.sourcetreeapp.\\ncom/Proprietary\\nPython https://www.python.org/ Open-source\\nPyCharm Community Edition https://www.jetbrains.com\\n/pycharm/Free, Open-\\nSource\\nDBeaver Community Edition https://dbeaver.io/ free and \\nopen source \\n(ASL) product\\nGit https://git-scm.com/ freen and \\nopen source\\nSublime Text 3 v4 https://www.sublimetext.com/ Free, https://w\\nww.\\nsublimetext.\\ncom/eula\\nMoba Xterm https://mobaxterm.mobatek.\\nnet/Free, https://\\nmobaxterm.\\nmobatek.net\\n/license.html\\ncygwin https://www.cygwin.com Free, \\nGPL, https://c\\nygwin.com\\n/licensing.html\\nminGW http://mingw-w64.org/doku.\\nphpFree, \\nGPL, http://mi\\nngw-w64.org\\n/doku.php\\n/support\\nxming http://www.straightrunning.\\ncom/XmingNotes/Free, http://w\\nww.\\nstraightrunnin\\ng.com\\n/XmingNotes\\n/terms.php\\nInfluxDb Studio https://github.com Free, \\n/CymaticLabs/InfluxDBStudio MIT, https://git\\nhub.com\\n/CymaticLabs\\n/InfluxDBStudi', 'Hello all, looking for BitdefenderVPN license for my personal use, can you please advise who can assist here?', 'Bitdef\\nender\\nG2MSales \\nEngine\\ner 2g2mse2@bi\\ntdefender.\\ncomSales \\nEngine\\nersOct \\n12, \\n2016Oct \\n12, \\n2016Ena\\nbled2 5 3 4 1 231 116 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MSales \\nEngine\\ner 3g2mse3@bi\\ntdefender.\\ncomSales \\nEngine\\nersOct \\n12, \\n2016Oct \\n12, \\n2016Ena\\nbled0 0 0 0 0 0 0 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MSales \\nEngine\\ner 4g2mse4@bi\\ntdefender.\\ncomSales \\nEngine\\nersOct \\n12, \\n2016Oct \\n12, \\n2016Ena\\nbled1 2 2 2 2 23 23 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MSales \\nEngine\\ner 5g2mse5@bi\\ntdefender.\\ncomSales \\nEngine\\nersOct \\n12, \\n2016Oct \\n12, \\n2016Ena\\nbled0 0 0 0 0 0 0 0 0 0 0 0 0 0\\nBitdef Sales g2mse6@biSales Oct Oct Ena 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n1.  \\n1.  \\n2.  \\n3.  \\n4.  \\n5.  ender\\nG2MEngine\\ner 6tdefender.\\ncomEngine\\ners13, \\n201613, \\n2016bled\\nBitdef\\nender\\nG2MSales \\nEngine\\ner 7g2mse7@bi\\ntdefender.\\ncomSales \\nEngine\\nersOct \\n13, \\n2016Oct \\n13, \\n2016Ena\\nbled0 0 0 0 0 0 0 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MSales \\nEngine\\ner 8g2mse8@bi\\ntdefender.\\ncomSales \\nEngine\\nersOct \\n13, \\n2016Oct \\n13, \\n2016Ena\\nbled1 1 1 1 1 1 1 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MSales \\nEngine\\ner 9g2mse9@bi\\ntdefender.\\ncomSales \\nEngine\\nersOct \\n13, \\n2016Oct \\n13, \\n2016Ena\\nbled0 0 0 0 0 0 0 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MSalesC\\nhannel\\nR1g2msalesch\\nannelr1@bit\\ndefender.\\ncomSales Aug \\n02, \\n2016Oct \\n11, \\n2016Ena\\nbled1 4 4 4 4 25 25 0 0 0 0 0 0 0\\nRoss \\nLaingSales \\nEngine\\nerg2mse10@\\nbitdefender.\\ncomSales \\nEngine\\nersOct \\n06, \\n2016Ena\\nbled120 318 3 6 1 5114 43 0 0 0 0 0 0 0', '1.  \\n2.  \\n3.  \\n4.  \\n5.  \\n6.  \\n7.  \\n8.  \\n9.  \\n1.  \\n2.  \\n1.  \\n2.  \\n3.  \\n4.  \\n5.  REQUESTS\\nAccess\\nNetwork Infrastructure\\nVirtual Infrastructure\\nCommunication System\\nAntivirus\\nPrinting System\\nSoftware\\nLicenses\\nOther Requests\\nACQUISITIONS & PROVISIONING\\nUser side\\nServer side\\nINCIDENTS\\nApplications\\nServices\\nInfrastructure\\nSecurity Breach\\nOther incidents\\nFields\\nOnce youve selected an option from the above you may find the fields listed below:\\nSummary : This is the  of the ticket - describe in a few words words the request/issue which you want to raisetitle\\nDescription :  of your request/issue in order to understand the nature of your situation. Full description\\nA drop down menu : only some types of  tickets will have a dropdown list, Requests from where you can select the area of activity\\nBusiness justification :  only found in  category - some types from  may have this field mandatory, others may not Requests Request\\nImpact (optional): let use us know how many people are impacted or if it has an impact for the the customers/parterns who are using \\nBitdefender products\\nPriority: in the drop down list youll find the priorities from which you can select alongside with the SLA associated\\nAttachment: A screenshot with the error message always helps\\nApprovers : In here you will need to fill in your managers name  the owner of the service/server/mail list which needs to approve your and/or\\nrequest.\\nPriorities explained\\nIncidents are assigned priorities (“ Minor ”, “Major ”, “Critical ”, “Blocker ”) based on the impact and urgency of the failure or interruption.\\nMinor\\na failure of a configuration item that has not yet impacted an IT service (for example failure of one disk from a mirror set)\\na minor inconvenience to internal colleagues, workaround available\\na minimal number of internal colleagues are affected and/or able to deliver an acceptable service but this requires extra effort.\\nMajor \\nnone of the services lost are critical', 'Whats this?', 'Good morning, Slack webhooks are becoming deprecated and I have put in a request for an app. Who accepts such requests?', 'framework for \\nAngular and \\nAngularJShttps://www.protractortest.\\norg/#/\\nInsomnia API Definition \\nManagementhttps://insomnia.rest/\\nPortainer Container \\nOrchestration \\nUIhttps://documentation.\\nportainer.io\\nCompass Database \\nManager GUI \\nfor MongoDBhttps://www.mongodb.com\\n/products/compass\\nCheckout - Development Tools\\nName Used for Website License Type Comments\\nnpm Package \\nManager for \\nNodeJS \\nmoduleshttps://www.npmjs.com/ The Artistic \\nLicense 2.0\\nnginx HTTP Server https://www.nginx.com/ 2-clause \\nBSD license\\nredis Redis \\nDatabase \\nServerhttps://redis.io/ 3-clause \\nBSD license\\nmongodb MongoDB \\nDatabase \\nServerApache 2.0\\nVisual Studio Code Code Editor https://code.visualstudio.\\ncom/Proprietary / \\nMixed\\nRobo3T Database \\nManager GUI \\nfor MongoDBhttps://robomongo.org/ GPL 3.0\\nsourcetree Source Code \\nVersion \\nControl GUIhttps://www.sourcetreeapp.\\ncom/Proprietary\\nPostman GUI HTTP \\nRequests \\nManagerhttps://www.getpostman.\\ncom/Proprietary \\nlogstash Data \\nprocessing \\npipeline and \\ningestionhttps://www.elastic.co\\n/products/logstashApache 2.0\\nkibana GUI \\nvisualizer for \\nElastic datahttps://www.elastic.co\\n/products/kibanaApache 2.0\\nGrafana Observability \\nUIhttps://grafana.com/ GNU Affero \\nGeneral \\nPublic \\nLicense v3.0\\ngit for windows Source Code \\nVersion \\nControlhttps://git-scm.com GPL 2.0\\nSublime Text 3 v4 Code Editor https://www.sublimetext.com\\n/3Proprietary\\nSublime Merge Source Code \\nVersion \\nControl GUIhttps://www.sublimemerge.\\ncom/Proprietary\\nSQLiteStudio Database \\nManager GUI \\nfor SQLite https://sqlitestudio.pl/ GPL (v3)\\nNoSQLBootster Database \\nManager GUI \\nfor MongoDBhttps://nosqlbooster.com Proprietary\\nPHP Storm Code Editor https://www.jetbrains.com\\n/phpstorm/Proprietary\\nDocker Container \\nManagementhttps://docs.docker.com\\n/desktopProprietary\\nProtractor sonar - \\npassedE2E test \\nframework for \\nAngular and \\nAngularJShttps://www.protractortest.\\norg/#/MIT\\nWebStorm Code Editor https://lp.jetbrains.com\\n/webstorm-ide/Proprietary\\nFastRedis Database \\nManager GUI', 'Statuses explained\\nWaiting for approval - the ticket is in the state where it waits for all approvals to be proceed to the next stage. The person who need to approve \\nyour request will receive an automatic e-mail.\\nWaiting for support  - the ticket is in the state where the IT team is working hard to fulfill your request\\nWaiting for customer  - the ticket is in the state where the IT is currently pending information or confirmation from your side\\nWaiting for acquisition  - the ticket is the state where the acquisition note is created and now we are waiting for them to arrive.', 'Hello   Team. I would need some help regarding some inventory entries that I dont understand what they are. Who can I speak with?', 'IT Knowledge Base\\nIT Knowledge Base\\nFrequently asked questions\\nWhat is the base for the IT audit checks?\\nWhat IT audit means and what checks \\nare made?\\nWhy am I not allowed to modify the \\nhardware configuration of the computer \\nreceived from Bitdefender?\\nWhy should I join my laptop to \\nBitdefender Domain? \\nWhy should I login with Bitdefender \\ndomain user? How it helps me?\\nWhy should I change my password \\nevery 3 months?\\nWhy my AV solution have to be \\nmanaged by IT?\\nWhy should my equipment be audited?\\nRecently updated articles\\nFile Upload Application - User documentation\\nabout 2 hours ago contributed by  • Vinod Reddy\\nCisco Secure Client tips and tricks for MacOS users\\nabout 4 hours ago contributed by  • Bogdan Vlad BIBART\\nMacOS Sonoma Tips and Tricks\\nyesterday at 1:19 PM contributed by  • Bogdan Vlad \\nBIBART\\nUser Equipment Configuration\\nDec 11, 2023 contributed by  • Violeta MIHALACHE\\nCommunication System\\nDec 06, 2023 contributed by  • Adrian Georgian MOISE\\nIT Support Ticketing System\\nDec 06, 2023 contributed by  • Adrian Georgian MOISE\\nSoftware Compliance\\nDec 05, 2023 contributed by  • George Lucian TALABA\\n macOS certificates\\nNov 13, 2023 contributed by  • Andrei Lucian BOROS\\nRemote Yubikey usage   \\nNov 08, 2023 contributed by  • Mihai TALMACEL\\nMeeting Rooms System\\nOct 27, 2023 contributed by  • Alin MATEESCU\\nmacOS Enrollment Guide\\nOct 17, 2023 contributed by  • Andrei Lucian BOROS\\nAndroid Enrollment Guide\\nOct 17, 2023 contributed by  • Andrei Lucian BOROS\\nWindows Enrollment Guide\\nOct 17, 2023 contributed by  • Andrei Lucian BOROS\\niOS Enrollment Guide\\nOct 17, 2023 contributed by  • Andrei Lucian BOROS\\nCisco AnyConnect installation\\nSep 20, 2023 contributed by  • Victor Iosif DRAPACA', 'Dear It-department team,\\nDo you know who I need to contact for asking adding someone in a generic email address ?', 'Bitdef\\nender\\nG2MChann\\nelBusi\\nness3g2mbchann\\nel3@bitdefe\\nnder.comChann\\nel \\nBusine\\nssDec \\n21, \\n2014Ena\\nbled18 45 3 9 1 621 35 1 112 112 112 112 64 64\\nBitdef\\nender\\nG2MChann\\nelMark\\neting1g2mcmarke\\nting1@bitde\\nfender.comChann\\nel \\nMarket\\ningDec \\n21, \\n2014Ena\\nbled97 371 4 26 1 2386 25 10 420 42 209 0 528 53\\nBitdef\\nender\\nG2MConsu\\nmerUni\\nt1g2mconsu\\nmerunit1@b\\nitdefender.\\ncomConsu\\nmer \\nUnitOct \\n13, \\n2016Ena\\nbled0 0 0 0 0 0 0 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MCusto\\nmerCa\\nre1g2mcustom\\nercare1@bit\\ndefender.\\ncomCC&CS Dec \\n21, \\n2014Ena\\nbled48 187 4 37 1 2175 45 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MCusto\\nmerCa\\nre2g2mcustom\\nercare2@bit\\ndefender.\\ncomCC&CS Oct \\n06, \\n2016Ena\\nbled11 23 2 6 0 590 54 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MEnterp\\nriseg2menterpri\\nse1@bitdef\\nender.comEnterp\\nriseDec \\n21, \\n2014Ena\\nbled13 25 2 4 1 580 45 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MEnterp\\nrise2g2menterpri\\nse2@bitdef\\nender.comEnterp\\nriseOct \\n13, \\n2016Ena\\nbled0 0 0 0 0 0 0 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MEnterp\\nrise4g2menterpri\\nse4@bitdef\\nender.comEnterp\\nriseDec \\n21, \\n2014Ena\\nbled6 19 3 7 1 326 54 1 20 20 20 20 51 51\\nBitdef\\nender\\nG2MEnterp\\nrise5g2menterpri\\nse5@bitdef\\nender.comEnterp\\nriseDec \\n21, \\n2014Ena\\nbled54 154 3 11 1 2475 46 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MEnterp\\nrise6g2menterpri\\nse6@bitdef\\nender.comEnterp\\nriseDec \\n21, \\n2014Ena\\nbled21 54 3 5 1 967 46 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MEnterp\\nrise7g2menterpri\\nse7@bitdef\\nender.comChann\\nel \\nBusine\\nssOct \\n06, \\n2016Ena\\nbled5 24 5 11 1 232 46 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MEnterp\\nrise8g2menterpri\\nse8@bitdef\\nender.comChann\\nel \\nBusine\\nssSep \\n01, \\n2015Ena\\nbled26 67 3 6 1 1684 65 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MEnterp\\nriseSol\\nutions1g2mentsol1\\n@bitdefend\\ner.comEnterp\\nrise \\nSolutio\\nnsOct \\n11, \\n2016Ena\\nbled13 43 3 12 1 724 56 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MGener\\nal1g2mgeneral\\n1@bitdefen\\nder.comZGrou\\np1Dec \\n21, \\n2014Ena\\nbled5 10 2 4 1 127 25 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MPR1g2mpr1@bit\\ndefender.\\ncomPR \\nUnitDec \\n21, \\n2014Ena\\nbled18 48 3 5 1 615 34 0 0 0 0 0 0 0\\nBitdef\\nender\\nG2MProduc\\ntMarke', 'e cineva disponibil?', 'Having problems with emails that look like they were sent, but sit in drafts I talked with other people who are having the same issues.', '/fstools/filetest.htmlMIT\\nReadFile, \\nWriteFile, \\nNtCreateFile)\\nPyCharm Community Edition Python \\nprogramminghttps://www.jetbrains.com\\n/pycharm/Free, Open-\\nSource\\nPython https://www.python.org/ Free, Open-\\nsource\\nDebug Diagnostic Tool https://www.microsoft.com\\n/en-us/download/details.\\naspx?id=58210Proprietary\\nCentral Web - Development Tools\\nName Used for Website License Type Comment\\nSublime Text 3 v4 https://www.sublimetext.com\\n/3Proprietary\\nVisual Studio Code https://code.visualstudio.\\ncom/Proprietary / \\nMixed\\nmocha https://mochajs.org/ MIT\\nkarma https://karma-runner.github.\\nio/1.0/index.htmlMIT\\ngrunt https://gruntjs.com/ MIT\\nnpm https://www.npmjs.com/ The Artistic \\nLicense 2.0\\nbower sonar - \\npassedhttps://bower.io/ MIT\\nvim http://www.vim.org GPL \\ncompatible\\nLinux Mint https://www.linuxmint.com/ GPL\\nnodejs https://nodejs.org/en/ https://github.\\ncom/nodejs\\n/node/blob\\n/master\\n/LICENSE \\nChromium https://www.chromium.org\\n/getting-involved/download-\\nchromiumOpen source\\n/Mixed\\nPostman https://www.getpostman.\\ncom/Proprietary \\ngedit https://wiki.gnome.org/Apps\\n/GeditGPL\\ngit https://git-scm.com/ GPL 2.0\\nmercurial https://www.mercurial-scm.\\norg/GPL 2.0\\nAngular Development Tools\\nName Used for Website License Type Comment\\n@angular-devkit/build-angular Build https://www.npmjs.com\\n/package/@angular-devkit\\n/build-angularMIT\\n@angular/cli Development https://www.npmjs.com\\n/package/@angular/cliMIT\\n@angular/compiler-cli Build / \\nCompilehttps://www.npmjs.com\\n/package/@angular\\n/compiler-cliMIT\\ntslint Development https://github.com/palantir\\n/tslintApache-2.0\\n@types/google-maps Development https://www.npmjs.com\\n/package/@types/google-\\nmapsMIT\\n@types/googlemaps Development https://www.npmjs.com\\n/package/@googlemaps\\n/typesApache-2.0\\n@types/jasmine Development https://www.npmjs.com\\n/package/@types/jasmineMIT\\n@types/jasminewd2 Development https://www.npmjs.com\\n/package/@types\\n/jasminewd2MIT\\n@types/node Development https://www.npmjs.com\\n/package/@types/nodeMIT', 'Salutare, stiti cumva cu cine pot vorbi de niste JIRA issues?', 'NotificationsBy default all new email addresses will have their email accounts on Exchange\\nException: Middle and Top management, employees who are working most of the time outside the Office\\nThe migration to the Exchange will be available only based on a request\\nIssues and \\nrequestUsing the IT Ticketing system\\nAccess Exchange email account from a Web Browser\\nAccess https://outlook.office.com/\\nIf this is the first time you login, you will need to enter your login email address (please type your login username instead of email address)\\nClick here to expand...\\nEnter your Bitdefender domain user and password (username: ) ADusername@subdomain.bitdefender.biz\\nClick here to expand...\\nFor the existing subdomains, check here - MS Exchange - Bitdefender subdomains\\nSetting you picture on the exchange server\\nLogin into  https://outlook.office.com/\\nLog in with your Bitdefender domain user and password ( username:  ) ADusername@bitdefender.biz\\nGo to the right upper corner and click on your username \\nClick here to expand...\\nClick on the picture icon and a new popup window will appear\\nClick here to expand...\\nClick on  and select a photo from your computer, then click open Upload a new photo\\nClick here to expand...\\nClick  to save your photo Apply\\nClick here to expand...\\nClick  and after the picture will be uploaded, click Save Done.\\nExchange configuration for mobile phones and tablets\\nPlease follow this guide - Set up Office365 account on mobile (Android and iOS)\\nExchange configuration for Laptops and Desktops\\n  \\nApplies forFor new users\\nFor users that are migrated from a POP account\\nFor equipment replacement\\nWindows users\\nWe are using only Office online apps or O365, by case.\\nFor O365 - the IT department will provide you with a license. \\nDO NOT use 3rd party license keys or activators.\\nThe bellow steps apply when:\\nif its the first time you start Outlook']]\r\n        }\r\n\r\n\r\n        self.df = pd.DataFrame(self.data)\r\n        \r\n        return self.df\r\n\r\n\r\n    def ragas_evaluation(self)-> Message:\r\n        llm = AzureChatOpenAI(\r\n            azure_deployment='rag_gpt4o_prod',\r\n            openai_api_version=\"2023-05-15\",\r\n            azure_endpoint=\"https://karmarageu.openai.azure.com/\",\r\n            openai_api_key=\"0ade28c57d3447aebcabb231e0dfcb50\",\r\n            temperature=0.0)\r\n\r\n        self.evaluation_dict = {\"question\": self.question,\r\n                      \"answer\":self.answer,\r\n                      \"ground_truth\":self.ground_truth,\r\n                      \"context_data\":self.context_chunks}\r\n        print(self.evaluation_dict)\r\n        if self.ground_truth:\r\n            metrics = [\r\n                faithfulness,\r\n                # answer_relevancy,\r\n                context_recall,\r\n                # context_precision\r\n            ]\r\n        else:\r\n            metrics = [\r\n                faithfulness,\r\n                # answer_relevancy,\r\n                context_recall\r\n            ]\r\n        print(\"EVALUATING...\")\r\n        self.result = evaluate(\r\n            Dataset.from_pandas(self.create_dataset(self.evaluation_dict)),\r\n            metrics=metrics,\r\n            llm = llm,\r\n            embeddings = None\r\n        )\r\n        \r\n        df = self.result.to_pandas()\r\n        \r\n        question = df.loc[0,'question']\r\n        answer = df.loc[0,'answer']\r\n        faithfulness_ = df.loc[0,'faithfulness']\r\n        # answer_relevancy_ = df.loc[0,'answer_relevancy']\r\n        context_recall_ = df.loc[0,'context_recall']\r\n        \r\n        string_to_return = f'Answer: {answer}\\ Faithfulness: {faithfulness_}  Context Recall: {context_recall_}'#'\\ Answer Relevancy: {answer_relevancy_}\\\r\n        \r\n        # if self.ground_truth:\r\n        #     context_precision_ = df.loc[0,'context_precision']\r\n        #     string_to_return += f'\\Context Precision: {context_precision_}'\r\n            \r\n        return Message(text=string_to_return)\r\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "context_chunks": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "context_chunks",
                  "value": "abcd",
                  "display_name": "Retrieved chunks",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "The chunks of text retrieved by the RAG",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MessageTextInput"
                },
                "ground_truth": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "ground_truth",
                  "value": "I am your assistant",
                  "display_name": "Ground Truth (optional)",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "Ground Truth",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MessageTextInput"
                },
                "openai_api_key": {
                  "load_from_db": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "openai_api_key",
                  "value": "",
                  "display_name": "OpenAI API Key",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "The OpenAI API Key to use for the OpenAI model.",
                  "title_case": false,
                  "password": true,
                  "type": "str",
                  "_input_type": "SecretStrInput"
                },
                "question": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "question",
                  "value": "Who are you",
                  "display_name": "Question",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "RAG Question",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MessageTextInput"
                }
              },
              "description": "Evaluates a question-answer pair using Ragas evaluation",
              "icon": "view",
              "base_classes": [
                "Message"
              ],
              "display_name": "Custom Component",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "text",
                  "display_name": "Text",
                  "method": "ragas_evaluation",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "question",
                "answer",
                "ground_truth",
                "context_chunks",
                "openai_api_key"
              ],
              "beta": false,
              "edited": true,
              "lf_version": "1.0.17"
            },
            "id": "CustomComponent-X3qhA"
          },
          "selected": false,
          "width": 384,
          "height": 649,
          "dragging": false,
          "positionAbsolute": {
            "x": -252.23907669723974,
            "y": -1002.2435322215003
          }
        },
        {
          "id": "CustomComponent-O7Zig",
          "type": "genericNode",
          "position": {
            "x": 2815.812035754664,
            "y": 378.03288446298666
          },
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "_type": "Component",
                "dataset": {
                  "trace_as_metadata": true,
                  "list": false,
                  "trace_as_input": true,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "dataset",
                  "value": "",
                  "display_name": "Dataset",
                  "advanced": false,
                  "input_types": [
                    "Data"
                  ],
                  "dynamic": false,
                  "info": "Insert the dataset.",
                  "title_case": false,
                  "type": "other",
                  "_input_type": "DataInput"
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "# from axiestudio.field_typing import Data\nfrom axiestudio.custom import Component\nfrom axiestudio.io import MessageTextInput, Output\nfrom axiestudio.schema import Data\n\n\nclass LangfuseScoreUploader(Component):\n    display_name = \"Custom Component\"\n    description = \"Use as a template to create your own component.\"\n    documentation: str = \"http://docs.axiestudio.org/components/custom\"\n    icon = \"custom_components\"\n    name = \"CustomComponent\"\n\n    inputs = [\n        DataInput(\n            name=\"dataset\",\n            display_name=\"Dataset\",\n            value=\"\",\n            info=\"Insert the dataset.\",\n        ),\n        MessageTextInput(name=\"run_name\", display_name=\"Run Name\"),\n    ]\n\n    outputs = [\n        Output(display_name=\"Output\", name=\"output\", method=\"build_output\"),\n    ]\n\n    def build_output(self) -> Data:\n        #metrics = ['faithfulness', 'context_recall']\n        metrics = ['faithfulness', 'context_recall', 'answer_relevancy']#, 'context_utilization', 'context_recall''answer_correctness', ]\n        self.langfuse = Langfuse(\n          secret_key=\"sk-lf-78ef637a-0ef0-4660-ab80-59686ecf4111\",\n          public_key=\"pk-lf-9678af12-6a6b-4945-807b-f6d817c009de\",\n          host=\"https://langfuse-ui.karma-ml.nmbapp.net\"\n        )\n        for idx in range(len(self.dataset.data['items'])):\n            payload = self.dataset.data['items'][idx]\n            dataset = self.langfuse.get_dataset('Test')\n            item = dataset.items[idx]\n            \n            handler = item.get_langchain_handler(run_name=self.run_name)\n            for metric in metrics:\n                handler.trace.score(\n                    name=metric,\n                    value = float(payload[metric])\n                )\n                handler.trace.update(\n                    input = {'question':payload['query']},\n                    output = {'output_text':payload['output']}\n                    )\n            \n        data = Data(value=self.dataset)\n        self.status = data\n        return data\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "run_name": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "run_name",
                  "value": "test_run3",
                  "display_name": "Run Name",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MessageTextInput"
                }
              },
              "description": "Use as a template to create your own component.",
              "icon": "custom_components",
              "base_classes": [
                "Data"
              ],
              "display_name": "Langfuse Score Uploader",
              "documentation": "http://docs.axiestudio.org/components/custom",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Data"
                  ],
                  "selected": "Data",
                  "name": "output",
                  "display_name": "Output",
                  "method": "build_output",
                  "value": "__UNDEFINED__",
                  "cache": true,
                  "hidden": true
                }
              ],
              "field_order": [
                "dataset",
                "run_name"
              ],
              "beta": false,
              "edited": true
            },
            "id": "CustomComponent-O7Zig"
          },
          "selected": false,
          "width": 384,
          "height": 313,
          "dragging": false,
          "positionAbsolute": {
            "x": 2815.812035754664,
            "y": 378.03288446298666
          }
        },
        {
          "id": "CustomComponent-I8Mmv",
          "type": "genericNode",
          "position": {
            "x": 1647.3824477628018,
            "y": 1026.72509536566
          },
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "_type": "Component",
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "# from axiestudio.field_typing import Data\nfrom axiestudio.custom import Component\nfrom axiestudio.io import MessageTextInput, Output\nfrom axiestudio.schema import Data\n\n\nclass CustomComponent(Component):\n    display_name = \"Custom Component\"\n    description = \"Use as a template to create your own component.\"\n    documentation: str = \"http://docs.axiestudio.org/components/custom\"\n    icon = \"custom_components\"\n    name = \"CustomComponent\"\n\n    inputs = [\n        MessageTextInput(name=\"input_value\", display_name=\"Input Value\", value=\"Hello, World!\"),\n    ]\n\n    outputs = [\n        Output(display_name=\"Output\", name=\"output\", method=\"build_output\"),\n    ]\n\n    def build_output(self) -> Data:\n        data = Data(value=self.input_value)\n        self.status = data\n        return data\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "input_value": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "input_value",
                  "value": "Hello, World!",
                  "display_name": "Input Value",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MessageTextInput"
                }
              },
              "description": "Use as a template to create your own component.",
              "icon": "custom_components",
              "base_classes": [
                "Data"
              ],
              "display_name": "Custom Component",
              "documentation": "http://docs.axiestudio.org/components/custom",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Data"
                  ],
                  "selected": "Data",
                  "name": "output",
                  "display_name": "Output",
                  "method": "build_output",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "input_value"
              ],
              "beta": false,
              "edited": false
            },
            "id": "CustomComponent-I8Mmv"
          },
          "selected": false,
          "width": 384,
          "height": 305,
          "dragging": false
        },
        {
          "id": "OllamaModel-hRyll",
          "type": "genericNode",
          "position": {
            "x": 2141.5488030654465,
            "y": 824.896189457313
          },
          "data": {
            "type": "OllamaModel",
            "node": {
              "template": {
                "_type": "Component",
                "base_url": {
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "base_url",
                  "value": "https://meta-llama-3-1-405b.nimbus-ai.nmbapp.net/v1/chat/completions",
                  "display_name": "Base URL",
                  "advanced": false,
                  "dynamic": false,
                  "info": "Endpoint of the Ollama API. Defaults to 'http://localhost:11434' if not specified.",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "StrInput"
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from typing import Any\n\nimport httpx\nfrom langchain_community.chat_models import ChatOllama\n\nfrom axiestudio.base.models.model import LCModelComponent\nfrom axiestudio.field_typing import LanguageModel\nfrom axiestudio.io import BoolInput, DictInput, DropdownInput, FloatInput, IntInput, StrInput\n\n\nclass ChatOllamaComponent(LCModelComponent):\n    display_name = \"Ollama\"\n    description = \"Generate text using Ollama Local LLMs.\"\n    icon = \"Ollama\"\n    name = \"OllamaModel\"\n\n    def update_build_config(self, build_config: dict, field_value: Any, field_name: str | None = None):\n        if field_name == \"mirostat\":\n            if field_value == \"Disabled\":\n                build_config[\"mirostat_eta\"][\"advanced\"] = True\n                build_config[\"mirostat_tau\"][\"advanced\"] = True\n                build_config[\"mirostat_eta\"][\"value\"] = None\n                build_config[\"mirostat_tau\"][\"value\"] = None\n\n            else:\n                build_config[\"mirostat_eta\"][\"advanced\"] = False\n                build_config[\"mirostat_tau\"][\"advanced\"] = False\n\n                if field_value == \"Mirostat 2.0\":\n                    build_config[\"mirostat_eta\"][\"value\"] = 0.2\n                    build_config[\"mirostat_tau\"][\"value\"] = 10\n                else:\n                    build_config[\"mirostat_eta\"][\"value\"] = 0.1\n                    build_config[\"mirostat_tau\"][\"value\"] = 5\n\n        if field_name == \"model_name\":\n            base_url_dict = build_config.get(\"base_url\", {})\n            base_url_load_from_db = base_url_dict.get(\"load_from_db\", False)\n            base_url_value = base_url_dict.get(\"value\")\n            if base_url_load_from_db:\n                base_url_value = self.variables(base_url_value)\n            elif not base_url_value:\n                base_url_value = \"http://localhost:11434\"\n            build_config[\"model_name\"][\"options\"] = self.get_model(base_url_value + \"/api/tags\")\n\n        if field_name == \"keep_alive_flag\":\n            if field_value == \"Keep\":\n                build_config[\"keep_alive\"][\"value\"] = \"-1\"\n                build_config[\"keep_alive\"][\"advanced\"] = True\n            elif field_value == \"Immediately\":\n                build_config[\"keep_alive\"][\"value\"] = \"0\"\n                build_config[\"keep_alive\"][\"advanced\"] = True\n            else:\n                build_config[\"keep_alive\"][\"advanced\"] = False\n\n        return build_config\n\n    def get_model(self, url: str) -> list[str]:\n        try:\n            with httpx.Client() as client:\n                response = client.get(url)\n                response.raise_for_status()\n                data = response.json()\n\n                model_names = [model[\"name\"] for model in data.get(\"models\", [])]\n                return model_names\n        except Exception as e:\n            raise ValueError(\"Could not retrieve models. Please, make sure Ollama is running.\") from e\n\n    inputs = LCModelComponent._base_inputs + [\n        StrInput(\n            name=\"base_url\",\n            display_name=\"Base URL\",\n            info=\"Endpoint of the Ollama API. Defaults to 'http://localhost:11434' if not specified.\",\n            value=\"http://localhost:11434\",\n        ),\n        DropdownInput(\n            name=\"model_name\",\n            display_name=\"Model Name\",\n            value=\"llama3.1\",\n            info=\"Refer to https://ollama.com/library for more models.\",\n            refresh_button=True,\n        ),\n        FloatInput(\n            name=\"temperature\",\n            display_name=\"Temperature\",\n            value=0.2,\n            info=\"Controls the creativity of model responses.\",\n        ),\n        StrInput(\n            name=\"format\",\n            display_name=\"Format\",\n            info=\"Specify the format of the output (e.g., json).\",\n            advanced=True,\n        ),\n        DictInput(\n            name=\"metadata\",\n            display_name=\"Metadata\",\n            info=\"Metadata to add to the run trace.\",\n            advanced=True,\n        ),\n        DropdownInput(\n            name=\"mirostat\",\n            display_name=\"Mirostat\",\n            options=[\"Disabled\", \"Mirostat\", \"Mirostat 2.0\"],\n            info=\"Enable/disable Mirostat sampling for controlling perplexity.\",\n            value=\"Disabled\",\n            advanced=True,\n            real_time_refresh=True,\n        ),\n        FloatInput(\n            name=\"mirostat_eta\",\n            display_name=\"Mirostat Eta\",\n            info=\"Learning rate for Mirostat algorithm. (Default: 0.1)\",\n            advanced=True,\n        ),\n        FloatInput(\n            name=\"mirostat_tau\",\n            display_name=\"Mirostat Tau\",\n            info=\"Controls the balance between coherence and diversity of the output. (Default: 5.0)\",\n            advanced=True,\n        ),\n        IntInput(\n            name=\"num_ctx\",\n            display_name=\"Context Window Size\",\n            info=\"Size of the context window for generating tokens. (Default: 2048)\",\n            advanced=True,\n        ),\n        IntInput(\n            name=\"num_gpu\",\n            display_name=\"Number of GPUs\",\n            info=\"Number of GPUs to use for computation. (Default: 1 on macOS, 0 to disable)\",\n            advanced=True,\n        ),\n        IntInput(\n            name=\"num_thread\",\n            display_name=\"Number of Threads\",\n            info=\"Number of threads to use during computation. (Default: detected for optimal performance)\",\n            advanced=True,\n        ),\n        IntInput(\n            name=\"repeat_last_n\",\n            display_name=\"Repeat Last N\",\n            info=\"How far back the model looks to prevent repetition. (Default: 64, 0 = disabled, -1 = num_ctx)\",\n            advanced=True,\n        ),\n        FloatInput(\n            name=\"repeat_penalty\",\n            display_name=\"Repeat Penalty\",\n            info=\"Penalty for repetitions in generated text. (Default: 1.1)\",\n            advanced=True,\n        ),\n        FloatInput(\n            name=\"tfs_z\",\n            display_name=\"TFS Z\",\n            info=\"Tail free sampling value. (Default: 1)\",\n            advanced=True,\n        ),\n        IntInput(\n            name=\"timeout\",\n            display_name=\"Timeout\",\n            info=\"Timeout for the request stream.\",\n            advanced=True,\n        ),\n        IntInput(\n            name=\"top_k\",\n            display_name=\"Top K\",\n            info=\"Limits token selection to top K. (Default: 40)\",\n            advanced=True,\n        ),\n        FloatInput(\n            name=\"top_p\",\n            display_name=\"Top P\",\n            info=\"Works together with top-k. (Default: 0.9)\",\n            advanced=True,\n        ),\n        BoolInput(\n            name=\"verbose\",\n            display_name=\"Verbose\",\n            info=\"Whether to print out response text.\",\n        ),\n        StrInput(\n            name=\"tags\",\n            display_name=\"Tags\",\n            info=\"Comma-separated list of tags to add to the run trace.\",\n            advanced=True,\n        ),\n        StrInput(\n            name=\"stop_tokens\",\n            display_name=\"Stop Tokens\",\n            info=\"Comma-separated list of tokens to signal the model to stop generating text.\",\n            advanced=True,\n        ),\n        StrInput(\n            name=\"system\",\n            display_name=\"System\",\n            info=\"System to use for generating text.\",\n            advanced=True,\n        ),\n        StrInput(\n            name=\"template\",\n            display_name=\"Template\",\n            info=\"Template to use for generating text.\",\n            advanced=True,\n        ),\n    ]\n\n    def build_model(self) -> LanguageModel:  # type: ignore[type-var]\n        # Mapping mirostat settings to their corresponding values\n        mirostat_options = {\"Mirostat\": 1, \"Mirostat 2.0\": 2}\n\n        # Default to 0 for 'Disabled'\n        mirostat_value = mirostat_options.get(self.mirostat, 0)  # type: ignore\n\n        # Set mirostat_eta and mirostat_tau to None if mirostat is disabled\n        if mirostat_value == 0:\n            mirostat_eta = None\n            mirostat_tau = None\n        else:\n            mirostat_eta = self.mirostat_eta\n            mirostat_tau = self.mirostat_tau\n\n        # Mapping system settings to their corresponding values\n        llm_params = {\n            \"base_url\": self.base_url,\n            \"model\": self.model_name,\n            \"mirostat\": mirostat_value,\n            \"format\": self.format,\n            \"metadata\": self.metadata,\n            \"tags\": self.tags.split(\",\") if self.tags else None,\n            \"mirostat_eta\": mirostat_eta,\n            \"mirostat_tau\": mirostat_tau,\n            \"num_ctx\": self.num_ctx or None,\n            \"num_gpu\": self.num_gpu or None,\n            \"num_thread\": self.num_thread or None,\n            \"repeat_last_n\": self.repeat_last_n or None,\n            \"repeat_penalty\": self.repeat_penalty or None,\n            \"temperature\": self.temperature or None,\n            \"stop\": self.stop_tokens.split(\",\") if self.stop_tokens else None,\n            \"system\": self.system,\n            \"template\": self.template,\n            \"tfs_z\": self.tfs_z or None,\n            \"timeout\": self.timeout or None,\n            \"top_k\": self.top_k or None,\n            \"top_p\": self.top_p or None,\n            \"verbose\": self.verbose,\n        }\n\n        # Remove parameters with None values\n        llm_params = {k: v for k, v in llm_params.items() if v is not None}\n\n        try:\n            output = ChatOllama(**llm_params)  # type: ignore\n        except Exception as e:\n            raise ValueError(\"Could not initialize Ollama LLM.\") from e\n\n        return output  # type: ignore\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "format": {
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "format",
                  "value": "",
                  "display_name": "Format",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Specify the format of the output (e.g., json).",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "StrInput"
                },
                "input_value": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "input_value",
                  "value": "abcd",
                  "display_name": "Input",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MessageInput"
                },
                "metadata": {
                  "trace_as_input": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "metadata",
                  "value": {},
                  "display_name": "Metadata",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Metadata to add to the run trace.",
                  "title_case": false,
                  "type": "dict",
                  "_input_type": "DictInput"
                },
                "mirostat": {
                  "trace_as_metadata": true,
                  "options": [
                    "Disabled",
                    "Mirostat",
                    "Mirostat 2.0"
                  ],
                  "combobox": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "mirostat",
                  "value": "Disabled",
                  "display_name": "Mirostat",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Enable/disable Mirostat sampling for controlling perplexity.",
                  "real_time_refresh": true,
                  "title_case": false,
                  "type": "str",
                  "_input_type": "DropdownInput"
                },
                "mirostat_eta": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "mirostat_eta",
                  "value": "",
                  "display_name": "Mirostat Eta",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Learning rate for Mirostat algorithm. (Default: 0.1)",
                  "title_case": false,
                  "type": "float",
                  "_input_type": "FloatInput"
                },
                "mirostat_tau": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "mirostat_tau",
                  "value": "",
                  "display_name": "Mirostat Tau",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Controls the balance between coherence and diversity of the output. (Default: 5.0)",
                  "title_case": false,
                  "type": "float",
                  "_input_type": "FloatInput"
                },
                "model_name": {
                  "trace_as_metadata": true,
                  "options": [],
                  "combobox": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "model_name",
                  "value": "llama3.1",
                  "display_name": "Model Name",
                  "advanced": false,
                  "dynamic": false,
                  "info": "Refer to https://ollama.com/library for more models.",
                  "refresh_button": true,
                  "title_case": false,
                  "type": "str",
                  "_input_type": "DropdownInput"
                },
                "num_ctx": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "num_ctx",
                  "value": "",
                  "display_name": "Context Window Size",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Size of the context window for generating tokens. (Default: 2048)",
                  "title_case": false,
                  "type": "int",
                  "_input_type": "IntInput"
                },
                "num_gpu": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "num_gpu",
                  "value": "",
                  "display_name": "Number of GPUs",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Number of GPUs to use for computation. (Default: 1 on macOS, 0 to disable)",
                  "title_case": false,
                  "type": "int",
                  "_input_type": "IntInput"
                },
                "num_thread": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "num_thread",
                  "value": "",
                  "display_name": "Number of Threads",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Number of threads to use during computation. (Default: detected for optimal performance)",
                  "title_case": false,
                  "type": "int",
                  "_input_type": "IntInput"
                },
                "repeat_last_n": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "repeat_last_n",
                  "value": "",
                  "display_name": "Repeat Last N",
                  "advanced": true,
                  "dynamic": false,
                  "info": "How far back the model looks to prevent repetition. (Default: 64, 0 = disabled, -1 = num_ctx)",
                  "title_case": false,
                  "type": "int",
                  "_input_type": "IntInput"
                },
                "repeat_penalty": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "repeat_penalty",
                  "value": "",
                  "display_name": "Repeat Penalty",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Penalty for repetitions in generated text. (Default: 1.1)",
                  "title_case": false,
                  "type": "float",
                  "_input_type": "FloatInput"
                },
                "stop_tokens": {
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "stop_tokens",
                  "value": "",
                  "display_name": "Stop Tokens",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Comma-separated list of tokens to signal the model to stop generating text.",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "StrInput"
                },
                "stream": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "stream",
                  "value": false,
                  "display_name": "Stream",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Stream the response from the model. Streaming works only in Chat.",
                  "title_case": false,
                  "type": "bool",
                  "_input_type": "BoolInput"
                },
                "system": {
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "system",
                  "value": "",
                  "display_name": "System",
                  "advanced": true,
                  "dynamic": false,
                  "info": "System to use for generating text.",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "StrInput"
                },
                "system_message": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "system_message",
                  "value": "",
                  "display_name": "System Message",
                  "advanced": true,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "System message to pass to the model.",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MessageTextInput"
                },
                "tags": {
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "tags",
                  "value": "",
                  "display_name": "Tags",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Comma-separated list of tags to add to the run trace.",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "StrInput"
                },
                "temperature": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "temperature",
                  "value": 0.2,
                  "display_name": "Temperature",
                  "advanced": false,
                  "dynamic": false,
                  "info": "Controls the creativity of model responses.",
                  "title_case": false,
                  "type": "float",
                  "_input_type": "FloatInput"
                },
                "template": {
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "template",
                  "value": "",
                  "display_name": "Template",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Template to use for generating text.",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "StrInput"
                },
                "tfs_z": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "tfs_z",
                  "value": "",
                  "display_name": "TFS Z",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Tail free sampling value. (Default: 1)",
                  "title_case": false,
                  "type": "float",
                  "_input_type": "FloatInput"
                },
                "timeout": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "timeout",
                  "value": "",
                  "display_name": "Timeout",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Timeout for the request stream.",
                  "title_case": false,
                  "type": "int",
                  "_input_type": "IntInput"
                },
                "top_k": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "top_k",
                  "value": "",
                  "display_name": "Top K",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Limits token selection to top K. (Default: 40)",
                  "title_case": false,
                  "type": "int",
                  "_input_type": "IntInput"
                },
                "top_p": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "top_p",
                  "value": "",
                  "display_name": "Top P",
                  "advanced": true,
                  "dynamic": false,
                  "info": "Works together with top-k. (Default: 0.9)",
                  "title_case": false,
                  "type": "float",
                  "_input_type": "FloatInput"
                },
                "verbose": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "verbose",
                  "value": true,
                  "display_name": "Verbose",
                  "advanced": false,
                  "dynamic": false,
                  "info": "Whether to print out response text.",
                  "title_case": false,
                  "type": "bool",
                  "_input_type": "BoolInput"
                }
              },
              "description": "Generate text using Ollama Local LLMs.",
              "icon": "Ollama",
              "base_classes": [
                "LanguageModel",
                "Message"
              ],
              "display_name": "Ollama",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "text_output",
                  "display_name": "Text",
                  "method": "text_response",
                  "value": "__UNDEFINED__",
                  "cache": true
                },
                {
                  "types": [
                    "LanguageModel"
                  ],
                  "selected": "LanguageModel",
                  "name": "model_output",
                  "display_name": "Language Model",
                  "method": "build_model",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "input_value",
                "system_message",
                "stream",
                "base_url",
                "model_name",
                "temperature",
                "format",
                "metadata",
                "mirostat",
                "mirostat_eta",
                "mirostat_tau",
                "num_ctx",
                "num_gpu",
                "num_thread",
                "repeat_last_n",
                "repeat_penalty",
                "tfs_z",
                "timeout",
                "top_k",
                "top_p",
                "verbose",
                "tags",
                "stop_tokens",
                "system",
                "template"
              ],
              "beta": false,
              "edited": false
            },
            "id": "OllamaModel-hRyll"
          },
          "selected": false,
          "width": 384,
          "height": 667,
          "dragging": false,
          "positionAbsolute": {
            "x": 2141.5488030654465,
            "y": 824.896189457313
          }
        },
        {
          "id": "OllamaEmbeddings-3invD",
          "type": "genericNode",
          "position": {
            "x": 2738.030850466874,
            "y": 870.4204359900178
          },
          "data": {
            "type": "OllamaEmbeddings",
            "node": {
              "template": {
                "_type": "Component",
                "base_url": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "base_url",
                  "value": "https://meta-llama-3-1-405b.nimbus-ai.nmbapp.net/v1/embeddings",
                  "display_name": "Ollama Base URL",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MessageTextInput"
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from langchain_community.embeddings import OllamaEmbeddings\n\nfrom axiestudio.base.models.model import LCModelComponent\nfrom axiestudio.field_typing import Embeddings\nfrom axiestudio.io import FloatInput, MessageTextInput, Output\n\n\nclass OllamaEmbeddingsComponent(LCModelComponent):\n    display_name: str = \"Ollama Embeddings\"\n    description: str = \"Generate embeddings using Ollama models.\"\n    documentation = \"https://python.langchain.com/docs/integrations/text_embedding/ollama\"\n    icon = \"Ollama\"\n    name = \"OllamaEmbeddings\"\n\n    inputs = [\n        MessageTextInput(\n            name=\"model\",\n            display_name=\"Ollama Model\",\n            value=\"llama3.1\",\n        ),\n        MessageTextInput(\n            name=\"base_url\",\n            display_name=\"Ollama Base URL\",\n            value=\"http://localhost:11434\",\n        ),\n        FloatInput(\n            name=\"temperature\",\n            display_name=\"Model Temperature\",\n            value=0.1,\n            advanced=True,\n        ),\n    ]\n\n    outputs = [\n        Output(display_name=\"Embeddings\", name=\"embeddings\", method=\"build_embeddings\"),\n    ]\n\n    def build_embeddings(self) -> Embeddings:\n        try:\n            output = OllamaEmbeddings(\n                model=self.model,\n                base_url=self.base_url,\n                temperature=self.temperature,\n            )  # type: ignore\n        except Exception as e:\n            raise ValueError(\"Could not connect to Ollama API.\") from e\n        return output\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "model": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "model",
                  "value": "llama3.1",
                  "display_name": "Ollama Model",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MessageTextInput"
                },
                "temperature": {
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "temperature",
                  "value": 0.1,
                  "display_name": "Model Temperature",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "float",
                  "_input_type": "FloatInput"
                }
              },
              "description": "Generate embeddings using Ollama models.",
              "icon": "Ollama",
              "base_classes": [
                "Embeddings"
              ],
              "display_name": "Ollama Embeddings",
              "documentation": "https://python.langchain.com/docs/integrations/text_embedding/ollama",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Embeddings"
                  ],
                  "selected": "Embeddings",
                  "name": "embeddings",
                  "display_name": "Embeddings",
                  "method": "build_embeddings",
                  "value": "__UNDEFINED__",
                  "cache": true,
                  "hidden": true
                }
              ],
              "field_order": [
                "model",
                "base_url",
                "temperature"
              ],
              "beta": false,
              "edited": false,
              "lf_version": "1.0.17"
            },
            "id": "OllamaEmbeddings-3invD"
          },
          "selected": false,
          "width": 384,
          "height": 343,
          "dragging": false
        }
      ],
      "edges": [
        {
          "source": "CustomComponent-1wAiE",
          "sourceHandle": "{œdataTypeœ:œReadJSONToDataœ,œidœ:œCustomComponent-1wAiEœ,œnameœ:œdataœ,œoutput_typesœ:[œDataœ]}",
          "target": "CustomComponent-Bw0zx",
          "targetHandle": "{œfieldNameœ:œdataœ,œidœ:œCustomComponent-Bw0zxœ,œinputTypesœ:[œDataœ],œtypeœ:œotherœ}",
          "data": {
            "targetHandle": {
              "fieldName": "data",
              "id": "CustomComponent-Bw0zx",
              "inputTypes": [
                "Data"
              ],
              "type": "other"
            },
            "sourceHandle": {
              "dataType": "ReadJSONToData",
              "id": "CustomComponent-1wAiE",
              "name": "data",
              "output_types": [
                "Data"
              ]
            }
          },
          "id": "reactflow__edge-CustomComponent-1wAiE{œdataTypeœ:œReadJSONToDataœ,œidœ:œCustomComponent-1wAiEœ,œnameœ:œdataœ,œoutput_typesœ:[œDataœ]}-CustomComponent-Bw0zx{œfieldNameœ:œdataœ,œidœ:œCustomComponent-Bw0zxœ,œinputTypesœ:[œDataœ],œtypeœ:œotherœ}",
          "className": ""
        },
        {
          "source": "CustomComponent-Bw0zx",
          "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-Bw0zxœ,œnameœ:œdatasetœ,œoutput_typesœ:[œMessageœ]}",
          "target": "CustomComponent-OzGDq",
          "targetHandle": "{œfieldNameœ:œdataset_nameœ,œidœ:œCustomComponent-OzGDqœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
          "data": {
            "targetHandle": {
              "fieldName": "dataset_name",
              "id": "CustomComponent-OzGDq",
              "inputTypes": [
                "Message"
              ],
              "type": "str"
            },
            "sourceHandle": {
              "dataType": "CustomComponent",
              "id": "CustomComponent-Bw0zx",
              "name": "dataset",
              "output_types": [
                "Message"
              ]
            }
          },
          "id": "reactflow__edge-CustomComponent-Bw0zx{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-Bw0zxœ,œnameœ:œdatasetœ,œoutput_typesœ:[œMessageœ]}-CustomComponent-OzGDq{œfieldNameœ:œdataset_nameœ,œidœ:œCustomComponent-OzGDqœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
          "className": ""
        },
        {
          "source": "CustomComponent-Bw0zx",
          "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-Bw0zxœ,œnameœ:œprojectœ,œoutput_typesœ:[œMessageœ]}",
          "target": "CustomComponent-OzGDq",
          "targetHandle": "{œfieldNameœ:œproject_nameœ,œidœ:œCustomComponent-OzGDqœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
          "data": {
            "targetHandle": {
              "fieldName": "project_name",
              "id": "CustomComponent-OzGDq",
              "inputTypes": [
                "Message"
              ],
              "type": "str"
            },
            "sourceHandle": {
              "dataType": "CustomComponent",
              "id": "CustomComponent-Bw0zx",
              "name": "project",
              "output_types": [
                "Message"
              ]
            }
          },
          "id": "reactflow__edge-CustomComponent-Bw0zx{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-Bw0zxœ,œnameœ:œprojectœ,œoutput_typesœ:[œMessageœ]}-CustomComponent-OzGDq{œfieldNameœ:œproject_nameœ,œidœ:œCustomComponent-OzGDqœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
          "className": ""
        },
        {
          "source": "CustomComponent-3xQmr",
          "sourceHandle": "{œdataTypeœ:œRagasœ,œidœ:œCustomComponent-3xQmrœ,œnameœ:œoutputœ,œoutput_typesœ:[œDataœ]}",
          "target": "CustomComponent-O7Zig",
          "targetHandle": "{œfieldNameœ:œdatasetœ,œidœ:œCustomComponent-O7Zigœ,œinputTypesœ:[œDataœ],œtypeœ:œotherœ}",
          "data": {
            "targetHandle": {
              "fieldName": "dataset",
              "id": "CustomComponent-O7Zig",
              "inputTypes": [
                "Data"
              ],
              "type": "other"
            },
            "sourceHandle": {
              "dataType": "Ragas",
              "id": "CustomComponent-3xQmr",
              "name": "output",
              "output_types": [
                "Data"
              ]
            }
          },
          "id": "reactflow__edge-CustomComponent-3xQmr{œdataTypeœ:œRagasœ,œidœ:œCustomComponent-3xQmrœ,œnameœ:œoutputœ,œoutput_typesœ:[œDataœ]}-CustomComponent-O7Zig{œfieldNameœ:œdatasetœ,œidœ:œCustomComponent-O7Zigœ,œinputTypesœ:[œDataœ],œtypeœ:œotherœ}",
          "className": ""
        },
        {
          "source": "CustomComponent-OzGDq",
          "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-OzGDqœ,œnameœ:œoutputœ,œoutput_typesœ:[œDataœ]}",
          "target": "CreateRagComponent-pErRh",
          "targetHandle": "{œfieldNameœ:œdatasetœ,œidœ:œCreateRagComponent-pErRhœ,œinputTypesœ:[œDataœ],œtypeœ:œotherœ}",
          "data": {
            "targetHandle": {
              "fieldName": "dataset",
              "id": "CreateRagComponent-pErRh",
              "inputTypes": [
                "Data"
              ],
              "type": "other"
            },
            "sourceHandle": {
              "dataType": "CustomComponent",
              "id": "CustomComponent-OzGDq",
              "name": "output",
              "output_types": [
                "Data"
              ]
            }
          },
          "id": "reactflow__edge-CustomComponent-OzGDq{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-OzGDqœ,œnameœ:œoutputœ,œoutput_typesœ:[œDataœ]}-CreateRagComponent-pErRh{œfieldNameœ:œdatasetœ,œidœ:œCreateRagComponent-pErRhœ,œinputTypesœ:[œDataœ],œtypeœ:œotherœ}",
          "className": ""
        },
        {
          "source": "CreateRagComponent-pErRh",
          "sourceHandle": "{œdataTypeœ:œCreateBatchRagComponentœ,œidœ:œCreateRagComponent-pErRhœ,œnameœ:œoutputœ,œoutput_typesœ:[œDataœ]}",
          "target": "CustomComponent-3xQmr",
          "targetHandle": "{œfieldNameœ:œdatasetœ,œidœ:œCustomComponent-3xQmrœ,œinputTypesœ:[œDataœ],œtypeœ:œotherœ}",
          "data": {
            "targetHandle": {
              "fieldName": "dataset",
              "id": "CustomComponent-3xQmr",
              "inputTypes": [
                "Data"
              ],
              "type": "other"
            },
            "sourceHandle": {
              "dataType": "CreateBatchRagComponent",
              "id": "CreateRagComponent-pErRh",
              "name": "output",
              "output_types": [
                "Data"
              ]
            }
          },
          "id": "reactflow__edge-CreateRagComponent-pErRh{œdataTypeœ:œCreateBatchRagComponentœ,œidœ:œCreateRagComponent-pErRhœ,œnameœ:œoutputœ,œoutput_typesœ:[œDataœ]}-CustomComponent-3xQmr{œfieldNameœ:œdatasetœ,œidœ:œCustomComponent-3xQmrœ,œinputTypesœ:[œDataœ],œtypeœ:œotherœ}",
          "className": ""
        }
      ],
      "viewport": {
        "x": 333.53919646788364,
        "y": 293.0384458577994,
        "zoom": 0.31144484154291985
      }
    },
    "date_created": "2024-11-04T09:26:09.375Z",
    "date_updated": "2024-11-04T09:26:09.628Z",
    "status": "Public",
    "sort": null,
    "user_updated": "1463c6c5-539e-4bb7-b7db-5f022b011c2c",
    "user_created": {
      "username": "oranciog",
      "first_name": "Octavian",
      "last_name": "Rinciog",
      "id": "1463c6c5-539e-4bb7-b7db-5f022b011c2c"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:08:57.330Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 108,
    "converter_version": "1.0.0"
  }
}