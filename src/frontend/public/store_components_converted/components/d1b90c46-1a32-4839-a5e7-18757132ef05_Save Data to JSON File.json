{
  "id": "d1b90c46-1a32-4839-a5e7-18757132ef05",
  "name": "Save Data to JSON File",
  "description": "Saves a Data object or a list of Data objects into a JSON file. (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "COMPONENT",
  "is_component": true,
  "author": {
    "username": "NamastexLabs",
    "first_name": "Felipe",
    "last_name": "Rosa",
    "id": "37095b75-b1f7-4e35-aea6-bcc9bbf1e2c7",
    "full_name": "Felipe Rosa"
  },
  "store_url": "https://www.langflow.store/store/component/d1b90c46-1a32-4839-a5e7-18757132ef05",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-06-26T18:09:58.408Z",
    "updated": "2024-06-26T18:09:58.456Z",
    "downloaded": "2025-08-19T17:50:05.165Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "1.0.5",
    "private": false,
    "status": "Public"
  },
  "data": {
    "edges": [],
    "nodes": [
      {
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "_type": "Component",
              "data": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "list": true,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "",
                "name": "data",
                "display_name": "Data",
                "advanced": false,
                "input_types": [
                  "Data"
                ],
                "dynamic": false,
                "info": "The Data object or list of Data objects to be saved as JSON.",
                "title_case": false,
                "type": "other"
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "import json\r\nfrom pathlib import Path\r\nfrom typing import Any, Dict, List, Union\r\n\r\nfrom axiestudio.custom import Component\r\nfrom axiestudio.io import DataInput, MessageTextInput, Output\r\nfrom axiestudio.schema import Data\r\nfrom axiestudio.schema.message import Message\r\nfrom loguru import logger \r\n\r\nclass SaveDataToJSON(Component):\r\n    display_name = \"Save Data to JSON\"\r\n    description = \"Saves a Data object or a list of Data objects into a JSON file.\"\r\n    icon = \"Save\"\r\n\r\n    inputs = [\r\n        DataInput(\r\n            name=\"data\",\r\n            display_name=\"Data\",\r\n            info=\"The Data object or list of Data objects to be saved as JSON.\",\r\n            is_list=True\r\n        ),\r\n        MessageTextInput(\r\n            name=\"file_name\",\r\n            display_name=\"File Name\",\r\n            info=\"The name of the file to save the JSON data (without extension).\",\r\n        ),\r\n    ]\r\n\r\n    outputs = [\r\n        Output(display_name=\"File Path\", name=\"file_path\", method=\"save_data_to_json\"),\r\n    ]\r\n\r\n    def save_data_to_json(self) -> Message:\r\n        if not isinstance(self.data, (Data, list)):\r\n            raise ValueError(\"Input must be a Data object or a list of Data objects\")\r\n\r\n        if not self.file_name:\r\n            raise ValueError(\"File name must be provided\")\r\n\r\n        # Ensure the file name has a .json extension\r\n        file_name = self.file_name if self.file_name.endswith('.json') else f\"{self.file_name}.json\"\r\n        \r\n        logger.debug(f\"Data provided: {self.data}\")\r\n\r\n        # Convert Data object(s) to a dictionary or list of dictionaries\r\n        if isinstance(self.data, Data):\r\n            data_to_save: Union[Dict[str, Any], List[Dict[str, Any]]] = self.data.dict()\r\n        else:  # It's a list of Data objects\r\n            data_to_save = [data.dict() for data in self.data]\r\n\r\n        try:\r\n            # Create the file path\r\n            file_path = Path(file_name).resolve()\r\n            logger.debug(f\"Data to save: {data_to_save}\")\r\n            \r\n            # Write the data to the JSON file\r\n            with open(file_path, 'w', encoding='utf-8') as json_file:\r\n                json.dump(data_to_save, json_file, indent=2, ensure_ascii=False)\r\n\r\n            success_message = f\"Data successfully saved to {file_path}\"\r\n            self.status = success_message\r\n            return Message(text=str(file_path))\r\n\r\n        except Exception as e:\r\n            error_message = f\"Error saving data to JSON: {str(e)}\"\r\n            self.status = error_message\r\n            raise RuntimeError(error_message)",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "file_name": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "video-clip-reviewer",
                "name": "file_name",
                "display_name": "File Name",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "The name of the file to save the JSON data (without extension).",
                "title_case": false,
                "type": "str"
              }
            },
            "description": "Saves a Data object or a list of Data objects into a JSON file.",
            "icon": "Save",
            "base_classes": [
              "Message"
            ],
            "display_name": "Save Data to JSON File",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "file_path",
                "display_name": "File Path",
                "method": "save_data_to_json",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "data",
              "file_name"
            ],
            "beta": false,
            "edited": true,
            "official": false
          },
          "id": "CustomComponent-J2AY1",
          "description": "Saves a Data object or a list of Data objects into a JSON file.",
          "display_name": "Save Data to JSON File"
        },
        "id": "CustomComponent-J2AY1",
        "position": {
          "x": 0,
          "y": 0
        },
        "type": "genericNode"
      }
    ],
    "viewport": {
      "x": 1,
      "y": 1,
      "zoom": 1
    }
  },
  "metadata": {
    "CustomComponent": {
      "count": 1
    },
    "total": 1
  },
  "original": {
    "id": "d1b90c46-1a32-4839-a5e7-18757132ef05",
    "name": "Save Data to JSON File",
    "description": "Saves a Data object or a list of Data objects into a JSON file.",
    "is_component": true,
    "liked_by_count": "23",
    "downloads_count": "210",
    "metadata": {
      "CustomComponent": {
        "count": 1
      },
      "total": 1
    },
    "last_tested_version": "1.0.5",
    "private": false,
    "data": {
      "edges": [],
      "nodes": [
        {
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "_type": "Component",
                "data": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "list": true,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "",
                  "name": "data",
                  "display_name": "Data",
                  "advanced": false,
                  "input_types": [
                    "Data"
                  ],
                  "dynamic": false,
                  "info": "The Data object or list of Data objects to be saved as JSON.",
                  "title_case": false,
                  "type": "other"
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "import json\r\nfrom pathlib import Path\r\nfrom typing import Any, Dict, List, Union\r\n\r\nfrom axiestudio.custom import Component\r\nfrom axiestudio.io import DataInput, MessageTextInput, Output\r\nfrom axiestudio.schema import Data\r\nfrom axiestudio.schema.message import Message\r\nfrom loguru import logger \r\n\r\nclass SaveDataToJSON(Component):\r\n    display_name = \"Save Data to JSON\"\r\n    description = \"Saves a Data object or a list of Data objects into a JSON file.\"\r\n    icon = \"Save\"\r\n\r\n    inputs = [\r\n        DataInput(\r\n            name=\"data\",\r\n            display_name=\"Data\",\r\n            info=\"The Data object or list of Data objects to be saved as JSON.\",\r\n            is_list=True\r\n        ),\r\n        MessageTextInput(\r\n            name=\"file_name\",\r\n            display_name=\"File Name\",\r\n            info=\"The name of the file to save the JSON data (without extension).\",\r\n        ),\r\n    ]\r\n\r\n    outputs = [\r\n        Output(display_name=\"File Path\", name=\"file_path\", method=\"save_data_to_json\"),\r\n    ]\r\n\r\n    def save_data_to_json(self) -> Message:\r\n        if not isinstance(self.data, (Data, list)):\r\n            raise ValueError(\"Input must be a Data object or a list of Data objects\")\r\n\r\n        if not self.file_name:\r\n            raise ValueError(\"File name must be provided\")\r\n\r\n        # Ensure the file name has a .json extension\r\n        file_name = self.file_name if self.file_name.endswith('.json') else f\"{self.file_name}.json\"\r\n        \r\n        logger.debug(f\"Data provided: {self.data}\")\r\n\r\n        # Convert Data object(s) to a dictionary or list of dictionaries\r\n        if isinstance(self.data, Data):\r\n            data_to_save: Union[Dict[str, Any], List[Dict[str, Any]]] = self.data.dict()\r\n        else:  # It's a list of Data objects\r\n            data_to_save = [data.dict() for data in self.data]\r\n\r\n        try:\r\n            # Create the file path\r\n            file_path = Path(file_name).resolve()\r\n            logger.debug(f\"Data to save: {data_to_save}\")\r\n            \r\n            # Write the data to the JSON file\r\n            with open(file_path, 'w', encoding='utf-8') as json_file:\r\n                json.dump(data_to_save, json_file, indent=2, ensure_ascii=False)\r\n\r\n            success_message = f\"Data successfully saved to {file_path}\"\r\n            self.status = success_message\r\n            return Message(text=str(file_path))\r\n\r\n        except Exception as e:\r\n            error_message = f\"Error saving data to JSON: {str(e)}\"\r\n            self.status = error_message\r\n            raise RuntimeError(error_message)",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "file_name": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "video-clip-reviewer",
                  "name": "file_name",
                  "display_name": "File Name",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "The name of the file to save the JSON data (without extension).",
                  "title_case": false,
                  "type": "str"
                }
              },
              "description": "Saves a Data object or a list of Data objects into a JSON file.",
              "icon": "Save",
              "base_classes": [
                "Message"
              ],
              "display_name": "Save Data to JSON File",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "file_path",
                  "display_name": "File Path",
                  "method": "save_data_to_json",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "data",
                "file_name"
              ],
              "beta": false,
              "edited": true,
              "official": false
            },
            "id": "CustomComponent-J2AY1",
            "description": "Saves a Data object or a list of Data objects into a JSON file.",
            "display_name": "Save Data to JSON File"
          },
          "id": "CustomComponent-J2AY1",
          "position": {
            "x": 0,
            "y": 0
          },
          "type": "genericNode"
        }
      ],
      "viewport": {
        "x": 1,
        "y": 1,
        "zoom": 1
      }
    },
    "date_created": "2024-06-26T18:09:58.408Z",
    "date_updated": "2024-06-26T18:09:58.456Z",
    "status": "Public",
    "sort": null,
    "user_updated": "37095b75-b1f7-4e35-aea6-bcc9bbf1e2c7",
    "user_created": {
      "username": "NamastexLabs",
      "first_name": "Felipe",
      "last_name": "Rosa",
      "id": "37095b75-b1f7-4e35-aea6-bcc9bbf1e2c7"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:11.923Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 8,
    "converter_version": "1.0.0"
  }
}