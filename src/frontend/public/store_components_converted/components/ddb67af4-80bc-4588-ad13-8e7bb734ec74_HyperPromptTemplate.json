{
  "id": "ddb67af4-80bc-4588-ad13-8e7bb734ec74",
  "name": "HyperPromptTemplate",
  "description": " highly. (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "COMPONENT",
  "is_component": true,
  "author": {
    "username": "yamon",
    "first_name": "YamonCompany",
    "last_name": "kim",
    "id": "23c5d1e9-66fe-4789-85da-d07be25ec3cc",
    "full_name": "YamonCompany kim"
  },
  "store_url": "https://www.langflow.store/store/component/ddb67af4-80bc-4588-ad13-8e7bb734ec74",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-02-20T05:07:32.722Z",
    "updated": "2024-02-20T05:07:32.805Z",
    "downloaded": "2025-08-19T17:50:05.235Z"
  },
  "tags": [
    {
      "tags_id": {
        "name": "Prompt",
        "id": "57f5c681-a1f5-4053-be33-e9525e7eb00a"
      }
    }
  ],
  "technical": {
    "last_tested_version": "0.6.6",
    "private": true,
    "status": "Public"
  },
  "data": {
    "edges": [],
    "nodes": [
      {
        "data": {
          "type": "Data",
          "node": {
            "template": {
              "Extra_Prompts": {
                "type": "PromptTemplate",
                "required": false,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "Extra_Prompts",
                "display_name": "Extra Prompts",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "partial_variables_pytool": {
                "type": "Tool",
                "required": false,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "partial_variables_pytool",
                "display_name": "Tools",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "ai_prefix": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "AI",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "ai_prefix",
                "display_name": "AI name",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from typing import List, Optional\r\nfrom axiestudio import CustomComponent\r\nfrom langchain.prompts import PromptTemplate\r\nfrom langchain.prompts.pipeline import PipelinePromptTemplate\r\nfrom pprint import pprint\r\nfrom langchain.tools import Tool\r\n\r\n\r\nclass HyperPromptTemplate(CustomComponent):\r\n    display_name: str = \"HyperPromptTemplate\"\r\n    description: str = \" highly.\"\r\n\r\n    def build_config(self):\r\n        return {\r\n            \"promptrompt_description\": {\"display_name\": \"Prompt description\"},\r\n            \"prompt_name\": {\"value\": \"HyperPrompt\", \"display_name\": \"Prompt name\"},\r\n            \"ai_prefix\": {\"value\": \"AI\", \"display_name\": \"AI name\"},\r\n            \"input_variables\": {\r\n                \"display_name\": \"input_variables\",\r\n                \"advanced\": True,\r\n                \"info\": \"If the Tool's Name matches a given value, such as 'Time,' set its output to 'Partial.\",\r\n            },\r\n            \"template\": {\"display_name\": \"template\", \"advanced\": True},\r\n            \"kargs\": {\"value\": \"None\", \"advanced\": True},\r\n            \"partial_variables_pytool\": {\"display_name\": \"Tools\", \"islist\": True},\r\n            \"prompt\": {\r\n                \"display_name\": \"ptpt\",\r\n                \"field_type\": \"Prompt\",\r\n                \"value\": \"넌 AI 비서이고 AI상태에 따라 감정에 맞춰서 답변을 해야해\\n현재시간:{date}\\nAI상태:{imotion}\\n대화내역:\\n{chat_history}\\nHuman : {input}\\nAI :\",\r\n            },\r\n            \"Extra_Prompts\": {\"display_name\": \"Extra Prompts\", \"is_list\": True},\r\n        }\r\n\r\n    def build(\r\n        self,\r\n        prompt: str,\r\n        prompt_name: str,\r\n        ai_prefix: str,\r\n        input_variables: List[str],\r\n        Extra_Prompts: Optional[List[PromptTemplate]] = None,\r\n        # 수정: partial을 리스트로 받는다.\r\n        partial_variables_pytool: Optional[List[Tool]] = None,\r\n        prompt_description: Optional[str] = None,\r\n        **kargs,\r\n    ) -> PromptTemplate:\r\n        #  for key, value in kargs.items():\r\n        #     print(f\"{key}: {value}\")\r\n\r\n        # input_variables = extract_input_variables_from_prompt(prompt)\r\n\r\n        self.repr_value = {\r\n            \"Prompt\": prompt,\r\n            \"Prompt Name\": prompt_name,\r\n            \"AI Prefix\": ai_prefix,\r\n            \"Input Variables\": input_variables,\r\n            \"Extra Prompts\": Extra_Prompts,\r\n            \"Partial\": partial_variables_pytool,\r\n            \"Prompt Description\": prompt_description,\r\n            \"Additional Arguments\": kargs,\r\n        }\r\n\r\n        print(\"=\" * 30)\r\n        print(\"Build Parameters\")\r\n        print(\"=\" * 30)\r\n        pprint(self.repr_value)\r\n        print(\"=\" * 30)\r\n\r\n        hyper_prompt = PromptTemplate(\r\n            input_variables=input_variables,\r\n            template=prompt,\r\n        )\r\n\r\n        if partial_variables_pytool:  # 수정: partial 리스트가 존재한다면\r\n            for tool in partial_variables_pytool:  # 수정: partial 리스트를 순회\r\n                if tool and tool.name in kargs:  # 수정: tool의 이름이 input_variables에 있다면\r\n                    print(\"펑션 인풋 벨류 삭제전 \", hyper_prompt.input_variables)\r\n                    hyper_prompt.input_variables.remove(\r\n                        tool.name\r\n                    )  # 해당 이름을 input_variables에서 제거\r\n                    print(\"펑션 인풋 벨류 삭제후  \", hyper_prompt.input_variables)\r\n                    # partial_variables에 추가\r\n                    # type: ignore\r\n                    hyper_prompt.partial_variables[tool.name] = tool.func()\r\n                    print(\"펑션 파셜 벨류  \", hyper_prompt.partial_variables)\r\n\r\n        input_prompts = []\r\n\r\n        output_prompt: PromptTemplate = hyper_prompt\r\n        partial_variables = {}\r\n        # type: ignore\r\n        if Extra_Prompts:\r\n            for extra_prompt in Extra_Prompts:\r\n                if extra_prompt.prompt_info[\"name\"] in input_variables:\r\n                    tmpp = extra_prompt  # type: ignore\r\n                    input_prompts.append(\r\n                        (extra_prompt.prompt_info[\"name\"], tmpp))\r\n\r\n                    # input_variables에서 해당 이름 제거\r\n                    #   hyper_prompt.input_variables.remove(extra_prompt.prompt_info['name'])\r\n\r\n                    # partial_variables에 해당 이름 추가\r\n                    partial_variables[extra_prompt.prompt_info[\"name\"]] = tmpp\r\n\r\n                    print(\"매칭용\", input_prompts)\r\n\r\n            print(\"매칭용 파셜벨류류\", partial_variables)\r\n\r\n            pipeline_prompt = PipelinePromptTemplate(\r\n                final_prompt=output_prompt,\r\n                pipeline_prompts=input_prompts,\r\n            )\r\n\r\n            pipeline_prompt.input_variables = hyper_prompt.input_variables\r\n            #  pipeline_prompt.partial_variables=partial_variables\r\n            pipeline_prompt.partial_variables = partial_variables\r\n\r\n            pipeline_prompt.partial_variables.update(\r\n                hyper_prompt.partial_variables)\r\n\r\n            print(\"파이프 인펏벨륫륫\", pipeline_prompt.input_variables)\r\n            print(\"파이프 파셜셜륫륫\", pipeline_prompt.partial_variables)\r\n\r\n            pipeline_prompt.__dict__[\"prompt_info\"] = {\r\n                \"name\": prompt_name,\r\n                \"description\": prompt_description,\r\n            }\r\n\r\n            return pipeline_prompt\r\n\r\n        else:\r\n            hyper_prompt.__dict__[\"prompt_info\"] = {\r\n                \"name\": prompt_name,\r\n                \"description\": prompt_description,\r\n            }\r\n            return hyper_prompt\r\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": false,
                "dynamic": true,
                "info": ""
              },
              "input_variables": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": true,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "input_variables",
                "display_name": "input_variables",
                "advanced": true,
                "dynamic": false,
                "info": "If the Tool's Name matches a given value, such as 'Time,' set its output to 'Partial."
              },
              "prompt": {
                "type": "prompt",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "넌 AI 비서이고 AI상태에 따라 감정에 맞춰서 답변을 해야해\n현재시간:{date}\nAI상태:{imotion}\n대화내역:\n{chat_history}\nHuman : {input}\nAI :",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "prompt",
                "display_name": "ptpt",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "prompt_description": {
                "type": "str",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "prompt_description",
                "display_name": "prompt_description",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "prompt_name": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "HyperPrompt",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "prompt_name",
                "display_name": "Prompt name",
                "advanced": false,
                "dynamic": false,
                "info": ""
              },
              "_type": "CustomComponent"
            },
            "description": " highly.",
            "base_classes": [],
            "display_name": "HyperPromptTemplate",
            "documentation": "",
            "custom_fields": {
              "Extra_Prompts": null,
              "ai_prefix": null,
              "input_variables": null,
              "partial_variables_pytool": null,
              "prompt": null,
              "prompt_description": null,
              "prompt_name": null
            },
            "output_types": [],
            "field_formatters": {},
            "beta": true,
            "official": false
          },
          "id": "Data-KVdz0",
          "description": " highly.",
          "display_name": "HyperPromptTemplate"
        },
        "id": "Data-KVdz0",
        "position": {
          "x": 0,
          "y": 0
        },
        "type": "genericNode"
      }
    ],
    "viewport": {
      "x": 1,
      "y": 1,
      "zoom": 1
    }
  },
  "metadata": {
    "Data": {
      "count": 1
    },
    "total": 1
  },
  "original": {
    "id": "ddb67af4-80bc-4588-ad13-8e7bb734ec74",
    "name": "HyperPromptTemplate",
    "description": " highly.",
    "is_component": true,
    "liked_by_count": "0",
    "downloads_count": "2",
    "metadata": {
      "Data": {
        "count": 1
      },
      "total": 1
    },
    "last_tested_version": "0.6.6",
    "private": true,
    "data": {
      "edges": [],
      "nodes": [
        {
          "data": {
            "type": "Data",
            "node": {
              "template": {
                "Extra_Prompts": {
                  "type": "PromptTemplate",
                  "required": false,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "Extra_Prompts",
                  "display_name": "Extra Prompts",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "partial_variables_pytool": {
                  "type": "Tool",
                  "required": false,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "partial_variables_pytool",
                  "display_name": "Tools",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "ai_prefix": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "AI",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "ai_prefix",
                  "display_name": "AI name",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from typing import List, Optional\r\nfrom axiestudio import CustomComponent\r\nfrom langchain.prompts import PromptTemplate\r\nfrom langchain.prompts.pipeline import PipelinePromptTemplate\r\nfrom pprint import pprint\r\nfrom langchain.tools import Tool\r\n\r\n\r\nclass HyperPromptTemplate(CustomComponent):\r\n    display_name: str = \"HyperPromptTemplate\"\r\n    description: str = \" highly.\"\r\n\r\n    def build_config(self):\r\n        return {\r\n            \"promptrompt_description\": {\"display_name\": \"Prompt description\"},\r\n            \"prompt_name\": {\"value\": \"HyperPrompt\", \"display_name\": \"Prompt name\"},\r\n            \"ai_prefix\": {\"value\": \"AI\", \"display_name\": \"AI name\"},\r\n            \"input_variables\": {\r\n                \"display_name\": \"input_variables\",\r\n                \"advanced\": True,\r\n                \"info\": \"If the Tool's Name matches a given value, such as 'Time,' set its output to 'Partial.\",\r\n            },\r\n            \"template\": {\"display_name\": \"template\", \"advanced\": True},\r\n            \"kargs\": {\"value\": \"None\", \"advanced\": True},\r\n            \"partial_variables_pytool\": {\"display_name\": \"Tools\", \"islist\": True},\r\n            \"prompt\": {\r\n                \"display_name\": \"ptpt\",\r\n                \"field_type\": \"Prompt\",\r\n                \"value\": \"넌 AI 비서이고 AI상태에 따라 감정에 맞춰서 답변을 해야해\\n현재시간:{date}\\nAI상태:{imotion}\\n대화내역:\\n{chat_history}\\nHuman : {input}\\nAI :\",\r\n            },\r\n            \"Extra_Prompts\": {\"display_name\": \"Extra Prompts\", \"is_list\": True},\r\n        }\r\n\r\n    def build(\r\n        self,\r\n        prompt: str,\r\n        prompt_name: str,\r\n        ai_prefix: str,\r\n        input_variables: List[str],\r\n        Extra_Prompts: Optional[List[PromptTemplate]] = None,\r\n        # 수정: partial을 리스트로 받는다.\r\n        partial_variables_pytool: Optional[List[Tool]] = None,\r\n        prompt_description: Optional[str] = None,\r\n        **kargs,\r\n    ) -> PromptTemplate:\r\n        #  for key, value in kargs.items():\r\n        #     print(f\"{key}: {value}\")\r\n\r\n        # input_variables = extract_input_variables_from_prompt(prompt)\r\n\r\n        self.repr_value = {\r\n            \"Prompt\": prompt,\r\n            \"Prompt Name\": prompt_name,\r\n            \"AI Prefix\": ai_prefix,\r\n            \"Input Variables\": input_variables,\r\n            \"Extra Prompts\": Extra_Prompts,\r\n            \"Partial\": partial_variables_pytool,\r\n            \"Prompt Description\": prompt_description,\r\n            \"Additional Arguments\": kargs,\r\n        }\r\n\r\n        print(\"=\" * 30)\r\n        print(\"Build Parameters\")\r\n        print(\"=\" * 30)\r\n        pprint(self.repr_value)\r\n        print(\"=\" * 30)\r\n\r\n        hyper_prompt = PromptTemplate(\r\n            input_variables=input_variables,\r\n            template=prompt,\r\n        )\r\n\r\n        if partial_variables_pytool:  # 수정: partial 리스트가 존재한다면\r\n            for tool in partial_variables_pytool:  # 수정: partial 리스트를 순회\r\n                if tool and tool.name in kargs:  # 수정: tool의 이름이 input_variables에 있다면\r\n                    print(\"펑션 인풋 벨류 삭제전 \", hyper_prompt.input_variables)\r\n                    hyper_prompt.input_variables.remove(\r\n                        tool.name\r\n                    )  # 해당 이름을 input_variables에서 제거\r\n                    print(\"펑션 인풋 벨류 삭제후  \", hyper_prompt.input_variables)\r\n                    # partial_variables에 추가\r\n                    # type: ignore\r\n                    hyper_prompt.partial_variables[tool.name] = tool.func()\r\n                    print(\"펑션 파셜 벨류  \", hyper_prompt.partial_variables)\r\n\r\n        input_prompts = []\r\n\r\n        output_prompt: PromptTemplate = hyper_prompt\r\n        partial_variables = {}\r\n        # type: ignore\r\n        if Extra_Prompts:\r\n            for extra_prompt in Extra_Prompts:\r\n                if extra_prompt.prompt_info[\"name\"] in input_variables:\r\n                    tmpp = extra_prompt  # type: ignore\r\n                    input_prompts.append(\r\n                        (extra_prompt.prompt_info[\"name\"], tmpp))\r\n\r\n                    # input_variables에서 해당 이름 제거\r\n                    #   hyper_prompt.input_variables.remove(extra_prompt.prompt_info['name'])\r\n\r\n                    # partial_variables에 해당 이름 추가\r\n                    partial_variables[extra_prompt.prompt_info[\"name\"]] = tmpp\r\n\r\n                    print(\"매칭용\", input_prompts)\r\n\r\n            print(\"매칭용 파셜벨류류\", partial_variables)\r\n\r\n            pipeline_prompt = PipelinePromptTemplate(\r\n                final_prompt=output_prompt,\r\n                pipeline_prompts=input_prompts,\r\n            )\r\n\r\n            pipeline_prompt.input_variables = hyper_prompt.input_variables\r\n            #  pipeline_prompt.partial_variables=partial_variables\r\n            pipeline_prompt.partial_variables = partial_variables\r\n\r\n            pipeline_prompt.partial_variables.update(\r\n                hyper_prompt.partial_variables)\r\n\r\n            print(\"파이프 인펏벨륫륫\", pipeline_prompt.input_variables)\r\n            print(\"파이프 파셜셜륫륫\", pipeline_prompt.partial_variables)\r\n\r\n            pipeline_prompt.__dict__[\"prompt_info\"] = {\r\n                \"name\": prompt_name,\r\n                \"description\": prompt_description,\r\n            }\r\n\r\n            return pipeline_prompt\r\n\r\n        else:\r\n            hyper_prompt.__dict__[\"prompt_info\"] = {\r\n                \"name\": prompt_name,\r\n                \"description\": prompt_description,\r\n            }\r\n            return hyper_prompt\r\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": false,
                  "dynamic": true,
                  "info": ""
                },
                "input_variables": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": true,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "input_variables",
                  "display_name": "input_variables",
                  "advanced": true,
                  "dynamic": false,
                  "info": "If the Tool's Name matches a given value, such as 'Time,' set its output to 'Partial."
                },
                "prompt": {
                  "type": "prompt",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "넌 AI 비서이고 AI상태에 따라 감정에 맞춰서 답변을 해야해\n현재시간:{date}\nAI상태:{imotion}\n대화내역:\n{chat_history}\nHuman : {input}\nAI :",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "prompt",
                  "display_name": "ptpt",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "prompt_description": {
                  "type": "str",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "prompt_description",
                  "display_name": "prompt_description",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "prompt_name": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "HyperPrompt",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "prompt_name",
                  "display_name": "Prompt name",
                  "advanced": false,
                  "dynamic": false,
                  "info": ""
                },
                "_type": "CustomComponent"
              },
              "description": " highly.",
              "base_classes": [],
              "display_name": "HyperPromptTemplate",
              "documentation": "",
              "custom_fields": {
                "Extra_Prompts": null,
                "ai_prefix": null,
                "input_variables": null,
                "partial_variables_pytool": null,
                "prompt": null,
                "prompt_description": null,
                "prompt_name": null
              },
              "output_types": [],
              "field_formatters": {},
              "beta": true,
              "official": false
            },
            "id": "Data-KVdz0",
            "description": " highly.",
            "display_name": "HyperPromptTemplate"
          },
          "id": "Data-KVdz0",
          "position": {
            "x": 0,
            "y": 0
          },
          "type": "genericNode"
        }
      ],
      "viewport": {
        "x": 1,
        "y": 1,
        "zoom": 1
      }
    },
    "date_created": "2024-02-20T05:07:32.722Z",
    "date_updated": "2024-02-20T05:07:32.805Z",
    "status": "Public",
    "sort": null,
    "user_updated": "23c5d1e9-66fe-4789-85da-d07be25ec3cc",
    "user_created": {
      "username": "yamon",
      "first_name": "YamonCompany",
      "last_name": "kim",
      "id": "23c5d1e9-66fe-4789-85da-d07be25ec3cc"
    },
    "tags": [
      {
        "tags_id": {
          "name": "Prompt",
          "id": "57f5c681-a1f5-4053-be33-e9525e7eb00a"
        }
      }
    ]
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:12.133Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 2,
    "converter_version": "1.0.0"
  }
}