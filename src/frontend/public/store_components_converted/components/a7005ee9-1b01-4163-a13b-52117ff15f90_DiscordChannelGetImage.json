{
  "id": "a7005ee9-1b01-4163-a13b-52117ff15f90",
  "name": "DiscordChannelGetImage",
  "description": "get the image from discord's channel (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "COMPONENT",
  "is_component": true,
  "author": {
    "username": "ygorbalves",
    "first_name": "Ygor",
    "last_name": "Alves",
    "id": "3785b674-1a4b-42da-9b4d-d028c7191975",
    "full_name": "Ygor Alves"
  },
  "store_url": "https://www.langflow.store/store/component/a7005ee9-1b01-4163-a13b-52117ff15f90",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-05-23T00:01:23.070Z",
    "updated": "2024-05-23T00:01:23.092Z",
    "downloaded": "2025-08-19T17:50:05.445Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "1.0.0a30",
    "private": false,
    "status": "Public"
  },
  "data": {
    "edges": [],
    "nodes": [
      {
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "channel_id": {
                "type": "int",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "channel_id",
                "display_name": "ChannelId",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "value": "1240496339968856094"
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from typing import Optional, Any\nfrom axiestudio import CustomComponent\nfrom axiestudio.schema import Record\nfrom tempfile import NamedTemporaryFile\nimport subprocess\nimport sys\nimport base64\nfrom json import loads\n\n\ndef install(package):\n    subprocess.check_call([sys.executable, \"-m\", \"pip\", \"install\", package])\n    return 1\n\ninstall(\"requests\")\n\nclass DiscordChannelGetImage(CustomComponent):\n    display_name = \"DiscordChannelGetImage\"\n    description = \"get the image from discord's channel\"\n    field_order = [\"token\", \"channel_id\", \"limit\"]\n    icon = \"Discord\"\n\n    def build_config(self) -> dict:\n        return {\n            \"token\": {\n                \"display_name\": \"Token\",\n                \"advanced\": False,\n                \"password\": True,\n                \"required\": True,\n            }, \"channel_id\": {\n                \"display_name\": \"ChannelId\",\n                \"advanced\": False,\n                \"required\": True,\n            }, \"limit\": {\n                \"display_name\": \"Limit\",\n                \"value\": 20,\n                \"advanced\": False,\n                \"info\": \"The value 0 means limitless\",\n                \"required\": True,\n            }\n        }\n\n\n    def build(self, token: str, channel_id: int,  limit: int) -> Record:\n        import requests\n        body = {\"token\": token, \"limit\": limit, \"content_type\": [\"png\", \"jpg\",\"jpeg\"]}\n        resp = requests.post(f\"http://discord:7880/api/v1/channels/{channel_id}/get_messages/last\", json=body)\n        if resp.status_code == 200:\n            file = loads(resp.content)\n            print(file.keys())\n            tmp_file = NamedTemporaryFile(delete=False, suffix=\".png\")\n            resolved_path = self.resolve_path(tmp_file.name)\n            print(tmp_file.name, type(tmp_file.name), type(file))\n            with open(tmp_file.name, 'wb') as f:  # Open the file in binary mode\n                f.write(base64.b64decode(file[\"content\"]))\n            return Record(data={\"file_path\": resolved_path, \"text\": file[\"content\"]})\n        else:\n            raise Exception(\"Timeout exception\")\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "limit": {
                "type": "int",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "2",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "limit",
                "display_name": "Limit",
                "advanced": false,
                "dynamic": false,
                "info": "The value 0 means limitless",
                "load_from_db": false,
                "title_case": false
              },
              "token": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": true,
                "name": "token",
                "display_name": "Token",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ],
                "value": ""
              },
              "_type": "CustomComponent"
            },
            "description": "get the image from discord's channel",
            "icon": "Discord",
            "base_classes": [
              "Record"
            ],
            "display_name": "DiscordChannelGetImage",
            "documentation": "",
            "custom_fields": {
              "token": null,
              "channel_id": null,
              "limit": null
            },
            "output_types": [
              "Record"
            ],
            "field_formatters": {},
            "frozen": false,
            "field_order": [
              "token",
              "channel_id",
              "limit"
            ],
            "beta": false,
            "official": false
          },
          "id": "CustomComponent-eR9eG",
          "description": "get the image from discord's channel",
          "display_name": "DiscordGetImageMessage"
        },
        "id": "CustomComponent-eR9eG",
        "position": {
          "x": 0,
          "y": 0
        },
        "type": "genericNode"
      }
    ],
    "viewport": {
      "x": 1,
      "y": 1,
      "zoom": 1
    }
  },
  "metadata": {
    "CustomComponent": {
      "count": 1
    },
    "total": 1
  },
  "original": {
    "id": "a7005ee9-1b01-4163-a13b-52117ff15f90",
    "name": "DiscordChannelGetImage",
    "description": "get the image from discord's channel",
    "is_component": true,
    "liked_by_count": "2",
    "downloads_count": "27",
    "metadata": {
      "CustomComponent": {
        "count": 1
      },
      "total": 1
    },
    "last_tested_version": "1.0.0a30",
    "private": false,
    "data": {
      "edges": [],
      "nodes": [
        {
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "channel_id": {
                  "type": "int",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "channel_id",
                  "display_name": "ChannelId",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "value": "1240496339968856094"
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from typing import Optional, Any\nfrom axiestudio import CustomComponent\nfrom axiestudio.schema import Record\nfrom tempfile import NamedTemporaryFile\nimport subprocess\nimport sys\nimport base64\nfrom json import loads\n\n\ndef install(package):\n    subprocess.check_call([sys.executable, \"-m\", \"pip\", \"install\", package])\n    return 1\n\ninstall(\"requests\")\n\nclass DiscordChannelGetImage(CustomComponent):\n    display_name = \"DiscordChannelGetImage\"\n    description = \"get the image from discord's channel\"\n    field_order = [\"token\", \"channel_id\", \"limit\"]\n    icon = \"Discord\"\n\n    def build_config(self) -> dict:\n        return {\n            \"token\": {\n                \"display_name\": \"Token\",\n                \"advanced\": False,\n                \"password\": True,\n                \"required\": True,\n            }, \"channel_id\": {\n                \"display_name\": \"ChannelId\",\n                \"advanced\": False,\n                \"required\": True,\n            }, \"limit\": {\n                \"display_name\": \"Limit\",\n                \"value\": 20,\n                \"advanced\": False,\n                \"info\": \"The value 0 means limitless\",\n                \"required\": True,\n            }\n        }\n\n\n    def build(self, token: str, channel_id: int,  limit: int) -> Record:\n        import requests\n        body = {\"token\": token, \"limit\": limit, \"content_type\": [\"png\", \"jpg\",\"jpeg\"]}\n        resp = requests.post(f\"http://discord:7880/api/v1/channels/{channel_id}/get_messages/last\", json=body)\n        if resp.status_code == 200:\n            file = loads(resp.content)\n            print(file.keys())\n            tmp_file = NamedTemporaryFile(delete=False, suffix=\".png\")\n            resolved_path = self.resolve_path(tmp_file.name)\n            print(tmp_file.name, type(tmp_file.name), type(file))\n            with open(tmp_file.name, 'wb') as f:  # Open the file in binary mode\n                f.write(base64.b64decode(file[\"content\"]))\n            return Record(data={\"file_path\": resolved_path, \"text\": file[\"content\"]})\n        else:\n            raise Exception(\"Timeout exception\")\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "limit": {
                  "type": "int",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "2",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "limit",
                  "display_name": "Limit",
                  "advanced": false,
                  "dynamic": false,
                  "info": "The value 0 means limitless",
                  "load_from_db": false,
                  "title_case": false
                },
                "token": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": true,
                  "name": "token",
                  "display_name": "Token",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ],
                  "value": ""
                },
                "_type": "CustomComponent"
              },
              "description": "get the image from discord's channel",
              "icon": "Discord",
              "base_classes": [
                "Record"
              ],
              "display_name": "DiscordChannelGetImage",
              "documentation": "",
              "custom_fields": {
                "token": null,
                "channel_id": null,
                "limit": null
              },
              "output_types": [
                "Record"
              ],
              "field_formatters": {},
              "frozen": false,
              "field_order": [
                "token",
                "channel_id",
                "limit"
              ],
              "beta": false,
              "official": false
            },
            "id": "CustomComponent-eR9eG",
            "description": "get the image from discord's channel",
            "display_name": "DiscordGetImageMessage"
          },
          "id": "CustomComponent-eR9eG",
          "position": {
            "x": 0,
            "y": 0
          },
          "type": "genericNode"
        }
      ],
      "viewport": {
        "x": 1,
        "y": 1,
        "zoom": 1
      }
    },
    "date_created": "2024-05-23T00:01:23.070Z",
    "date_updated": "2024-05-23T00:01:23.092Z",
    "status": "Public",
    "sort": null,
    "user_updated": "3785b674-1a4b-42da-9b4d-d028c7191975",
    "user_created": {
      "username": "ygorbalves",
      "first_name": "Ygor",
      "last_name": "Alves",
      "id": "3785b674-1a4b-42da-9b4d-d028c7191975"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:11.275Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 4,
    "converter_version": "1.0.0"
  }
}