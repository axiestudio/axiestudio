{
  "id": "cb4df085-92fa-4d2c-be9f-018759407a6a",
  "name": "Google Images extract with Beautiful Soup",
  "description": "Retrieve images from Google Images based in a query using Beautiful Soup (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "COMPONENT",
  "is_component": true,
  "author": {
    "username": "joaoguilhermeS",
    "first_name": "João",
    "last_name": "Oliveira",
    "id": "94b2e207-1a44-4905-856c-4f5a69c168ce",
    "full_name": "João Oliveira"
  },
  "store_url": "https://www.langflow.store/store/component/cb4df085-92fa-4d2c-be9f-018759407a6a",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-04-14T04:29:05.811Z",
    "updated": "2024-04-14T04:29:05.891Z",
    "downloaded": "2025-08-19T17:50:05.211Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "1.0.0a18",
    "private": false,
    "status": "Public"
  },
  "data": {
    "edges": [],
    "nodes": [
      {
        "data": {
          "type": "CustomComponent",
          "node": {
            "template": {
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio import CustomComponent\nfrom axiestudio.field_typing import Data\nfrom axiestudio import CustomComponent\nimport subprocess\nimport sys\nimport base64\nfrom tempfile import NamedTemporaryFile\n\ndef install(package):\n        subprocess.check_call([sys.executable, \"-m\", \"pip\", \"install\", package])\n        return 1\n    \ninstall(\"Pillow\")\ninstall(\"requests\")\ninstall(\"bs4\")\n\nimport requests\nimport base64\nfrom PIL import Image\nfrom io import BytesIO\nimport os\nimport bs4\n\nclass FileUploadComponent(CustomComponent):\n    display_name = \"Google Images extract with Beautiful Soup\"\n    description = \"Retrieve images from Google Images based in a query using Beautiful Soup\"\n    \n    def build_config(self):\n        return {\n            \"query\": {\n                \"display_name\": \"Query\",\n                \"advanced\": False,\n                \"required\": True,\n            },\n            \"max_images\": {\n                \"display_name\": \"max_images\",\n                \"advanced\": False,\n                \"required\": False,\n            },\n        }\n    \n    def build(self, query: str, max_images: int = 2) -> str:\n        \"\"\"\n        Converts an image given by a URL or a local path to a base64 string.\n        \n        Args:\n        image_path_or_url (str): The path or URL of the image.\n        \n        Returns:\n        str: Base64 encoded string of the image.\n        \"\"\"\n        import requests\n        import base64\n        from PIL import Image\n        from io import BytesIO\n        import os\n        from bs4 import BeautifulSoup\n        import urllib.parse as urlparse\n        \n        query = urlparse.quote_plus(query)\n        url = f\"https://www.google.com/search?hl=en&tbm=isch&q={query}\"\n        \n        response = requests.get(url, headers={\"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3\"})\n        \n        soup = BeautifulSoup(response.text, 'html.parser')\n        image_elements = soup.find_all('img')\n        \n        image_urls = []\n        for img in image_elements[1:max_images+1]:\n            image_urls.append(img['src'])\n        \n        return image_urls",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "max_images": {
                "type": "int",
                "required": false,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "value": "2",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "max_images",
                "display_name": "max_images",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "query": {
                "type": "str",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": false,
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "query",
                "display_name": "Query",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "load_from_db": false,
                "title_case": false,
                "input_types": [
                  "Text"
                ]
              },
              "_type": "CustomComponent"
            },
            "description": "Retrieve images from Google Images based in a query using Beautiful Soup",
            "base_classes": [
              "object",
              "str",
              "Text"
            ],
            "display_name": "Google Images extract with Beautiful Soup",
            "documentation": "",
            "custom_fields": {
              "query": null,
              "max_images": null
            },
            "output_types": [
              "Text"
            ],
            "field_formatters": {},
            "frozen": false,
            "field_order": [],
            "beta": false,
            "official": false
          },
          "id": "CustomComponent-ytdpz",
          "description": "Retrieve images from Google Images based in a query using Beautiful Soup",
          "display_name": "Custom Component"
        },
        "id": "CustomComponent-ytdpz",
        "position": {
          "x": 0,
          "y": 0
        },
        "type": "genericNode"
      }
    ],
    "viewport": {
      "x": 1,
      "y": 1,
      "zoom": 1
    }
  },
  "metadata": {
    "CustomComponent": {
      "count": 1
    },
    "total": 1
  },
  "original": {
    "id": "cb4df085-92fa-4d2c-be9f-018759407a6a",
    "name": "Google Images extract with Beautiful Soup",
    "description": "Retrieve images from Google Images based in a query using Beautiful Soup",
    "is_component": true,
    "liked_by_count": "27",
    "downloads_count": "253",
    "metadata": {
      "CustomComponent": {
        "count": 1
      },
      "total": 1
    },
    "last_tested_version": "1.0.0a18",
    "private": false,
    "data": {
      "edges": [],
      "nodes": [
        {
          "data": {
            "type": "CustomComponent",
            "node": {
              "template": {
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio import CustomComponent\nfrom axiestudio.field_typing import Data\nfrom axiestudio import CustomComponent\nimport subprocess\nimport sys\nimport base64\nfrom tempfile import NamedTemporaryFile\n\ndef install(package):\n        subprocess.check_call([sys.executable, \"-m\", \"pip\", \"install\", package])\n        return 1\n    \ninstall(\"Pillow\")\ninstall(\"requests\")\ninstall(\"bs4\")\n\nimport requests\nimport base64\nfrom PIL import Image\nfrom io import BytesIO\nimport os\nimport bs4\n\nclass FileUploadComponent(CustomComponent):\n    display_name = \"Google Images extract with Beautiful Soup\"\n    description = \"Retrieve images from Google Images based in a query using Beautiful Soup\"\n    \n    def build_config(self):\n        return {\n            \"query\": {\n                \"display_name\": \"Query\",\n                \"advanced\": False,\n                \"required\": True,\n            },\n            \"max_images\": {\n                \"display_name\": \"max_images\",\n                \"advanced\": False,\n                \"required\": False,\n            },\n        }\n    \n    def build(self, query: str, max_images: int = 2) -> str:\n        \"\"\"\n        Converts an image given by a URL or a local path to a base64 string.\n        \n        Args:\n        image_path_or_url (str): The path or URL of the image.\n        \n        Returns:\n        str: Base64 encoded string of the image.\n        \"\"\"\n        import requests\n        import base64\n        from PIL import Image\n        from io import BytesIO\n        import os\n        from bs4 import BeautifulSoup\n        import urllib.parse as urlparse\n        \n        query = urlparse.quote_plus(query)\n        url = f\"https://www.google.com/search?hl=en&tbm=isch&q={query}\"\n        \n        response = requests.get(url, headers={\"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3\"})\n        \n        soup = BeautifulSoup(response.text, 'html.parser')\n        image_elements = soup.find_all('img')\n        \n        image_urls = []\n        for img in image_elements[1:max_images+1]:\n            image_urls.append(img['src'])\n        \n        return image_urls",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "max_images": {
                  "type": "int",
                  "required": false,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "value": "2",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "max_images",
                  "display_name": "max_images",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "query": {
                  "type": "str",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": false,
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "query",
                  "display_name": "Query",
                  "advanced": false,
                  "dynamic": false,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false,
                  "input_types": [
                    "Text"
                  ]
                },
                "_type": "CustomComponent"
              },
              "description": "Retrieve images from Google Images based in a query using Beautiful Soup",
              "base_classes": [
                "object",
                "str",
                "Text"
              ],
              "display_name": "Google Images extract with Beautiful Soup",
              "documentation": "",
              "custom_fields": {
                "query": null,
                "max_images": null
              },
              "output_types": [
                "Text"
              ],
              "field_formatters": {},
              "frozen": false,
              "field_order": [],
              "beta": false,
              "official": false
            },
            "id": "CustomComponent-ytdpz",
            "description": "Retrieve images from Google Images based in a query using Beautiful Soup",
            "display_name": "Custom Component"
          },
          "id": "CustomComponent-ytdpz",
          "position": {
            "x": 0,
            "y": 0
          },
          "type": "genericNode"
        }
      ],
      "viewport": {
        "x": 1,
        "y": 1,
        "zoom": 1
      }
    },
    "date_created": "2024-04-14T04:29:05.811Z",
    "date_updated": "2024-04-14T04:29:05.891Z",
    "status": "Public",
    "sort": null,
    "user_updated": "94b2e207-1a44-4905-856c-4f5a69c168ce",
    "user_created": {
      "username": "joaoguilhermeS",
      "first_name": "João",
      "last_name": "Oliveira",
      "id": "94b2e207-1a44-4905-856c-4f5a69c168ce"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:11.855Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 6,
    "converter_version": "1.0.0"
  }
}