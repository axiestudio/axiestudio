{
  "id": "b049ced9-8f47-406f-80fa-9543e82bf517",
  "name": "Parameter Input",
  "description": "Parameters combined into single Component. (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "COMPONENT",
  "is_component": true,
  "author": {
    "username": "mieslep",
    "first_name": "Phil",
    "last_name": "Miesle",
    "id": "9d20ffdb-ed66-469f-b1db-272eb675d093",
    "full_name": "Phil Miesle"
  },
  "store_url": "https://www.langflow.store/store/component/b049ced9-8f47-406f-80fa-9543e82bf517",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-08-23T11:08:03.947Z",
    "updated": "2024-08-23T11:08:03.989Z",
    "downloaded": "2025-08-19T17:50:06.269Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "1.0.16",
    "private": false,
    "status": "Public"
  },
  "data": {
    "edges": [],
    "nodes": [
      {
        "data": {
          "type": "ParameterInput",
          "node": {
            "template": {
              "_type": "Component",
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio.custom import Component\nfrom axiestudio.io import MessageTextInput, Output\n\n# This should work from v1.0.16 only which fixes issue #3380\n\n# It is admittedly fairly hack-ey but demonstrates the concept. \n# Developer will need to edit the component to name parameters sensibly,\n# and to add more parameters as necessary!\n\nclass ParameterComponent(Component):\n    # The tweak can use the display_name, e.g.\n    #   \"tweaks\": {\"Parameter Input\": { \"parameter_1\": varParameter1, \"parameter_2\": varParameter2 }}\n    # As this will not change on export/import\n    display_name = \"Parameter Input\"\n    description = \"Parameters combined into single Component.\"\n    icon = \"type\"\n    name = \"ParameterInput\"\n\n    # Each input will be a MessageTextInput with a distinct name=\n    # There will be a corresponding output with a name= using _out postfix\n    # There will be a corresponding function f_ for each parameter to define the output\n    inputs = [\n        MessageTextInput(\n            name=\"parameter_1\",\n            display_name=\"Parameter 1\",\n            info=\"Description for Parameter 1\",\n        ),\n        MessageTextInput(\n            name=\"parameter_2\",\n            display_name=\"Parameter 2\",\n            info=\"Description for Parameter 2\",\n        ),\n    ]\n\n    outputs = [\n        # name= and method= parameters need to not conflict with the input name=: \n        #   Name of this is the parameter name with _out\n        Output(display_name=\"Parameter 1\", name=\"parameter_1_out\", method=\"f_parameter_1\"),\n        Output(display_name=\"Parameter 2\", name=\"parameter_2_out\", method=\"f_parameter_2\"),\n    ]\n\n    def f_parameter_1(self) -> Message:\n        return self.parameter_1\n\n    def f_parameter_2(self) -> Message:\n        return self.parameter_2\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "parameter_1": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "parameter_1",
                "value": "",
                "display_name": "Parameter 1",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Description for Parameter 1",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              },
              "parameter_2": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "parameter_2",
                "value": "",
                "display_name": "Parameter 2",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Description for Parameter 2",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              }
            },
            "description": "Parameters combined into single Component.",
            "icon": "type",
            "base_classes": [
              "Message"
            ],
            "display_name": "Parameter Input",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "parameter_1_out",
                "display_name": "Parameter 1",
                "method": "f_parameter_1",
                "value": "__UNDEFINED__",
                "cache": true
              },
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "parameter_2_out",
                "display_name": "Parameter 2",
                "method": "f_parameter_2",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "parameter_1",
              "parameter_2"
            ],
            "beta": false,
            "edited": true,
            "lf_version": "1.0.16",
            "official": false
          },
          "id": "CustomComponent-gCxrH"
        },
        "id": "CustomComponent-gCxrH",
        "position": {
          "x": 0,
          "y": 0
        },
        "type": "genericNode"
      }
    ],
    "viewport": {
      "x": 1,
      "y": 1,
      "zoom": 1
    }
  },
  "metadata": {
    "CustomComponent": {
      "count": 1
    },
    "total": 1
  },
  "original": {
    "id": "b049ced9-8f47-406f-80fa-9543e82bf517",
    "name": "Parameter Input",
    "description": "Parameters combined into single Component.",
    "is_component": true,
    "liked_by_count": "3",
    "downloads_count": "33",
    "metadata": {
      "CustomComponent": {
        "count": 1
      },
      "total": 1
    },
    "last_tested_version": "1.0.16",
    "private": false,
    "data": {
      "edges": [],
      "nodes": [
        {
          "data": {
            "type": "ParameterInput",
            "node": {
              "template": {
                "_type": "Component",
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio.custom import Component\nfrom axiestudio.io import MessageTextInput, Output\n\n# This should work from v1.0.16 only which fixes issue #3380\n\n# It is admittedly fairly hack-ey but demonstrates the concept. \n# Developer will need to edit the component to name parameters sensibly,\n# and to add more parameters as necessary!\n\nclass ParameterComponent(Component):\n    # The tweak can use the display_name, e.g.\n    #   \"tweaks\": {\"Parameter Input\": { \"parameter_1\": varParameter1, \"parameter_2\": varParameter2 }}\n    # As this will not change on export/import\n    display_name = \"Parameter Input\"\n    description = \"Parameters combined into single Component.\"\n    icon = \"type\"\n    name = \"ParameterInput\"\n\n    # Each input will be a MessageTextInput with a distinct name=\n    # There will be a corresponding output with a name= using _out postfix\n    # There will be a corresponding function f_ for each parameter to define the output\n    inputs = [\n        MessageTextInput(\n            name=\"parameter_1\",\n            display_name=\"Parameter 1\",\n            info=\"Description for Parameter 1\",\n        ),\n        MessageTextInput(\n            name=\"parameter_2\",\n            display_name=\"Parameter 2\",\n            info=\"Description for Parameter 2\",\n        ),\n    ]\n\n    outputs = [\n        # name= and method= parameters need to not conflict with the input name=: \n        #   Name of this is the parameter name with _out\n        Output(display_name=\"Parameter 1\", name=\"parameter_1_out\", method=\"f_parameter_1\"),\n        Output(display_name=\"Parameter 2\", name=\"parameter_2_out\", method=\"f_parameter_2\"),\n    ]\n\n    def f_parameter_1(self) -> Message:\n        return self.parameter_1\n\n    def f_parameter_2(self) -> Message:\n        return self.parameter_2\n",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "parameter_1": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "parameter_1",
                  "value": "",
                  "display_name": "Parameter 1",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "Description for Parameter 1",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MessageTextInput"
                },
                "parameter_2": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "name": "parameter_2",
                  "value": "",
                  "display_name": "Parameter 2",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "Description for Parameter 2",
                  "title_case": false,
                  "type": "str",
                  "_input_type": "MessageTextInput"
                }
              },
              "description": "Parameters combined into single Component.",
              "icon": "type",
              "base_classes": [
                "Message"
              ],
              "display_name": "Parameter Input",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "parameter_1_out",
                  "display_name": "Parameter 1",
                  "method": "f_parameter_1",
                  "value": "__UNDEFINED__",
                  "cache": true
                },
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "parameter_2_out",
                  "display_name": "Parameter 2",
                  "method": "f_parameter_2",
                  "value": "__UNDEFINED__",
                  "cache": true
                }
              ],
              "field_order": [
                "parameter_1",
                "parameter_2"
              ],
              "beta": false,
              "edited": true,
              "lf_version": "1.0.16",
              "official": false
            },
            "id": "CustomComponent-gCxrH"
          },
          "id": "CustomComponent-gCxrH",
          "position": {
            "x": 0,
            "y": 0
          },
          "type": "genericNode"
        }
      ],
      "viewport": {
        "x": 1,
        "y": 1,
        "zoom": 1
      }
    },
    "date_created": "2024-08-23T11:08:03.947Z",
    "date_updated": "2024-08-23T11:08:03.989Z",
    "status": "Public",
    "sort": null,
    "user_updated": "9d20ffdb-ed66-469f-b1db-272eb675d093",
    "user_created": {
      "username": "mieslep",
      "first_name": "Phil",
      "last_name": "Miesle",
      "id": "9d20ffdb-ed66-469f-b1db-272eb675d093"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:11.450Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 4,
    "converter_version": "1.0.0"
  }
}