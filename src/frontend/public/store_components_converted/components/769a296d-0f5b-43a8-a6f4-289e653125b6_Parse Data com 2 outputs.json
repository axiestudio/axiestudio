{
  "id": "769a296d-0f5b-43a8-a6f4-289e653125b6",
  "name": "Parse Data com 2 outputs",
  "description": "Convert Data into plain text following a specified template. (Converted from Langflow Store for AxieStudio compatibility)",
  "type": "COMPONENT",
  "is_component": true,
  "author": {
    "username": "NamastexLabs",
    "first_name": "Felipe",
    "last_name": "Rosa",
    "id": "37095b75-b1f7-4e35-aea6-bcc9bbf1e2c7",
    "full_name": "Felipe Rosa"
  },
  "store_url": "https://www.langflow.store/store/component/769a296d-0f5b-43a8-a6f4-289e653125b6",
  "stats": {
    "downloads": 0,
    "likes": 0
  },
  "dates": {
    "created": "2024-07-10T23:09:24.199Z",
    "updated": "2024-07-10T23:09:49.922Z",
    "downloaded": "2025-08-19T17:50:05.985Z"
  },
  "tags": [],
  "technical": {
    "last_tested_version": "1.0.7",
    "private": false,
    "status": "Public"
  },
  "data": {
    "edges": [],
    "nodes": [
      {
        "data": {
          "type": "ParseData",
          "node": {
            "template": {
              "_type": "Component",
              "data": {
                "trace_as_input": true,
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "",
                "name": "data",
                "display_name": "Data",
                "advanced": false,
                "input_types": [
                  "Data"
                ],
                "dynamic": false,
                "info": "The data to convert to text.",
                "title_case": false,
                "type": "other"
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from axiestudio.custom import Component\r\n\r\nfrom axiestudio.helpers.data import data_to_text\r\n\r\nfrom axiestudio.io import DataInput, MultilineInput, Output, StrInput\r\n\r\nfrom axiestudio.schema.message import Message\r\n\r\n\r\n\r\nclass ParseDataComponent(Component):\r\n\r\n    display_name = \"Parse Data\"\r\n\r\n    description = \"Convert Data into plain text following a specified template.\"\r\n\r\n    icon = \"braces\"\r\n\r\n    name = \"ParseData\"\r\n\r\n    inputs = [\r\n\r\n        DataInput(name=\"data\", display_name=\"Data\", info=\"The data to convert to text.\"),\r\n\r\n        MultilineInput(\r\n\r\n            name=\"template\",\r\n\r\n            display_name=\"Template\",\r\n\r\n            info=\"The template to use for formatting the data. It can contain the keys {text}, {data} or any other key in the Data.\",\r\n\r\n            value=\"{text}\",\r\n\r\n        ),\r\n\r\n        StrInput(name=\"sep\", display_name=\"Separator\", advanced=True, value=\"\\n\"),\r\n\r\n    ]\r\n\r\n    outputs = [\r\n\r\n        Output(display_name=\"Text Part 1\", name=\"text_part1\", method=\"parse_data_part1\"),\r\n\r\n        Output(display_name=\"Text Part 2\", name=\"text_part2\", method=\"parse_data_part2\"),\r\n\r\n    ]\r\n\r\n    def parse_data_part1(self) -> Message:\r\n\r\n        data = self.data if isinstance(self.data, list) else [self.data]\r\n\r\n        template = self.template\r\n\r\n        if len(data) > 0:\r\n\r\n            result_string = data_to_text(template, [data[0]], sep=self.sep)\r\n\r\n        else:\r\n\r\n            result_string = \"\"\r\n\r\n        self.status = result_string\r\n\r\n        return Message(text=result_string)\r\n\r\n    def parse_data_part2(self) -> Message:\r\n\r\n        data = self.data if isinstance(self.data, list) else [self.data]\r\n\r\n        template = self.template\r\n\r\n        if len(data) > 1:\r\n\r\n            result_string = data_to_text(template, [data[1]], sep=self.sep)\r\n\r\n        else:\r\n\r\n            result_string = \"\"\r\n\r\n        self.status = result_string\r\n\r\n        return Message(text=result_string)",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "sep": {
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "\n",
                "name": "sep",
                "display_name": "Separator",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "title_case": false,
                "type": "str"
              },
              "template": {
                "trace_as_input": true,
                "multiline": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "value": "{text}",
                "name": "template",
                "display_name": "Template",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "The template to use for formatting the data. It can contain the keys {text}, {data} or any other key in the Data.",
                "title_case": false,
                "type": "str"
              }
            },
            "description": "Convert Data into plain text following a specified template.",
            "icon": "braces",
            "base_classes": [
              "Message"
            ],
            "display_name": "Parse Data com 2 outputs",
            "documentation": "",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "text_part1",
                "display_name": "Text Part 1",
                "method": "parse_data_part1",
                "value": "__UNDEFINED__",
                "cache": true,
                "hidden": false
              },
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "text_part2",
                "display_name": "Text Part 2",
                "method": "parse_data_part2",
                "value": "__UNDEFINED__",
                "cache": true,
                "hidden": false
              }
            ],
            "field_order": [
              "data",
              "template",
              "sep"
            ],
            "beta": false,
            "edited": true,
            "official": false
          },
          "id": "ParseData-SF3KN",
          "description": "Convert Data into plain text following a specified template.",
          "display_name": "Parse Data"
        },
        "id": "ParseData-SF3KN",
        "position": {
          "x": 0,
          "y": 0
        },
        "type": "genericNode"
      }
    ],
    "viewport": {
      "x": 1,
      "y": 1,
      "zoom": 1
    }
  },
  "metadata": {
    "ParseData": {
      "count": 1
    },
    "total": 1
  },
  "original": {
    "id": "769a296d-0f5b-43a8-a6f4-289e653125b6",
    "name": "Parse Data com 2 outputs",
    "description": "Convert Data into plain text following a specified template.",
    "is_component": true,
    "liked_by_count": "16",
    "downloads_count": "110",
    "metadata": {
      "ParseData": {
        "count": 1
      },
      "total": 1
    },
    "last_tested_version": "1.0.7",
    "private": false,
    "data": {
      "edges": [],
      "nodes": [
        {
          "data": {
            "type": "ParseData",
            "node": {
              "template": {
                "_type": "Component",
                "data": {
                  "trace_as_input": true,
                  "trace_as_metadata": true,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "",
                  "name": "data",
                  "display_name": "Data",
                  "advanced": false,
                  "input_types": [
                    "Data"
                  ],
                  "dynamic": false,
                  "info": "The data to convert to text.",
                  "title_case": false,
                  "type": "other"
                },
                "code": {
                  "type": "code",
                  "required": true,
                  "placeholder": "",
                  "list": false,
                  "show": true,
                  "multiline": true,
                  "value": "from axiestudio.custom import Component\r\n\r\nfrom axiestudio.helpers.data import data_to_text\r\n\r\nfrom axiestudio.io import DataInput, MultilineInput, Output, StrInput\r\n\r\nfrom axiestudio.schema.message import Message\r\n\r\n\r\n\r\nclass ParseDataComponent(Component):\r\n\r\n    display_name = \"Parse Data\"\r\n\r\n    description = \"Convert Data into plain text following a specified template.\"\r\n\r\n    icon = \"braces\"\r\n\r\n    name = \"ParseData\"\r\n\r\n    inputs = [\r\n\r\n        DataInput(name=\"data\", display_name=\"Data\", info=\"The data to convert to text.\"),\r\n\r\n        MultilineInput(\r\n\r\n            name=\"template\",\r\n\r\n            display_name=\"Template\",\r\n\r\n            info=\"The template to use for formatting the data. It can contain the keys {text}, {data} or any other key in the Data.\",\r\n\r\n            value=\"{text}\",\r\n\r\n        ),\r\n\r\n        StrInput(name=\"sep\", display_name=\"Separator\", advanced=True, value=\"\\n\"),\r\n\r\n    ]\r\n\r\n    outputs = [\r\n\r\n        Output(display_name=\"Text Part 1\", name=\"text_part1\", method=\"parse_data_part1\"),\r\n\r\n        Output(display_name=\"Text Part 2\", name=\"text_part2\", method=\"parse_data_part2\"),\r\n\r\n    ]\r\n\r\n    def parse_data_part1(self) -> Message:\r\n\r\n        data = self.data if isinstance(self.data, list) else [self.data]\r\n\r\n        template = self.template\r\n\r\n        if len(data) > 0:\r\n\r\n            result_string = data_to_text(template, [data[0]], sep=self.sep)\r\n\r\n        else:\r\n\r\n            result_string = \"\"\r\n\r\n        self.status = result_string\r\n\r\n        return Message(text=result_string)\r\n\r\n    def parse_data_part2(self) -> Message:\r\n\r\n        data = self.data if isinstance(self.data, list) else [self.data]\r\n\r\n        template = self.template\r\n\r\n        if len(data) > 1:\r\n\r\n            result_string = data_to_text(template, [data[1]], sep=self.sep)\r\n\r\n        else:\r\n\r\n            result_string = \"\"\r\n\r\n        self.status = result_string\r\n\r\n        return Message(text=result_string)",
                  "fileTypes": [],
                  "file_path": "",
                  "password": false,
                  "name": "code",
                  "advanced": true,
                  "dynamic": true,
                  "info": "",
                  "load_from_db": false,
                  "title_case": false
                },
                "sep": {
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "\n",
                  "name": "sep",
                  "display_name": "Separator",
                  "advanced": true,
                  "dynamic": false,
                  "info": "",
                  "title_case": false,
                  "type": "str"
                },
                "template": {
                  "trace_as_input": true,
                  "multiline": true,
                  "trace_as_metadata": true,
                  "load_from_db": false,
                  "list": false,
                  "required": false,
                  "placeholder": "",
                  "show": true,
                  "value": "{text}",
                  "name": "template",
                  "display_name": "Template",
                  "advanced": false,
                  "input_types": [
                    "Message"
                  ],
                  "dynamic": false,
                  "info": "The template to use for formatting the data. It can contain the keys {text}, {data} or any other key in the Data.",
                  "title_case": false,
                  "type": "str"
                }
              },
              "description": "Convert Data into plain text following a specified template.",
              "icon": "braces",
              "base_classes": [
                "Message"
              ],
              "display_name": "Parse Data com 2 outputs",
              "documentation": "",
              "custom_fields": {},
              "output_types": [],
              "pinned": false,
              "conditional_paths": [],
              "frozen": false,
              "outputs": [
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "text_part1",
                  "display_name": "Text Part 1",
                  "method": "parse_data_part1",
                  "value": "__UNDEFINED__",
                  "cache": true,
                  "hidden": false
                },
                {
                  "types": [
                    "Message"
                  ],
                  "selected": "Message",
                  "name": "text_part2",
                  "display_name": "Text Part 2",
                  "method": "parse_data_part2",
                  "value": "__UNDEFINED__",
                  "cache": true,
                  "hidden": false
                }
              ],
              "field_order": [
                "data",
                "template",
                "sep"
              ],
              "beta": false,
              "edited": true,
              "official": false
            },
            "id": "ParseData-SF3KN",
            "description": "Convert Data into plain text following a specified template.",
            "display_name": "Parse Data"
          },
          "id": "ParseData-SF3KN",
          "position": {
            "x": 0,
            "y": 0
          },
          "type": "genericNode"
        }
      ],
      "viewport": {
        "x": 1,
        "y": 1,
        "zoom": 1
      }
    },
    "date_created": "2024-07-10T23:09:24.199Z",
    "date_updated": "2024-07-10T23:09:49.922Z",
    "status": "Public",
    "sort": null,
    "user_updated": "37095b75-b1f7-4e35-aea6-bcc9bbf1e2c7",
    "user_created": {
      "username": "NamastexLabs",
      "first_name": "Felipe",
      "last_name": "Rosa",
      "id": "37095b75-b1f7-4e35-aea6-bcc9bbf1e2c7"
    },
    "tags": []
  },
  "conversion": {
    "converted_at": "2025-08-19T18:09:10.654Z",
    "converted_from": "langflow",
    "converted_to": "axiestudio",
    "conversions_made": 8,
    "converter_version": "1.0.0"
  }
}